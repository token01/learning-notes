const e=JSON.parse('{"key":"v-fdb1bc82","path":"/springboot/Filter-Interceptor-Listener.html","title":"过滤器、拦截器、监听器","lang":"zh-CN","frontmatter":{"category":["Java企业级开发"],"tag":["Spring Boot"],"title":"过滤器、拦截器、监听器","summary":"前言 先说作用。 过滤器（Filter）：当有一堆请求，只希望符合预期的请求进来。; 拦截器（Interceptor）：想要干涉预期的请求。; 监听器（Listener）：想要监听这些请求具体做了什么。; 再说区别。 过滤器是在请求进入容器后，但还没有进入 Servlet 之前进行预处理的。如下图所示。 拦截器是在请求进入控制器（Controller） 之前","head":[["meta",{"property":"og:url","content":"https://tobebetterjavaer.com/springboot/Filter-Interceptor-Listener.html"}],["meta",{"property":"og:site_name","content":"架构师进阶之路"}],["meta",{"property":"og:title","content":"过滤器、拦截器、监听器"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-21T09:10:55.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:modified_time","content":"2022-11-21T09:10:55.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"过滤器","slug":"过滤器","link":"#过滤器","children":[]},{"level":2,"title":"拦截器","slug":"拦截器","link":"#拦截器","children":[]},{"level":2,"title":"监听器","slug":"监听器","link":"#监听器","children":[]},{"level":2,"title":"源码路径：","slug":"源码路径","link":"#源码路径","children":[]}],"git":{"createdTime":1669017288000,"updatedTime":1669021855000,"contributors":[{"name":"Kong Ming(空明)","email":"token01@126.com","commits":2}]},"readingTime":{"minutes":5.92,"words":1776},"filePathRelative":"springboot/Filter-Interceptor-Listener.md","localizedDate":"2022年11月21日"}');export{e as data};
