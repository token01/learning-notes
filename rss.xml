<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://abelsun.tech/rss.xml" rel="self" type="application/rss+xml"/>
    <title>LearnNotes</title>
    <link>https://abelsun.tech/</link>
    <description>开源工具、编程知识、效率方法、有趣内容的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Mon, 21 Nov 2022 06:31:13 GMT</pubDate>
    <lastBuildDate>Mon, 21 Nov 2022 06:31:13 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <item>
      <title>001 🐣 低代码、我的信息管理</title>
      <link>https://abelsun.tech/0.letter/001.html</link>
      <guid>https://abelsun.tech/0.letter/001.html</guid>
      <source url="https://abelsun.tech/rss.xml">001 🐣 低代码、我的信息管理</source>
      <description>本期摘要 这一期分享的内容包括低代码优质文章和资源、信息管理方式分享： 低代码优质文章和资源; 我的信息管理; 低代码优质文章和资源 随着技术组件化的发展，低代码达到了一个空前火热的程度，各个大厂包括 Google、微软、Amazon、阿里、腾讯均有布局，平台级的低代码平台不是小公司可以做的，但是我们也可以利用不断推陈出新的组件来打造具备实用性的内部低...</description>
      <pubDate>Fri, 21 Jan 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_001-🐣-低代码、我的信息管理" tabindex="-1"> 001 🐣 低代码、我的信息管理</h1>
<h2 id="本期摘要" tabindex="-1"> <strong>本期摘要</strong></h2>
<p>这一期分享的内容包括低代码优质文章和资源、信息管理方式分享：</p>
<ul>
<li>低代码优质文章和资源</li>
<li>我的信息管理</li>
</ul>
<h2 id="低代码优质文章和资源" tabindex="-1"> 低代码优质文章和资源</h2>
<p>随着技术组件化的发展，低代码达到了一个空前火热的程度，各个大厂包括 Google、微软、Amazon、阿里、腾讯均有布局，平台级的低代码平台不是小公司可以做的，但是我们也可以利用不断推陈出新的组件来打造具备实用性的内部低代码平台。</p>
<p>首推好文：</p>
<p><a href="https://www.infoq.cn/article/gh6hucbsj32qucudatos" target="_blank" rel="noopener noreferrer">万字长文讲透低代码-InfoQ</a></p>
<p>通过这篇文章可以了解到低代码存在 <code>模型驱动</code> 和 <code>表单驱动</code> 两种，低代码平台也存在 <code>应用开发平台</code> 和 <code>应用搭建平台</code> 两类。</p>
<p>业内许多人士对低代码持怀疑态度，比如下面这篇文章就发出质疑之声：</p>
<p><a href="https://www.infoq.cn/article/q2mFOAtreDZETqMplw0M" target="_blank" rel="noopener noreferrer">为什么我说低代码是&quot;行业毒瘤&quot;？-InfoQ</a></p>
<p>其实是对低代码理解的还不够透彻，我认为低代码开发平台可以类比游戏引擎，研发游戏有许多共通的东西，研发后台系统显然也是有的，不存在满足所有系统开发的低代码平台，但不意味着低代码是伪需求。</p>
<p>低代码还存在一类公有云数据服务的分类，以 Airtable 为首，可以查看这篇文章进行了解：</p>
<p><a href="https://www.fydc.net/27224.html" target="_blank" rel="noopener noreferrer">110亿美金独角兽Airtable，在国内的模仿者能走多远_科技频道_附有多彩</a></p>
<p>低代码相关开源项目：</p>
<ul>
<li><a href="https://github.com/appsmithorg/appsmith" target="_blank" rel="noopener noreferrer">https://github.com/appsmithorg/appsmith</a></li>
<li><a href="https://github.com/Budibase/budibase" target="_blank" rel="noopener noreferrer">https://github.com/Budibase/budibase</a></li>
<li><a href="https://github.com/nocodb/nocodb" target="_blank" rel="noopener noreferrer">https://github.com/nocodb/nocodb</a></li>
<li><a href="https://github.com/alibaba/formily" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/formily</a></li>
<li><a href="https://github.com/PostgREST/postgrest" target="_blank" rel="noopener noreferrer">https://github.com/PostgREST/postgrest</a></li>
</ul>
<p>还有许多的开源项目，上面这些涉及到云数据服务、界面可视化设计、自动 API、表单驱动等低代码领域。</p>
<h2 id="我的信息管理" tabindex="-1"> 我的信息管理</h2>
<p>Feedly 是我多年前（可能有10年以上了）一直在使用的 RSS 订阅服务，随着优质博主逐渐将文章迁移到公众号后就几乎不使用了，也许是最近越发觉得需要重拾以前的好习惯，于时又用了起来，面对海量的信息，在信息管理上也稍作了一些研究。</p>
<p>先推荐一篇信息管理的好文章：</p>
<p><a href="https://sspai.com/post/70397" target="_blank" rel="noopener noreferrer">我的信息管理方案 - 少数派</a></p>
<p>作者的信息管理方式非常复杂，适合需要经常写作的高端人士，也许我们用不上，但了解一下说不定在以后用的上。</p>
<p>我的信息管理方式相对简单，主要用到了以下工具。</p>
<p>记录类：</p>
<ul>
<li>Notion，这里记录的全部是我自己写作的东西。</li>
<li>语雀，主要用到了图表功能，来弥补 Notion 在这块的不足，另外语雀上有公共的知识库，可以探索、关注和学习。</li>
<li>Flomo，目前用来记录临时和片段性的内容。</li>
<li>微软 To Do，用来记录代办事项，分为生活和工作两部分，会开启按时提醒。</li>
<li>OneNote，以前主要使用的记录工具，会剪藏值得收藏的网页，现在很少使用，主要是用来查阅以前记录的内容。</li>
</ul>
<p>阅读类：</p>
<ul>
<li>Feedly，配合 RSSHub 查看订阅内容。</li>
<li>简悦，将网页加入稍后读，设置了工作流，会将内容自动保存为离线 html 和 markdown。</li>
<li>Obsidian，这是一个能很好地支持双向链接功能的笔记工具，但目前我主要是用来查看通过简悦加入稍后读的文章，我会在 Win11 中新建一个桌面单独放置 Obsidian，这样随时可以切换到这个桌面中快速查找本地内容。</li>
</ul>
<p><img src="@source/0.letter/001/obsidian.png" alt="obsidian.png" loading="lazy"></p>
<h2 id="本周引用" tabindex="-1"> 本周引用</h2>
<blockquote>
<p>面对自身缺点，你有4种选择：</p>
<ol>
<li>你可以否认缺点（这是大多数人的做法）。</li>
<li>你可以承认缺点并应对缺点，努力把缺点转化为优势（能不能成功取决于你的自我改变能力）。</li>
<li>你可以承认缺点并找到绕过缺点的方法。</li>
<li>或者，你可以改变你的目标。 ——《原则》</li>
</ol>
</blockquote>
<p>（完）</p>
]]></content:encoded>
    </item>
    <item>
      <title>002 🕷 Web 3.0、关于好品味的商业模式</title>
      <link>https://abelsun.tech/0.letter/002.html</link>
      <guid>https://abelsun.tech/0.letter/002.html</guid>
      <source url="https://abelsun.tech/rss.xml">002 🕷 Web 3.0、关于好品味的商业模式</source>
      <description>本期摘要 原本用 flomo 记录了本周准备写的东西，但在写的时候却改变了想法，下面这些可能要留到后面几期了。 flomo 这一期我们来聊聊 Web 3.0 和信息大爆炸背景下关于内容推荐的商业模式。 我眼中的 Web 3.0; 内容推荐者是新的内容创造者，具有好的品味是能赚钱的？; 我眼中的 Web 3.0 Web 1.0 是网站主单方面输出信息，W...</description>
      <pubDate>Wed, 26 Jan 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_002-🕷-web-3-0、关于好品味的商业模式" tabindex="-1"> 002 🕷 Web 3.0、关于好品味的商业模式</h1>
<h2 id="本期摘要" tabindex="-1"> <strong>本期摘要</strong></h2>
<p>原本用 flomo 记录了本周准备写的东西，但在写的时候却改变了想法，下面这些可能要留到后面几期了。</p>
<p><img src="@source/0.letter/002/flomo.png" alt="flomo" loading="lazy"></p>
<p>这一期我们来聊聊 Web 3.0 和信息大爆炸背景下关于内容推荐的商业模式。</p>
<ul>
<li>我眼中的 Web 3.0</li>
<li>内容推荐者是新的内容创造者，具有好的品味是能赚钱的？</li>
</ul>
<h2 id="我眼中的-web-3-0" tabindex="-1"> 我眼中的 Web 3.0</h2>
<p>Web 1.0 是网站主单方面输出信息，Web 2.0 是由用户介入到信息创造，相当于是电商领域由 B2C 到 C2C 的转变，那什么是 Web 3.0 ？关于这点，有些众说纷纭了，有人说它跟人工智能有关，有人跟说它跟区块链有关，也有人说它跟 2.0 一样是一个很好的营销手法，虽然说现在没有一个准确的定义，但是我相信它跟 2.0 一样，迟早会形成一种质变，最后使得人们逐渐习惯它。</p>
<p>关于这些争论中，我最喜欢的一个 Web 3.0 的含义是 <code>将互联网转化为数据库</code>。</p>
<p>在 Airtable 中我们已经看到了将表格转换为数据库的威力，在 Notion 中我们看到了将文档转换为数据库的能力，如果将整个互联网转化为数据库，那是何等的壮观。</p>
<p>我们以前听到过互联网就是一个超大的数据库的比喻，但是互联网上的数据不是标准化的，也没有一套使用标准，信息的检索、使用、互联都是受限的，如果这些限制被打破呢？其实许多限制已经被打破，开放 API 和开放数据格式几乎是所有互联网独角兽产品的标准配置，我们可以轻松地连接两个产品，让它们的数据互通，这是 Web 3.0 的一部分，它还在发展中，我相信未来会发明出更多的标准协议让这些互联互通更加普遍。</p>
<p><a href="https://zh.wikipedia.org/wiki/Web3" target="_blank" rel="noopener noreferrer">Web3 - 维基百科，自由的百科全书</a></p>
<h2 id="内容推荐者是新的内容创造者-具有好的品味是能赚钱的" tabindex="-1"> 内容推荐者是新的内容创造者，具有好的品味是能赚钱的？</h2>
<p>不用等到 Web 3.0 时代，我们早已处在一个信息大爆炸的时代，在 Web 3.0 时代爆炸会加速吗？刚才提及的将互联网转化为数据库，其实是对这部分的一个铺垫。</p>
<p>数据库对于我们后端开发来说再熟悉不过了，如何优化数据库的查询性能，第一个想到的大概率会是加索引，如果互联网本身是个超大型的分布式数据库，那给它建索引的价值是非常巨大的，这方面最成功的自然是 Google 了，那对于个人或者小团体来说，能不能维护一份内容索引来赚钱呢？答案是肯定的，这种商业模式也是被经过验证的，比如说少数派、各类做知识付费加广告赞助的「技术大牛」，其实他们的很多文章都是内容推荐类的，国外一般称这群人为 <code>Curators(图书馆馆长、内容推荐者)</code> ，也就是说全世界都有通过内容推荐来赚钱的人。</p>
<p>通过内容推荐来赚钱是一个不错的商业模式，但也是有前提的：</p>
<p><strong>首先，必须足够深入并精通某一领域。</strong></p>
<p>作为个人来说，精力有限，能精通一两个领域已经非常厉害，所以个人做内容推荐基本上是在某一垂直领域，作为程序员，我们接触的这类推荐者非常多，因为程序员已经发展为一个非常庞大的群体。</p>
<p>掘金上充斥着许多 GitHub 项目推荐、IDE 插件推荐类的文章，这类文章也比较容易成为热门，我自己也写过一篇，只花了一点点写作的时间，却获得了不错的阅读量，其实在我自己看来这是一篇水文。</p>
<p><a href="https://juejin.cn/post/6966606708848197645" target="_blank" rel="noopener noreferrer">[10 倍程序员系列] ⭐51W+ 的终端命令行工具助你成为 10 倍程序员 - 掘金</a></p>
<p>说它是一篇「水文」，只是由于我写作这篇文章的难度低，那些工具都是我平常使用或收集的，我只需要罗列并做一个简单的介绍就可以了， 但是对于那些喜欢使用命令行的人来说却很可能具有价值。一篇文章写作的难度跟它的价值并非成比例关系，如果作者熟悉某一领域，内容推荐的质量也较高。</p>
<p><strong>其次，必须有足够好的「品味」。</strong></p>
<p>掘金上的内容推荐类的文章一开始我是比较反感，因为上面推荐的大多数东西要么我已经知道了，要么就是价值不大的，要做好内容索引我们也需要有一个好的「品味」，并且持续不断地发现和过滤出真正有价值的信息。这样才大抵算的上是内容创造。</p>
<p>想通了这些后，我不再反感掘金上内容推荐类的文章，只是那些不太符合我的「口味」罢了。</p>
<p>这一小节所使用标题的原文：</p>
<p><a href="https://gabygoldberg.medium.com/curators-are-the-new-creators-the-business-model-of-good-taste-5852727d4b54" target="_blank" rel="noopener noreferrer">Curators Are the New Creators</a></p>
<h2 id="我的一周" tabindex="-1"> 我的一周</h2>
<ul>
<li>
<p>完成了《架构组2021年度工作汇报》</p>
<p>我的 ppt 被评价为是比较专业的，但实际上在 ppt 的外观上我并没有花什么时间，这其中用到以下几个工具帮助我快速制作 ppt。</p>
<ul>
<li>PPT 设计灵感，用于自动设计。</li>
<li>Kinopio，绘制规划。</li>
<li>ScreenToGif，用于录制 Gif 进行展示。</li>
<li>Awesome Screenshot 插件，截取浏览器使用视频用于展示。</li>
<li>Excel 数据分析图，制作图表。</li>
</ul>
<p>列完后发现似乎没有必要单独再写一期如何高效制作 PPT 了。</p>
</li>
</ul>
<h2 id="本周引用" tabindex="-1"> 本周引用</h2>
<blockquote>
<p>The future is already here — it’s just not very evenly distributed.<br>
译：未来已来，只是还没有平均分布。</p>
</blockquote>
<p>—— [William Gibson]</p>
<blockquote></blockquote>
<p>（完）</p>
]]></content:encoded>
    </item>
    <item>
      <title>003 🐂 新一代 kubernetes、反脆弱</title>
      <link>https://abelsun.tech/0.letter/003.html</link>
      <guid>https://abelsun.tech/0.letter/003.html</guid>
      <source url="https://abelsun.tech/rss.xml">003 🐂 新一代 kubernetes、反脆弱</source>
      <description>本期摘要 wasmCloud，新一代 kubernetes？; 《反脆弱：从不确定性中获益》; wasmCloud，新一代 kubernetes？ WebAssembly/wasm 是一个低层级的编程语言，可以让开发者运用自己熟悉的编程语言进行编译，再借由虚拟机引擎在浏览器内执行，Google 的 项目很大程度上就是在展示 wasm 的厉害之处（它所展...</description>
      <pubDate>Sun, 06 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_003-🐂-新一代-kubernetes、反脆弱" tabindex="-1"> 003 🐂 新一代 kubernetes、反脆弱</h1>
<h2 id="本期摘要" tabindex="-1"> <strong>本期摘要</strong></h2>
<ul>
<li>wasmCloud，新一代 kubernetes？</li>
<li>《反脆弱：从不确定性中获益》</li>
</ul>
<h2 id="wasmcloud-新一代-kubernetes" tabindex="-1"> wasmCloud，新一代 kubernetes？</h2>
<p>WebAssembly/wasm 是一个低层级的编程语言，可以让开发者运用自己熟悉的编程语言进行编译，再借由虚拟机引擎在浏览器内执行，Google 的 <a href="https://github.com/GoogleChromeLabs/squoosh" target="_blank" rel="noopener noreferrer">https://github.com/GoogleChromeLabs/squoosh</a> 项目很大程度上就是在展示 wasm 的厉害之处（它所展示的图片压缩技术是在浏览器本地执行的）。</p>
<p>wasm 可以由多种编程语言编译而成二进制格式，能够充分发挥硬件能力以达到近乎原生的执行效率，同时它是运行在可移植的沙箱环境中，从 <code>可移植性</code>和 <code>沙箱</code> 两个要素来看，我们不难发现其与 <code>docker</code> 有一定的相似之处，先知先觉的技术布道师其实早已洞穿一切，不光是有相似之处，使用 wasm 还有着性能方面的优势，过去我们总担心程序运行在虚拟机里性能会受影响，虽说以虚拟机为主的容器运行时早已成为主流，但之前的担心并无道理，在技术的不断创新下，wasmCloud 的出现可以说是为了解决现有容器的一系列问题。</p>
<p>原本我们认为 WebAssembly 是属于前端领域的技术，现在它也走到了后端，前后端的技术又一次产生了交集。</p>
<p>wasmCloud 目前被广泛看好，一些云计算厂商已经将其应用在 <code>Serverless</code> 无服务器函数领域，未来会不会在云原生架构上占有一席之地，让我们拭目以待。</p>
<h2 id="《反脆弱-从不确定性中获益》" tabindex="-1"> 《反脆弱：从不确定性中获益》</h2>
<p>《原则》一书中提到作者（Paypal 创始人）在面试的时候总会问面试者一个问题：你在什么问题上与其他人有着不同的看法？只有面试者回答的不错时才能应聘上。《反脆弱》这本书的书名其实也是个很好的回答，我们谈到脆弱时会想到它的反义词坚强，但脆弱有时候是不可避免的，比如黑天鹅事件，比如玻璃杯从桌上掉下，如何通过反脆弱在不确定性中获益是值得思考的，在面临随机的危机事件中，如何去面对，想更系统的了解的话，不防看看这本书。</p>
<h2 id="我的一周" tabindex="-1"> 我的一周</h2>
<p>过年期间没有保持每天阅读，但也阅读到一些价值较大的信息，这里推荐大家订阅 <code>湾区日报</code>。</p>
<h2 id="本周引用" tabindex="-1"> 本周引用</h2>
<p>为什么你需要习惯而不是激情？</p>
<blockquote>
<p><em>如果你有一个习惯模式，你头脑中更理智的部分可以专注于你的工作，你可以得到想法并做这些事情，其余的部分在后台就会自己解决。</em></p>
<p>—— 大卫林奇</p>
</blockquote>
<p>（完）</p>
]]></content:encoded>
    </item>
    <item>
      <title>004 🧛‍♂ 备受程序员喜爱的暗黑主题、程序员的英语有多重要、Newsletter 资源分享</title>
      <link>https://abelsun.tech/0.letter/004.html</link>
      <guid>https://abelsun.tech/0.letter/004.html</guid>
      <source url="https://abelsun.tech/rss.xml">004 🧛‍♂ 备受程序员喜爱的暗黑主题、程序员的英语有多重要、Newsletter 资源分享</source>
      <description>本期摘要 备受程序员喜爱的暗黑主题; 程序员的英语有多重要？; Newsletter 资源分享; 备受程序员喜爱的暗黑主题 许多程序员的 IDE 都喜欢设置为暗黑主题模式，这个取名为「德古拉(Dracula) (https://draculatheme.com/)」的开源主题项目一定很适合他们。这套开源主题可以在三大操作系统中使用，并且目前支持超过 2...</description>
      <pubDate>Tue, 08 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_004-🧛‍♂-备受程序员喜爱的暗黑主题、程序员的英语有多重要、newsletter-资源分享" tabindex="-1"> 004 🧛‍♂ 备受程序员喜爱的暗黑主题、程序员的英语有多重要、Newsletter 资源分享</h1>
<h2 id="本期摘要" tabindex="-1"> <strong>本期摘要</strong></h2>
<ul>
<li>备受程序员喜爱的暗黑主题</li>
<li>程序员的英语有多重要？</li>
<li>Newsletter 资源分享</li>
</ul>
<h2 id="备受程序员喜爱的暗黑主题" tabindex="-1"> 备受程序员喜爱的暗黑主题</h2>
<p>许多程序员的 IDE 都喜欢设置为暗黑主题模式，这个取名为「<a href="https://draculatheme.com/" target="_blank" rel="noopener noreferrer">德古拉(Dracula)</a>」的开源主题项目一定很适合他们。这套开源主题可以在三大操作系统中使用，并且目前支持超过 <code>240</code> 个应用程序。</p>
<p>程序员对 Dracula 这个单词应该并不陌生，在各个 IDE 的主题选项中基本上都存在，原来翻译过来是德古拉，那就难怪了，我们知道「吸血鬼」🧛‍♂都是喜欢黑色的（笑）。</p>
<h2 id="程序员的英语有多重要" tabindex="-1"> 程序员的英语有多重要？</h2>
<p>经常逛掘金的朋友，可能已经看到过这篇文章 <a href="https://juejin.cn/post/7056431876688314399" target="_blank" rel="noopener noreferrer">《2022，前端的天🌦️要怎么变？》</a>，这篇文章翻译到 <code>medium</code> 平台 <a href="https://medium.com/frontend-canteen/my-5-predictions-for-frontend-trends-in-2022-4cabd3cc66e4" target="_blank" rel="noopener noreferrer">《My 5 Predictions for Frontend Trends in 2022》</a> 并设置为 <code>会员阅读</code> 后作者获得了超过 <code>50 美金</code> 的收益，并且还在持续增加。这篇文章并非原作者翻译，译者出于对版权的尊重，与原作者取得合作关系后才进行翻译发表，文章的收益采用 55 分成。</p>
<p>这并不是一篇很难翻译的文章，通过这个例子至少可以看出两点：</p>
<ol>
<li>国内的优质技术文章也是可以输出到国外的。</li>
<li>在程序员这个大群体中，会英语是具备非常大的优势。</li>
</ol>
<p>以往绝大多数时候都是国外的技术和产品创新输入到国内，国内的许多产品都是在跟风模仿，随着移动互联网的兴起，我们终于站在了同一起跑线，国内也有部分产品开始被国外模仿，比如微信在爆火的时候，国外的很多产品开始模仿它，这其中包括对 <code>微信公众号</code> 的模仿，<code>Substack</code> 创始人明确表示受到了公众号的启发，微信公众号虽然是启发者，但是在让创作者赚钱这方面，却没有国外的平台 <code>Substack</code>、<code>Medium</code> 等做的好，内容生态不够开放是一方面，付费习惯和消费水平还没有跟上也是一方面。在国内做内容付费和知识变现虽然早已不是新鲜事物，但一直缺乏这类创作者平台，在这方面的创新确实还是远远落后的，顺带一提，最近可以发文章赚以太币的 <a href="https://mirror.xyz/" target="_blank" rel="noopener noreferrer">https://mirror.xyz/</a> 获得了 6000 万美金的投资。通过这些，又不难发现会英语的另一个优势，可以帮助我们发现和了解国外创新的产品。</p>
<p>利用 <code>Medium</code>、<code>Substack</code> 等平台，通过英语加技术来赚钱是一个非常好的副业。</p>
<p><a href="https://medium.com/%E5%86%99%E4%BD%9C%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E5%9C%A8medium-com%E4%B8%8A%E9%80%9A%E8%BF%87%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E8%B5%9A%E9%92%B1-6d47d82b03dd" target="_blank" rel="noopener noreferrer">程序员如何通过在Medium.com上写技术博客赚钱？</a></p>
<p>但这并非许多程序员的兴趣所在，英语在其他许多方面对程序员也至关重要。</p>
<p>一些浅显的，比如提升写代码、阅读英语文章的水平这类就不讲了，就拿我自己来举例子吧。在几乎停止学习的几年时间里，我的英语似乎够用，看看英文的技术文章、在StackOverflow 上 copy 点代码都不成问题。</p>
<p>这么点英语水平，主要是通过以前的一点积累：</p>
<ul>
<li>写代码给变量命名，早期用有道词典记录生词，之前大概记录了 5000 多个单词。</li>
<li>自学赖世雄的《美语从头学》，这系列的书比较适合英语初学者，当时没有学完，大概学了一半多。</li>
<li>看美剧、电影，主要是《老友记》看了两遍多。</li>
<li>大概13、14年开始，遇到技术问题，基本上使用英文搜索，通过这个途径看了一些英文文章。</li>
</ul>
<p>那么今年也是由于立了要每周写 newsletter 的 flag，开始重拾以前大量阅读的习惯，在这个过程中，以下两点让我发现英语成为了一个很大的瓶颈。</p>
<ol>
<li>发掘的许多优质文章都是英文的，阅读这些文章时，虽然可以依靠翻译基本读懂，但阅读效率大打折扣。</li>
<li>阅读英文时，无法很有效地像阅读中文时一样通过快速扫读发现有价值的信息。</li>
</ol>
<p>2022 年，再立个 flag 吧——重新系统地学习英语。</p>
<h2 id="newsletter-资源分享" tabindex="-1"> Newsletter 资源分享</h2>
<p>上面写多了，这里就不啰嗦了，分享两篇好的资源。</p>
<p><a href="https://sspai.com/post/65892" target="_blank" rel="noopener noreferrer">关于 Newsletter，我想和你分享这些</a></p>
<p><a href="https://www.notion.so/kfang/Newsletter-68ee46c0a4574f659fb8a873ead438c6" target="_blank" rel="noopener noreferrer">notion - 中文 Newsletter 导航</a></p>
<h2 id="我的一周" tabindex="-1"> 我的一周</h2>
<ul>
<li>从 flomo 切换到了 <a href="https://workflowy.com/" target="_blank" rel="noopener noreferrer">WorkFlowy</a>
<ul>
<li>它主要是用来编写列表和大纲的，飞书的思维笔记借鉴的就是这个老牌产品。由于最近写东西比较多，需要列大纲，先后使用了 flomo、Kinopio 来记录临时的想法，发现都不够顺手，最后使用了 WorkFlowy 这个产品，<code>它的优势是所有的笔记其实都在一个大的嵌套的列表中，非常方便查阅和记录</code>，而且在里面记录的所有东西实际上是可以用一个 txt 格式的纯文本来表示的，非常方便保存和备份。</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>005 ⚙️ IFTTT 和 Zapier 使用对比、最好的效率系统、投入产出比最高的 3 件事</title>
      <link>https://abelsun.tech/0.letter/005.html</link>
      <guid>https://abelsun.tech/0.letter/005.html</guid>
      <source url="https://abelsun.tech/rss.xml">005 ⚙️ IFTTT 和 Zapier 使用对比、最好的效率系统、投入产出比最高的 3 件事</source>
      <description>IFTTT 和 Zapier 使用对比 先介绍一下什么是 IFTTT，这是一个老牌的自动化工作流平台，可以集成不同的应用程序，当 A 应用程序触发某事件时，可将信息传送给 B 程序进行处理，IFTTT 得名为其口号「if this then that」。 Zapier 又是什么呢？可以简单地理解为增强的 IFTTT，它比后者的功能更加强大。 那么本次带...</description>
      <pubDate>Sat, 12 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_005-⚙️-ifttt-和-zapier-使用对比、最好的效率系统、投入产出比最高的-3-件事" tabindex="-1"> 005 ⚙️ IFTTT 和 Zapier 使用对比、最好的效率系统、投入产出比最高的 3 件事</h1>
<h2 id="ifttt-和-zapier-使用对比" tabindex="-1"> IFTTT 和 Zapier 使用对比</h2>
<p>先介绍一下什么是 IFTTT，这是一个老牌的自动化工作流平台，可以集成不同的应用程序，当 A 应用程序触发某事件时，可将信息传送给 B 程序进行处理，IFTTT 得名为其口号「if this then that」。</p>
<p>Zapier 又是什么呢？可以简单地理解为增强的 IFTTT，它比后者的功能更加强大。</p>
<p>那么本次带来两者的使用对比，当然 Zapier 完胜。
首先 Zapier 在执行效率上远超 IFTTT，来看这个简单的场景，将加入 <code>Pocket</code> 的书签自动同步到 <code>Raindrop</code>，使用 IFTTT 时平台执行一次需间隔 1 小时，而使用 Zapier 时 2 分钟左右就完成了同步。</p>
<p><a href="https://raindrop.io/lcomplete/to-read-23073692" target="_blank" rel="noopener noreferrer">To Read / lcomplete</a>，从我的 pocket 中自动同步到这里的共享书签，可从中发现优质文章。</p>
<p>Zapier 还提供数据传输等功能，尝试将我的推特一次性导入至 <code>notion</code> 数据库，使用便捷。</p>
<p>另外设置了两个工作流：将我发布和喜欢的推特保存至 notion，形成我的 <code>Web Database</code>，这样做的好处是显而易见的，比如写作这篇 newsletter 时只需要打开 notion 查找资料即可。</p>
<p><img src="@source/0.letter/005/notionweb.jpeg" alt="notion" loading="lazy"></p>
<p><img src="@source/0.letter/005/zaps.png" alt="zaps" loading="lazy"></p>
<p>另外对于免费用户而言，Zapier 也没有 IFTTT 的 5 个工作流的限制，取而代之的是每月 1000 个任务执行次数的限制。</p>
<p>如果超出了免费的使用限制，Zapier 的每月费用较高，这时也可以使用开源的 <code>n8n</code> 来搭建自动化工作流系统，将其部署在自己的服务器上，费用会更低，不过使用体验上会逊于 Zapier，对于不懂编程的普通用户也不易部署和上手使用。</p>
<p>关于 n8n 的使用方法，可以查看我之前写的这篇文章。</p>
<p><a href="https://juejin.cn/post/6964671068678127652" target="_blank" rel="noopener noreferrer">使用开源工作流自动化工具 n8n 打造个人助理 - 掘金</a></p>
<p>关于 IFTTT 和 Zapier 的使用对比，我也率先分享在了 twitter 上，如果你想及时地获取我分享的一些有趣好玩的东西，可以关注我的 twitter。</p>
<p><a href="https://twitter.com/lcomplete_wild" target="_blank" rel="noopener noreferrer">lcomplete (@lcomplete_wild) | Twitter</a></p>
<h2 id="最好的效率系统" tabindex="-1"> 最好的效率系统</h2>
<p>各种效率工具不能帮你打造最好的效率系统，最好的效率系统是，<strong>让事情成为你长期想做的事情、感到兴奋的事情、无时无刻都想做的事情、或不得不做的事情</strong>。</p>
<blockquote>
<p>“Every productivity system stops working eventually and there’s nothing you can do about it… Most productivity tricks develop aversion around them. All of them lose salience. The only way to avoid encountering problems with productivity is to make the stuff you want to be doing in the long-term to be the most exciting stuff you can do at any moment in time, which is perhaps possible if you, e.g. work at a startup, but is untenable in almost every situation” – <a href="https://guzey.com/productivity/" target="_blank" rel="noopener noreferrer">Alexey Guzey</a></p>
</blockquote>
<p>其实这背后隐含着我们熟悉的一句话，叫做 <code>deadline</code> 是最高生产力，当我们把事情转化成自己有激情去做，甚至不得不去做的事情的时候，这是对抗拖延症最有效的方法，是任何效率工具都无法比拟的。</p>
<h3 id="那么如何把事情变成长期想做的、有激情的事情呢" tabindex="-1"> 那么如何把事情变成长期想做的、有激情的事情呢？</h3>
<p>可以试着把事情的边界扩大，举个例子，比如看一本书，如果边界只是看完它，那很难让你有特别强烈的激情，如果把边界扩大为看完这本书后继续阅读写作，成为一个有知识的人，再从跟他人的交流分享中获得满足感，再进一步产生影响力，让更多的人受到你的良性影响，甚至让这个世界变的更美好一些。这个格局和边界瞬间就不一样了，我们对待这件事情的激情也能提升，使得看书这件事情成为我们当下想做的事情。</p>
<h2 id="投入产出比最高的-3-件事" tabindex="-1"> 投入产出比最高的 3 件事</h2>
<p>这个部分受到 Aadit Sheth 的 twitter 的启发。从中挑选了几个我认为 ROI 非常高的事情。</p>
<p><a href="https://twitter.com/aaditsh/status/1490374744667041793" target="_blank" rel="noopener noreferrer">Aadit Sheth on Twitter: &quot;10 things that I've seen have the highest ROI:&quot;</a></p>
<h3 id="_1、将两个人联系在一起" tabindex="-1"> 1、将两个人联系在一起</h3>
<p>将两个志同道合的人联系在一起，如果他们真的合适（在商业、友谊或爱情方面），他们会永远的记住你。</p>
<h3 id="_2、在互联网上写东西-当众学习" tabindex="-1"> 2、在互联网上写东西（当众学习）</h3>
<p>Aadit Sheth 说，将你的想法发布在网上有利于找到志同道合的朋友。但我认为更重要的是，当众学习是很好的一个学习方法。</p>
<blockquote>
<p>当众学习（<code>Learn In Public</code>）就像是费曼学习法的加强版，能在公共场合传授我们所学，这是更高的标准。</p>
</blockquote>
<p>上面这段话来自下面这篇文章，作者是微软的一位工程师。</p>
<p><a href="https://catcoding.me/2022/01/10/share-3-articles.html" target="_blank" rel="noopener noreferrer">深刻启发我的 3 篇文章 | 程序员的喵</a></p>
<h3 id="_3、立即行动" tabindex="-1"> 3、立即行动</h3>
<p>有想法或灵感时要立即行动，随着时间的推移，灵感会迅速减少。立即行动能够有效地对抗拖延症，并且能够对自身产生长远的激励。</p>
<p>005 这篇 newsletter，其实我在前几天晚上就想写了，由于一些事情而搁置了，一些写作灵感也迅速地消失不见，因为这件事也更深刻地体会到立即行动的重要，于是我的 newsletter 也不再限于一周发布 1 篇，有想法时立即行动！</p>
]]></content:encoded>
    </item>
    <item>
      <title>006 📒 与人保持联系的系统、用低代码应用设计产品原型、万能锤</title>
      <link>https://abelsun.tech/0.letter/006.html</link>
      <guid>https://abelsun.tech/0.letter/006.html</guid>
      <source url="https://abelsun.tech/rss.xml">006 📒 与人保持联系的系统、用低代码应用设计产品原型、万能锤</source>
      <description>与人保持联系的系统 很多时候我们都在用各种效率工具去管理知识，但是有多少人想过管理联系人并和他们保持联系呢？ The simple system I’m using to stay in touch with hundreds of people (https://jakobgreenfeld.com/stay-in-touch) Staying in...</description>
      <pubDate>Tue, 15 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_006-📒-与人保持联系的系统、用低代码应用设计产品原型、万能锤" tabindex="-1"> 006 📒 与人保持联系的系统、用低代码应用设计产品原型、万能锤</h1>
<h2 id="与人保持联系的系统" tabindex="-1"> 与人保持联系的系统</h2>
<p>很多时候我们都在用各种效率工具去管理知识，但是有多少人想过管理联系人并和他们保持联系呢？</p>
<p><a href="https://jakobgreenfeld.com/stay-in-touch" target="_blank" rel="noopener noreferrer">The simple system I’m using to stay in touch with hundreds of people</a></p>
<blockquote>
<p>Staying in touch with people is one of these asymmetric habits that require little effort, time and resources but has an unlimited upside.</p>
</blockquote>
<p>与人保持联系是一个<strong>回报远大于付出</strong>的习惯之一，它只需要花很少的努力、时间和资源，但却有无限的好处。</p>
<p>这篇文章讲的是作者如何使用 <a href="https://airtable.com/" target="_blank" rel="noopener noreferrer">Airtable</a> 管理联系人，并设置自动化任务来每天提醒他该与谁进行联系，值得一读。</p>
<p>我认为该文的重点并非是自动化部分，而是与人保持联系的习惯，想想我们有多少曾经亲密的好友已经许久不联系了，回想起来你是否觉得可惜呢？</p>
<p>文中提到一个与人联系的系统——将联系人分为 <code>A、B、C、D</code> 这 4 类。</p>
<ul>
<li>A 类联系人每 3 周联系一次；</li>
<li>B 类每 2 个月联系一次；</li>
<li>C 类每 6 个月联系一次；</li>
<li>D 类每年联系一次。</li>
</ul>
<p>可以按照自己的喜好去设置时间间隔，比如亲人每 2 周联系一次。对于不需要与上百人保持联系的普通人，并不需要使用 Airtable 这样复杂的自动化设置，也许一个简单的 To Do 重复提醒即可满足需求。</p>
<h2 id="用低代码应用设计产品原型" tabindex="-1"> 用低代码应用设计产品原型</h2>
<p>在产品原型设计领域 Axure 无人能出其右，这也是产品经理的必备技能，但是对于非产品经理人士，有时候想快速设计原型来表达产品概念，用 Axure 学习成本较高。</p>
<p>这个时候可以有几个其他选项：</p>
<ul>
<li>使用 <a href="https://balsamiq.cloud/" target="_blank" rel="noopener noreferrer">balsamiq.cloud</a> 制作原型草图，它非常容易上手使用；</li>
<li>使用 Excel 设计原型，可以将它当作一个画板来使用；</li>
<li>使用低代码应用来进行快速原型设计，这样做有许多好处：可快速进行表单设计、最终原型是可操作的、花费极少的时间就能获得专业的原型效果。</li>
</ul>
<p><img src="@source/0.letter/006/yida.png" alt="yida" loading="lazy"></p>
<h2 id="万能锤" tabindex="-1"> 万能锤</h2>
<p>先从一个故事开始。</p>
<blockquote>
<p>有个人去工具店买锤子。</p>
<p>店主说，No，我们已经不卖锤子了，锤子有很多种，大锤、拔钉锤、圆头锤等等，如果你买了一个之后又发现还需要另一个怎么办？多数人只想要一把锤子，所以我们推出了 <code>万能锤</code> ，可以当各种锤子使用。</p>
<p>买者想想也是，那就买一把万能锤吧。</p>
<p>店主说，No，万能锤已经被淘汰了，你想，万能锤虽然可以当各种锤子用，但它做什么活都没有专门用途的锤子好使，所以，我们开始卖<code>锤子制作器</code>，这样你可以随时制造最合适的锤子。</p>
<p>买者说，但我并不想买个制作器……</p>
<p>店主说，没错，所以它已经被淘汰了，我们研究发现，不是所有的用户都愿意自己制作锤子，所以我们推出了<code>锤子定制服务</code>，你只要提出锤子需求，我们就可以造出你想要的锤子。</p>
</blockquote>
<p>这个故事可以衍生到许多场景，比如「笔记万能锤」、「管理万能锤」等等，这就像软件世界的一句名言一样——没有银弹。</p>
<h3 id="笔记万能锤" tabindex="-1"> 笔记万能锤</h3>
<p>有人问我记笔记用什么工具，我说，<code>Notion + WorkFlowy + Obsidian</code>等，他说这些工具不是冲突的吗？其实不然，Notion 被称作是笔记界的瑞士军刀，就像「<code>万能锤</code>」，但是它在记大纲笔记上比不上 WorkFlowy，在速度上更比不上本地使用的 Obsidian，充分利用不同工具的优势才能最大化提升生产力，一点点的工具学习成本是值得的。</p>
<p>Notion 在很多方面比不上其他应用，那为什么还要使用它呢，主要在于 Notion 不光是一个「万能锤」，其实它还是一个「<code>锤子制作器</code>」，它不仅是一个笔记工具，也是一套笔记系统，使用它可以灵活地制定笔记方式。</p>
<p>它能制作什么样的锤子呢，比如：</p>
<p><img src="@source/0.letter/006/notion.png" alt="notion" loading="lazy"></p>
<p>这是通过 <a href="https://www.notion.so/aNotioneer-be59e14d857a4d658db394a0441a3b88" target="_blank" rel="noopener noreferrer">aNotioneer</a> 制作的模板而快速创建的，他提供模板则是一种「<code>锤子定制服务</code>」。</p>
<p>不是任何人都有能力使用「锤子制作器」来制作锤子，所以基于 Notion 的「锤子定制服务」其实已经形成了一个市场，一个 20 岁的小伙说它通过「定制锤子」在一个月的时间赚了 12000 美金（当然这不一定是真话）。</p>
<p><a href="https://twitter.com/heyeaslo/status/1491782728928280583" target="_blank" rel="noopener noreferrer">Easlo (Jason Chin) on Twitter: &quot;I made $12,000 online last month. I’m just 20, here’s how I did it:&quot;</a></p>
<p>关于万能锤的故事对你有什么启发吗？</p>
<p>如果你觉得这是个不错的故事，不妨分享给你的朋友看看，同时与他们保持联系。</p>
<p>bye.</p>
]]></content:encoded>
    </item>
    <item>
      <title>007 🍀 十年后重新使用 RSS 给我带来的巨变</title>
      <link>https://abelsun.tech/0.letter/007.html</link>
      <guid>https://abelsun.tech/0.letter/007.html</guid>
      <source url="https://abelsun.tech/rss.xml">007 🍀 十年后重新使用 RSS 给我带来的巨变</source>
      <description>hunter 去年底，脑海里一直有个念头——重拾以前的优秀习惯，于是时隔十年再次打开 Feedly 这个 RSS 阅读器来寻找值得关注的信息源。 在这个过程中，有两件事对我影响较大： 开始写 newsletter 。; 发现现阶段对我来说许多优质的信息都是英文的。; 开始写 newsletter 去年底，我在写年终总结时，定了个计划，要持续给公司的工程...</description>
      <pubDate>Wed, 16 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_007-🍀-十年后重新使用-rss-给我带来的巨变" tabindex="-1"> 007 🍀 十年后重新使用 RSS 给我带来的巨变</h1>
<p><img src="@source/0.letter/007/hunter.jpeg" alt="hunter" loading="lazy"></p>
<p>去年底，脑海里一直有个念头——重拾以前的优秀习惯，于是时隔十年再次打开 Feedly 这个 RSS 阅读器来寻找值得关注的信息源。</p>
<p>在这个过程中，有两件事对我影响较大：</p>
<ul>
<li>开始写 newsletter 。</li>
<li>发现现阶段对我来说许多优质的信息都是英文的。</li>
</ul>
<h2 id="开始写-newsletter" tabindex="-1"> 开始写 newsletter</h2>
<p>去年底，我在写年终总结时，定了个计划，要持续给公司的工程师们分享优质的讯息，而之前这些分享都是零散和不成系统的，看到 happy xiao 的博客和 newsletter 后，我便决定也开始写 newsletter，这样不仅可以系统地分享，也可以跟更多的人建立联系。</p>
<p>写 newsletter 必然需要大量的阅读，于是近期我阅读了许多优秀的文章，这些海量的信息竟然奇妙地产生了联系。</p>
<h2 id="重新学习英语所产生的奇妙体验" tabindex="-1"> 重新学习英语所产生的奇妙体验</h2>
<p>日常工作中，我的英语已经够用，但要阅读海量的英文文章，这显然就不够用了，于是我决定重新学习英语。</p>
<p>为了更好地阅读英文文章，我注册了 medium 平台，看到 bytefish 写的 <a href="https://medium.com/%E5%86%99%E4%BD%9C%E4%B9%8B%E8%B7%AF/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%A6%82%E4%BD%95%E5%9C%A8medium-com%E4%B8%8A%E9%80%9A%E8%BF%87%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E8%B5%9A%E9%92%B1-6d47d82b03dd" target="_blank" rel="noopener noreferrer">程序员如何通过在 Medium.com 上写技术博客赚钱？</a>，接着我又看到阮一峰在 <a href="http://www.ruanyifeng.com/blog/2022/02/weekly-issue-194.html" target="_blank" rel="noopener noreferrer">194 期</a> 周刊也推荐了这篇文章，即使我不主动注册 medium，也很有可能因为看了阮一峰的科技周刊而去使用它。</p>
<p><strong>因为这些信息是我主动捕食，而不是别人喂养的。</strong></p>
<p>最近一周我逛 v2ex 的时间不超过 10 分钟，但却偶然在一个讨论公众号的帖子里发现了 <a href="https://catcoding.me/" target="_blank" rel="noopener noreferrer">程序员的喵</a> 的博客，这位微软的工程师写了许多优秀的文章，而且竟然也写到了程序员英语的重要性和在 medium 上写文章赚钱的事情，于是我订阅了他的博客。</p>
<p>就在昨天，我在 Feedly 上查看 Hacker News 的热点，看到 Jakob 博士的热文 <a href="https://jakobgreenfeld.com/stay-in-touch" target="_blank" rel="noopener noreferrer">The simple system I’m using to stay in touch with hundreds of people</a>，文章对我启发很大，于是我立即行动写了第 <a href="/0.letter/006.html">#006</a> 篇 newsletter，写完后我在 twitter 关注了 Jakob，并跟他有了下面的互动。</p>
<p><img src="@source/0.letter/007/jakob.png" alt="jakob" loading="lazy"></p>
<p>接着奇妙的事情发生了，晚上我去洗澡的时候打开了播客（依旧是重拾丢失已久的习惯），随手点开 happy xiao 的 <a href="https://happyxiao.com/yrgs036/" target="_blank" rel="noopener noreferrer">036 Nathan Latka 的彪悍人生，以及我们可以学到的 6 件事</a> 这期播客，他讲的竟然是 Jakob 写的一篇文章 <a href="https://jakobgreenfeld.com/latka" target="_blank" rel="noopener noreferrer">6 Lessons I Learned from Nathan Latka</a> 。</p>
<p>今天早上我看到 Jakob 的一条推文：</p>
<p><a href="https://twitter.com/jakobgreenfeld/status/1493978581361254402" target="_blank" rel="noopener noreferrer">Jakob Greenfeld on Twitter</a></p>
<blockquote>
<p>“An important part of my strategy this year is to increase my luck surface area.</p>
<p>Ideas I’m testing:</p>
<p>• More podcast appearances, projects, and threads to a larger number of people aware of my existence.</p>
<p>• Regular tweets and podcasts to make sure my name stays top of mind.”</p>
</blockquote>
<p>这篇推文讲的是他今年的战略是要持续扩大<code>运气表面积</code>。</p>
<p>接着奇妙的事情又发生了，晚上我通过 RSS 阅读到前面提到的<code>程序员的喵</code>写的第一篇 newsletter <a href="https://catcoding.me/p/weekly-1/" target="_blank" rel="noopener noreferrer">你可以创造运气</a>，他引用了 <a href="https://www.swyx.io/create-luck/" target="_blank" rel="noopener noreferrer">How To Create Luck</a> 这篇文章，文中提到了 <code>Luck Surface Area</code>，这曾经是一篇热门文章，Jakob 是否也看到过它呢？</p>
<p>还有许多新奇的发现，就不一一讲了，这些信息对我来说，串联的如此奇妙，对于旁观者来看也许有点像是流水账，但如果阅读这封 newsletter 的你一个个点开文章里的链接去看，我相信你也能有所收获。</p>
<h2 id="good-luck" tabindex="-1"> Good Luck</h2>
<p>做个信息猎手，扩大运气表面积。</p>
<p>Be a information hunter, increase luck surface area.</p>
<p>Good luck, bye bye.</p>
]]></content:encoded>
    </item>
    <item>
      <title>008 📚 Notion vs Obsidian、程序设计 vs 软件工程</title>
      <link>https://abelsun.tech/0.letter/008.html</link>
      <guid>https://abelsun.tech/0.letter/008.html</guid>
      <source url="https://abelsun.tech/rss.xml">008 📚 Notion vs Obsidian、程序设计 vs 软件工程</source>
      <description>cover Notion vs Obsidian 以防有不了解 Notion 的读者朋友，我们先看看其 wiki 介绍： Notion 是一款提供笔记、任务、数据库、看板、维基、日历和提醒等组件的应用程序。用户可以将这些 组件连接起来，来创建自己的系统 ，用于知识管理、笔记记录、数据管理、项目管理等。这些组件和系统可以单独使用，也可以与他人进行 跨平台...</description>
      <pubDate>Fri, 25 Feb 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_008-📚-notion-vs-obsidian、程序设计-vs-软件工程" tabindex="-1"> 008 📚 Notion vs Obsidian、程序设计 vs 软件工程</h1>
<p><img src="@source/0.letter/008/cover.jpeg" alt="cover" loading="lazy"></p>
<h2 id="notion-vs-obsidian" tabindex="-1"> Notion vs Obsidian</h2>
<p>以防有不了解 Notion 的读者朋友，我们先看看其 wiki 介绍：</p>
<blockquote>
<p>Notion 是一款提供笔记、任务、数据库、看板、维基、日历和提醒等组件的应用程序。用户可以将这些 <strong>组件连接起来，来创建自己的系统</strong> ，用于知识管理、笔记记录、数据管理、项目管理等。这些组件和系统可以单独使用，也可以与他人进行 <strong>跨平台协作</strong>。</p>
</blockquote>
<p>Notion 很强大，是一个 All In One 的笔记工具，除了 wiki 里提到的功能，用它还可以玩出很多花样，比如：</p>
<ul>
<li>搭建内容管理系统：<a href="https://www.appsmith.com/blog/using-the-notion-api-to-build-a-content-management-system" target="_blank" rel="noopener noreferrer">Using the Notion API to Build a Content Management System</a> ；</li>
<li>用 Notion 谈恋爱：<a href="https://sspai.com/post/65098" target="_blank" rel="noopener noreferrer">七夕特供 | 如何用 Notion 谈恋爱</a> ；</li>
<li>用 Notion 组织推文：<a href="https://www.queue.so/" target="_blank" rel="noopener noreferrer">Twitter Scheduling Tool for Notion</a> 。</li>
</ul>
<p>为什么 Notion 这么强大，本质上在于它给我们提供了一个易用的 <code>数据库</code> ，数据库可以用表格、看板、列表、日历、画廊和时间线的方式来组织或展示。当我们在 Notion 中新建内容时，首先要考虑它的组织方式，如果你有很好的内容组织能力，就越能将其使用的得心应手，甚至制作模板进行售卖，或者分享使用心得，比如这位作者则分享了他是如何使用 Notion 来学习编程的：<a href="https://blog.damiandemasi.com/using-notion-to-organise-programming-topics" target="_blank" rel="noopener noreferrer">Using Notion to organise programming topics</a> 。</p>
<p>在 Notion 中记笔记的路径是 <code>从数据库到文档</code> ，而 Obsidian 在记笔记的路径上则与其相反，使用它我们不需要先考虑数据结构，而是直接记录笔记，然后再通过笔记的元数据来得到数据库，这就形成了 <code>从文档到数据库</code> 。二者都具备文档和数据库的闭环，但他们的使用思想却截然不同，这就是为什么我要拿 Notion 和 Obsidian 进行比较，通过这一点我们可以很清楚地看出两者的优劣，更能搞清楚哪种情况下用哪种工具。</p>
<h3 id="obsidian-卡片盒笔记法" tabindex="-1"> Obsidian + 卡片盒笔记法</h3>
<p>Obsidian 是借鉴卡片盒笔记法进行设计的，而卡片盒笔记有三个重要特点：</p>
<ul>
<li>原子化：每条笔记包含且只包含一条知识，每个笔记都具有一个唯一标志，在 Obsidian 中这个标志是文件名。</li>
<li>个性化：每个笔记尽管可能包含收集、整理、标注、概括阶段的内容，但也一定要用自己的语言去描述这个知识点，只有经过自己的描述，才真正融入自己的思想。</li>
<li>连接性：笔记之间通过唯一标志可以互相连接，从而形成个人的思想之网。</li>
</ul>
<p>思想之网局部图（示例）：</p>
<p><img src="@source/0.letter/008/web_detail.png" alt="" loading="lazy"></p>
<p>更详细的介绍可以查看：<a href="https://zettelkasten.de/introduction/zh/" target="_blank" rel="noopener noreferrer">卢曼卡片盒笔记法介绍 (Introduction to the Zettelkasten Method)</a></p>
<p>如果上面的概念一时难以吸收的话，可以将卡片盒笔记类比成 <code>个人的维基百科</code> ，它们之间有许多相似之处，只不过卡片盒中的每个百科主题都是更小的知识点，用好卡片盒笔记法就是在脑子里装进一个自己的维基百科，现在你明白为什么 Obsidian 的口号是帮你构建第二大脑了吗？</p>
<p>借助 Dataview 插件，可以从数据视图来查阅笔记，<strong>把整个笔记本当作一个数据库来使用</strong> ，可根据需求来定制数据，比如写这篇 newsletter 时我可以查询笔记数据库中最近一周创建的笔记来决定写哪些内容。</p>
<p><img src="@source/0.letter/008/dataview.png" alt="dataview" loading="lazy"></p>
<p>Dataview 使用类似 SQL 的 DSL 语法，对于非程序员来说上手会稍难，感兴趣的可以查看：<a href="https://medium.com/pm%E7%9A%84%E7%94%9F%E7%94%A2%E5%8A%9B%E5%B7%A5%E5%85%B7%E7%AE%B1/obsidian-%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8-%E6%8F%92%E4%BB%B6%E7%AF%87-02-%E5%A6%82%E4%BD%95%E5%9C%A8-obsidian-%E4%B8%AD%E8%87%AA%E5%8B%95-%E5%BD%99%E6%95%B4%E7%AD%86%E8%A8%98-8d90b5e44f6a" target="_blank" rel="noopener noreferrer">如何在 Obsidian 中自動彙整筆記？使用 Dataview 查詢與呈現符合條件的筆記</a> 。</p>
<p>Notion 和 Obsidian 都是现在非常受欢迎的笔记系统，值得我们去学习，当然学习后更重要的是持续使用它们。</p>
<h2 id="程序设计-vs-软件工程" tabindex="-1"> 程序设计 vs 软件工程</h2>
<p><a href="https://blog.vgod.tw/" target="_blank" rel="noopener noreferrer">vgod</a> 是台湾人，在 MIT 读的计算机专业，自从他读完博士以后就很少写博客了，即便如此，我还是经常分享他写过的 <code>「追求神乎其技的程式設計之道」</code> 系列文章，这系列文章启发了很多台湾的软件工程师，因为网络的关系也被我发现了，其中的许多观点我都非常喜欢。</p>
<p>比如：</p>
<blockquote>
<p>很多人都聽說過，同樣是寫程式，一個頂尖程式設計師和一個普通程式設計師之間的生產力可以有 <strong>十倍甚至百倍的差距</strong> 。這是其他行業很少見到的現象，於是不禁令人納悶，為什麼會這樣呢？</p>
<p>...</p>
<p>我後來發現，程式設計師和其他行業有個很大的不同點：一般行業只能在現有的工具上磨練自身的技術，但 <code>程式設計師除了磨練技術外，還可以獨自創造、修改自己使用的工具；換句話說，程式設計師的能力就是在電腦上創作出更好的軟體，不但能便利他人，也同時能增進自身使用電腦的工作效率</code> 。舉例來說，理髮師能磨練使用剪刀和設計髮型的技術，但理髮師並不知道怎麼發明及製造新的剪刀讓自己更有效率的剪頭髮；電機、化工、土木工程師要設計 IC、化學製程、建築結構，但他們得依賴電腦軟體才能設計，並且靠許多大型機器和工具才能生產，即使想提昇自身的工作效率，也不是自己一個人想做就能辦到的。但軟體工程師就不同了，我們只靠一台電腦就能工作，我們的工具是軟體，我們的產出也是軟體，我們的所依賴的一切都是軟體，只要自己願意投入心力，隨時可以修改每天使用的工具和系統讓自己更有效率的工作。
這一點可以說是程式設計師的先天優勢，也是頂尖的程式設計師和普通程式設計師的生產力差距的關鍵。</p>
</blockquote>
<p>再比如：</p>
<blockquote>
<p><strong>Eat Our Own Dog Food</strong></p>
<p>我發現厲害的程式設計師常有種共同特質：寫工具給自己用，解決自己日常工作碰到的問題或改善自己的工作效率。英文有句話叫 eat one’s own dog food，字面上意思是說一家公司應該要吃自己做出來的狗食，實際上是引申為一家公司應該要在內部用自己的產品解決自身的問題，才能發現真正的問題，並且說服人這東西真的很實用。Google 是奉行「吃狗食」原則的典型公司，Google 內部有一個獨立的搜尋引擎搜尋公司內部網路的資料，新技術也都能在上面先行測試；Google 內有獨立的 gmail、google docs，都在對外公開前先讓內部的人實際用上好一陣子；Google 甚至做了自己的 Linux distribution 給工程師用、自己的 compiler、自己的瀏覽器…。</p>
<p>...</p>
<p>出於「懶惰」的美德，頂尖的程式設計師工作時想的不只有產出最終產品就好，而是如何花最少力氣最少時間把產品做到最好。但這件事說來容易做來難，能不能實行往往跟程式設計師工作的系統環境有很大關係。</p>
</blockquote>
<p>最近，我发现 vgod 又开始写博客了，这次他写的是 <code>「軟體工程師的修煉與成長」</code> 系列 ，我想必须分享给你。</p>
<ul>
<li><a href="https://vgod.medium.com/%E8%BF%BD%E6%B1%82%E7%A5%9E%E4%B9%8E%E5%85%B6%E6%8A%80%E7%9A%84%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E4%B9%8B%E9%81%93-2022%E9%87%8D%E7%B7%A8%E7%89%88-7cccc3c68f1e" target="_blank" rel="noopener noreferrer">追求神乎其技的程式設計之道 — 2022 重編版</a></li>
<li><a href="https://vgod.medium.com/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E4%BF%AE%E7%85%89%E8%88%87%E6%88%90%E9%95%B7-1-7b906f837d74" target="_blank" rel="noopener noreferrer">軟體工程師的修煉與成長 (1)</a></li>
</ul>
<p>我是从台湾媒体 <a href="https://blog.starrocket.io/star-rocket-newsletter/" target="_blank" rel="noopener noreferrer">Star Rocket 的 newsletter</a> 中得知 vgod 开始在 medium 上写作的，所以也分享给你。</p>
<p>程序设计和软件工程最大的不同，我想是在于协作方面，在程序设计上我们可以有自己孜孜不倦的追求，而在开发商业化软件的时候我们又需要在各方面进行妥协，软件开发便是这样一门平衡的艺术。</p>
<p>希望阅读我的 newsletter 的朋友可以在 vgod 那里汲取到更多的养分。</p>
<p>Until next week,</p>
<p>lcomplete</p>
]]></content:encoded>
    </item>
    <item>
      <title>009 🌈 Newsletter Of Newsletters、海绵宝宝的智慧</title>
      <link>https://abelsun.tech/0.letter/009.html</link>
      <guid>https://abelsun.tech/0.letter/009.html</guid>
      <source url="https://abelsun.tech/rss.xml">009 🌈 Newsletter Of Newsletters、海绵宝宝的智慧</source>
      <description>SpongeBob Newsletter Of Newsletters 其实上周就想写一个关于 Newsletter 的主题，因为开始写 Newsletter 自然会关注这个领域的一些内容，也会想表达一些关于它的想法。上周放弃写的原因则是在想写这个是不是没多大「含金量」，而这周我又有了一些新的看法。 工欲善其事，必先利其器，当我们在准备做一件事的时候，...</description>
      <pubDate>Fri, 04 Mar 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_009-🌈-newsletter-of-newsletters、海绵宝宝的智慧" tabindex="-1"> 009 🌈 Newsletter Of Newsletters、海绵宝宝的智慧</h1>
<p><img src="@source/0.letter/009/hmbb.jpeg" alt="SpongeBob" loading="lazy"></p>
<h2 id="newsletter-of-newsletters" tabindex="-1"> Newsletter Of Newsletters</h2>
<p>其实上周就想写一个关于 Newsletter 的主题，因为开始写 Newsletter 自然会关注这个领域的一些内容，也会想表达一些关于它的想法。上周放弃写的原因则是在想写这个是不是没多大「含金量」，而这周我又有了一些新的看法。</p>
<p>工欲善其事，必先利其器，当我们在准备做一件事的时候，最好先把工具准备好，但是要小心不要掉进「玩工具」的陷阱中，工具是层出不穷的，一定会有越来越好用的工具出现，当我们用上新的工具的时候往往会有一种错觉——感觉自己的能力飞跃了。</p>
<p>这样的例子有很多：</p>
<ul>
<li>学习编程：痴迷于 IDE、插件、收集各类的工具类库。</li>
<li>学习知识管理：痴迷于研究各种工具，从 Evernote、OneNote、语雀、Flomo、WorkFlowy、Notion、Roam Research、Obsidian、Logseq 研究到 Notepad。</li>
<li>学习写作：Typora、iA writer、Ulysses 等等研究个遍。</li>
</ul>
<p>学习这些工具是有益的，但不要一直停留在这个阶段，要清楚地认识到这是一个 <code>学徒阶段</code> ，更不要有工具优越感。</p>
<p>🔖 <strong>不要停留在学徒阶段，但是要永远保持一个学徒的心态。</strong></p>
<p>对于写 Newsletter 来说，我就是一个学徒，第一要勇于承认这一点，第二跟我一样的学徒还有很多，而我关于 Newsletter 的一些想法可能对他们是有帮助的，就像许多优秀的编程入门文章也是正在学习编程的人所写的一样。</p>
<p><code>Newsletter Of Newsletters</code> 这个词我借鉴了 <code>Fund Of Funds</code>（投资基金的基金），对于刚接触投资的人来说，FOF 会是一个不错的选择，对于刚接触 Newsletter 的人来说，我想这样的一份「NON」也是一个不错的入门指引。</p>
<h3 id="写-newsletter-不像看起来那么简单" tabindex="-1"> 写 Newsletter 不像看起来那么简单</h3>
<p>许多刚接触 Newsletter 这种形式的读者，往往会有个疑问——为什么每篇文章都没有主题。Newsletter 可以翻译为新闻简报，它并不是关于某一主题的具体文章，而是包含多个主题及简要介绍的聚合类信息。有人将它比作 <code>大杂烩</code> ，而优秀的 Newsletter 应该是高级大杂烩，我愿称之为 <code>佛跳墙</code> 😎。</p>
<p>Newsletter 具体的形式可以有很多种，大多是包含多个主题并对每个主题进行简单介绍，初次接触的人可能会认为写这个很简单嘛，尤其是对于需要接触大量信息的媒体和 IT 工作者来说，好像人人都能写好似的，我见过最离谱的一个 Newsletter 是 revue 上的，作者只在里面放几个链接，由 revue 负责渲染出链接的摘要，我想说这不是 Newsletter ，这只是一个网址收藏夹。</p>
<p>写 Newsletter 并不像看起来那么简单，当我只有零星几个读者的时候，我写的很随心所欲，当我的订阅者达到 50 个的时候，我就开始认真考虑自己写的是否会辜负这份订阅和期待，当我看到更多的 Newsletter 的时候，我在想我写的内容是否太少了，读者能在这里发现好东西吗？希望能够令读者朋友跟我一起进步、一起发现好的事物，每周分享的信息量不能太少，但也不能太多，即要发散，又要收敛，作为学徒，我也还在摸索当中。</p>
<h3 id="newsletter-的价值" tabindex="-1"> Newsletter 的价值</h3>
<p>Newsletter 并非是新鲜事物，但我感觉它正在变的越来越流行，我前不久才加入这场游戏，也感觉到越来越多的人开始进入，在信息井喷的情况下，每周接收一份由「靠谱人士」精选过的「高级大杂烩」确实能解决信息噪音过高的问题。</p>
<p>Newsletter 越流行，那么它的商业价值也是显而易见的，但是关于这一点我没有过多思考，因为我主要是基于 「Learn In Public」的出发点来写作的，付费订阅制从来不是我会去考虑的事情，我也不订阅任何需要付费的 Newsletter ，原因很简单，当需要付费才能查看的时候，信息是无法自由地传播的，我宁愿看到帮助大的文章时打赏下作者。Newsletter 中插广告比起付费订阅，我更支持前者，付费订阅制更适合小圈子。</p>
<p>🧩 简而言之：Newsletter 促进 <strong>高质量</strong> 信息的 <strong>高效</strong> 传播，写的好也能赚钱，写的不好对自己也是种锻炼。</p>
<h2 id="海绵宝宝的智慧" tabindex="-1"> 海绵宝宝的智慧</h2>
<blockquote>
<p>我准备好了。</p>
</blockquote>
<p>🧽 这是海绵宝宝的口头禅。</p>
<p>这个部分，我想聊聊反常识思维。</p>
<p>万事开头难，这是许多人用来安慰他人或自己的话，安慰有时候是一种鼓励，有时候也是一种毒药，它可能让你觉得目前的处境是理所应当的，尼采说过：对一个人最好的安慰就是不要安慰。</p>
<p>刚开始工作一定会很困难吗？刚开始创业一定会很难吗？这是不一定的，不要觉得万事开头难而心安理得，正确的做法是不断地寻找方法，还有就是像海绵宝宝一样，时刻都准备好了。</p>
<blockquote>
<p>Connecting the dots.</p>
</blockquote>
<p>乔布斯在斯坦福的著名演讲上讲过这句话，即串联生活的点滴，过去的经历能否帮助现在的你处于一种准备好了的状态呢？</p>
<h2 id="本期主题的相关优质资源" tabindex="-1"> 本期主题的相关优质资源</h2>
<p>特别推荐的 Newsletter ：</p>
<ul>
<li><a href="https://geekplux.zhubai.love/" target="_blank" rel="noopener noreferrer">Geek Plux Lab</a></li>
<li><a href="https://catcoding.me/" target="_blank" rel="noopener noreferrer">程序员的喵</a></li>
</ul>
<p>反常识思维：</p>
<ul>
<li><a href="https://meditic.com/degrading-for-success" target="_blank" rel="noopener noreferrer">降级论</a></li>
</ul>
<h2 id="one-more-thing" tabindex="-1"> One More Thing</h2>
<blockquote>
<p>Talk is cheap, show me the code.</p>
</blockquote>
<p>这是 Linus 的名言，这里的 code 我想换成 <code>product</code> ，作为开发者，我们毕竟不是作家，所以不光要 <code>talk</code> ，更要有自己的 <code>product</code> ，<code>talk</code> + <code>product</code> 也许等于 <code>freedom</code> 。</p>
<p>🌈 本周做了一个小工具：<a href="https://github.com/lcomplete/smart-toc" target="_blank" rel="noopener noreferrer">smart-toc</a></p>
<p><img src="@source/0.letter/009/twitter.png" alt="smart-toc tweet" loading="lazy"></p>
<hr>
<p>Util next week,</p>
<p>lcomplete</p>
]]></content:encoded>
    </item>
    <item>
      <title>010 🚀 Hacking The Mind / 拆掉思维里的墙、放飞想象、打破规则</title>
      <link>https://abelsun.tech/0.letter/010.html</link>
      <guid>https://abelsun.tech/0.letter/010.html</guid>
      <source url="https://abelsun.tech/rss.xml">010 🚀 Hacking The Mind / 拆掉思维里的墙、放飞想象、打破规则</source>
      <description>hackingthemind 🎓 Hacking The Mind / 拆掉思维里的墙 上一期我推荐了 GeekPlux 的 Newsletter，他在 如何成为某一领域的世界顶尖 (https://geekplux.com/newsletters/5) 中提到广度比深度更加重要，我简单概括其中的两个论点： 1. 扩展深度会到达边际效应收窄的阶段； ...</description>
      <pubDate>Fri, 11 Mar 2022 21:44:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="_010-🚀-hacking-the-mind-拆掉思维里的墙、放飞想象、打破规则" tabindex="-1"> 010 🚀 Hacking The Mind / 拆掉思维里的墙、放飞想象、打破规则</h1>
<p><img src="@source/0.letter/010/hackingthemind.jpeg" alt="hackingthemind" loading="lazy"></p>
<h2 id="🎓-hacking-the-mind-拆掉思维里的墙" tabindex="-1"> 🎓 Hacking The Mind / 拆掉思维里的墙</h2>
<p>上一期我推荐了 GeekPlux 的 Newsletter，他在 <a href="https://geekplux.com/newsletters/5" target="_blank" rel="noopener noreferrer">如何成为某一领域的世界顶尖</a> 中提到广度比深度更加重要，我简单概括其中的两个论点：</p>
<ol>
<li>扩展深度会到达边际效应收窄的阶段；</li>
<li>扩展广度更难，在当今社会，组合运用多种知识更有优势。</li>
</ol>
<p>第一个论点我在多年前的一次公开演讲上说过几乎一样的话，曾经自学计算机科学想往科研方向发展，到最后放弃走这条路，我对 <code>边际递减效应</code> 深有感触，放弃科研目标后，我则尝试扩展自己的广度，因此在阅读这篇文章时，首先我产生了强烈的共鸣，基本上我是认同这两个观点的，那一瞬间我也有些沾沾自喜——多年前就有了这个感悟，然后我便开始反思自己的喜悦情绪，还好，我也知道另外一个道理——当年纪越大，在学习时，我们很容易吸收并加强与自身相似的观点，而排斥不一样的看法。</p>
<p>于是我带着辩证的思维去看这个观点，广度是否比深度更重要，我认为是难以定论的，它们各自的重要性对于科学家和商人来说是不一样的。带着这样的方式去思考，我们可以提取其中有用的知识，而不会使自己的思维越加固化，学习是为了让我们的思维得到延展，而不是筑起高高的围墙。</p>
<p>举两个开发人员在技术领域给思维筑墙的例子：</p>
<ul>
<li>偏爱某种编程语言，工作中需要用到其他语言时十分排斥，甚至认为这会影响个人的职业发展。</li>
<li>认为软件测试是测试人员的工作，对测试相关的技术栈一无所知。</li>
</ul>
<blockquote>
<p>别自己墙了自己，人最可悲的就是自己限制自己。</p>
<p>开放，让自己有更多的可能性，能到更高的层次，做更有价值的事，成为更强更好的人……当然，如果你觉得你只想做一个平凡人，也和本文并不冲突……另外你也不要觉得这篇文章是让你要成为一个精英，但你一定要去摸高……这篇文章是告诉你一种面对人生的思考方式，在这种思考方式下，你会有更多的可能性，更大的场景……而不是直接把自己归到“平常人”，把自己“墙”了！</p>
<p>—— 左耳朵耗子：<a href="https://coolshell.cn/articles/20276.html" target="_blank" rel="noopener noreferrer">别让自己“墙”了自己</a></p>
</blockquote>
<h2 id="💥-hacking-the-mind-放飞想象" tabindex="-1"> 💥 Hacking The Mind / 放飞想象</h2>
<p>拆掉思维里的墙以后我们来放飞下想象，看看技术领域一些新奇好玩、令人意想不到的技术。</p>
<h3 id="menubarx" tabindex="-1"> MenubarX</h3>
<p><img src="@source/0.letter/010/menubarx.jpeg" alt="MenubarX" loading="lazy"></p>
<p><a href="https://menubarx.app/" target="_blank" rel="noopener noreferrer">MenubarX</a> 是一个强大的 Mac 菜单栏浏览器，可以把网站添加到菜单上，像 App 一样即开即用。</p>
<h3 id="在-css-中连接数据库" tabindex="-1"> 在 CSS 中连接数据库</h3>
<p>原文：<a href="https://www.leemeichin.com/posts/yes-i-can-connect-to-a-db-in-css.html" target="_blank" rel="noopener noreferrer">Yes, I can connect to a DB in CSS</a></p>
<p>原文较长，简单介绍一下是如何实现的：</p>
<ol>
<li>利用 <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Houdini" target="_blank" rel="noopener noreferrer">CSS Houdini</a> API 中的 <code>CSS Paint Worklet</code> 特性，它允许 CSS 在元素上进行绘制。</li>
<li>利用 <a href="https://github.com/sql-js/sql.js" target="_blank" rel="noopener noreferrer">sql.js</a> ，它是浏览器上的 <code>SQLite</code> 。</li>
<li>使用 Houdini API 自定义 CSS 属性 <code>--sql-query</code> ，根据属性查询 SQLite 数据库并进行绘制。</li>
</ol>
<h3 id="中文推友自拍转推机器人" tabindex="-1"> 中文推友自拍转推机器人</h3>
<p><a href="https://github.com/atkio/selfiebot" target="_blank" rel="noopener noreferrer">https://github.com/atkio/selfiebot</a> ，这是一个用 C# 写的 <a href="https://twitter.com/ratkio" target="_blank" rel="noopener noreferrer">中文推友自拍转推机器人</a> 。</p>
<h3 id="react-头盔-react-helmet" tabindex="-1"> React 头盔（react-helmet）</h3>
<p><img src="@source/0.letter/010/react-helmet.jpeg" alt="React-helmet" loading="lazy"></p>
<p><a href="https://github.com/nfl/react-helmet" target="_blank" rel="noopener noreferrer">react-helmet</a> 是一个为 React 设计的 HTML head 管理器，使用起来是 <code>dead simple（真特么的简单）</code> 。</p>
<h2 id="🚀-hacking-the-mind-打破规则" tabindex="-1"> 🚀 Hacking The Mind / 打破规则</h2>
<p>黑客是计算机革命的英雄，让我们来复习一下黑客伦理：</p>
<ol>
<li>对计算机的访问（以及可能帮助你认识我们这个世界的事物）应该是不受限制的、完全的，任何人都有动手尝试的权利。</li>
<li>所有的信息应该可以自由获取。</li>
<li>不迷信权威。</li>
<li>评判黑客的标准应该是他们的技术，而不是那些没有实际用途的指标，比如学位、年龄、种族或职位。</li>
<li>你可以在计算机上创造出美与智慧。</li>
<li>计算机可以让你的生活更美好。</li>
</ol>
<p>《黑客与画家》出版至今已经 18 年，18 年前 Paul Graham 写到：<code>人类社会还没有充分理解程序员对社会的影响以及程序员带来的美和智慧</code> ，我想现如今已经发生了许多变化，程序员群体越来越庞大，人们也习惯了计算机世界，现今社会在疫情的阴霾下，能够让我们远程工作的计算机让许多人的生活还能维持下去。</p>
<p>无数的人在计算机上创造美妙的产品，施展他们的智慧，黑客与骇客的区别逐渐被大众认识，黑客的精神正在更广泛地被传播。</p>
<p><code>ANYTHING IS HACKABLE</code> ，一个会打破规则的人一定不会是一个思维僵化的人，向黑客精神致敬。</p>
<hr>
<p>Util next week,</p>
<p>lcomplete</p>
]]></content:encoded>
    </item>
  </channel>
</rss>