import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as a,r as l}from"./app.76228b4d.js";const i={},u=a(`<h1 id="juc\u7EBF\u7A0B\u6C60-threadpoolexecutor\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#juc\u7EBF\u7A0B\u6C60-threadpoolexecutor\u8BE6\u89E3" aria-hidden="true">#</a> JUC\u7EBF\u7A0B\u6C60: ThreadPoolExecutor\u8BE6\u89E3</h1><h2 id="_0-\u9762\u8BD5\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#_0-\u9762\u8BD5\u9898\u76EE" aria-hidden="true">#</a> 0. \u9762\u8BD5\u9898\u76EE</h2><ul><li>\u4E3A\u4EC0\u4E48\u8981\u6709\u7EBF\u7A0B\u6C60?</li><li>Java\u662F\u5B9E\u73B0\u548C\u7BA1\u7406\u7EBF\u7A0B\u6C60\u6709\u54EA\u4E9B\u65B9\u5F0F? \u8BF7\u7B80\u5355\u4E3E\u4F8B\u5982\u4F55\u4F7F\u7528\u3002</li><li>\u4E3A\u4EC0\u4E48\u5F88\u591A\u516C\u53F8\u4E0D\u5141\u8BB8\u4F7F\u7528Executors\u53BB\u521B\u5EFA\u7EBF\u7A0B\u6C60? \u90A3\u4E48\u63A8\u8350\u600E\u4E48\u4F7F\u7528\u5462?</li><li>ThreadPoolExecutor\u6709\u54EA\u4E9B\u6838\u5FC3\u7684\u914D\u7F6E\u53C2\u6570? \u8BF7\u7B80\u8981\u8BF4\u660E</li><li>ThreadPoolExecutor\u53EF\u4EE5\u521B\u5EFA\u54EA\u662F\u54EA\u4E09\u79CD\u7EBF\u7A0B\u6C60\u5462?</li><li>\u5F53\u961F\u5217\u6EE1\u4E86\u5E76\u4E14worker\u7684\u6570\u91CF\u8FBE\u5230maxSize\u7684\u65F6\u5019\uFF0C\u4F1A\u600E\u4E48\u6837?</li><li>\u8BF4\u8BF4ThreadPoolExecutor\u6709\u54EA\u4E9BRejectedExecutionHandler\u7B56\u7565? \u9ED8\u8BA4\u662F\u4EC0\u4E48\u7B56\u7565?</li><li>\u7B80\u8981\u8BF4\u4E0B\u7EBF\u7A0B\u6C60\u7684\u4EFB\u52A1\u6267\u884C\u673A\u5236? execute \u2013&gt; addWorker \u2013&gt;runworker (getTask)</li><li>\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u662F\u5982\u4F55\u63D0\u4EA4\u7684?</li><li>\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u662F\u5982\u4F55\u5173\u95ED\u7684?</li><li>\u5728\u914D\u7F6E\u7EBF\u7A0B\u6C60\u7684\u65F6\u5019\u9700\u8981\u8003\u8651\u54EA\u4E9B\u914D\u7F6E\u56E0\u7D20?</li><li>\u5982\u4F55\u76D1\u63A7\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001?</li></ul><h2 id="_1-\u4E3A\u4EC0\u4E48\u8981\u6709\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_1-\u4E3A\u4EC0\u4E48\u8981\u6709\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 1. \u4E3A\u4EC0\u4E48\u8981\u6709\u7EBF\u7A0B\u6C60</h2><p>\u7EBF\u7A0B\u6C60\u80FD\u591F\u5BF9\u7EBF\u7A0B\u8FDB\u884C\u7EDF\u4E00\u5206\u914D\uFF0C\u8C03\u4F18\u548C\u76D1\u63A7:</p><ul><li>\u964D\u4F4E\u8D44\u6E90\u6D88\u8017(\u7EBF\u7A0B\u65E0\u9650\u5236\u5730\u521B\u5EFA\uFF0C\u7136\u540E\u4F7F\u7528\u5B8C\u6BD5\u540E\u9500\u6BC1)</li><li>\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6(\u65E0\u987B\u521B\u5EFA\u7EBF\u7A0B)</li><li>\u63D0\u9AD8\u7EBF\u7A0B\u7684\u53EF\u7BA1\u7406\u6027</li></ul><h2 id="_2-threadpoolexecutor\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-threadpoolexecutor\u4F8B\u5B50" aria-hidden="true">#</a> 2. ThreadPoolExecutor\u4F8B\u5B50</h2><p>Java\u662F\u5982\u4F55\u5B9E\u73B0\u548C\u7BA1\u7406\u7EBF\u7A0B\u6C60\u7684?</p><p>\u4ECEJDK 5\u5F00\u59CB\uFF0C\u628A\u5DE5\u4F5C\u5355\u5143\u4E0E\u6267\u884C\u673A\u5236\u5206\u79BB\u5F00\u6765\uFF0C\u5DE5\u4F5C\u5355\u5143\u5305\u62ECRunnable\u548CCallable\uFF0C\u800C\u6267\u884C\u673A\u5236\u7531Executor\u6846\u67B6\u63D0\u4F9B\u3002</p><h3 id="_2-1-\u7B80\u5355\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-1-\u7B80\u5355\u4F8B\u5B50" aria-hidden="true">#</a> 2.1 \u7B80\u5355\u4F8B\u5B50</h3><ul><li>WorkerThread</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WorkerThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
     
    <span class="token keyword">private</span> <span class="token class-name">String</span> command<span class="token punctuation">;</span>
     
    <span class="token keyword">public</span> <span class="token class-name">WorkerThread</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>command<span class="token operator">=</span>s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; Start. Command = &quot;</span><span class="token operator">+</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">processCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; End.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>command<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>SimpleThreadPool</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleThreadPool</span> <span class="token punctuation">{</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> executor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Runnable</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WorkerThread</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            executor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        executor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// This will make the executor accept no new threads and finish all existing threads in the queue</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>executor<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Wait until all threads are finish,and also you can use &quot;executor.awaitTermination();&quot; to wait</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Finished all threads&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7A0B\u5E8F\u4E2D\u6211\u4EEC\u521B\u5EFA\u4E86\u56FA\u5B9A\u5927\u5C0F\u4E3A\u4E94\u4E2A\u5DE5\u4F5C\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u6C60\u3002\u7136\u540E\u5206\u914D\u7ED9\u7EBF\u7A0B\u6C60\u5341\u4E2A\u5DE5\u4F5C\uFF0C\u56E0\u4E3A\u7EBF\u7A0B\u6C60\u5927\u5C0F\u4E3A\u4E94\uFF0C\u5B83\u5C06\u542F\u52A8\u4E94\u4E2A\u5DE5\u4F5C\u7EBF\u7A0B\u5148\u5904\u7406\u4E94\u4E2A\u5DE5\u4F5C\uFF0C\u5176\u4ED6\u7684\u5DE5\u4F5C\u5219\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\uFF0C\u4E00\u65E6\u6709\u5DE5\u4F5C\u5B8C\u6210\uFF0C\u7A7A\u95F2\u4E0B\u6765\u5DE5\u4F5C\u7EBF\u7A0B\u5C31\u4F1A\u6361\u53D6\u7B49\u5F85\u961F\u5217\u91CC\u7684\u5176\u4ED6\u5DE5\u4F5C\u8FDB\u884C\u6267\u884C\u3002</p><p>\u8FD9\u91CC\u662F\u4EE5\u4E0A\u7A0B\u5E8F\u7684\u8F93\u51FA\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>pool-1-thread-2 Start. Command = 1
pool-1-thread-4 Start. Command = 3
pool-1-thread-1 Start. Command = 0
pool-1-thread-3 Start. Command = 2
pool-1-thread-5 Start. Command = 4
pool-1-thread-4 End.
pool-1-thread-5 End.
pool-1-thread-1 End.
pool-1-thread-3 End.
pool-1-thread-3 Start. Command = 8
pool-1-thread-2 End.
pool-1-thread-2 Start. Command = 9
pool-1-thread-1 Start. Command = 7
pool-1-thread-5 Start. Command = 6
pool-1-thread-4 Start. Command = 5
pool-1-thread-2 End.
pool-1-thread-4 End.
pool-1-thread-3 End.
pool-1-thread-5 End.
pool-1-thread-1 End.
Finished all threads

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Executors \u7C7B\u63D0\u4F9B\u4E86\u4F7F\u7528\u4E86 ThreadPoolExecutor \u7684\u7B80\u5355\u7684 ExecutorService \u5B9E\u73B0\uFF0C\u4F46\u662F ThreadPoolExecutor \u63D0\u4F9B\u7684\u529F\u80FD\u8FDC\u4E0D\u6B62\u4E8E\u6B64\u3002\u6211\u4EEC\u53EF\u4EE5\u5728\u521B\u5EFA ThreadPoolExecutor \u5B9E\u4F8B\u65F6\u6307\u5B9A\u6D3B\u52A8\u7EBF\u7A0B\u7684\u6570\u91CF\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u9650\u5236\u7EBF\u7A0B\u6C60\u7684\u5927\u5C0F\u5E76\u4E14\u521B\u5EFA\u6211\u4EEC\u81EA\u5DF1\u7684 RejectedExecutionHandler \u5B9E\u73B0\u6765\u5904\u7406\u4E0D\u80FD\u9002\u5E94\u5DE5\u4F5C\u961F\u5217\u7684\u5DE5\u4F5C\u3002</p><h3 id="_2-2-\u62D2\u7EDD\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#_2-2-\u62D2\u7EDD\u7B56\u7565" aria-hidden="true">#</a> 2.2 \u62D2\u7EDD\u7B56\u7565</h3><p>\u8FD9\u91CC\u662F\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684 RejectedExecutionHandler \u63A5\u53E3\u7684\u5B9E\u73B0\u3002</p><ul><li>RejectedExecutionHandlerImpl.java</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">RejectedExecutionHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RejectedExecutionHandlerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rejectedExecution</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">,</span> <span class="token class-name">ThreadPoolExecutor</span> executor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; is rejected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u76D1\u63A7\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_2-3-\u76D1\u63A7\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 2.3 \u76D1\u63A7\u7EBF\u7A0B\u6C60</h3><p>ThreadPoolExecutor \u63D0\u4F9B\u4E86\u4E00\u4E9B\u65B9\u6CD5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E9B\u65B9\u6CD5\u6765\u67E5\u8BE2 executor \u7684\u5F53\u524D\u72B6\u6001\uFF0C\u7EBF\u7A0B\u6C60\u5927\u5C0F\uFF0C\u6D3B\u52A8\u7EBF\u7A0B\u6570\u91CF\u4EE5\u53CA\u4EFB\u52A1\u6570\u91CF\u3002\u56E0\u6B64\u6211\u662F\u7528\u6765\u4E00\u4E2A\u76D1\u63A7\u7EBF\u7A0B\u5728\u7279\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5185\u6253\u5370 executor \u4FE1\u606F\u3002</p><ul><li>MyMonitorThread.java</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMonitorThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ThreadPoolExecutor</span> executor<span class="token punctuation">;</span>
     
    <span class="token keyword">private</span> <span class="token keyword">int</span> seconds<span class="token punctuation">;</span>
     
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> run<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">MyMonitorThread</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span> executor<span class="token punctuation">,</span> <span class="token keyword">int</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>executor <span class="token operator">=</span> executor<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>seconds<span class="token operator">=</span>delay<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>run<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>run<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;[monitor] [%d/%d] Active: %d, Completed: %d, Task: %d, isShutdown: %s, isTerminated: %s&quot;</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">getPoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">getCorePoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">getActiveCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">getCompletedTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">getTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>seconds<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
             
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u76D1\u63A7\u548C\u62D2\u7EDD\u7B56\u7565\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-4-\u76D1\u63A7\u548C\u62D2\u7EDD\u7B56\u7565\u4F8B\u5B50" aria-hidden="true">#</a> 2.4 \u76D1\u63A7\u548C\u62D2\u7EDD\u7B56\u7565\u4F8B\u5B50</h3><p>\u8FD9\u91CC\u662F\u4F7F\u7528 ThreadPoolExecutor \u7684\u7EBF\u7A0B\u6C60\u5B9E\u73B0\u4F8B\u5B50\u3002</p><ul><li>WorkerPool.java</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ArrayBlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ThreadPoolExecutor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WorkerPool</span> <span class="token punctuation">{</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span>
        <span class="token comment">//RejectedExecutionHandler implementation</span>
        <span class="token class-name">RejectedExecutionHandlerImpl</span> rejectionHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RejectedExecutionHandlerImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//Get the ThreadFactory implementation to use</span>
        <span class="token class-name">ThreadFactory</span> threadFactory <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//creating the ThreadPoolExecutor</span>
        <span class="token class-name">ThreadPoolExecutor</span> executorPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> threadFactory<span class="token punctuation">,</span> rejectionHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//start the monitoring thread</span>
        <span class="token class-name">MyMonitorThread</span> monitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyMonitorThread</span><span class="token punctuation">(</span>executorPool<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> monitorThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>monitor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        monitorThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//submit work to the thread pool</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            executorPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WorkerThread</span><span class="token punctuation">(</span><span class="token string">&quot;cmd&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
         
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//shut down the pool</span>
        executorPool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//shut down the monitor thread</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        monitor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u5728\u521D\u59CB\u5316 ThreadPoolExecutor \u65F6\uFF0C\u6211\u4EEC\u4FDD\u6301\u521D\u59CB\u6C60\u5927\u5C0F\u4E3A 2\uFF0C\u6700\u5927\u6C60\u5927\u5C0F\u4E3A 4 \u800C\u5DE5\u4F5C\u961F\u5217\u5927\u5C0F\u4E3A 2\u3002\u56E0\u6B64\u5982\u679C\u5DF2\u7ECF\u6709\u56DB\u4E2A\u6B63\u5728\u6267\u884C\u7684\u4EFB\u52A1\u800C\u6B64\u65F6\u5206\u914D\u6765\u66F4\u591A\u4EFB\u52A1\u7684\u8BDD\uFF0C\u5DE5\u4F5C\u961F\u5217\u5C06\u4EC5\u4EC5\u4FDD\u7559\u4ED6\u4EEC(\u65B0\u4EFB\u52A1)\u4E2D\u7684\u4E24\u4E2A\uFF0C\u5176\u4ED6\u7684\u5C06\u4F1A\u88AB RejectedExecutionHandlerImpl \u5904\u7406\u3002</p><p>\u4E0A\u9762\u7A0B\u5E8F\u7684\u8F93\u51FA\u53EF\u4EE5\u8BC1\u5B9E\u4EE5\u4E0A\u89C2\u70B9\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>pool-1-thread-1 Start. Command = cmd0
pool-1-thread-4 Start. Command = cmd5
cmd6 is rejected
pool-1-thread-3 Start. Command = cmd4
pool-1-thread-2 Start. Command = cmd1
cmd7 is rejected
cmd8 is rejected
cmd9 is rejected
[monitor] [0/2] Active: 4, Completed: 0, Task: 6, isShutdown: false, isTerminated: false
[monitor] [4/2] Active: 4, Completed: 0, Task: 6, isShutdown: false, isTerminated: false
pool-1-thread-4 End.
pool-1-thread-1 End.
pool-1-thread-2 End.
pool-1-thread-3 End.
pool-1-thread-1 Start. Command = cmd3
pool-1-thread-4 Start. Command = cmd2
[monitor] [4/2] Active: 2, Completed: 4, Task: 6, isShutdown: false, isTerminated: false
[monitor] [4/2] Active: 2, Completed: 4, Task: 6, isShutdown: false, isTerminated: false
pool-1-thread-1 End.
pool-1-thread-4 End.
[monitor] [4/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [2/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [2/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [2/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [2/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [2/2] Active: 0, Completed: 6, Task: 6, isShutdown: false, isTerminated: false
[monitor] [0/2] Active: 0, Completed: 6, Task: 6, isShutdown: true, isTerminated: true
[monitor] [0/2] Active: 0, Completed: 6, Task: 6, isShutdown: true, isTerminated: true

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F executor \u7684\u6D3B\u52A8\u4EFB\u52A1\u3001\u5B8C\u6210\u4EFB\u52A1\u4EE5\u53CA\u6240\u6709\u5B8C\u6210\u4EFB\u52A1\uFF0C\u8FD9\u4E9B\u6570\u91CF\u4E0A\u7684\u53D8\u5316\u3002\u6211\u4EEC\u53EF\u4EE5\u8C03\u7528 shutdown() \u65B9\u6CD5\u6765\u7ED3\u675F\u6240\u6709\u63D0\u4EA4\u7684\u4EFB\u52A1\u5E76\u7EC8\u6B62\u7EBF\u7A0B\u6C60\u3002</p><h2 id="_3-threadpoolexecutor\u4F7F\u7528\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#_3-threadpoolexecutor\u4F7F\u7528\u8BE6\u89E3" aria-hidden="true">#</a> 3. ThreadPoolExecutor\u4F7F\u7528\u8BE6\u89E3</h2><h3 id="_3-1-\u7EBF\u7A0B\u6C60\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-1-\u7EBF\u7A0B\u6C60\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 3.1 \u7EBF\u7A0B\u6C60\u5B9E\u73B0\u539F\u7406</h3><p>\u5176\u5B9Ejava\u7EBF\u7A0B\u6C60\u7684\u5B9E\u73B0\u539F\u7406\u5F88\u7B80\u5355\uFF0C\u8BF4\u767D\u4E86\u5C31\u662F\u4E00\u4E2A\u7EBF\u7A0B\u96C6\u5408workerSet\u548C\u4E00\u4E2A\u963B\u585E\u961F\u5217workQueue\u3002\u5F53\u7528\u6237\u5411\u7EBF\u7A0B\u6C60\u63D0\u4EA4\u4E00\u4E2A\u4EFB\u52A1(\u4E5F\u5C31\u662F\u7EBF\u7A0B)\u65F6\uFF0C\u7EBF\u7A0B\u6C60\u4F1A\u5148\u5C06\u4EFB\u52A1\u653E\u5165workQueue\u4E2D\u3002workerSet\u4E2D\u7684\u7EBF\u7A0B\u4F1A\u4E0D\u65AD\u7684\u4ECEworkQueue\u4E2D\u83B7\u53D6\u7EBF\u7A0B\u7136\u540E\u6267\u884C\u3002\u5F53workQueue\u4E2D\u6CA1\u6709\u4EFB\u52A1\u7684\u65F6\u5019\uFF0Cworker\u5C31\u4F1A\u963B\u585E\uFF0C\u76F4\u5230\u961F\u5217\u4E2D\u6709\u4EFB\u52A1\u4E86\u5C31\u53D6\u51FA\u6765\u7EE7\u7EED\u6267\u884C\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220528074911885.png" alt="image-20220528074911885"></p><h3 id="_3-2-execute\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-execute\u539F\u7406" aria-hidden="true">#</a> 3.2. Execute\u539F\u7406</h3><p>\u5F53\u4E00\u4E2A\u4EFB\u52A1\u63D0\u4EA4\u81F3\u7EBF\u7A0B\u6C60\u4E4B\u540E:</p><ol><li>\u7EBF\u7A0B\u6C60\u9996\u5148\u5F53\u524D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u662F\u5426\u5C11\u4E8EcorePoolSize\u3002\u5982\u679C\u662F\uFF0C\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\u3002\u5982\u679C\u90FD\u5728\u6267\u884C\u4EFB\u52A1\uFF0C\u5219\u8FDB\u51652.</li><li>\u5224\u65ADBlockingQueue\u662F\u5426\u5DF2\u7ECF\u6EE1\u4E86\uFF0C\u5018\u82E5\u8FD8\u6CA1\u6709\u6EE1\uFF0C\u5219\u5C06\u7EBF\u7A0B\u653E\u5165BlockingQueue\u3002\u5426\u5219\u8FDB\u51653.</li><li>\u5982\u679C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u5C06\u4F7F\u5F53\u524D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u8D85\u8FC7maximumPoolSize\uFF0C\u5219\u4EA4\u7ED9RejectedExecutionHandler\u6765\u5904\u7406\u4EFB\u52A1\u3002</li></ol><p>\u5F53ThreadPoolExecutor\u521B\u5EFA\u65B0\u7EBF\u7A0B\u65F6\uFF0C\u901A\u8FC7CAS\u6765\u66F4\u65B0\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001\uFF08ctl <em>\u7EBF\u7A0B\u6C60</em>\u63A7\u5236<em>\u72B6\u6001</em>\uFF09</p><h3 id="_3-3-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_3-3-\u53C2\u6570" aria-hidden="true">#</a> 3.3 \u53C2\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                              <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                              <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span>

    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,44),r=n("li",null,[n("p",null,[n("code",null,"corePoolSize"),s(" \u7EBF\u7A0B\u6C60\u4E2D\u7684\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u5F53\u63D0\u4EA4\u4E00\u4E2A\u4EFB\u52A1\u65F6\uFF0C\u7EBF\u7A0B\u6C60\u521B\u5EFA\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\uFF0C\u76F4\u5230\u5F53\u524D\u7EBF\u7A0B\u6570\u7B49\u4E8EcorePoolSize, \u5373\u4F7F\u6709\u5176\u4ED6\u7A7A\u95F2\u7EBF\u7A0B\u80FD\u591F\u6267\u884C\u65B0\u6765\u7684\u4EFB\u52A1, \u4E5F\u4F1A\u7EE7\u7EED\u521B\u5EFA\u7EBF\u7A0B\uFF1B\u5982\u679C\u5F53\u524D\u7EBF\u7A0B\u6570\u4E3AcorePoolSize\uFF0C\u7EE7\u7EED\u63D0\u4EA4\u7684\u4EFB\u52A1\u88AB\u4FDD\u5B58\u5230\u963B\u585E\u961F\u5217\u4E2D\uFF0C\u7B49\u5F85\u88AB\u6267\u884C\uFF1B\u5982\u679C\u6267\u884C\u4E86\u7EBF\u7A0B\u6C60\u7684prestartAllCoreThreads()\u65B9\u6CD5\uFF0C\u7EBF\u7A0B\u6C60\u4F1A\u63D0\u524D\u521B\u5EFA\u5E76\u542F\u52A8\u6240\u6709\u6838\u5FC3\u7EBF\u7A0B\u3002")])],-1),k=n("li",null,[n("p",null,[n("code",null,"maximumPoolSize"),s(" \u7EBF\u7A0B\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u7EBF\u7A0B\u6570\u3002\u5982\u679C\u5F53\u524D\u963B\u585E\u961F\u5217\u6EE1\u4E86\uFF0C\u4E14\u7EE7\u7EED\u63D0\u4EA4\u4EFB\u52A1\uFF0C\u5219\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\uFF0C\u524D\u63D0\u662F\u5F53\u524D\u7EBF\u7A0B\u6570\u5C0F\u4E8EmaximumPoolSize\uFF1B\u5F53\u963B\u585E\u961F\u5217\u662F\u65E0\u754C\u961F\u5217, \u5219maximumPoolSize\u5219\u4E0D\u8D77\u4F5C\u7528, \u56E0\u4E3A\u65E0\u6CD5\u63D0\u4EA4\u81F3\u6838\u5FC3\u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u4F1A\u4E00\u76F4\u6301\u7EED\u5730\u653E\u5165workQueue.")])],-1),d=n("code",null,"workQueue",-1),v={href:"https://java.isture.com/thread/JUCCollection/BlockingQueue%E8%AF%A6%E8%A7%A3.html",target:"_blank",rel:"noopener noreferrer"},m=a("<ul><li><p><code>ArrayBlockingQueue</code>: \u57FA\u4E8E\u6570\u7EC4\u7ED3\u6784\u7684\u6709\u754C\u963B\u585E\u961F\u5217\uFF0C\u6309FIFO\u6392\u5E8F\u4EFB\u52A1\uFF1B</p></li><li><p><code>LinkedBlockingQuene</code>: \u57FA\u4E8E\u94FE\u8868\u7ED3\u6784\u7684\u963B\u585E\u961F\u5217\uFF0C\u6309FIFO\u6392\u5E8F\u4EFB\u52A1\uFF0C\u541E\u5410\u91CF\u901A\u5E38\u8981\u9AD8\u4E8EArrayBlockingQuene\uFF1B</p><blockquote><p>LinkedBlockingQuene \u6700\u5408\u9002\u7684BlockingQuene\uFF0C\u4F46\u65E0\u53C2LinkedBlockingQueue(\u961F\u5217\u5BB9\u91CF\u4E3AInteger.MAX_VALUE)\u3002\u5C31\u4F1A\u5BFC\u81F4\u62D2\u7EDD\u7B56\u7565\u5931\u6548</p><p>spring \u7684ThreadPoolTaskExecutor \u7684BlockingQuene\u5927\u4E8E1\u7684\u65F6\u5019\u5C31\u7528\u4ED6</p></blockquote></li><li><p><code>SynchronousQuene</code>: \u4E00\u4E2A\u4E0D\u5B58\u50A8\u5143\u7D20\u7684\u963B\u585E\u961F\u5217\uFF0C\u6BCF\u4E2A\u63D2\u5165\u64CD\u4F5C\u5FC5\u987B\u7B49\u5230\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528\u79FB\u9664\u64CD\u4F5C\uFF0C\u5426\u5219\u63D2\u5165\u64CD\u4F5C\u4E00\u76F4\u5904\u4E8E\u963B\u585E\u72B6\u6001\uFF0C\u541E\u5410\u91CF\u901A\u5E38\u8981\u9AD8\u4E8ELinkedBlockingQuene\uFF1B</p></li><li><p><code>PriorityBlockingQuene</code>: \u5177\u6709\u4F18\u5148\u7EA7\u7684\u65E0\u754C\u963B\u585E\u961F\u5217\uFF1B</p></li></ul>",1),b=a(`<p><code>LinkedBlockingQueue</code>\u6BD4<code>ArrayBlockingQueue</code>\u5728\u63D2\u5165\u5220\u9664\u8282\u70B9\u6027\u80FD\u65B9\u9762\u66F4\u4F18\uFF0C\u4F46\u662F\u4E8C\u8005\u5728<code>put()</code>, <code>take()</code>\u4EFB\u52A1\u7684\u65F6\u5747\u9700\u8981\u52A0\u9501\uFF0C<code>SynchronousQueue</code>\u4F7F\u7528\u65E0\u9501\u7B97\u6CD5\uFF0C\u6839\u636E\u8282\u70B9\u7684\u72B6\u6001\u5224\u65AD\u6267\u884C\uFF0C\u800C\u4E0D\u9700\u8981\u7528\u5230\u9501\uFF0C\u5176\u6838\u5FC3\u662F<code>Transfer.transfer()</code>.</p><ul><li><code>keepAliveTime</code> \u7EBF\u7A0B\u7A7A\u95F2\u65F6\u7684\u5B58\u6D3B\u65F6\u95F4\uFF0C\u5373\u5F53\u7EBF\u7A0B\u6CA1\u6709\u4EFB\u52A1\u6267\u884C\u65F6\uFF0C\u8BE5\u7EBF\u7A0B\u7EE7\u7EED\u5B58\u6D3B\u7684\u65F6\u95F4\uFF1B\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u53C2\u6570\u53EA\u5728\u7EBF\u7A0B\u6570\u5927\u4E8EcorePoolSize\u65F6\u624D\u6709\u7528, \u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4\u7684\u7A7A\u95F2\u7EBF\u7A0B\u5C06\u88AB\u7EC8\u6B62\uFF1B</li><li><code>unit</code> keepAliveTime\u7684\u5355\u4F4D</li><li><code>threadFactory</code> \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\uFF0C\u901A\u8FC7\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u5DE5\u5382\u53EF\u4EE5\u7ED9\u6BCF\u4E2A\u65B0\u5EFA\u7684\u7EBF\u7A0B\u8BBE\u7F6E\u4E00\u4E2A\u5177\u6709\u8BC6\u522B\u5EA6\u7684\u7EBF\u7A0B\u540D\u3002\u9ED8\u8BA4\u4E3ADefaultThreadFactory</li><li><code>handler</code> \u7EBF\u7A0B\u6C60\u7684\u9971\u548C\u7B56\u7565\uFF0C\u5F53\u963B\u585E\u961F\u5217\u6EE1\u4E86\uFF0C\u4E14\u6CA1\u6709\u7A7A\u95F2\u7684\u5DE5\u4F5C\u7EBF\u7A0B\uFF0C\u5982\u679C\u7EE7\u7EED\u63D0\u4EA4\u4EFB\u52A1\uFF0C\u5FC5\u987B\u91C7\u53D6\u4E00\u79CD\u7B56\u7565\u5904\u7406\u8BE5\u4EFB\u52A1\uFF0C\u7EBF\u7A0B\u6C60\u63D0\u4F9B\u4E864\u79CD\u7B56\u7565: <ul><li><code>AbortPolicy</code>: \u76F4\u63A5\u629B\u51FA\u5F02\u5E38\uFF0C\u9ED8\u8BA4\u7B56\u7565\uFF1B</li><li><code>CallerRunsPolicy</code>: \u7528\u8C03\u7528\u8005\u6240\u5728\u7684\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF1B</li><li><code>DiscardOldestPolicy</code>: \u4E22\u5F03\u963B\u585E\u961F\u5217\u4E2D\u9760\u6700\u524D\u7684\u4EFB\u52A1\uFF0C\u5E76\u6267\u884C\u5F53\u524D\u4EFB\u52A1\uFF1B</li><li><code>DiscardPolicy</code>: \u76F4\u63A5\u4E22\u5F03\u4EFB\u52A1\uFF1B</li></ul></li></ul><p>\u5F53\u7136\u4E5F\u53EF\u4EE5\u6839\u636E\u5E94\u7528\u573A\u666F\u5B9E\u73B0RejectedExecutionHandler\u63A5\u53E3\uFF0C\u81EA\u5B9A\u4E49\u9971\u548C\u7B56\u7565\uFF0C\u5982\u8BB0\u5F55\u65E5\u5FD7\u6216\u6301\u4E45\u5316\u5B58\u50A8\u4E0D\u80FD\u5904\u7406\u7684\u4EFB\u52A1\u3002</p><h3 id="_3-4-\u4E09\u79CD\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_3-4-\u4E09\u79CD\u7C7B\u578B" aria-hidden="true">#</a> 3.4 \u4E09\u79CD\u7C7B\u578B</h3><h4 id="_3-4-1-newfixedthreadpool" tabindex="-1"><a class="header-anchor" href="#_3-4-1-newfixedthreadpool" aria-hidden="true">#</a> 3.4.1 newFixedThreadPool</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> nThreads<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> nThreads<span class="token punctuation">,</span>
                                <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u6570\u91CF\u8FBEcorePoolSize\u540E\uFF0C\u5373\u4F7F\u7EBF\u7A0B\u6C60\u6CA1\u6709\u53EF\u6267\u884C\u4EFB\u52A1\u65F6\uFF0C\u4E5F\u4E0D\u4F1A\u91CA\u653E\u7EBF\u7A0B\u3002</p><p>FixedThreadPool\u7684\u5DE5\u4F5C\u961F\u5217\u4E3A\u65E0\u754C\u961F\u5217LinkedBlockingQueue(\u961F\u5217\u5BB9\u91CF\u4E3AInteger.MAX_VALUE), \u8FD9\u4F1A\u5BFC\u81F4\u4EE5\u4E0B\u95EE\u9898:</p><ul><li>\u7EBF\u7A0B\u6C60\u91CC\u7684\u7EBF\u7A0B\u6570\u91CF\u4E0D\u8D85\u8FC7corePoolSize,\u8FD9\u5BFC\u81F4\u4E86maximumPoolSize\u548CkeepAliveTime\u5C06\u4F1A\u662F\u4E2A\u65E0\u7528\u53C2\u6570</li><li>\u7531\u4E8E\u4F7F\u7528\u4E86\u65E0\u754C\u961F\u5217, \u6240\u4EE5FixedThreadPool\u6C38\u8FDC\u4E0D\u4F1A\u62D2\u7EDD, \u5373\u9971\u548C\u7B56\u7565\u5931\u6548</li></ul><h4 id="_3-4-2-newsinglethreadexecutor" tabindex="-1"><a class="header-anchor" href="#_3-4-2-newsinglethreadexecutor" aria-hidden="true">#</a> 3.4.2 newSingleThreadExecutor</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FinalizableDelegatedExecutorService</span>
        <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
                                <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u521D\u59CB\u5316\u7684\u7EBF\u7A0B\u6C60\u4E2D\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u5982\u679C\u8BE5\u7EBF\u7A0B\u5F02\u5E38\u7ED3\u675F\uFF0C\u4F1A\u91CD\u65B0\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u7EE7\u7EED\u6267\u884C\u4EFB\u52A1\uFF0C\u552F\u4E00\u7684\u7EBF\u7A0B\u53EF\u4EE5\u4FDD\u8BC1\u6240\u63D0\u4EA4\u4EFB\u52A1\u7684\u987A\u5E8F\u6267\u884C.</p><p>\u7531\u4E8E\u4F7F\u7528\u4E86\u65E0\u754C\u961F\u5217, \u6240\u4EE5SingleThreadPool\u6C38\u8FDC\u4E0D\u4F1A\u62D2\u7EDD, \u5373\u9971\u548C\u7B56\u7565\u5931\u6548</p><h4 id="_2-4-3-newcachedthreadpool" tabindex="-1"><a class="header-anchor" href="#_2-4-3-newcachedthreadpool" aria-hidden="true">#</a> 2.4.3 newCachedThreadPool</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">,</span>
                                    <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
                                    <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u6570\u53EF\u8FBE\u5230Integer.MAX_VALUE\uFF0C\u53732147483647\uFF0C\u5185\u90E8\u4F7F\u7528SynchronousQueue\u4F5C\u4E3A\u963B\u585E\u961F\u5217\uFF1B \u548CnewFixedThreadPool\u521B\u5EFA\u7684\u7EBF\u7A0B\u6C60\u4E0D\u540C\uFF0CnewCachedThreadPool\u5728\u6CA1\u6709\u4EFB\u52A1\u6267\u884C\u65F6\uFF0C\u5F53\u7EBF\u7A0B\u7684\u7A7A\u95F2\u65F6\u95F4\u8D85\u8FC7keepAliveTime\uFF0C\u4F1A\u81EA\u52A8\u91CA\u653E\u7EBF\u7A0B\u8D44\u6E90\uFF0C\u5F53\u63D0\u4EA4\u65B0\u4EFB\u52A1\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u5219\u521B\u5EFA\u65B0\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\uFF0C\u4F1A\u5BFC\u81F4\u4E00\u5B9A\u7684\u7CFB\u7EDF\u5F00\u9500\uFF1B \u6267\u884C\u8FC7\u7A0B\u4E0E\u524D\u4E24\u79CD\u7A0D\u5FAE\u4E0D\u540C:</p><ul><li>\u4E3B\u7EBF\u7A0B\u8C03\u7528SynchronousQueue\u7684offer()\u65B9\u6CD5\u653E\u5165task, \u5018\u82E5\u6B64\u65F6\u7EBF\u7A0B\u6C60\u4E2D\u6709\u7A7A\u95F2\u7684\u7EBF\u7A0B\u5C1D\u8BD5\u8BFB\u53D6 SynchronousQueue\u7684task, \u5373\u8C03\u7528\u4E86SynchronousQueue\u7684poll(), \u90A3\u4E48\u4E3B\u7EBF\u7A0B\u5C06\u8BE5task\u4EA4\u7ED9\u7A7A\u95F2\u7EBF\u7A0B. \u5426\u5219\u6267\u884C(2)</li><li>\u5F53\u7EBF\u7A0B\u6C60\u4E3A\u7A7A\u6216\u8005\u6CA1\u6709\u7A7A\u95F2\u7684\u7EBF\u7A0B, \u5219\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1.</li><li>\u6267\u884C\u5B8C\u4EFB\u52A1\u7684\u7EBF\u7A0B\u5018\u82E5\u572860s\u5185\u4ECD\u7A7A\u95F2, \u5219\u4F1A\u88AB\u7EC8\u6B62. \u56E0\u6B64\u957F\u65F6\u95F4\u7A7A\u95F2\u7684CachedThreadPool\u4E0D\u4F1A\u6301\u6709\u4EFB\u4F55\u7EBF\u7A0B\u8D44\u6E90.</li></ul><h3 id="_3-5-\u5173\u95ED\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#_3-5-\u5173\u95ED\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> 3.5 \u5173\u95ED\u7EBF\u7A0B\u6C60</h3><p>\u904D\u5386\u7EBF\u7A0B\u6C60\u4E2D\u7684\u6240\u6709\u7EBF\u7A0B\uFF0C\u7136\u540E\u9010\u4E2A\u8C03\u7528\u7EBF\u7A0B\u7684interrupt\u65B9\u6CD5\u6765\u4E2D\u65AD\u7EBF\u7A0B.</p><h4 id="_3-5-1-\u5173\u95ED\u65B9\u5F0F-shutdown" tabindex="-1"><a class="header-anchor" href="#_3-5-1-\u5173\u95ED\u65B9\u5F0F-shutdown" aria-hidden="true">#</a> 3.5.1 \u5173\u95ED\u65B9\u5F0F - shutdown</h4><p>\u5C06\u7EBF\u7A0B\u6C60\u91CC\u7684\u7EBF\u7A0B\u72B6\u6001\u8BBE\u7F6E\u6210SHUTDOWN\u72B6\u6001, \u7136\u540E\u4E2D\u65AD\u6240\u6709\u6CA1\u6709\u6B63\u5728\u6267\u884C\u4EFB\u52A1\u7684\u7EBF\u7A0B.</p><h4 id="_3-5-2-\u5173\u95ED\u65B9\u5F0F-shutdownnow" tabindex="-1"><a class="header-anchor" href="#_3-5-2-\u5173\u95ED\u65B9\u5F0F-shutdownnow" aria-hidden="true">#</a> 3.5.2 \u5173\u95ED\u65B9\u5F0F - shutdownNow</h4><p>\u5C06\u7EBF\u7A0B\u6C60\u91CC\u7684\u7EBF\u7A0B\u72B6\u6001\u8BBE\u7F6E\u6210STOP\u72B6\u6001, \u7136\u540E\u505C\u6B62\u6240\u6709\u6B63\u5728\u6267\u884C\u6216\u6682\u505C\u4EFB\u52A1\u7684\u7EBF\u7A0B. \u53EA\u8981\u8C03\u7528\u8FD9\u4E24\u4E2A\u5173\u95ED\u65B9\u6CD5\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A, isShutDown() \u8FD4\u56DEtrue. \u5F53\u6240\u6709\u4EFB\u52A1\u90FD\u6210\u529F\u5173\u95ED\u4E86, isTerminated()\u8FD4\u56DEtrue</p><h2 id="_4-threadpoolexecutor\u6E90\u7801\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#_4-threadpoolexecutor\u6E90\u7801\u8BE6\u89E3" aria-hidden="true">#</a> 4. ThreadPoolExecutor\u6E90\u7801\u8BE6\u89E3</h2><h3 id="_4-1-\u51E0\u4E2A\u5173\u952E\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_4-1-\u51E0\u4E2A\u5173\u952E\u5C5E\u6027" aria-hidden="true">#</a> 4.1 \u51E0\u4E2A\u5173\u952E\u5C5E\u6027</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8FD9\u4E2A\u5C5E\u6027\u662F\u7528\u6765\u5B58\u653E \u5F53\u524D\u8FD0\u884C\u7684worker\u6570\u91CF\u4EE5\u53CA\u7EBF\u7A0B\u6C60\u72B6\u6001\u7684</span>
<span class="token comment">//int\u662F32\u4F4D\u7684\uFF0C\u8FD9\u91CC\u628Aint\u7684\u9AD83\u4F4D\u62FF\u6765\u5145\u5F53\u7EBF\u7A0B\u6C60\u72B6\u6001\u7684\u6807\u5FD7\u4F4D,\u540E29\u4F4D\u62FF\u6765\u5145\u5F53\u5F53\u524D\u8FD0\u884Cworker\u7684\u6570\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> ctl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token constant">RUNNING</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5B58\u653E\u4EFB\u52A1\u7684\u963B\u585E\u961F\u5217</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">;</span>
<span class="token comment">//worker\u7684\u96C6\u5408,\u7528set\u6765\u5B58\u653E</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Worker</span><span class="token punctuation">&gt;</span></span> workers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Worker</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5386\u53F2\u8FBE\u5230\u7684worker\u6570\u6700\u5927\u503C</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> largestPoolSize<span class="token punctuation">;</span>
<span class="token comment">//\u5F53\u961F\u5217\u6EE1\u4E86\u5E76\u4E14worker\u7684\u6570\u91CF\u8FBE\u5230maxSize\u7684\u65F6\u5019,\u6267\u884C\u5177\u4F53\u7684\u62D2\u7EDD\u7B56\u7565</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">;</span>
<span class="token comment">//\u8D85\u51FAcoreSize\u7684worker\u7684\u751F\u5B58\u65F6\u95F4</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">;</span>
<span class="token comment">//\u5E38\u9A7Bworker\u7684\u6570\u91CF</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>
<span class="token comment">//\u6700\u5927worker\u7684\u6570\u91CF,\u4E00\u822C\u5F53workQueue\u6EE1\u4E86\u624D\u4F1A\u7528\u5230\u8FD9\u4E2A\u53C2\u6570</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-\u5185\u90E8\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_4-2-\u5185\u90E8\u72B6\u6001" aria-hidden="true">#</a> 4.2 \u5185\u90E8\u72B6\u6001</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AtomicInteger</span> ctl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token constant">RUNNING</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">COUNT_BITS</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">SIZE</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CAPACITY</span>   <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// runState is stored in the high-order bits</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">RUNNING</span>    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SHUTDOWN</span>   <span class="token operator">=</span>  <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STOP</span>       <span class="token operator">=</span>  <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TIDYING</span>    <span class="token operator">=</span>  <span class="token number">2</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TERMINATED</span> <span class="token operator">=</span>  <span class="token number">3</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>

<span class="token comment">// Packing and unpacking ctl</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>     <span class="token punctuation">{</span> <span class="token keyword">return</span> c <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token constant">CAPACITY</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span>  <span class="token punctuation">{</span> <span class="token keyword">return</span> c <span class="token operator">&amp;</span> <span class="token constant">CAPACITY</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> rs<span class="token punctuation">,</span> <span class="token keyword">int</span> wc<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> rs <span class="token operator">|</span> wc<span class="token punctuation">;</span> <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2DAtomicInteger\u53D8\u91CFctl\u7684\u529F\u80FD\u975E\u5E38\u5F3A\u5927: \u5229\u7528\u4F4E29\u4F4D\u8868\u793A\u7EBF\u7A0B\u6C60\u4E2D\u7EBF\u7A0B\u6570\uFF0C\u901A\u8FC7\u9AD83\u4F4D\u8868\u793A\u7EBF\u7A0B\u6C60\u7684\u8FD0\u884C\u72B6\u6001:</p><ul><li>RUNNING: -1 &lt;&lt; COUNT_BITS\uFF0C\u5373\u9AD83\u4F4D\u4E3A111\uFF0C\u8BE5\u72B6\u6001\u7684\u7EBF\u7A0B\u6C60\u4F1A\u63A5\u6536\u65B0\u4EFB\u52A1\uFF0C\u5E76\u5904\u7406\u963B\u585E\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF1B</li><li>SHUTDOWN: 0 &lt;&lt; COUNT_BITS\uFF0C\u5373\u9AD83\u4F4D\u4E3A000\uFF0C\u8BE5\u72B6\u6001\u7684\u7EBF\u7A0B\u6C60\u4E0D\u4F1A\u63A5\u6536\u65B0\u4EFB\u52A1\uFF0C\u4F46\u4F1A\u5904\u7406\u963B\u585E\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF1B</li><li>STOP : 1 &lt;&lt; COUNT_BITS\uFF0C\u5373\u9AD83\u4F4D\u4E3A001\uFF0C\u8BE5\u72B6\u6001\u7684\u7EBF\u7A0B\u4E0D\u4F1A\u63A5\u6536\u65B0\u4EFB\u52A1\uFF0C\u4E5F\u4E0D\u4F1A\u5904\u7406\u963B\u585E\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C\u800C\u4E14\u4F1A\u4E2D\u65AD\u6B63\u5728\u8FD0\u884C\u7684\u4EFB\u52A1\uFF1B</li><li>TIDYING : 2 &lt;&lt; COUNT_BITS\uFF0C\u5373\u9AD83\u4F4D\u4E3A010, \u6240\u6709\u7684\u4EFB\u52A1\u90FD\u5DF2\u7ECF\u7EC8\u6B62\uFF1B</li><li>TERMINATED: 3 &lt;&lt; COUNT_BITS\uFF0C\u5373\u9AD83\u4F4D\u4E3A011, terminated()\u65B9\u6CD5\u5DF2\u7ECF\u6267\u884C\u5B8C\u6210</li></ul><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220528132832565.png" alt="image-20220528132832565"></p><h3 id="_4-3-\u4EFB\u52A1\u7684\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_4-3-\u4EFB\u52A1\u7684\u6267\u884C" aria-hidden="true">#</a> 4.3 \u4EFB\u52A1\u7684\u6267\u884C</h3><blockquote><p>execute \u2013&gt; addWorker \u2013&gt;runworker (getTask)</p></blockquote><p>\u7EBF\u7A0B\u6C60\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u901A\u8FC7Woker\u7C7B\u5B9E\u73B0\uFF0C\u5728ReentrantLock\u9501\u7684\u4FDD\u8BC1\u4E0B\uFF0C\u628AWoker\u5B9E\u4F8B\u63D2\u5165\u5230HashSet\u540E\uFF0C\u5E76\u542F\u52A8Woker\u4E2D\u7684\u7EBF\u7A0B\u3002 \u4ECEWoker\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\u5B9E\u73B0\u53EF\u4EE5\u53D1\u73B0: \u7EBF\u7A0B\u5DE5\u5382\u5728\u521B\u5EFA\u7EBF\u7A0Bthread\u65F6\uFF0C\u5C06Woker\u5B9E\u4F8B\u672C\u8EABthis\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165\uFF0C\u5F53\u6267\u884Cstart\u65B9\u6CD5\u542F\u52A8\u7EBF\u7A0Bthread\u65F6\uFF0C\u672C\u8D28\u662F\u6267\u884C\u4E86Worker\u7684runWorker\u65B9\u6CD5\u3002 firstTask\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u901A\u8FC7getTask\u65B9\u6CD5\u4ECE\u963B\u585E\u961F\u5217\u4E2D\u83B7\u53D6\u7B49\u5F85\u7684\u4EFB\u52A1\uFF0C\u5982\u679C\u961F\u5217\u4E2D\u6CA1\u6709\u4EFB\u52A1\uFF0CgetTask\u65B9\u6CD5\u4F1A\u88AB\u963B\u585E\u5E76\u6302\u8D77\uFF0C\u4E0D\u4F1A\u5360\u7528cpu\u8D44\u6E90\uFF1B</p><h4 id="_4-3-1-execute-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-3-1-execute-\u65B9\u6CD5" aria-hidden="true">#</a> 4.3.1 execute()\u65B9\u6CD5</h4><p>ThreadPoolExecutor.execute(task)\u5B9E\u73B0\u4E86Executor.execute(task)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u82E5\u4EFB\u52A1\u4E3A\u7A7A\uFF0C\u5219\u629B NPE\uFF0C\u4E0D\u80FD\u6267\u884C\u7A7A\u4EFB\u52A1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u82E5\u5DE5\u4F5C\u7EBF\u7A0B\u6570\u5C0F\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u5219\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\uFF0C\u5E76\u628A\u5F53\u524D\u4EFB\u52A1 command \u4F5C\u4E3A\u8FD9\u4E2A\u7EBF\u7A0B\u7684\u7B2C\u4E00\u4E2A\u4EFB\u52A1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/**
         * \u81F3\u6B64\uFF0C\u6709\u4EE5\u4E0B\u4E24\u79CD\u60C5\u51B5\uFF1A
         * 1.\u5F53\u524D\u5DE5\u4F5C\u7EBF\u7A0B\u6570\u5927\u4E8E\u7B49\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570
         * 2.\u65B0\u5EFA\u7EBF\u7A0B\u5931\u8D25
         * \u6B64\u65F6\u4F1A\u5C1D\u8BD5\u5C06\u4EFB\u52A1\u6DFB\u52A0\u5230\u963B\u585E\u961F\u5217 workQueue
         */</span>
        <span class="token comment">// \u82E5\u7EBF\u7A0B\u6C60\u5904\u4E8E RUNNING \u72B6\u6001\uFF0C\u5C06\u4EFB\u52A1\u6DFB\u52A0\u5230\u963B\u585E\u961F\u5217 workQueue \u4E2D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> workQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u518D\u6B21\u68C0\u67E5\u7EBF\u7A0B\u6C60\u6807\u8BB0</span>
            <span class="token keyword">int</span> recheck <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u7EBF\u7A0B\u6C60\u5DF2\u4E0D\u5904\u4E8E RUNNING \u72B6\u6001\uFF0C\u90A3\u4E48\u79FB\u9664\u5DF2\u5165\u961F\u7684\u4EFB\u52A1\uFF0C\u5E76\u4E14\u6267\u884C\u62D2\u7EDD\u7B56\u7565</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isRunning</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">remove</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4EFB\u52A1\u6DFB\u52A0\u5230\u963B\u585E\u961F\u5217\u5931\u8D25\uFF0C\u6267\u884C\u62D2\u7EDD\u7B56\u7565</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5982\u679C\u7EBF\u7A0B\u6C60\u8FD8\u662F RUNNING \u7684\uFF0C\u5E76\u4E14\u7EBF\u7A0B\u6570\u4E3A 0\uFF0C\u90A3\u4E48\u5F00\u542F\u65B0\u7684\u7EBF\u7A0B</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/**
         * \u81F3\u6B64\uFF0C\u6709\u4EE5\u4E0B\u4E24\u79CD\u60C5\u51B5\uFF1A
         * 1.\u7EBF\u7A0B\u6C60\u5904\u4E8E\u975E\u8FD0\u884C\u72B6\u6001\uFF0C\u7EBF\u7A0B\u6C60\u4E0D\u518D\u63A5\u53D7\u65B0\u7684\u7EBF\u7A0B
         * 2.\u7EBF\u7A0B\u5904\u4E8E\u8FD0\u884C\u72B6\u6001\uFF0C\u4F46\u662F\u963B\u585E\u961F\u5217\u5DF2\u6EE1\uFF0C\u65E0\u6CD5\u52A0\u5165\u5230\u963B\u585E\u961F\u5217
         * \u6B64\u65F6\u4F1A\u5C1D\u8BD5\u4EE5\u6700\u5927\u7EBF\u7A0B\u6570\u4E3A\u9650\u5236\u521B\u5EFA\u65B0\u7684\u5DE5\u4F5C\u7EBF\u7A0B
         */</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4EFB\u52A1\u8FDB\u5165\u7EBF\u7A0B\u6C60\u5931\u8D25\uFF0C\u6267\u884C\u62D2\u7EDD\u7B56\u7565</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E3A\u4EC0\u4E48\u9700\u8981double check\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001?</li></ul><p>\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\uFF0C\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001\u65F6\u523B\u5728\u53D8\u5316\uFF0C\u800Cctl.get()\u662F\u975E\u539F\u5B50\u64CD\u4F5C\uFF0C\u5F88\u6709\u53EF\u80FD\u521A\u83B7\u53D6\u4E86\u7EBF\u7A0B\u6C60\u72B6\u6001\u540E\u7EBF\u7A0B\u6C60\u72B6\u6001\u5C31\u6539\u53D8\u4E86\u3002\u5224\u65AD\u662F\u5426\u5C06command\u52A0\u5165workque\u662F\u7EBF\u7A0B\u6C60\u4E4B\u524D\u7684\u72B6\u6001\u3002\u5018\u82E5\u6CA1\u6709double check\uFF0C\u4E07\u4E00\u7EBF\u7A0B\u6C60\u5904\u4E8E\u975Erunning\u72B6\u6001(\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\u5F88\u6709\u53EF\u80FD\u53D1\u751F)\uFF0C\u90A3\u4E48command\u6C38\u8FDC\u4E0D\u4F1A\u6267\u884C\u3002</p><h4 id="_4-3-2-addworker\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-3-2-addworker\u65B9\u6CD5" aria-hidden="true">#</a> 4.3.2 addWorker\u65B9\u6CD5</h4><p>\u4ECE\u65B9\u6CD5execute\u7684\u5B9E\u73B0\u53EF\u4EE5\u770B\u51FA: addWorker\u4E3B\u8981\u8D1F\u8D23\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\u5E76\u6267\u884C\u4EFB\u52A1 \u7EBF\u7A0B\u6C60\u521B\u5EFA\u65B0\u7EBF\u7A0B\u6267\u884C\u4EFB\u52A1\u65F6\uFF0C\u9700\u8981 \u83B7\u53D6\u5168\u5C40\u9501:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> core<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// CAS\u66F4\u65B0\u7EBF\u7A0B\u6C60\u6570\u91CF</span>
    retry<span class="token operator">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Check if queue empty only if necessary.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span>
            <span class="token operator">!</span> <span class="token punctuation">(</span>rs <span class="token operator">==</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span>
                firstTask <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;=</span> <span class="token constant">CAPACITY</span> <span class="token operator">||</span>
                wc <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>core <span class="token operator">?</span> corePoolSize <span class="token operator">:</span> maximumPoolSize<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span> retry<span class="token punctuation">;</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Re-read ctl</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> rs<span class="token punctuation">)</span>
                <span class="token keyword">continue</span> retry<span class="token punctuation">;</span>
            <span class="token comment">// else CAS failed due to workerCount change; retry inner loop</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">boolean</span> workerStarted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> workerAdded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token class-name">Worker</span> w <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>firstTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u91CD\u5165\u9501</span>
            <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// Recheck while holding lock.</span>
                <span class="token comment">// Back out on ThreadFactory failure or if</span>
                <span class="token comment">// shut down before lock acquired.</span>
                <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&lt;</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">||</span>
                    <span class="token punctuation">(</span>rs <span class="token operator">==</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span> firstTask <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// precheck that t is startable</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    workers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> s <span class="token operator">=</span> workers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> largestPoolSize<span class="token punctuation">)</span>
                        largestPoolSize <span class="token operator">=</span> s<span class="token punctuation">;</span>
                    workerAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>workerAdded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7EBF\u7A0B\u542F\u52A8\uFF0C\u6267\u884C\u4EFB\u52A1(Worker.thread(firstTask).start());</span>
                workerStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> workerStarted<span class="token punctuation">)</span>
            <span class="token function">addWorkerFailed</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workerStarted<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-3-worker\u7C7B\u7684runworker\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-3-3-worker\u7C7B\u7684runworker\u65B9\u6CD5" aria-hidden="true">#</a> 4.3.3 Worker\u7C7B\u7684runworker\u65B9\u6CD5</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Worker</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>
     <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// inhibit interrupts until runWorker</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>firstTask <span class="token operator">=</span> firstTask<span class="token punctuation">;</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token function">getThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u7EBF\u7A0B</span>
     <span class="token punctuation">}</span>
     <span class="token doc-comment comment">/** Delegates main run loop to outer runWorker  */</span>
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token comment">// ...</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u7EE7\u627F\u4E86AQS\u7C7B\uFF0C\u53EF\u4EE5\u65B9\u4FBF\u7684\u5B9E\u73B0\u5DE5\u4F5C\u7EBF\u7A0B\u7684\u4E2D\u6B62\u64CD\u4F5C\uFF1B</p></li><li><p>\u5B9E\u73B0\u4E86Runnable\u63A5\u53E3\uFF0C\u53EF\u4EE5\u5C06\u81EA\u8EAB\u4F5C\u4E3A\u4E00\u4E2A\u4EFB\u52A1\u5728\u5DE5\u4F5C\u7EBF\u7A0B\u4E2D\u6267\u884C\uFF1B</p></li><li><p>\u5F53\u524D\u63D0\u4EA4\u7684\u4EFB\u52A1firstTask\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165Worker\u7684\u6784\u9020\u65B9\u6CD5\uFF1B</p></li></ul><p>\u4E00\u4E9B\u5C5E\u6027\u8FD8\u6709\u6784\u9020\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8FD0\u884C\u7684\u7EBF\u7A0B,\u524D\u9762addWorker\u65B9\u6CD5\u4E2D\u5C31\u662F\u76F4\u63A5\u901A\u8FC7\u542F\u52A8\u8FD9\u4E2A\u7EBF\u7A0B\u6765\u542F\u52A8\u8FD9\u4E2Aworker</span>
<span class="token keyword">final</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>
<span class="token comment">//\u5F53\u4E00\u4E2Aworker\u521A\u521B\u5EFA\u7684\u65F6\u5019,\u5C31\u5148\u5C1D\u8BD5\u6267\u884C\u8FD9\u4E2A\u4EFB\u52A1</span>
<span class="token class-name">Runnable</span> firstTask<span class="token punctuation">;</span>
<span class="token comment">//\u8BB0\u5F55\u5B8C\u6210\u4EFB\u52A1\u7684\u6570\u91CF</span>
<span class="token keyword">volatile</span> <span class="token keyword">long</span> completedTasks<span class="token punctuation">;</span>

<span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// inhibit interrupts until runWorker</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>firstTask <span class="token operator">=</span> firstTask<span class="token punctuation">;</span>
    <span class="token comment">//\u521B\u5EFA\u4E00\u4E2AThread,\u5C06\u81EA\u5DF1\u8BBE\u7F6E\u7ED9\u4ED6,\u540E\u9762\u8FD9\u4E2Athread\u542F\u52A8\u7684\u65F6\u5019,\u4E5F\u5C31\u662F\u6267\u884Cworker\u7684run\u65B9\u6CD5</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token function">getThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>runWorker\u65B9\u6CD5\u662F\u7EBF\u7A0B\u6C60\u7684\u6838\u5FC3:</p><ul><li>\u7EBF\u7A0B\u542F\u52A8\u4E4B\u540E\uFF0C\u901A\u8FC7unlock\u65B9\u6CD5\u91CA\u653E\u9501\uFF0C\u8BBE\u7F6EAQS\u7684state\u4E3A0\uFF0C\u8868\u793A\u8FD0\u884C\u53EF\u4E2D\u65AD\uFF1B</li><li>Worker\u6267\u884CfirstTask\u6216\u4ECEworkQueue\u4E2D\u83B7\u53D6\u4EFB\u52A1: <ul><li>\u8FDB\u884C\u52A0\u9501\u64CD\u4F5C\uFF0C\u4FDD\u8BC1thread\u4E0D\u88AB\u5176\u4ED6\u7EBF\u7A0B\u4E2D\u65AD(\u9664\u975E\u7EBF\u7A0B\u6C60\u88AB\u4E2D\u65AD)</li><li>\u68C0\u67E5\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF0C\u5018\u82E5\u7EBF\u7A0B\u6C60\u5904\u4E8E\u4E2D\u65AD\u72B6\u6001\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5C06\u4E2D\u65AD\u3002</li><li>\u6267\u884CbeforeExecute</li><li>\u6267\u884C\u4EFB\u52A1\u7684run\u65B9\u6CD5</li><li>\u6267\u884CafterExecute\u65B9\u6CD5</li><li>\u89E3\u9501\u64CD\u4F5C</li></ul></li></ul><blockquote><p>\u901A\u8FC7getTask\u65B9\u6CD5\u4ECE\u963B\u585E\u961F\u5217\u4E2D\u83B7\u53D6\u7B49\u5F85\u7684\u4EFB\u52A1\uFF0C\u5982\u679C\u961F\u5217\u4E2D\u6CA1\u6709\u4EFB\u52A1\uFF0CgetTask\u65B9\u6CD5\u4F1A\u88AB\u963B\u585E\u5E76\u6302\u8D77\uFF0C\u4E0D\u4F1A\u5360\u7528cpu\u8D44\u6E90\uFF1B</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> wt <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Runnable</span> task <span class="token operator">=</span> w<span class="token punctuation">.</span>firstTask<span class="token punctuation">;</span>
    w<span class="token punctuation">.</span>firstTask <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// allow interrupts</span>
    <span class="token keyword">boolean</span> completedAbruptly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5148\u6267\u884CfirstTask\uFF0C\u518D\u4ECEworkerQueue\u4E2D\u53D6task(getTask())</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>task <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>task <span class="token operator">=</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            w<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// If pool is stopping, ensure thread is interrupted;</span>
            <span class="token comment">// if not, ensure thread is not interrupted.  This</span>
            <span class="token comment">// requires a recheck in second case to deal with</span>
            <span class="token comment">// shutdownNow race while clearing interrupt</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">STOP</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                    <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">STOP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token operator">!</span>wt<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                wt<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">beforeExecute</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Throwable</span> thrown <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token function">afterExecute</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> thrown<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                task <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                w<span class="token punctuation">.</span>completedTasks<span class="token operator">++</span><span class="token punctuation">;</span>
                w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        completedAbruptly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token function">processWorkerExit</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> completedAbruptly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-4-gettask\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-3-4-gettask\u65B9\u6CD5" aria-hidden="true">#</a> 4.3.4 getTask\u65B9\u6CD5</h4><p>\u4E0B\u9762\u6765\u770B\u4E00\u4E0BgetTask()\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u9762\u6D89\u53CA\u5230keepAliveTime\u7684\u4F7F\u7528\uFF0C\u4ECE\u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\u7EBF\u7A0B\u6C60\u662F\u600E\u4E48\u8BA9\u8D85\u8FC7corePoolSize\u7684\u90A3\u90E8\u5206worker\u9500\u6BC1\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Runnable</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Did the last poll() time out?</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Check if queue empty only if necessary.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">STOP</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Are workers subject to culling?</span>
        <span class="token keyword">boolean</span> timed <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">||</span> wc <span class="token operator">&gt;</span> corePoolSize<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> maximumPoolSize <span class="token operator">||</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> timedOut<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Runnable</span> r <span class="token operator">=</span> timed <span class="token operator">?</span>
                workQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                workQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> r<span class="token punctuation">;</span>
            timedOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> retry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u4E00\u6BB5\u4EE3\u7801\u662FkeepAliveTime\u8D77\u4F5C\u7528\u7684\u5173\u952E:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> timed <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">||</span> wc <span class="token operator">&gt;</span> corePoolSize<span class="token punctuation">;</span>
<span class="token class-name">Runnable</span> r <span class="token operator">=</span> timed <span class="token operator">?</span>
                workQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                workQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>allowCoreThreadTimeOut\u4E3Afalse\uFF0C\u7EBF\u7A0B\u5373\u4F7F\u7A7A\u95F2\u4E5F\u4E0D\u4F1A\u88AB\u9500\u6BC1\uFF1B\u5018\u82E5\u4E3Ature\uFF0C\u5728keepAliveTime\u5185\u4ECD\u7A7A\u95F2\u5219\u4F1A\u88AB\u9500\u6BC1\u3002</p><p>\u5982\u679C\u7EBF\u7A0B\u5141\u8BB8\u7A7A\u95F2\u7B49\u5F85\u800C\u4E0D\u88AB\u9500\u6BC1timed == false\uFF0CworkQueue.take\u4EFB\u52A1: \u5982\u679C\u963B\u585E\u961F\u5217\u4E3A\u7A7A\uFF0C\u5F53\u524D\u7EBF\u7A0B\u4F1A\u88AB\u6302\u8D77\u7B49\u5F85\uFF1B\u5F53\u961F\u5217\u4E2D\u6709\u4EFB\u52A1\u52A0\u5165\u65F6\uFF0C\u7EBF\u7A0B\u88AB\u5524\u9192\uFF0Ctake\u65B9\u6CD5\u8FD4\u56DE\u4EFB\u52A1\uFF0C\u5E76\u6267\u884C\uFF1B</p><p>\u5982\u679C\u7EBF\u7A0B\u4E0D\u5141\u8BB8\u65E0\u4F11\u6B62\u7A7A\u95F2timed == true, workQueue.poll\u4EFB\u52A1: \u5982\u679C\u5728keepAliveTime\u65F6\u95F4\u5185\uFF0C\u963B\u585E\u961F\u5217\u8FD8\u662F\u6CA1\u6709\u4EFB\u52A1\uFF0C\u5219\u8FD4\u56DEnull\uFF1B</p><h3 id="_4-4-\u4EFB\u52A1\u7684\u63D0\u4EA4" tabindex="-1"><a class="header-anchor" href="#_4-4-\u4EFB\u52A1\u7684\u63D0\u4EA4" aria-hidden="true">#</a> 4.4 \u4EFB\u52A1\u7684\u63D0\u4EA4</h3><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220528140135829.png" alt="image-20220528140135829"></p><ol><li>submit\u4EFB\u52A1\uFF0C\u7B49\u5F85\u7EBF\u7A0B\u6C60execute</li><li>\u6267\u884CFutureTask\u7C7B\u7684get\u65B9\u6CD5\u65F6\uFF0C\u4F1A\u628A\u4E3B\u7EBF\u7A0B\u5C01\u88C5\u6210WaitNode\u8282\u70B9\u5E76\u4FDD\u5B58\u5728waiters\u94FE\u8868\u4E2D\uFF0C \u5E76\u963B\u585E\u7B49\u5F85\u8FD0\u884C\u7ED3\u679C\uFF1B</li><li>FutureTask\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u901A\u8FC7UNSAFE\u8BBE\u7F6Ewaiters\u76F8\u5E94\u7684waitNode\u4E3Anull\uFF0C\u5E76\u901A\u8FC7LockSupport\u7C7Bunpark\u65B9\u6CD5\u5524\u9192\u4E3B\u7EBF\u7A0B\uFF1B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">ExecutorService</span> es <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> es<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token string">&quot;future result&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> result <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5B9E\u9645\u4E1A\u52A1\u573A\u666F\u4E2D\uFF0CFuture\u548CCallable\u57FA\u672C\u662F\u6210\u5BF9\u51FA\u73B0\u7684\uFF0CCallable\u8D1F\u8D23\u4EA7\u751F\u7ED3\u679C\uFF0CFuture\u8D1F\u8D23\u83B7\u53D6\u7ED3\u679C\u3002</p><ol><li>Callable\u63A5\u53E3\u7C7B\u4F3C\u4E8ERunnable\uFF0C\u53EA\u662FRunnable\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li><li>Callable\u4EFB\u52A1\u9664\u4E86\u8FD4\u56DE\u6B63\u5E38\u7ED3\u679C\u4E4B\u5916\uFF0C\u5982\u679C\u53D1\u751F\u5F02\u5E38\uFF0C\u8BE5\u5F02\u5E38\u4E5F\u4F1A\u88AB\u8FD4\u56DE\uFF0C\u5373Future\u53EF\u4EE5\u62FF\u5230\u5F02\u6B65\u6267\u884C\u4EFB\u52A1\u5404\u79CD\u7ED3\u679C\uFF1B</li><li>Future.get\u65B9\u6CD5\u4F1A\u5BFC\u81F4\u4E3B\u7EBF\u7A0B\u963B\u585E\uFF0C\u76F4\u5230Callable\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\uFF1B</li></ol><h4 id="_4-4-1-submit\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-4-1-submit\u65B9\u6CD5" aria-hidden="true">#</a> 4.4.1 submit\u65B9\u6CD5</h4><p>AbstractExecutorService.submit()\u5B9E\u73B0\u4E86ExecutorService.submit() \u53EF\u4EE5\u83B7\u53D6\u6267\u884C\u5B8C\u7684\u8FD4\u56DE\u503C, \u800CThreadPoolExecutor \u662FAbstractExecutorService.submit()\u7684\u5B50\u7C7B\uFF0C\u6240\u4EE5submit\u65B9\u6CD5\u4E5F\u662FThreadPoolExecutor\`\u7684\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// submit()\u5728ExecutorService\u4E2D\u7684\u5B9A\u4E49</span>
<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token class-name">T</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// submit\u65B9\u6CD5\u5728AbstractExecutorService\u4E2D\u7684\u5B9E\u73B0</span>
<span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>task <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7submit\u65B9\u6CD5\u63D0\u4EA4\u7684Callable\u4EFB\u52A1\u4F1A\u88AB\u5C01\u88C5\u6210\u4E86\u4E00\u4E2AFutureTask\u5BF9\u8C61\u3002</span>
    <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> ftask <span class="token operator">=</span> <span class="token function">newTaskFor</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">execute</span><span class="token punctuation">(</span>ftask<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ftask<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7submit\u65B9\u6CD5\u63D0\u4EA4\u7684Callable\u4EFB\u52A1\u4F1A\u88AB\u5C01\u88C5\u6210\u4E86\u4E00\u4E2AFutureTask\u5BF9\u8C61\u3002\u901A\u8FC7Executor.execute\u65B9\u6CD5\u63D0\u4EA4FutureTask\u5230\u7EBF\u7A0B\u6C60\u4E2D\u7B49\u5F85\u88AB\u6267\u884C\uFF0C\u6700\u7EC8\u6267\u884C\u7684\u662FFutureTask\u7684run\u65B9\u6CD5\uFF1B</p><h4 id="_4-4-2-futuretask\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_4-4-2-futuretask\u5BF9\u8C61" aria-hidden="true">#</a> 4.4.2 FutureTask\u5BF9\u8C61</h4><p><code>public class FutureTask&lt;V&gt; implements RunnableFuture&lt;V&gt;</code> \u53EF\u4EE5\u5C06FutureTask\u63D0\u4EA4\u81F3\u7EBF\u7A0B\u6C60\u4E2D\u7B49\u5F85\u88AB\u6267\u884C(\u901A\u8FC7FutureTask\u7684run\u65B9\u6CD5\u6765\u6267\u884C)</p><ul><li><p>\u5185\u90E8\u72B6\u6001</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* The run state of this task, initially NEW. 
    * ...
    * Possible state transitions:
    * NEW -&gt; COMPLETING -&gt; NORMAL
    * NEW -&gt; COMPLETING -&gt; EXCEPTIONAL
    * NEW -&gt; CANCELLED
    * NEW -&gt; INTERRUPTING -&gt; INTERRUPTED
    */</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">NEW</span>          <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">COMPLETING</span>   <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">NORMAL</span>       <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">EXCEPTIONAL</span>  <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CANCELLED</span>    <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">INTERRUPTING</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">INTERRUPTED</span>  <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u5185\u90E8\u72B6\u6001\u7684\u4FEE\u6539\u901A\u8FC7sun.misc.Unsafe\u4FEE\u6539</p><ul><li><p>get\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">ExecutionException</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> s <span class="token operator">=</span> state<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&lt;=</span> <span class="token constant">COMPLETING</span><span class="token punctuation">)</span>
        s <span class="token operator">=</span> <span class="token function">awaitDone</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">report</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5185\u90E8\u901A\u8FC7awaitDone\u65B9\u6CD5\u5BF9\u4E3B\u7EBF\u7A0B\u8FDB\u884C\u963B\u585E\uFF0C\u5177\u4F53\u5B9E\u73B0\u5982\u4E0B:</p><div class="language-JAVA ext-JAVA line-numbers-mode"><pre class="language-JAVA"><code>private int awaitDone(boolean timed, long nanos)
    throws InterruptedException {
    final long deadline = timed ? System.nanoTime() + nanos : 0L;
    WaitNode q = null;
    boolean queued = false;
    for (;;) {
        if (Thread.interrupted()) {
            removeWaiter(q);
            throw new InterruptedException();
        }

        int s = state;
        if (s &gt; COMPLETING) {
            if (q != null)
                q.thread = null;
            return s;
        }
        else if (s == COMPLETING) // cannot time out yet
            Thread.yield();
        else if (q == null)
            q = new WaitNode();
        else if (!queued)
            queued = UNSAFE.compareAndSwapObject(this, waitersOffset,q.next = waiters, q);
        else if (timed) {
            nanos = deadline - System.nanoTime();
            if (nanos &lt;= 0L) {
                removeWaiter(q);
                return state;
            }
            LockSupport.parkNanos(this, nanos);
        }
        else
            LockSupport.park(this);
    }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><ol><li><p>\u5982\u679C\u4E3B\u7EBF\u7A0B\u88AB\u4E2D\u65AD\uFF0C\u5219\u629B\u51FA\u4E2D\u65AD\u5F02\u5E38\uFF1B</p></li><li><p>\u5224\u65ADFutureTask\u5F53\u524D\u7684state\uFF0C\u5982\u679C\u5927\u4E8ECOMPLETING\uFF0C\u8BF4\u660E\u4EFB\u52A1\u5DF2\u7ECF\u6267\u884C\u5B8C\u6210\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\uFF1B</p></li><li><p>\u5982\u679C\u5F53\u524Dstate\u7B49\u4E8ECOMPLETING\uFF0C\u8BF4\u660E\u4EFB\u52A1\u5DF2\u7ECF\u6267\u884C\u5B8C\uFF0C\u8FD9\u65F6\u4E3B\u7EBF\u7A0B\u53EA\u9700\u901A\u8FC7yield\u65B9\u6CD5\u8BA9\u51FAcpu\u8D44\u6E90\uFF0C\u7B49\u5F85state\u53D8\u6210NORMAL\uFF1B</p></li><li><p>\u901A\u8FC7WaitNode\u7C7B\u5C01\u88C5\u5F53\u524D\u7EBF\u7A0B\uFF0C\u5E76\u901A\u8FC7UNSAFE\u6DFB\u52A0\u5230waiters\u94FE\u8868\uFF1B</p></li><li><p>\u6700\u7EC8\u901A\u8FC7LockSupport\u7684park\u6216parkNanos\u6302\u8D77\u7EBF\u7A0B\uFF1B</p></li></ol><p>run\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">!=</span> <span class="token constant">NEW</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token constant">UNSAFE</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> runnerOffset<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> callable<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> state <span class="token operator">==</span> <span class="token constant">NEW</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> result<span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> ran<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ran <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                ran <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token function">setException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ran<span class="token punctuation">)</span>
                <span class="token function">set</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment">// runner must be non-null until state is settled to</span>
        <span class="token comment">// prevent concurrent calls to run()</span>
        runner <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// state must be re-read after nulling runner to prevent</span>
        <span class="token comment">// leaked interrupts</span>
        <span class="token keyword">int</span> s <span class="token operator">=</span> state<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;=</span> <span class="token constant">INTERRUPTING</span><span class="token punctuation">)</span>
            <span class="token function">handlePossibleCancellationInterrupt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>FutureTask.run\u65B9\u6CD5\u662F\u5728\u7EBF\u7A0B\u6C60\u4E2D\u88AB\u6267\u884C\u7684\uFF0C\u800C\u975E\u4E3B\u7EBF\u7A0B</p><ol><li>\u901A\u8FC7\u6267\u884CCallable\u4EFB\u52A1\u7684call\u65B9\u6CD5\uFF1B</li><li>\u5982\u679Ccall\u6267\u884C\u6210\u529F\uFF0C\u5219\u901A\u8FC7set\u65B9\u6CD5\u4FDD\u5B58\u7ED3\u679C\uFF1B</li><li>\u5982\u679Ccall\u6267\u884C\u6709\u5F02\u5E38\uFF0C\u5219\u901A\u8FC7setException\u4FDD\u5B58\u5F02\u5E38\uFF1B</li></ol><h3 id="_4-5-\u4EFB\u52A1\u7684\u5173\u95ED" tabindex="-1"><a class="header-anchor" href="#_4-5-\u4EFB\u52A1\u7684\u5173\u95ED" aria-hidden="true">#</a> 4.5 \u4EFB\u52A1\u7684\u5173\u95ED</h3><h4 id="_4-5-1-shutdown" tabindex="-1"><a class="header-anchor" href="#_4-5-1-shutdown" aria-hidden="true">#</a> 4.5.1 shutdown</h4><p>shutdown\u65B9\u6CD5\u4F1A\u5C06\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001\u8BBE\u7F6E\u4E3ASHUTDOWN,\u7EBF\u7A0B\u6C60\u8FDB\u5165\u8FD9\u4E2A\u72B6\u6001\u540E,\u5C31\u62D2\u7EDD\u518D\u63A5\u53D7\u4EFB\u52A1,\u7136\u540E\u4F1A\u5C06\u5269\u4F59\u7684\u4EFB\u52A1\u5168\u90E8\u6267\u884C\u5B8C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u5173\u95ED\u7EBF\u7A0B</span>
        <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BBE\u7F6E\u7EBF\u7A0B\u6C60\u72B6\u6001</span>
        <span class="token function">advanceRunState</span><span class="token punctuation">(</span><span class="token constant">SHUTDOWN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5C1D\u8BD5\u4E2D\u65ADworker</span>
        <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u9884\u7559\u65B9\u6CD5,\u7559\u7ED9\u5B50\u7C7B\u5B9E\u73B0</span>
        <span class="token function">onShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hook for ScheduledThreadPoolExecutor</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> onlyOne<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u904D\u5386\u6240\u6709\u7684worker</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Worker</span> w <span class="token operator">:</span> workers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
            <span class="token comment">//\u5148\u5C1D\u8BD5\u8C03\u7528w.tryLock(),\u5982\u679C\u83B7\u53D6\u5230\u9501,\u5C31\u8BF4\u660Eworker\u662F\u7A7A\u95F2\u7684,\u5C31\u53EF\u4EE5\u76F4\u63A5\u4E2D\u65AD\u5B83</span>
            <span class="token comment">//\u6CE8\u610F\u7684\u662F,worker\u81EA\u5DF1\u672C\u8EAB\u5B9E\u73B0\u4E86AQS\u540C\u6B65\u6846\u67B6,\u7136\u540E\u5B9E\u73B0\u7684\u7C7B\u4F3C\u9501\u7684\u529F\u80FD</span>
            <span class="token comment">//\u5B83\u5B9E\u73B0\u7684\u9501\u662F\u4E0D\u53EF\u91CD\u5165\u7684,\u6240\u4EE5\u5982\u679Cworker\u5728\u6267\u884C\u4EFB\u52A1\u7684\u65F6\u5019,\u4F1A\u5148\u8FDB\u884C\u52A0\u9501,\u8FD9\u91CCtryLock()\u5C31\u4F1A\u8FD4\u56DEfalse</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> w<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    t<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyOne<span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-2-shutdownnow" tabindex="-1"><a class="header-anchor" href="#_4-5-2-shutdownnow" aria-hidden="true">#</a> 4.5.2 shutdownNow</h4><p>shutdownNow\u505A\u7684\u6BD4\u8F83\u7EDD\uFF0C\u5B83\u5148\u5C06\u7EBF\u7A0B\u6C60\u72B6\u6001\u8BBE\u7F6E\u4E3ASTOP\uFF0C\u7136\u540E\u62D2\u7EDD\u6240\u6709\u63D0\u4EA4\u7684\u4EFB\u52A1\u3002\u6700\u540E\u4E2D\u65AD\u6240\u6709\u6B63\u5728\u8FD0\u884C\u4E2D\u7684worker,\u7136\u540E\u6E05\u7A7A\u4EFB\u52A1\u961F\u5217\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> tasks<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u68C0\u6D4B\u6743\u9650</span>
        <span class="token function">advanceRunState</span><span class="token punctuation">(</span><span class="token constant">STOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u4E2D\u65AD\u6240\u6709\u7684worker</span>
        <span class="token function">interruptWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6E05\u7A7A\u4EFB\u52A1\u961F\u5217</span>
        tasks <span class="token operator">=</span> <span class="token function">drainQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> tasks<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u904D\u5386\u6240\u6709worker\uFF0C\u7136\u540E\u8C03\u7528\u4E2D\u65AD\u65B9\u6CD5</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Worker</span> w <span class="token operator">:</span> workers<span class="token punctuation">)</span>
            w<span class="token punctuation">.</span><span class="token function">interruptIfStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u66F4\u6DF1\u5165\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_5-\u66F4\u6DF1\u5165\u7406\u89E3" aria-hidden="true">#</a> 5. \u66F4\u6DF1\u5165\u7406\u89E3</h2><h3 id="_5-1-\u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u6C60\u4E0D\u5141\u8BB8\u4F7F\u7528executors\u53BB\u521B\u5EFA-\u63A8\u8350\u65B9\u5F0F\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#_5-1-\u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u6C60\u4E0D\u5141\u8BB8\u4F7F\u7528executors\u53BB\u521B\u5EFA-\u63A8\u8350\u65B9\u5F0F\u662F\u4EC0\u4E48" aria-hidden="true">#</a> 5.1 \u4E3A\u4EC0\u4E48\u7EBF\u7A0B\u6C60\u4E0D\u5141\u8BB8\u4F7F\u7528Executors\u53BB\u521B\u5EFA? \u63A8\u8350\u65B9\u5F0F\u662F\u4EC0\u4E48?</h3><p>\u7EBF\u7A0B\u6C60\u4E0D\u5141\u8BB8\u4F7F\u7528Executors\u53BB\u521B\u5EFA\uFF0C\u800C\u662F\u901A\u8FC7ThreadPoolExecutor\u7684\u65B9\u5F0F\uFF0C\u8FD9\u6837\u7684\u5904\u7406\u65B9\u5F0F\u8BA9\u5199\u7684\u540C\u5B66\u66F4\u52A0\u660E\u786E\u7EBF\u7A0B\u6C60\u7684\u8FD0\u884C\u89C4\u5219\uFF0C\u89C4\u907F\u8D44\u6E90\u8017\u5C3D\u7684\u98CE\u9669\u3002 \u8BF4\u660E\uFF1AExecutors\u5404\u4E2A\u65B9\u6CD5\u7684\u5F0A\u7AEF\uFF1A</p><ul><li>newFixedThreadPool\u548CnewSingleThreadExecutor: \u2003\u4E3B\u8981\u95EE\u9898\u662F\u5806\u79EF\u7684\u8BF7\u6C42\u5904\u7406\u961F\u5217\u53EF\u80FD\u4F1A\u8017\u8D39\u975E\u5E38\u5927\u7684\u5185\u5B58\uFF0C\u751A\u81F3OOM\u3002</li><li>newCachedThreadPool\u548CnewScheduledThreadPool: \u2003\u4E3B\u8981\u95EE\u9898\u662F\u7EBF\u7A0B\u6570\u6700\u5927\u6570\u662FInteger.MAX_VALUE\uFF0C\u53EF\u80FD\u4F1A\u521B\u5EFA\u6570\u91CF\u975E\u5E38\u591A\u7684\u7EBF\u7A0B\uFF0C\u751A\u81F3OOM\u3002</li></ul><h4 id="_5-1-1-\u63A8\u8350\u65B9\u5F0F-1" tabindex="-1"><a class="header-anchor" href="#_5-1-1-\u63A8\u8350\u65B9\u5F0F-1" aria-hidden="true">#</a> 5.1.1 \u63A8\u8350\u65B9\u5F0F 1</h4><p>\u9996\u5148\u5F15\u5165\uFF1Acommons-lang3\u5305</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ScheduledExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">BasicThreadFactory<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">namingPattern</span><span class="token punctuation">(</span><span class="token string">&quot;example-schedule-pool-%d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">daemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-2-\u63A8\u8350\u65B9\u5F0F-2" tabindex="-1"><a class="header-anchor" href="#_5-1-2-\u63A8\u8350\u65B9\u5F0F-2" aria-hidden="true">#</a> 5.1.2 \u63A8\u8350\u65B9\u5F0F 2</h4><p>\u9996\u5148\u5F15\u5165\uFF1Acom.google.guava\u5305</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ThreadFactory</span> namedThreadFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNameFormat</span><span class="token punctuation">(</span><span class="token string">&quot;demo-pool-%d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Common Thread Pool</span>
<span class="token class-name">ExecutorService</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> namedThreadFactory<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// excute</span>
pool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">//gracefully shutdown</span>
pool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-3-\u63A8\u8350\u65B9\u5F0F-3-spring-threadpooltaskexecutor" tabindex="-1"><a class="header-anchor" href="#_5-1-3-\u63A8\u8350\u65B9\u5F0F-3-spring-threadpooltaskexecutor" aria-hidden="true">#</a> 5.1.3 \u63A8\u8350\u65B9\u5F0F 3:spring ThreadPoolTaskExecutor</h4><p>spring\u914D\u7F6E\u7EBF\u7A0B\u6C60\u65B9\u5F0F\uFF1A\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u5DE5\u5382bean\u9700\u8981\u5B9E\u73B0ThreadFactory\uFF0C\u53EF\u53C2\u8003\u8BE5\u63A5\u53E3\u7684\u5176\u5B83\u9ED8\u8BA4\u5B9E\u73B0\u7C7B\uFF0C\u4F7F\u7528\u65B9\u5F0F\u76F4\u63A5\u6CE8\u5165bean\u8C03\u7528execute(Runnable task)\u65B9\u6CD5\u5373\u53EF</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userThreadPool<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>corePoolSize<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>maxPoolSize<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>queueCapacity<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>threadFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> threadFactory</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rejectedExecutionHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">local</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rejectedExecutionHandler<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
    
    //in code
    userThreadPool.execute(thread);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u76F4\u63A5\u914D\u7F6E\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u7EBF\u7A0B\u6C60\u914D\u7F6E
 **/</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolConfig</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u6C60\u5927\u5C0F</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6700\u5927\u53EF\u521B\u5EFA\u7684\u7EBF\u7A0B\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>

    <span class="token comment">// \u961F\u5217\u6700\u5927\u957F\u5EA6</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7EBF\u7A0B\u6C60\u7EF4\u62A4\u7EBF\u7A0B\u6240\u5141\u8BB8\u7684\u7A7A\u95F2\u65F6\u95F4</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;threadPoolTaskExecutor&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolTaskExecutor</span> <span class="token function">threadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EBF\u7A0B\u6C60\u5BF9\u62D2\u7EDD\u4EFB\u52A1(\u65E0\u7EBF\u7A0B\u53EF\u7528)\u7684\u5904\u7406\u7B56\u7565</span>
        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u65F6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>threadPoolTaskExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
threadPoolTaskExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
threadPoolTaskExecutor<span class="token punctuation">.</span><span class="token function">submitListenable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-\u914D\u7F6E\u7EBF\u7A0B\u6C60\u9700\u8981\u8003\u8651\u56E0\u7D20" tabindex="-1"><a class="header-anchor" href="#_5-2-\u914D\u7F6E\u7EBF\u7A0B\u6C60\u9700\u8981\u8003\u8651\u56E0\u7D20" aria-hidden="true">#</a> 5.2 \u914D\u7F6E\u7EBF\u7A0B\u6C60\u9700\u8981\u8003\u8651\u56E0\u7D20</h3><p>\u4ECE\u4EFB\u52A1\u7684\u4F18\u5148\u7EA7\uFF0C\u4EFB\u52A1\u7684\u6267\u884C\u65F6\u95F4\u957F\u77ED\uFF0C\u4EFB\u52A1\u7684\u6027\u8D28(CPU\u5BC6\u96C6/ IO\u5BC6\u96C6)\uFF0C\u4EFB\u52A1\u7684\u4F9D\u8D56\u5173\u7CFB\u8FD9\u56DB\u4E2A\u89D2\u5EA6\u6765\u5206\u6790\u3002\u5E76\u4E14\u8FD1\u53EF\u80FD\u5730\u4F7F\u7528\u6709\u754C\u7684\u5DE5\u4F5C\u961F\u5217\u3002</p><p>\u6027\u8D28\u4E0D\u540C\u7684\u4EFB\u52A1\u53EF\u7528\u4F7F\u7528\u4E0D\u540C\u89C4\u6A21\u7684\u7EBF\u7A0B\u6C60\u5206\u5F00\u5904\u7406:</p><ul><li>CPU\u5BC6\u96C6\u578B: \u5C3D\u53EF\u80FD\u5C11\u7684\u7EBF\u7A0B\uFF0CNcpu+1</li><li>IO\u5BC6\u96C6\u578B: \u5C3D\u53EF\u80FD\u591A\u7684\u7EBF\u7A0B, Ncpu*2\uFF0C\u6BD4\u5982\u6570\u636E\u5E93\u8FDE\u63A5\u6C60</li><li>\u6DF7\u5408\u578B: CPU\u5BC6\u96C6\u578B\u7684\u4EFB\u52A1\u4E0EIO\u5BC6\u96C6\u578B\u4EFB\u52A1\u7684\u6267\u884C\u65F6\u95F4\u5DEE\u522B\u8F83\u5C0F\uFF0C\u62C6\u5206\u4E3A\u4E24\u4E2A\u7EBF\u7A0B\u6C60\uFF1B\u5426\u5219\u6CA1\u6709\u5FC5\u8981\u62C6\u5206\u3002</li></ul><h3 id="_5-3-\u76D1\u63A7\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#_5-3-\u76D1\u63A7\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001" aria-hidden="true">#</a> 5.3 \u76D1\u63A7\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001</h3><p>\u53EF\u4EE5\u4F7F\u7528ThreadPoolExecutor\u4EE5\u4E0B\u65B9\u6CD5:</p><ul><li><code>getTaskCount()</code> Returns the approximate total number of tasks that have ever been scheduled for execution.</li><li><code>getCompletedTaskCount()</code> Returns the approximate total number of tasks that have completed execution. \u8FD4\u56DE\u7ED3\u679C\u5C11\u4E8EgetTaskCount()\u3002</li><li><code>getLargestPoolSize()</code> Returns the largest number of threads that have ever simultaneously been in the pool. \u8FD4\u56DE\u7ED3\u679C\u5C0F\u4E8E\u7B49\u4E8EmaximumPoolSize</li><li><code>getPoolSize()</code> Returns the current number of threads in the pool.</li><li><code>getActiveCount()</code> Returns the approximate number of threads that are actively executing tasks.</li></ul><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,113),h={href:"https://pdai.tech/md/java/thread/java-thread-x-juc-executor-ThreadPoolExecutor.html",target:"_blank",rel:"noopener noreferrer"};function w(y,f){const e=l("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[r,k,n("li",null,[n("p",null,[d,s(" \u7528\u6765\u4FDD\u5B58\u7B49\u5F85\u88AB\u6267\u884C\u7684\u4EFB\u52A1\u7684\u963B\u585E\u961F\u5217. \u5728JDK\u4E2D\u63D0\u4F9B\u4E86\u5982\u4E0B\u963B\u585E\u961F\u5217: \u5177\u4F53\u53EF\u4EE5\u53C2\u8003"),n("a",v,[s("BlockQueue\u8BE6\u89E3"),t(e)])]),m])]),b,n("p",null,[n("a",h,[s("JUC\u7EBF\u7A0B\u6C60: ThreadPoolExecutor\u8BE6\u89E3"),t(e)])])])}const x=p(i,[["render",w],["__file","java-thread-x-juc-executor-ThreadPoolExecutor.html.vue"]]);export{x as default};
