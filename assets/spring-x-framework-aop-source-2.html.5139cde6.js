import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as e,a as n,b as p,d as o,f as c,r as i}from"./app.31f1281d.js";const l={},u=c(`<h1 id="spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Baop\u4EE3\u7406\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Baop\u4EE3\u7406\u7684\u521B\u5EFA" aria-hidden="true">#</a> Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BAOP\u4EE3\u7406\u7684\u521B\u5EFA</h1><blockquote><p>\u4E0A\u6587\u6211\u4EEC\u4ECB\u7ECD\u4E86Spring AOP\u539F\u7406\u89E3\u6790\u7684\u5207\u9762\u5B9E\u73B0\u8FC7\u7A0B(\u5C06\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5\u6839\u636E\u4F7F\u7528\u7684\u6CE8\u89E3\u751F\u6210\u5BF9\u5E94Advice\uFF0C\u5E76\u5C06Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F\u4E00\u5E76\u5C01\u88C5\u5230Advisor)\u3002\u672C\u6587\u5728\u6B64\u57FA\u7840\u4E0A\u7EE7\u7EED\u4ECB\u7ECD\uFF0C\u4EE3\u7406\uFF08cglib\u4EE3\u7406\u548CJDK\u4EE3\u7406\uFF09\u7684\u521B\u5EFA\u8FC7\u7A0B\u3002</p></blockquote><h2 id="_1-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165" aria-hidden="true">#</a> 1. \u5F15\u5165</h2><blockquote><p>\u524D\u6587\u4E3B\u8981Spring AOP\u539F\u7406\u89E3\u6790\u7684\u5207\u9762\u5B9E\u73B0\u8FC7\u7A0B(\u52A0\u8F7D\u914D\u7F6E\uFF0C\u5C06\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5\u6839\u636E\u4F7F\u7528\u7684\u6CE8\u89E3\u751F\u6210\u5BF9\u5E94Advice\uFF0C\u5E76\u5C06Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F\u4E00\u5E76\u5C01\u88C5\u5230Advisor)\u3002</p></blockquote><p>\u540C\u65F6\u6211\u4EEC\u4E5F\u603B\u7ED3\u4E86Spring AOP\u521D\u59CB\u5316\u7684\u8FC7\u7A0B\uFF0C\u5177\u4F53\u5982\u4E0B\uFF1A</p><ol><li><p>\u7531<strong>IOC Bean\u52A0\u8F7D</strong>\u65B9\u6CD5\u6808\u4E2D\u627E\u5230parseCustomElement\u65B9\u6CD5\uFF0C\u627E\u5230parse <code>aop:aspectj-autoproxy</code>\u7684handler(org.springframework.aop.config.AopNamespaceHandler)</p></li><li><p><strong>AopNamespaceHandler</strong>\u6CE8\u518C\u4E86<code>&lt;aop:aspectj-autoproxy/&gt;</code>\u7684\u89E3\u6790\u7C7B\u662FAspectJAutoProxyBeanDefinitionParser</p></li><li><p><strong>AspectJAutoProxyBeanDefinitionParser</strong>\u7684parse \u65B9\u6CD5 \u901A\u8FC7AspectJAwareAdvisorAutoProxyCreator\u7C7B\u53BB\u521B\u5EFA</p></li><li><p>AspectJAwareAdvisorAutoProxyCreator</p><p>\u5B9E\u73B0\u4E86\u4E24\u7C7B\u63A5\u53E3\uFF0CBeanFactoryAware\u548CBeanPostProcessor\uFF1B\u6839\u636EBean\u751F\u547D\u5468\u671F\u65B9\u6CD5\u627E\u5230\u4E24\u4E2A\u6838\u5FC3\u65B9\u6CD5\uFF1ApostProcessBeforeInstantiation\u548CpostProcessAfterInitialization</p><ol><li><strong>postProcessBeforeInstantiation</strong>\uFF1A\u4E3B\u8981\u662F\u5904\u7406\u4F7F\u7528\u4E86@Aspect\u6CE8\u89E3\u7684\u5207\u9762\u7C7B\uFF0C\u7136\u540E\u5C06\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5\u6839\u636E\u4F7F\u7528\u7684\u6CE8\u89E3\u751F\u6210\u5BF9\u5E94Advice\uFF0C\u5E76\u5C06Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F\u4E00\u5E76\u5C01\u88C5\u5230Advisor</li><li><strong>postProcessAfterInitialization</strong>\uFF1A\u4E3B\u8981\u8D1F\u8D23\u5C06Advisor\u6CE8\u5165\u5230\u5408\u9002\u7684\u4F4D\u7F6E\uFF0C\u521B\u5EFA\u4EE3\u7406\uFF08cglib\u6216jdk)\uFF0C\u4E3A\u540E\u9762\u7ED9\u4EE3\u7406\u8FDB\u884C\u589E\u5F3A\u5B9E\u73B0\u505A\u51C6\u5907\u3002</li></ol></li></ol><blockquote><p>\u672C\u6587\u63A5\u7740\u4ECB\u7ECDpostProcessAfterInitialization\u7684\u65B9\u6CD5\uFF0C\u5373Spring AOP\u7684\u4EE3\u7406\uFF08cglib\u6216jdk)\u7684\u521B\u5EFA\u8FC7\u7A0B\u3002</p></blockquote><h2 id="_2-\u4EE3\u7406\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_2-\u4EE3\u7406\u7684\u521B\u5EFA" aria-hidden="true">#</a> 2. \u4EE3\u7406\u7684\u521B\u5EFA</h2><p>\u521B\u5EFA\u4EE3\u7406\u7684\u65B9\u6CD5\u662FpostProcessAfterInitialization\uFF1A\u5982\u679Cbean\u88AB\u5B50\u7C7B\u6807\u8BC6\u4E3A\u4EE3\u7406\uFF0C\u5219\u4F7F\u7528\u914D\u7F6E\u7684\u62E6\u622A\u5668\u521B\u5EFA\u4E00\u4E2A\u4EE3\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Create a proxy with the configured interceptors if the bean is
  * identified as one to proxy by the subclass.
  * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getAdvicesAndAdvisorsForBean</span></span>
  */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> cacheKey <span class="token operator">=</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u662F\u63D0\u524D\u66B4\u9732\u7684\u4EE3\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyProxyReferences<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span> <span class="token operator">!=</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>wrapIfNecessary\u65B9\u6CD5\u4E3B\u8981\u7528\u4E8E\u5224\u65AD\u662F\u5426\u9700\u8981\u521B\u5EFA\u4EE3\u7406\uFF0C\u5982\u679CBean\u80FD\u591F\u83B7\u53D6\u5230advisor\u624D\u9700\u8981\u521B\u5EFA\u4EE3\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Wrap the given bean if necessary, i.e. if it is eligible for being proxied.
  * <span class="token keyword">@param</span> <span class="token parameter">bean</span> the raw bean instance
  * <span class="token keyword">@param</span> <span class="token parameter">beanName</span> the name of the bean
  * <span class="token keyword">@param</span> <span class="token parameter">cacheKey</span> the cache key for metadata access
  * <span class="token keyword">@return</span> a proxy wrapping the bean, or the raw bean instance as-is
  */</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">Object</span> cacheKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5982\u679Cbean\u662F\u901A\u8FC7TargetSource\u63A5\u53E3\u83B7\u53D6</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>beanName <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>targetSourcedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679Cbean\u662F\u5207\u9762\u7C7B</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679C\u662Faop\u57FA\u7840\u7C7B\uFF1F\u662F\u5426\u8DF3\u8FC7\uFF1F</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">shouldSkip</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

  <span class="token comment">// \u91CD\u70B9\uFF1A\u83B7\u53D6\u6240\u6709advisor\uFF0C\u5982\u679C\u6CA1\u6709\u83B7\u53D6\u5230\uFF0C\u90A3\u8BF4\u660E\u4E0D\u8981\u8FDB\u884C\u589E\u5F3A\uFF0C\u4E5F\u5C31\u4E0D\u9700\u8981\u4EE3\u7406\u4E86\u3002</span>
  <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specificInterceptors <span class="token operator">=</span> <span class="token function">getAdvicesAndAdvisorsForBean</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>specificInterceptors <span class="token operator">!=</span> <span class="token constant">DO_NOT_PROXY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u70B9\uFF1A\u521B\u5EFA\u4EE3\u7406</span>
    <span class="token class-name">Object</span> proxy <span class="token operator">=</span> <span class="token function">createProxy</span><span class="token punctuation">(</span>
        bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> specificInterceptors<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SingletonTargetSource</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>proxyTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> proxy<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-\u83B7\u53D6\u6240\u6709\u7684advisor" tabindex="-1"><a class="header-anchor" href="#_2-1-\u83B7\u53D6\u6240\u6709\u7684advisor" aria-hidden="true">#</a> 2.1 \u83B7\u53D6\u6240\u6709\u7684Advisor</h3><p>\u6211\u4EEC\u770B\u4E0B\u83B7\u53D6\u6240\u6709advisor\u7684\u65B9\u6CD5getAdvicesAndAdvisorsForBean</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAdvicesAndAdvisorsForBean</span><span class="token punctuation">(</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">TargetSource</span> targetSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> advisors <span class="token operator">=</span> <span class="token function">findEligibleAdvisors</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>advisors<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">DO_NOT_PROXY</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> advisors<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7findEligibleAdvisors\u65B9\u6CD5\u83B7\u53D6advisor\uFF0C \u5982\u679C\u83B7\u53D6\u4E0D\u5230\u8FD4\u56DEDO_NOT_PROXY\uFF08\u4E0D\u9700\u8981\u521B\u5EFA\u4EE3\u7406\uFF09\uFF0CfindEligibleAdvisors\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Find all eligible Advisors for auto-proxying this class.
  * <span class="token keyword">@param</span> <span class="token parameter">beanClass</span> the clazz to find advisors for
  * <span class="token keyword">@param</span> <span class="token parameter">beanName</span> the name of the currently proxied bean
  * <span class="token keyword">@return</span> the empty List, not <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>,
  * if there are no pointcuts or interceptors
  * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">findCandidateAdvisors</span></span>
  * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">sortAdvisors</span></span>
  * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">extendAdvisors</span></span>
  */</span>
<span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">findEligibleAdvisors</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u548C\u4E0A\u6587\u4E00\u6837\uFF0C\u83B7\u53D6\u6240\u6709\u5207\u9762\u7C7B\u7684\u5207\u9762\u65B9\u6CD5\u751F\u6210Advisor</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> candidateAdvisors <span class="token operator">=</span> <span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u627E\u5230\u8FD9\u4E9BAdvisor\u4E2D\u80FD\u591F\u5E94\u7528\u4E8EbeanClass\u7684Advisor</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> eligibleAdvisors <span class="token operator">=</span> <span class="token function">findAdvisorsThatCanApply</span><span class="token punctuation">(</span>candidateAdvisors<span class="token punctuation">,</span> beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679C\u9700\u8981\uFF0C\u4EA4\u7ED9\u5B50\u7C7B\u62D3\u5C55</span>
  <span class="token function">extendAdvisors</span><span class="token punctuation">(</span>eligibleAdvisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5BF9Advisor\u6392\u5E8F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>eligibleAdvisors<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    eligibleAdvisors <span class="token operator">=</span> <span class="token function">sortAdvisors</span><span class="token punctuation">(</span>eligibleAdvisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> eligibleAdvisors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u6240\u6709\u5207\u9762\u7C7B\u7684\u5207\u9762\u65B9\u6CD5\u751F\u6210Advisor</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Find all candidate Advisors to use in auto-proxying.
  * <span class="token keyword">@return</span> the List of candidate Advisors
  */</span>
<span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisorRetrievalHelper <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;No BeanFactoryAdvisorRetrievalHelper available&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advisorRetrievalHelper<span class="token punctuation">.</span><span class="token function">findAdvisorBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u627E\u5230\u8FD9\u4E9BAdvisor\u4E2D\u80FD\u591F\u5E94\u7528\u4E8EbeanClass\u7684Advisor</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Determine the sublist of the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">candidateAdvisors</span></span><span class="token punctuation">}</span> list
  * that is applicable to the given class.
  * <span class="token keyword">@param</span> <span class="token parameter">candidateAdvisors</span> the Advisors to evaluate
  * <span class="token keyword">@param</span> <span class="token parameter">clazz</span> the target class
  * <span class="token keyword">@return</span> sublist of Advisors that can apply to an object of the given class
  * (may be the incoming List as-is)
  */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAdvisorsThatCanApply</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> candidateAdvisors<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>candidateAdvisors<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> candidateAdvisors<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> eligibleAdvisors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Advisor</span> candidate <span class="token operator">:</span> candidateAdvisors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u901A\u8FC7Introduction\u5B9E\u73B0\u7684advice</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">IntroductionAdvisor</span> <span class="token operator">&amp;&amp;</span> <span class="token function">canApply</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      eligibleAdvisors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">boolean</span> hasIntroductions <span class="token operator">=</span> <span class="token operator">!</span>eligibleAdvisors<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Advisor</span> candidate <span class="token operator">:</span> candidateAdvisors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>candidate <span class="token keyword">instanceof</span> <span class="token class-name">IntroductionAdvisor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// already processed</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u662F\u5426\u80FD\u591F\u5E94\u7528\u4E8Eclazz\u7684Advice</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canApply</span><span class="token punctuation">(</span>candidate<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> hasIntroductions<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      eligibleAdvisors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>candidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> eligibleAdvisors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u521B\u5EFA\u4EE3\u7406\u7684\u5165\u53E3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-\u521B\u5EFA\u4EE3\u7406\u7684\u5165\u53E3\u65B9\u6CD5" aria-hidden="true">#</a> 2.2 \u521B\u5EFA\u4EE3\u7406\u7684\u5165\u53E3\u65B9\u6CD5</h3><p>\u83B7\u53D6\u6240\u6709advisor\u540E\uFF0C\u5982\u679C\u6709advisor\uFF0C\u5219\u8BF4\u660E\u9700\u8981\u589E\u5F3A\uFF0C\u5373\u9700\u8981\u521B\u5EFA\u4EE3\u7406\uFF0C\u521B\u5EFA\u4EE3\u7406\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Create an AOP proxy for the given bean.
  * <span class="token keyword">@param</span> <span class="token parameter">beanClass</span> the class of the bean
  * <span class="token keyword">@param</span> <span class="token parameter">beanName</span> the name of the bean
  * <span class="token keyword">@param</span> <span class="token parameter">specificInterceptors</span> the set of interceptors that is
  * specific to this bean (may be empty, but not null)
  * <span class="token keyword">@param</span> <span class="token parameter">targetSource</span> the TargetSource for the proxy,
  * already pre-configured to access the bean
  * <span class="token keyword">@return</span> the AOP proxy for the bean
  * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">buildAdvisors</span></span>
  */</span>
<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">createProxy</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span> beanName<span class="token punctuation">,</span>
    <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specificInterceptors<span class="token punctuation">,</span> <span class="token class-name">TargetSource</span> targetSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token keyword">instanceof</span> <span class="token class-name">ConfigurableListableBeanFactory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AutoProxyUtils</span><span class="token punctuation">.</span><span class="token function">exposeTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">ProxyFactory</span> proxyFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProxyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  proxyFactory<span class="token punctuation">.</span><span class="token function">copyFrom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>proxyFactory<span class="token punctuation">.</span><span class="token function">isProxyTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Explicit handling of JDK proxy targets (for introduction advice scenarios)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">isProxyClass</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Must allow for introductions; can&#39;t just set interfaces to the proxy&#39;s interfaces only.</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> ifc <span class="token operator">:</span> beanClass<span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        proxyFactory<span class="token punctuation">.</span><span class="token function">addInterface</span><span class="token punctuation">(</span>ifc<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// No proxyTargetClass flag enforced, let&#39;s apply our default checks...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldProxyTargetClass</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      proxyFactory<span class="token punctuation">.</span><span class="token function">setProxyTargetClass</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">evaluateProxyInterfaces</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> proxyFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Advisor</span><span class="token punctuation">[</span><span class="token punctuation">]</span> advisors <span class="token operator">=</span> <span class="token function">buildAdvisors</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> specificInterceptors<span class="token punctuation">)</span><span class="token punctuation">;</span>
  proxyFactory<span class="token punctuation">.</span><span class="token function">addAdvisors</span><span class="token punctuation">(</span>advisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
  proxyFactory<span class="token punctuation">.</span><span class="token function">setTargetSource</span><span class="token punctuation">(</span>targetSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">customizeProxyFactory</span><span class="token punctuation">(</span>proxyFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

  proxyFactory<span class="token punctuation">.</span><span class="token function">setFrozen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>freezeProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">advisorsPreFiltered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    proxyFactory<span class="token punctuation">.</span><span class="token function">setPreFiltered</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Use original ClassLoader if bean class not locally loaded in overriding class loader</span>
  <span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> <span class="token function">getProxyClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>classLoader <span class="token keyword">instanceof</span> <span class="token class-name">SmartClassLoader</span> <span class="token operator">&amp;&amp;</span> classLoader <span class="token operator">!=</span> beanClass<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    classLoader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SmartClassLoader</span><span class="token punctuation">)</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOriginalClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> proxyFactory<span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>proxyFactory.getProxy(classLoader)</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712214709488.png" alt="image-20220712214709488"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Create a new proxy according to the settings in this factory.
  * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Can be called repeatedly. Effect will vary if we&#39;ve added
  * or removed interfaces. Can add and remove interceptors.
  * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Uses the given class loader (if necessary for proxy creation).
  * <span class="token keyword">@param</span> <span class="token parameter">classLoader</span> the class loader to create the proxy with
  * (or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> for the low-level proxy facility&#39;s default)
  * <span class="token keyword">@return</span> the proxy object
  */</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createAopProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u4F9D\u636E\u6761\u4EF6\u521B\u5EFA\u4EE3\u7406-jdk\u6216cglib" tabindex="-1"><a class="header-anchor" href="#_2-3-\u4F9D\u636E\u6761\u4EF6\u521B\u5EFA\u4EE3\u7406-jdk\u6216cglib" aria-hidden="true">#</a> 2.3 \u4F9D\u636E\u6761\u4EF6\u521B\u5EFA\u4EE3\u7406(jdk\u6216cglib)</h3><p>DefaultAopProxyFactory.createAopProxy</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">AopProxy</span> <span class="token function">createAopProxy</span><span class="token punctuation">(</span><span class="token class-name">AdvisedSupport</span> config<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AopConfigException</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">NativeDetector</span><span class="token punctuation">.</span><span class="token function">inNativeImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isOptimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> config<span class="token punctuation">.</span><span class="token function">isProxyTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">hasNoUserSuppliedProxyInterfaces</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetClass <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">getTargetClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetClass <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AopConfigException</span><span class="token punctuation">(</span><span class="token string">&quot;TargetSource cannot determine target class: &quot;</span> <span class="token operator">+</span>
          <span class="token string">&quot;Either an interface or a target is required for proxy creation.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetClass<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">isProxyClass</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdkDynamicAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ObjenesisCglibAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JdkDynamicAopProxy</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51E0\u4E2A\u8981\u70B9</p><ul><li>config.isOptimize() \u662F\u901A\u8FC7optimize\u8BBE\u7F6E\uFF0C\u8868\u793A\u914D\u7F6E\u662F\u81EA\u5B9A\u4E49\u7684\uFF0C\u9ED8\u8BA4\u662Ffalse\uFF1B</li><li>config.isProxyTargetClass()\u662F\u901A\u8FC7<code>&lt;aop:config proxy-target-class=&quot;true&quot; /&gt;</code>\u6765\u914D\u7F6E\u7684\uFF0C\u8868\u793A\u4F18\u5148\u4F7F\u7528cglib\u4EE3\u7406\uFF0C\u9ED8\u8BA4\u662Ffalse\uFF1B</li><li>hasNoUserSuppliedProxyInterfaces(config) \u8868\u793A\u662F\u5426\u76EE\u6807\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3</li></ul><p>\u7531\u6B64\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\uFF1A</p><p>Spring\u9ED8\u8BA4\u5728\u76EE\u6807\u7C7B\u5B9E\u73B0\u63A5\u53E3\u65F6\u662F\u901A\u8FC7JDK\u4EE3\u7406\u5B9E\u73B0\u7684\uFF0C\u53EA\u6709\u975E\u63A5\u53E3\u7684\u662F\u901A\u8FC7Cglib\u4EE3\u7406\u5B9E\u73B0\u7684\u3002\u5F53\u8BBE\u7F6Eproxy-target-class\u4E3Atrue\u65F6\u5728\u76EE\u6807\u7C7B\u4E0D\u662F\u63A5\u53E3\u6216\u8005\u4EE3\u7406\u7C7B\u65F6\u4F18\u5148\u4F7F\u7528cglib\u4EE3\u7406\u5B9E\u73B0\u3002</p><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,35),r={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-2.html",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=i("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[n("a",r,[p("Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BAOP\u4EE3\u7406\u7684\u521B\u5EFA"),o(s)])])])}const y=a(l,[["render",k],["__file","spring-x-framework-aop-source-2.html.vue"]]);export{y as default};
