import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,a as n,b as s,d as e,f as c,r as l}from"./app.907196d8.js";const u={},i=c(`<blockquote><p>\u6D45\u8C08\u4EE5\u592A\u574A\u6E90\u7801\u5206\u6790\u4E4B\u533A\u5757\u548C\u4EA4\u6613\u5E7F\u64AD</p></blockquote><h2 id="protocolmanager\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#protocolmanager\u8BE6\u89E3" aria-hidden="true">#</a> ProtocolManager\u8BE6\u89E3</h2><p><code>ProtocolManager</code>\uFF0C\u4ECE\u5B57\u9762\u4E0A\u770B\u662F\u534F\u8BAE\u7BA1\u7406\u5668\uFF0C\u8D1F\u8D23\u7740<code>p2p</code>\u901A\u4FE1\u534F\u8BAE\u7684\u7BA1\u7406\u3002\u5B83\u8FDE\u63A5\u4E86<code>p2p</code>\u7684\u903B\u8F91\u5C42<code>peer</code>\u4E0E\u9876\u5C42<code>peer</code>\u4E4B\u95F4\u7684\u8C03\u7528\uFF0C\u4ECE\u9876\u5C42\u5C06\u534F\u8BAE\u4F20\u9012\u81F3\u903B\u8F91\u5C42\uFF0C\u518D\u4ECE\u903B\u8F91\u5C42\u5F97\u5230<code>message</code>\u4F20\u9012\u5230\u9876\u5C42\u3002</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gl9hs30wqfj30zw0rodox.jpg" alt="image-20201202142450663"></p><ol><li><code>fastSync</code>\u89C4\u5B9A\u4E86\u540C\u6B65\u7684\u6A21\u5F0F \uFF1B</li><li><code>acceptTxs</code>\u662F\u8282\u70B9\u662F\u5426\u63A5\u53D7\u4EA4\u6613\u7684\u9600\u95E8\uFF0C\u53EA\u6709\u5F53<code>pm.acceptTxs == 1</code>\u65F6\uFF0C\u8282\u70B9\u624D\u4F1A\u63A5\u53D7\u4EA4\u6613\u3002\u8FD9\u4E2A\u64CD\u4F5C\u53EA\u4F1A\u5728\u540C\u6B65\u7ED3\u675F\u540E\u518D\u5F00\u59CB\uFF0C\u5373\u540C\u6B65\u7684\u65F6\u5019\u8282\u70B9\u662F\u4E0D\u4F1A\u63A5\u53D7\u4EA4\u6613\u7684\uFF1B</li><li><code>SubProtocols</code>\u4E2D\u662F\u4EE5\u592A\u574A\u7684\u901A\u8BAF\u534F\u8BAE\uFF0C\u901A\u5E38\u53EA\u6709\u4E00\u4E2A\u503C\uFF0C\u5373<code>eth63</code>\u3002</li><li><code>downloader</code>\u662F\u4E00\u4E2A\u4E0B\u8F7D\u5668\uFF0C\u7528\u4E8E\u4E3B\u52A8\u4ECE\u8FDC\u7A0B\u8282\u70B9\u4E2D\u83B7\u53D6<code>hashes</code>\u548C<code>blocks</code>\u3002</li><li><code>fetcher</code>\u5219\u88AB\u52A8\u7684\u6536\u96C6\u7F51\u7EDC\u5176\u4ED6\u4EE5\u592A\u574A\u8282\u70B9\u53D1\u8FC7\u6765\u7684\u540C\u6B65\u901A\u77E5\uFF0C\u8FDB\u884C\u9A8C\u8BC1\uFF0C\u5E76\u505A\u51FA\u76F8\u5E94\u7684\u5904\u7406\u3002</li></ol><hr><p><code>ProtocolManager.Start()</code>\u542F\u52A8\u4E86\u56DB\u6761<code>go</code>\u7A0B\uFF0C\u5206\u522B\u662F\u4EA4\u6613\u8BA2\u9605\u5E7F\u64AD\u534F\u7A0B\uFF08<code>txBroadcastLoop</code>\uFF09\u3001\u6316\u77FF\u8BA2\u9605\u534F\u7A0B\uFF08<code>minedBroadcastLoop</code>\uFF09\u3001\u8282\u70B9\u5B9A\u671F\u540C\u6B65\u534F\u7A0B\uFF08<code>syncer</code>\uFF09\u548C\u4EA4\u6613\u540C\u6B65\u534F\u7A0B\uFF08txsyncLoop\uFF09</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gl9hyirjjaj31io0rck40.jpg" alt="image-20201202143101376"></p><ol><li><mark>txBroadcastLoop</mark>:\u5E7F\u64AD\u65B0\u51FA\u73B0\u7684\u4EA4\u6613\u5BF9\u8C61\u3002<code>txBroadcastLoop()</code>\u4F1A\u5728<code>txCh</code>\u901A\u9053\u7684\u6536\u7AEF\u6301\u7EED\u7B49\u5F85\uFF0C\u4E00\u65E6\u63A5\u6536\u5230\u6709\u5173\u65B0\u4EA4\u6613\u7684\u4E8B\u4EF6\uFF0C\u4F1A\u7ACB\u5373\u8C03\u7528<code>BroadcastTx()</code>\u51FD\u6570\u5E7F\u64AD\u7ED9\u90A3\u4E9B\u5C1A\u65E0\u8BE5\u4EA4\u6613\u5BF9\u8C61\u7684\u76F8\u90BB\u4E2A\u4F53\u3002</li><li><mark>minedBroadcastLoop</mark>:\u5E7F\u64AD\u65B0\u6316\u6398\u51FA\u7684\u533A\u5757\u3002<code>minedBroadcastLoop()</code>\u6301\u7EED\u7B49\u5F85\u672C\u8282\u70B9\u7684\u65B0\u6316\u6398\u51FA\u533A\u5757\u4E8B\u4EF6\uFF0C\u7136\u540E\u7ACB\u5373\u5E7F\u64AD\u7ED9\u9700\u8981\u7684\u76F8\u90BB\u4E2A\u4F53\u3002\u5F53\u4E0D\u518D\u8BA2\u9605\u65B0\u6316\u6398\u533A\u5757\u4E8B\u4EF6\u65F6\uFF0C\u8FD9\u4E2A\u51FD\u6570\u624D\u4F1A\u7ED3\u675F\u7B49\u5F85\u5E76\u8FD4\u56DE\u3002</li><li><mark>syncer</mark>:<strong>\u5B9A\u65F6\u7684\u548C\u7F51\u7EDC\u5176\u4ED6\u8282\u70B9\u540C\u6B65\uFF0C\u5E76\u5904\u7406\u7F51\u7EDC\u8282\u70B9\u7684\u76F8\u5173\u901A\u77E5</strong>\u3002\u5B9A\u65F6\u4E0E\u76F8\u90BB\u4E2A\u4F53\u8FDB\u884C\u533A\u5757\u5168\u94FE\u7684\u5F3A\u5236\u540C\u6B65\u3002syncer()\u9996\u5148\u542F\u52A8fetcher\u6210\u5458\uFF0C\u7136\u540E\u8FDB\u5165\u4E00\u4E2A\u65E0\u9650\u5FAA\u73AF\uFF0C\u6BCF\u6B21\u5FAA\u73AF\u4E2D\u90FD\u4F1A\u5411\u76F8\u90BBpeer\u5217\u8868\u4E2D\u201C\u6700\u4F18\u201D\u7684\u90A3\u4E2Apeer\u4F5C\u4E00\u6B21\u533A\u5757\u5168\u94FE\u540C\u6B65\u3002\u53D1\u8D77\u4E0A\u8FF0\u540C\u6B65\u7684\u7406\u7531\u5206\u4E24\u79CD\uFF1A\u5982\u679C\u6709\u65B0\u767B\u8BB0(\u52A0\u5165)\u7684\u76F8\u90BB\u4E2A\u4F53\uFF0C\u5219\u5728\u6574\u4E2Apeer\u5217\u8868\u6570\u76EE\u5927\u4E8E5\u65F6\uFF0C\u53D1\u8D77\u4E4B\uFF1B\u5982\u679C\u6CA1\u6709\u65B0peer\u5230\u8FBE\uFF0C\u5219\u4EE510s\u4E3A\u95F4\u9694\u5B9A\u65F6\u7684\u53D1\u8D77\u4E4B\u3002\u8FD9\u91CC\u6240\u8C13&quot;\u6700\u4F18&quot;\u6307\u7684\u662Fpeer\u4E2D\u6240\u7EF4\u62A4\u533A\u5757\u94FE\u7684TotalDifficulty(td)\u6700\u9AD8\uFF0C\u7531\u4E8ETd\u662F\u5168\u94FE\u4E2D\u4ECE\u521B\u4E16\u5757\u5230\u6700\u65B0\u5934\u5757\u7684Difficulty\u503C\u603B\u548C\uFF0C\u6240\u4EE5Td\u503C\u6700\u9AD8\u5C31\u610F\u5473\u7740\u5B83\u7684\u533A\u5757\u94FE\u662F\u6700\u65B0\u7684\uFF0C\u8DDF\u8FD9\u6837\u7684peer\u4F5C\u533A\u5757\u5168\u94FE\u540C\u6B65\uFF0C\u663E\u7136\u6539\u52A8\u91CF\u662F\u6700\u5C0F\u7684\uFF0C\u6B64\u5373&quot;\u6700\u4F18&quot;\u3002</li><li><mark>txsyncLoop</mark>\uFF1A<strong>\u628A\u65B0\u7684\u4EA4\u6613\u5747\u5300\u7684\u540C\u6B65\u7ED9\u7F51\u8DEF\u8282\u70B9</strong>\u3002</li></ol><hr><h2 id="\u5E7F\u64AD\u7684\u60C5\u5F62" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u64AD\u7684\u60C5\u5F62" aria-hidden="true">#</a> \u5E7F\u64AD\u7684\u60C5\u5F62</h2><ol><li><code>minedBroadcastLoop()</code>\u76D1\u542C\u5230\u65B0\u533A\u5757\u4E8B\u4EF6\u540E\uFF0C\u628A\u65B0\u533A\u5757\u548C\u533A\u5757<code>hash</code>\u5206\u522B\u5E7F\u64AD\u51FA\u53BB\uFF1B</li><li>\u4ECE\u8FDC\u7A0B\u8282\u70B9\u540C\u6B65\u5B8C\u6210\u540E\uFF0C\u5C06<code>CurrentBlock</code>\u5E7F\u64AD\u51FA\u53BB\uFF0C\u6B64\u65F6\u5E7F\u64AD\u7684\u662F\u533A\u5757<code>hash</code>\uFF1B</li><li><code>txBlockcastLoop()</code>\u76D1\u542C\u5230\u533A\u5757\u6C60\u7684\u65B0\u589E\u4EA4\u6613\u4E8B\u4EF6\u65F6\u4F1A\u5E7F\u64AD\u4EA4\u6613\uFF1B</li></ol><hr><h2 id="\u5E7F\u64AD\u533A\u5757\u53CA\u533A\u5757\u54C8\u5E0C" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u64AD\u533A\u5757\u53CA\u533A\u5757\u54C8\u5E0C" aria-hidden="true">#</a> \u5E7F\u64AD\u533A\u5757\u53CA\u533A\u5757\u54C8\u5E0C</h2><p>\u5E7F\u64AD\u533A\u5757\u7684\u5165\u53E3\u5728<code>pm.minedBroadcastLoop()</code>,\u8FDB\u5165\u5230<code>BroadcastBlock</code>,\u8FD9\u91CC\u7684\u53C2\u6570\u4E3A<code>bool</code>\u503C\uFF0C\u5982\u679C\u4F20\u5165\u7684\u4E3Atrue\uFF0C\u5219\u5C06\u533A\u5757block\u548C\u603B\u96BE\u5EA6td\u53D1\u9001\u7ED9\u4E00\u90E8\u5206\u8282\u70B9\uFF0C\u8282\u70B9\u6570\u4E3A\u6839\u53F7n\uFF1B\u5982\u679C\u4F20\u5165\u7684\u4E3Afalse\uFF0C\u5219\u5C06\u533A\u5757\u7684hash\u53D1\u9001\u7ED9\u6240\u6709\u7684\u8282\u70B9\u3002<strong>\u9700\u8981\u6CE8\u610F\u7684\u662F\u4E24\u4E2A\u5E7F\u64AD\u51FD\u6570\u90FD\u6267\u884C</strong>\u3002</p><p>\u8FDB\u5165\u5230<code>true</code>\u5206\u652F\uFF1A<strong>\u4EE3\u8868\u53EA\u4F20\u64AD\u533A\u5757\u7ED9\u4E00\u90E8\u5206\u8282\u70B9</strong></p><p>\u2460\uFF1A\u9996\u5148\u8BA1\u7B97\u4E00\u4E2A\u4E34\u65F6\u7684TD</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> parent <span class="token operator">:=</span> pm<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">GetBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> parent <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   td <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Difficulty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pm<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">GetTd</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u53D1\u9001\u5757\u5230peers\u7684\u5B50\u96C6</p><p>\u5BF9\u8282\u70B9\u6570\u8FDB\u884C\u5F00\u65B9\uFF0C16\u5F00\u65B9\u5F974\uFF0C\u7136\u540E\u53D6\u524D4\u4E2A\u8282\u70B9\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>transferLen := int(math.Sqrt(float64(len(peers))))
  if transferLen &lt; minBroadcastPeers {
   transferLen = minBroadcastPeers
  }
  if transferLen &gt; len(peers) {
   transferLen = len(peers)
  }
  transfer := peers[:transferLen]
  for _, peer := range transfer {
   peer.AsyncSendNewBlock(block, td) // \u5757\u4F20\u64AD
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u5B8C\u4E4B\u540E\u76F4\u63A5return\u51FA\u53BB\uFF0C\u518D\u6B21\u6267\u884C\u6B64\u51FD\u6570\uFF0C\u6B64\u65F6\u4E0D\u4F1A\u8D70ture\u5206\u652F\uFF0C\u76F4\u63A5\u5224\u65AD\u5224\u65AD\u672C\u5730\u662F\u5426\u6709\u533A\u5757\uFF0C\u5982\u679C\u6709\u5219\u53D1\u9001\u533A\u533A\u5757\u54C8\u5E0C\u7ED9\u5269\u4E0B\u7684\u8282\u70B9\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u4E0D\u505A\u53D1\u9001\u54C8\u5E0C\u7684\u64CD\u4F5C\u3002</p><blockquote><p>\u5982\u679C\u672C\u5730\u5B58\u5728\u8FD9\u4E2A\u8981\u5E7F\u64AD\u7684\u533A\u5757(\u5F88\u53EF\u80FD\u5C31\u662F\u51FA\u5757\u8282\u70B9\uFF0C\u6216\u8005\u63A5\u53D7\u5757\u7684\u8282\u70B9\u5DF2\u7ECF\u63D2\u5165\u5230\u533A\u5757\u94FE\u4E2D),\u90A3\u5C31\u8FD8\u8981\u50CF\u5176\u4ED6\u6CA1\u6709\u88AB\u5E7F\u64AD\u5230\u533A\u5757\u7684\u8282\u70B9\u53D1\u9001\u533A\u5757\u54C8\u5E0C\u3002</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gl1fp0u7e3j31bw0hkthh.jpg" alt="image-20201125150810051"></p><blockquote><p>\u5982\u679C\u672C\u5730\u4E0D\u5B58\u5728\u8FD9\u4E2A\u8981\u5E7F\u64AD\u7684\u533A\u5757\u54C8\u5E0C(\u5E94\u8BE5\u662F\u8FD8\u6CA1\u63A5\u6536\u5230\u533A\u5757\u6216\u8005\u533A\u5757\u54C8\u5E0C\u7684\u8282\u70B9)\uFF0C\u90A3\u5B83\u53EA\u8981\u5411\u5B83\u7684\u8282\u70B9\u5217\u8868\u91CC\u53D1\u9001\u533A\u5757\u5373\u53EF\u3002</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1gl1fwwxfh2j31bi0e4tfv.jpg" alt="image-20201125151546035"></p><hr><p>\u63A5\u4E0B\u6765\u5C31\u662F\u91CD\u70B9\u5206\u6790<code>AsyncSendNewBlock</code>\u548C<code>AsyncSendNewBlockHash</code>\u4E24\u4E2A\u51FD\u6570\u4E86\u3002</p><h3 id="asyncsendnewblock" tabindex="-1"><a class="header-anchor" href="#asyncsendnewblock" aria-hidden="true">#</a> AsyncSendNewBlock</h3><blockquote><p>\u53D1\u9001\u5757\u5230\u9700\u8981\u5E7F\u64AD\u7684\u8282\u70B9\u7684\u5E7F\u64AD\u961F\u5217\u4E2D</p></blockquote><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>select {
 case p.queuedProps &lt;- &amp;propEvent{block: block, td: td}:
  p.knownBlocks.Add(block.Hash())
  for p.knownBlocks.Cardinality() &gt;= maxKnownBlocks {
   p.knownBlocks.Pop()
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684<code>queuedProps</code>\u662F\u7528\u6765\u5B58\u653E\u8981\u5E7F\u64AD\u7684\u5757\u7684\u961F\u5217\uFF0C\u540C\u65F6\uFF0C\u8981\u628A\u5E7F\u64AD\u7684\u5757\u6807\u8BB0\u4E3A\u5DF2\u77E5\uFF0C\u8FD8\u4E0D\u80FD\u8D85\u8FC71024\uFF08<strong>maxKnownBlocks</strong>\uFF09\u4E2A\u3002\u8D85\u8FC7\u5C31\u4F1A\u5F39\u51FA\u961F\u5217\u7B2C\u4E00\u4E2A<code>propEvent()</code> \u3002\u63A5\u4E0B\u6765\u5C31\u662F\u5904\u7406\u961F\u5217\u4E2D\u7684\u5757\u4E86\u3002</p><p>\u5728<code>eth/peer.go</code>\u4E2D\uFF0C\u6709\u4E2A\u4E13\u95E8\u5904\u7406\u5E7F\u64AD\u7684\u5FAA\u73AF<code>brodcast</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>peer<span class="token punctuation">)</span> <span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">for</span> <span class="token punctuation">{</span>
  <span class="token keyword">select</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> txs <span class="token operator">:=</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>queuedTxs<span class="token punctuation">:</span>
   <span class="token keyword">if</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">SendTransactions</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
   <span class="token punctuation">}</span>
   p<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Broadcast transactions&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">case</span> prop <span class="token operator">:=</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>queuedProps<span class="token punctuation">:</span>
   <span class="token keyword">if</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">SendNewBlock</span><span class="token punctuation">(</span>prop<span class="token punctuation">.</span>block<span class="token punctuation">,</span> prop<span class="token punctuation">.</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
   <span class="token punctuation">}</span>
   p<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Propagated block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> prop<span class="token punctuation">.</span>block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> prop<span class="token punctuation">.</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;td&quot;</span><span class="token punctuation">,</span> prop<span class="token punctuation">.</span>td<span class="token punctuation">)</span>

  <span class="token keyword">case</span> block <span class="token operator">:=</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>queuedAnns<span class="token punctuation">:</span>
   <span class="token keyword">if</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">SendNewBlockHashes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>common<span class="token punctuation">.</span>Hash<span class="token punctuation">{</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint64</span><span class="token punctuation">{</span>block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
   <span class="token punctuation">}</span>
   p<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Announced block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">case</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>term<span class="token punctuation">:</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5E7F\u64AD\u65B0\u5757\u5230\u8FDC\u7A0B\u8282\u70B9</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>p<span class="token punctuation">.</span><span class="token function">SendNewBlock</span><span class="token punctuation">(</span>prop<span class="token punctuation">.</span>block<span class="token punctuation">,</span> prop<span class="token punctuation">.</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FDC\u7A0B\u8282\u70B9\u6536\u5230\u5757\u540E\u540C\u6837\u4E5F\u4F1A\u6807\u8BB0\u54C8\u5E0C\u5B58\u5165\u961F\u5217\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u8D85\u8FC7\u6700\u5927\uFF0C\u540C\u65F6\u53D1\u9001\u4E00\u4E2A<code>NewBlockMsg</code>\uFF0C<code>msgcode</code>\u4E3A<code>0x07</code>,\u540C\u65F6\u6570\u636E\u4F1A\u88ABRLP\u7F16\u7801\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>p<span class="token punctuation">.</span>knownBlocks<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token keyword">for</span> p<span class="token punctuation">.</span>knownBlocks<span class="token punctuation">.</span><span class="token function">Cardinality</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> maxKnownBlocks <span class="token punctuation">{</span>
  p<span class="token punctuation">.</span>knownBlocks<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> p2p<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>rw<span class="token punctuation">,</span> NewBlockMsg<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>block<span class="token punctuation">,</span> td<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Send</span><span class="token punctuation">(</span>w MsgWriter<span class="token punctuation">,</span> msgcode <span class="token builtin">uint64</span><span class="token punctuation">,</span> data <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
 size<span class="token punctuation">,</span> r<span class="token punctuation">,</span> err <span class="token operator">:=</span> rlp<span class="token punctuation">.</span><span class="token function">EncodeToReader</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> err
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> w<span class="token punctuation">.</span><span class="token function">WriteMsg</span><span class="token punctuation">(</span>Msg<span class="token punctuation">{</span>Code<span class="token punctuation">:</span> msgcode<span class="token punctuation">,</span> Size<span class="token punctuation">:</span> <span class="token function">uint32</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">,</span> Payload<span class="token punctuation">:</span> r<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u5E7F\u64AD\u533A\u5757\u7684\u8FC7\u7A0B\u7ED3\u675F\uFF0C\u4EA4\u7531\u8FDC\u7A0B\u8282\u70B9\u53BB\u5904\u7406<code>NewBlockMsg</code>\u6D88\u606F\u3002</p><hr><h3 id="asyncsendnewblockhash" tabindex="-1"><a class="header-anchor" href="#asyncsendnewblockhash" aria-hidden="true">#</a> AsyncSendNewBlockHash</h3><p>\u5E7F\u64AD\u54C8\u5E0C\u7684\u8FC7\u7A0B\u8DDF\u5E7F\u64AD\u533A\u5757\u7684\u8FC7\u7A0B\u975E\u5E38\u7684\u7C7B\u4F3C\uFF0C\u6700\u7EC8\u662F\u7531\u8FDC\u7A0B\u8282\u70B9\u53BB\u5904\u7406<code>NewBlockHashesMsg</code>\u6D88\u606F\u3002</p><p>\u5E7F\u64AD\u533A\u5757\u7684\u8FC7\u7A0B\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u4F1A\u76F4\u63A5\u8FDB\u5165\u4E0B\u4E00\u4E2A\u9636\u6BB5\uFF0C\u8C03\u7528<code>fetcher</code>\u6A21\u5757\u53BB\u540C\u6B65\u8FD9\u4E9B\u5E7F\u64AD\u7684\u533A\u5757\uFF0C\u63A5\u4E0B\u7684\u6587\u7AE0\u4F1A\u8BB2\u5230\u3002</p><hr><h2 id="\u5E7F\u64AD\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u64AD\u4EA4\u6613" aria-hidden="true">#</a> \u5E7F\u64AD\u4EA4\u6613</h2><p>\u5E7F\u64AD\u4EA4\u6613\u7684\u5165\u53E3\u5728<code>pm.txBroadcastLoop()</code>\uFF0C\u76F4\u63A5\u8FDB\u5165\u5230<code>pm.BroadcastTxs(event.Txs)</code>\uFF0C\u5927\u6982\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><p>\u2460\uFF1A\u5C06\u4EA4\u6613\u5E7F\u64AD\u7ED9\u4E00\u6279\u6CA1\u6709\u8FD9\u4E2A\u4EA4\u6613\u7684\u8282\u70B9</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> txs <span class="token punctuation">{</span>
  peers <span class="token operator">:=</span> pm<span class="token punctuation">.</span>peers<span class="token punctuation">.</span><span class="token function">PeersWithoutTx</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> peer <span class="token operator">:=</span> <span class="token keyword">range</span> peers <span class="token punctuation">{</span>
   txset<span class="token punctuation">[</span>peer<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>txset<span class="token punctuation">[</span>peer<span class="token punctuation">]</span><span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Broadcast transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;recipients&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>peers<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5F02\u6B65\u53D1\u9001\u4EA4\u6613\u7ED9\u8FD9\u4E9B\u8282\u70B9</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> peer<span class="token punctuation">,</span> txs <span class="token operator">:=</span> <span class="token keyword">range</span> txset <span class="token punctuation">{</span>
  peer<span class="token punctuation">.</span><span class="token function">AsyncSendTransactions</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u8FDB\u5165\u5230<code>AsyncSendTransactions</code>:</p><p>\u5C06\u6240\u6709\u4EA4\u6613\u6807\u8BB0\u4E3A\u5DF2\u77E5\u4EA4\u6613\uFF0C\u540C\u65F6\u8FD8\u8981\u4FDD\u8BC1\u6CA1\u6709\u8D85\u8FC7\u6700\u5927\u7684\u5DF2\u77E5\u4EA4\u6613\uFF0832768\u7B14\uFF09</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> p<span class="token punctuation">.</span>queuedTxs <span class="token operator">&lt;-</span> txs<span class="token punctuation">:</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> txs <span class="token punctuation">{</span>
   p<span class="token punctuation">.</span>knownTxs<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> p<span class="token punctuation">.</span>knownTxs<span class="token punctuation">.</span><span class="token function">Cardinality</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> maxKnownTxs <span class="token punctuation">{</span>
   p<span class="token punctuation">.</span>knownTxs<span class="token punctuation">.</span><span class="token function">Pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">case</span> txs <span class="token operator">:=</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>queuedTxs<span class="token punctuation">:</span>
   <span class="token keyword">if</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">SendTransactions</span><span class="token punctuation">(</span>txs<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>peer<span class="token punctuation">)</span> <span class="token function">SendTransactions</span><span class="token punctuation">(</span>txs types<span class="token punctuation">.</span>Transactions<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>
  <span class="token keyword">return</span> p2p<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>rw<span class="token punctuation">,</span> TxMsg<span class="token punctuation">,</span> txs<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u9001\u4EA4\u6613\u6700\u7EC8\u4F1A\u53D1\u9001\u4E00\u4E2A<code>TxMsg</code>\u6D88\u606F\uFF0C\u63A5\u6536\u5230\u8FD9\u4E2A\u6D88\u606F\u7684\u8282\u70B9\u4F1A\u901A\u8FC7<code>pm.txpool.AddRemotes(txs)</code>\u5904\u7406\u4EA4\u6613\u3002</p><hr><h2 id="\u6D88\u606F\u5904\u7406-handlemsg" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u5904\u7406-handlemsg" aria-hidden="true">#</a> \u6D88\u606F\u5904\u7406\uFF08handleMsg\uFF09</h2><p><code>handleMsg</code>\u4ECE\u5BF9\u65B9\u8FDE\u63A5\u4E2D\u8BFB\u53D6\u6D88\u606F\uFF0C\u6839\u636E\u6D88\u606F\u7801\u7684\u4E0D\u540C\u8FDB\u884C\u5904\u7406,\u4ECE\u800C\u5C06\u5E7F\u64AD\u548C\u540C\u6B65\u4E4B\u95F4\u6765\u56DE\u7684\u6D88\u606F\u8FDB\u884C\u5904\u7406\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>pm <span class="token operator">*</span>ProtocolManager<span class="token punctuation">)</span> <span class="token function">handleMsg</span><span class="token punctuation">(</span>p <span class="token operator">*</span>peer<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    msg<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span>rw<span class="token punctuation">.</span><span class="token function">ReadMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> msg<span class="token punctuation">.</span>Size <span class="token operator">&gt;</span> ProtocolMaxMsgSize <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">errResp</span><span class="token punctuation">(</span>ErrMsgTooLarge<span class="token punctuation">,</span> <span class="token string">&quot;%v &gt; %v&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>Size<span class="token punctuation">,</span> ProtocolMaxMsgSize<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> msg<span class="token punctuation">.</span><span class="token function">Discard</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">switch</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> StatusMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> GetBlockHeadersMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> BlockHeadersMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> GetBlockBodiesMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> BlockBodiesMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> p<span class="token punctuation">.</span>version <span class="token operator">&gt;=</span> eth63 <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> GetNodeDataMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> p<span class="token punctuation">.</span>version <span class="token operator">&gt;=</span> eth63 <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> NodeDataMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> p<span class="token punctuation">.</span>version <span class="token operator">&gt;=</span> eth63 <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> GetReceiptsMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> p<span class="token punctuation">.</span>version <span class="token operator">&gt;=</span> eth63 <span class="token operator">&amp;&amp;</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> ReceiptsMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> NewBlockHashesMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> NewBlockMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> TxMsg<span class="token punctuation">:</span> <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token function">errResp</span><span class="token punctuation">(</span>ErrInvalidMsgCode<span class="token punctuation">,</span> <span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>Code<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,63),r={href:"https://mindcarver.cn",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"< /> \u8D44\u6599\u66F4\u65B0",-1);function d(v,m){const a=l("ExternalLinkIcon");return t(),o("div",null,[i,n("blockquote",null,[n("p",null,[n("a",r,[s("https://mindcarver.cn"),e(a)]),s(" \u6700\u65B0\u53D1\u5E03")]),k])])}const h=p(u,[["render",d],["__file","5.Etheric_fang_source_analysis_of_block_and_radio.html.vue"]]);export{h as default};
