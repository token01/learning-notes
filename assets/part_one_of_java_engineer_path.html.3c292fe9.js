import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as o,f as h,a,b as l,d as e,e as r,r as d}from"./app.8eb55561.js";const s={},u=a("h1",{id:"java-工程师能力提升路径-一-从业余到专业",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#java-工程师能力提升路径-一-从业余到专业","aria-hidden":"true"},"#"),l(" Java 工程师能力提升路径（一）：从业余到专业")],-1),E=r('<ul><li><a href="#java-%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%83%BD%E5%8A%9B%E6%8F%90%E5%8D%87%E8%B7%AF%E5%BE%84%E4%B8%80%E4%BB%8E%E4%B8%9A%E4%BD%99%E5%88%B0%E4%B8%93%E4%B8%9A">Java 工程师能力提升路径（一）：从业余到专业</a></li><li><a href="#%E9%9B%B6%E5%89%8D%E8%A8%80">零、前言</a></li><li><a href="#%E4%B8%80%E4%BB%8E%E4%B8%9A%E4%BD%99%E5%88%B0%E8%81%8C%E4%B8%9A">一、从业余到职业</a><ul><li><a href="#11-%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF">1.1 基础技术</a><ul><li><a href="#111-%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83">1.1.1 编码规范</a></li><li><a href="#112-java-%E5%9F%BA%E7%A1%80">1.1.2 Java 基础</a></li><li><a href="#113-spring-%E6%A1%86%E6%9E%B6">1.1.3 Spring 框架</a></li><li><a href="#114-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80">1.1.4 数据库基础</a></li></ul></li><li><a href="#12-%E8%81%8C%E4%B8%9A%E5%BF%83%E6%80%81">1.2 职业心态</a></li><li><a href="#13-%E6%A0%B8%E5%BF%83%E9%80%9A%E7%94%A8%E8%83%BD%E5%8A%9B">1.3 核心通用能力</a><ul><li><a href="#131-%E4%B8%AA%E4%BA%BA%E6%89%A7%E8%A1%8C%E5%8A%9B">1.3.1 个人执行力</a></li><li><a href="#132-%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B">1.3.2 沟通能力</a></li><li><a href="#133-%E8%B4%A3%E4%BB%BB%E5%BF%83">1.3.3 责任心</a></li><li><a href="#134-%E4%B8%9A%E5%8A%A1%E8%83%BD%E5%8A%9B">1.3.4 业务能力</a></li><li><a href="#135-%E6%80%BB%E7%BB%93">1.3.5 总结</a></li></ul></li></ul></li><li><a href="#%E4%BA%8C%E4%BB%8E%E8%81%8C%E4%B8%9A%E5%88%B0%E4%B8%93%E4%B8%9A">二、从职业到专业</a><ul><li><a href="#21-%E4%B8%93%E4%B8%9A%E6%8A%80%E6%9C%AF%E4%B9%8B%E4%BA%86%E7%84%B6%E4%BA%8E%E8%83%B8">2.1 专业技术之了然于胸</a><ul><li><a href="#211-java-%E9%AB%98%E6%95%88%E7%BC%96%E7%A8%8B">2.1.1 Java 高效编程</a></li><li><a href="#212-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">2.1.2 设计模式</a></li><li><a href="#213-sql-%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1">2.1.3 SQL 程序设计</a></li><li><a href="#214-git-%E6%B5%81%E7%A8%8B%E8%A7%84%E8%8C%83">2.1.4 Git 流程规范</a></li><li><a href="#215-redis">2.1.5 Redis</a></li><li><a href="#216-%E5%B7%A5%E5%85%B7%E7%B1%BB">2.1.6 工具类</a></li><li><a href="#217-rpc">2.1.7 RPC</a></li><li><a href="#218-%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F">2.1.8 代码质量</a></li></ul></li><li><a href="#22-%E4%B8%93%E4%B8%9A%E6%8A%80%E6%9C%AF%E4%B9%8B%E9%A9%BE%E8%BD%BB%E5%B0%B1%E7%86%9F">2.2 专业技术之驾轻就熟</a><ul><li><a href="#221-javascript">2.2.1 Javascript</a></li><li><a href="#222-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">2.2.2 消息队列</a></li><li><a href="#223-linux">2.2.3 Linux</a></li><li><a href="#224-web-%E6%9C%8D%E5%8A%A1%E5%99%A8">2.2.4 Web 服务器</a></li><li><a href="#225-%E5%88%86%E5%B8%83%E5%BC%8F%E7%9B%B8%E5%85%B3">2.2.5 分布式相关</a></li><li><a href="#226-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">2.2.6 单元测试</a></li><li><a href="#227-docker">2.2.7 Docker</a></li><li><a href="#228-web-%E5%AE%89%E5%85%A8">2.2.8 Web 安全</a></li></ul></li><li><a href="#23-%E4%B8%93%E4%B8%9A%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%95%A5%E7%9F%A5%E4%B8%80%E4%BA%8C">2.3 专业技术之略知一二</a><ul><li><a href="#231-nosql">2.3.1 NoSQL</a></li><li><a href="#232-%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">2.3.2 搜索引擎</a></li><li><a href="#233-%E5%BA%8F%E5%88%97%E5%8C%96">2.3.3 序列化</a></li><li><a href="#234-%E5%88%86%E5%B8%83%E5%BC%8F%E5%B7%A5%E5%85%B7">2.3.4 分布式工具</a></li><li><a href="#235-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F">2.3.5 正则表达式</a></li></ul></li><li><a href="#24-%E5%85%B6%E4%BB%96%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%9B%AE">2.4 其他推荐书目</a></li><li><a href="#25-%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B">2.5 核心能力</a><ul><li><a href="#251-%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E8%83%BD%E5%8A%9B">2.5.1 解决问题的能力</a></li><li><a href="#252-%E5%AD%A6%E4%B9%A0%E8%83%BD%E5%8A%9B">2.5.2 学习能力</a></li><li><a href="#253-%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E8%83%BD%E5%8A%9B">2.5.3 信息获取能力</a></li></ul></li></ul></li><li><a href="#%E4%B8%89%E5%B0%BE%E5%A3%B0">三、尾声</a></li></ul>',1),c=r('<h1 id="零、前言" tabindex="-1"><a class="header-anchor" href="#零、前言" aria-hidden="true">#</a> 零、前言</h1><p>为梳理 Java 工程师所需具备的技能，特编写该文档，为了更具有针对性，标题中含有 Java 一词，但实际内容中也包含许多非 Java 部分。要成为 Java 领域中的专家，不仅要求精通 Java，还需要掌握其他技术以及许多软技能，如：沟通能力、学习能力、业务能力等，该文也会略有涉及。</p><p>本文为能力提升系列第一篇《从业余到专业》，后续计划编写第二篇《从专业到专家》，本文所指的从业余到专业可以对应为实习生到中高级工程师的能力级别。</p><h1 id="一、从业余到职业" tabindex="-1"><a class="header-anchor" href="#一、从业余到职业" aria-hidden="true">#</a> 一、从业余到职业</h1><p>每一个参加工作的人，都应当具备职业精神，那么对于 Java 工程师而言，在进入职场以后，我们需要改变自己许多业余的编码习惯和工作习惯，首先做到从业余到职业的转变。</p><p>这个部分包含需要掌握的基础技术、需要具备的职业心态以及在职场需要具备的核心能力。</p><h2 id="_1-1-基础技术" tabindex="-1"><a class="header-anchor" href="#_1-1-基础技术" aria-hidden="true">#</a> 1.1 基础技术</h2><p>要成为一个职业的 Java 工程师，数据结构、算法、计算机网络、计算机原理等基础知识必不可少，这里暂不讨论，更多的是从工作中直接接触的应用层面着眼。</p><p>在业余到职业的转变过程中，以下的应用层技术需要系统性掌握并熟练使用。</p><h3 id="_1-1-1-编码规范" tabindex="-1"><a class="header-anchor" href="#_1-1-1-编码规范" aria-hidden="true">#</a> 1.1.1 编码规范</h3><p>编写产品代码不同于编写业余项目，在一个在高度协作的环境下进行编码，必须有一定的规范来提升协作间的效率。编码规范的重要性不言而喻，不重视编码规范是一种业余的行为，长期不重视编码规范则对自己的职业生涯具有相当的破坏性，最终可能走向「从业余到失业」。</p><p>一般采用阿里开源的 Java 编码规范，在这里面有较为细致的规范，每一位 Java 工程师都应当细读。这套规范也有许多未涵盖的内容，对于未提及的部分，应当多查询资料，查找最佳实践方案，多记录，最终完善自己的规范体系。</p><p>结论：按照编码规范进行编码，将编码规范融入自身知识体系。</p><h3 id="_1-1-2-java-基础" tabindex="-1"><a class="header-anchor" href="#_1-1-2-java-基础" aria-hidden="true">#</a> 1.1.2 Java 基础</h3><p>从事 Java 开发相关工作，必然需要具备坚实的 Java 基础，对于许多研发人员，可能由于种种原因这一知识体系并不系统，那么需要针对以下内容进行系统化学习。</p><ul><li>基本数据类型 <ul><li>熟悉常用集合、字典、枚举等类型的使用</li><li>理解装箱与拆箱</li><li>泛型的使用</li></ul></li><li>OOP <ul><li>深刻理解封装继承多态、高内聚低耦合的思想。</li></ul></li><li>多线程编程</li><li>IO 处理</li><li>理解异常处理机制</li><li>JVM 运行原理 <ul><li>垃圾回收机制</li></ul></li><li>反射</li><li>JDBC</li></ul><p>推荐阅读：</p>',17),p={href:"https://book.douban.com/subject/2130190/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://book.douban.com/subject/3146174/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/Snailclimb/JavaGuide",target:"_blank",rel:"noopener noreferrer"},b=r('<p>《Java 编程思想》可检验自身 Java 基础的掌握程度，这本书对于初学者具有一定的难度，但对于将 Java 开发作为职业的人来说，这属于基础知识。</p><h3 id="_1-1-3-spring-框架" tabindex="-1"><a class="header-anchor" href="#_1-1-3-spring-框架" aria-hidden="true">#</a> 1.1.3 Spring 框架</h3><p>Spring 框架已替代 J2EE 成为 Java 服务端开发事实上的标准，优秀的 Spring 基础必不可少，在这个阶段，主要需要熟悉以下内容。</p><ul><li>Spring IoC 容器 <ul><li>装配 Bean</li></ul></li><li>Spring AOP</li><li>Spring MVC <ul><li>视图引擎</li><li>REST API</li></ul></li><li>Spring 应用程序生命周期</li><li>Spring Security</li><li>Spring 集成数据访问 <ul><li>JDBC 模板</li><li>Redis</li><li>MyBatis</li><li>Hibernate</li><li>JPA</li></ul></li><li>数据缓存</li><li>Spring Boot</li></ul><p>推荐阅读：</p>',5),f={href:"https://book.douban.com/subject/26767354/",target:"_blank",rel:"noopener noreferrer"},A=r('<h3 id="_1-1-4-数据库基础" tabindex="-1"><a class="header-anchor" href="#_1-1-4-数据库基础" aria-hidden="true">#</a> 1.1.4 数据库基础</h3><p>在服务端开发领域，说数据库技能所占的比重为 50% 也不为过，尤其是在传统项目中，在大型项目中由于所用的技术越来越多，这一比重会有所下降。那么在工作中，要掌握哪些数据库技能才不会显得业余，以主流的 MySQL 为例，请看下面所列举的一些技能点。</p><ul><li>数据库基础 <ul><li>数据类型</li><li>数据库设计范式</li></ul></li><li>数据库核心功能 <ul><li>表、视图</li><li>存储过程</li><li>触发器</li><li>游标</li><li>函数</li><li>事件调度器</li></ul></li><li>查询优化 <ul><li>复杂查询</li><li>索引优化</li></ul></li><li>事务处理 <ul><li>事务隔离级别</li><li>嵌套事务</li></ul></li></ul><p>推荐阅读：</p>',4),g={href:"https://book.douban.com/subject/24250054/",target:"_blank",rel:"noopener noreferrer"},x=a("p",null,"扩展阅读：",-1),v={href:"https://book.douban.com/subject/23008813/",target:"_blank",rel:"noopener noreferrer"},k=r('<p>熟练掌握以上技能即可从事基础的 Java 开发工作，除此之外，要想达到职业的标准，心态上也需要有适当地转变。</p><h2 id="_1-2-职业心态" tabindex="-1"><a class="header-anchor" href="#_1-2-职业心态" aria-hidden="true">#</a> 1.2 职业心态</h2><p>所谓心态的转变，并不仅仅适用于刚入行的新人，而是需要在完成这一转变之后，在整个职业生涯中一以贯之。</p><ul><li>主动的心态 <ul><li>职场和学校不同，在职场中需要强大的自我驱动力和积极的心态去面对工作。</li></ul></li><li>务实的心态 <ul><li>从小事做起，把小任务做到极致也是实力的表现。</li></ul></li><li>成长的心态 <ul><li>不管是硬实力、软技能，永远有学不完的东西，始终以谦虚的态度督促自身不断成长。</li></ul></li><li>竞争的心态 <ul><li>持续不断提升自身的竞争力，避免被淘汰。</li></ul></li><li>共赢的心态 <ul><li>竞争与共赢并不冲突，只有共赢，团队才能走的更远，个人才会有更大的发展。</li></ul></li></ul><h2 id="_1-3-核心通用能力" tabindex="-1"><a class="header-anchor" href="#_1-3-核心通用能力" aria-hidden="true">#</a> 1.3 核心通用能力</h2><p>Java 工程师的核心能力除了技术、编码、逻辑等之外，还需要掌握许多能力，应当从这众多的能力中分清楚优先级，提取出核心并将其提升。</p><p>以下列举的是「从业余到职业」所需关注的核心能力。</p><h3 id="_1-3-1-个人执行力" tabindex="-1"><a class="header-anchor" href="#_1-3-1-个人执行力" aria-hidden="true">#</a> 1.3.1 个人执行力</h3><p>业余与职业最大的一个区别之一在于工作必须付诸行动，必须不断向前推进并最终实现目标。 对于个人执行力，是指把上级的命令和想法变成行动，把行动变成结果，从而保质保量地完成任务。</p><h3 id="_1-3-2-沟通能力" tabindex="-1"><a class="header-anchor" href="#_1-3-2-沟通能力" aria-hidden="true">#</a> 1.3.2 沟通能力</h3><p>不要将沟通能力理解成狭义上的表达能力，而要从广义上运用沟通能力，包括但不限于清晰准确地表达意见、持续向领导反馈信息、保持信息透明、与团队成员达成共识等。</p><p>出现缺乏沟通交流的情况时个人容易被团队所忽略，被忽略意味着个人价值认可度的降低。</p><h3 id="_1-3-3-责任心" tabindex="-1"><a class="header-anchor" href="#_1-3-3-责任心" aria-hidden="true">#</a> 1.3.3 责任心</h3><p>能力越大，责任越大，反过来说，工作责任心越强，个人的能力就越能体现，不论工作大小，始终保持高度负责的态度，必然会获得领导的赏识。</p><p>责任心该如何体现？ 一个项目中的开发人员总是处于流动状态，当我们参与一个项目的时候，也许只是负责其中的一小部分，但是将整个项目都纳入自己的责任范围才是正确的心态，这样往往能使自己脱颖而出。</p><h3 id="_1-3-4-业务能力" tabindex="-1"><a class="header-anchor" href="#_1-3-4-业务能力" aria-hidden="true">#</a> 1.3.4 业务能力</h3><p>刚参加工作的新人往往对技术报有较大的热情，这个时候也不能忽视业务能力，技术最终是为业务服务，熟练的业务能力可以提升自身的价值。</p><p>积极地用技术中的系统性思维去解决业务上的问题，有效地提高业务各个环节的效率，最终实现技术驱动业务的发展，为企业创造更大的价值。</p><p>避免闭门造车、与业务脱节、不懂用户等现象，提升业务能力的同时也更能帮助自己提升产品思维，以便更好地达成开发出好产品的目标。</p><h3 id="_1-3-5-总结" tabindex="-1"><a class="header-anchor" href="#_1-3-5-总结" aria-hidden="true">#</a> 1.3.5 总结</h3><p>在这里强调以上几点核心通用能力，主要是由于研发人员普遍更关注技术，但要把工作做好不能仅依靠提升技术能力，高效地执行工作、持续不断地沟通、树立正确的责任心态度、加强业务能力，这些同样非常重要，在这些能力里面都有一个共性，那就是我们作为组织里面的一份子，应该关注大图景：<strong>持续观察周围发生的事情，而不只是自己在做的事情，不要做温水里的青蛙</strong>。</p><h1 id="二、从职业到专业" tabindex="-1"><a class="header-anchor" href="#二、从职业到专业" aria-hidden="true">#</a> 二、从职业到专业</h1><p>业余到职业的转变是第一步，工作中必须不断设定更高的目标、持续提升自己，为了更得心应手地将工作做好，我们还需朝更专业的方向发展。在这个阶段需要掌握更多工作中常用的技术，我将这部分归为三类，第一类是需要精通或熟练掌握的，第二类是需要能够上手应用但现阶段还不要求精通的，第三类是需要略知一二能够知其用途、在相应场景下能派上用场的，体现个人价值的核心能力也不再局限于通用能力，而是包含更多该岗位所特需的能力。</p><p>注意，从职业到专业需要一个漫长的过程，这部分包含的内容也较多。</p><h2 id="_2-1-专业技术之了然于胸" tabindex="-1"><a class="header-anchor" href="#_2-1-专业技术之了然于胸" aria-hidden="true">#</a> 2.1 专业技术之了然于胸</h2><h3 id="_2-1-1-java-高效编程" tabindex="-1"><a class="header-anchor" href="#_2-1-1-java-高效编程" aria-hidden="true">#</a> 2.1.1 Java 高效编程</h3><p>这部分的技术点与 Java 基础有重叠，但要求对 Java 语言有更深入的掌握，并使用更高效的编程方法。</p><p>推荐阅读：</p>',28),m=a("li",null,"《Effective Java》",-1),J={href:"https://book.douban.com/subject/26772632/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://book.douban.com/subject/25828043/",target:"_blank",rel:"noopener noreferrer"},C=a("h3",{id:"_2-1-2-设计模式",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-1-2-设计模式","aria-hidden":"true"},"#"),l(" 2.1.2 设计模式")],-1),S=a("p",null,"在编码过程中反复解决的一些问题被归纳为设计模式，它是在技术交流中的重要组成部分，不会设计模式必然称不上专业的工程师。",-1),F=a("p",null,"推荐阅读：",-1),D=a("ul",null,[a("li",null,"《Head First 设计模式》"),a("li",null,"《设计模式：可复用面向对象软件的基础》")],-1),L=a("p",null,"相关开源项目推荐：",-1),w={href:"https://github.com/iluwatar/java-design-patterns",target:"_blank",rel:"noopener noreferrer"},y=a("p",null,"除了阅读这些书籍之外，每一种设计模式最好都自己实现一遍以加深理解。",-1),N=a("h3",{id:"_2-1-3-sql-程序设计",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-1-3-sql-程序设计","aria-hidden":"true"},"#"),l(" 2.1.3 SQL 程序设计")],-1),R=a("p",null,"推荐阅读：",-1),P={href:"https://book.douban.com/subject/3012601/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://book.douban.com/subject/26436525/",target:"_blank",rel:"noopener noreferrer"},q=a("h3",{id:"_2-1-4-git-流程规范",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-1-4-git-流程规范","aria-hidden":"true"},"#"),l(" 2.1.4 Git 流程规范")],-1),G=a("p",null,"推荐阅读：",-1),I={href:"https://github.com/justjavac/free-programming-books-zh_CN#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"},V={href:"http://www.ruanyifeng.com/blog/2012/07/git.html",target:"_blank",rel:"noopener noreferrer"},W=a("h3",{id:"_2-1-5-redis",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-1-5-redis","aria-hidden":"true"},"#"),l(" 2.1.5 Redis")],-1),M=a("p",null,"推荐阅读：",-1),O={href:"https://redisbook.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"},T=r('<h3 id="_2-1-6-工具类" tabindex="-1"><a class="header-anchor" href="#_2-1-6-工具类" aria-hidden="true">#</a> 2.1.6 工具类</h3><ul><li>IDEA <ul><li>熟悉快捷键</li><li>探索插件市场，使用工具提升效率。</li><li>熟练掌握重构工具。</li></ul></li><li>maven</li></ul><h3 id="_2-1-7-rpc" tabindex="-1"><a class="header-anchor" href="#_2-1-7-rpc" aria-hidden="true">#</a> 2.1.7 RPC</h3><p>至少掌握以下一种常见 RPC 方式。</p><ul><li>REST</li><li>Dubbo</li><li>grpc</li><li>Web Service</li></ul><p>推荐阅读：</p><ul><li>《Netty 实战》</li><li>《计算机网络：自顶向下方法》</li></ul><h3 id="_2-1-8-代码质量" tabindex="-1"><a class="header-anchor" href="#_2-1-8-代码质量" aria-hidden="true">#</a> 2.1.8 代码质量</h3><p>推荐阅读：</p><ul><li>《代码整洁之道》</li><li>《编写整洁代码的艺术》</li><li>《重构》</li></ul><h2 id="_2-2-专业技术之驾轻就熟" tabindex="-1"><a class="header-anchor" href="#_2-2-专业技术之驾轻就熟" aria-hidden="true">#</a> 2.2 专业技术之驾轻就熟</h2><h3 id="_2-2-1-javascript" tabindex="-1"><a class="header-anchor" href="#_2-2-1-javascript" aria-hidden="true">#</a> 2.2.1 Javascript</h3><p>后端开发过程中，难免也会有一些前端编码工作，有一定的 js 编码能力可以起到事半功倍的效果。</p><h3 id="_2-2-2-消息队列" tabindex="-1"><a class="header-anchor" href="#_2-2-2-消息队列" aria-hidden="true">#</a> 2.2.2 消息队列</h3><ul><li>rabbitmq</li><li>kafka</li></ul><h3 id="_2-2-3-linux" tabindex="-1"><a class="header-anchor" href="#_2-2-3-linux" aria-hidden="true">#</a> 2.2.3 Linux</h3><p>熟悉 Linux 常用命令。</p><p>推荐阅读：</p><ul><li>《鸟哥的 Linux 私房菜》</li><li>《Linux Shell 脚本攻略》</li></ul><h3 id="_2-2-4-web-服务器" tabindex="-1"><a class="header-anchor" href="#_2-2-4-web-服务器" aria-hidden="true">#</a> 2.2.4 Web 服务器</h3><p>熟悉常用 Web 服务器的使用。</p><ul><li>nginx</li><li>tomcat</li></ul><h3 id="_2-2-5-分布式相关" tabindex="-1"><a class="header-anchor" href="#_2-2-5-分布式相关" aria-hidden="true">#</a> 2.2.5 分布式相关</h3><ul><li>数据库主从</li><li>Redis <ul><li>主从</li><li>集群</li></ul></li><li>Spring Cloud</li></ul><h3 id="_2-2-6-单元测试" tabindex="-1"><a class="header-anchor" href="#_2-2-6-单元测试" aria-hidden="true">#</a> 2.2.6 单元测试</h3><p>推荐阅读：</p><ul><li>《单元测试之道 Java 版》</li></ul><h3 id="_2-2-7-docker" tabindex="-1"><a class="header-anchor" href="#_2-2-7-docker" aria-hidden="true">#</a> 2.2.7 Docker</h3><p>推荐阅读：</p>',29),H={href:"https://yeasy.gitbook.io/docker_practice/",target:"_blank",rel:"noopener noreferrer"},z=r('<h3 id="_2-2-8-web-安全" tabindex="-1"><a class="header-anchor" href="#_2-2-8-web-安全" aria-hidden="true">#</a> 2.2.8 Web 安全</h3><p>常见攻击方式的防御。</p><ul><li>xss</li><li>sqli</li><li>csrf</li><li>url 重定向攻击</li></ul><p>推荐阅读：</p><ul><li>《白帽子讲 Web 安全》</li></ul><h2 id="_2-3-专业技术之略知一二" tabindex="-1"><a class="header-anchor" href="#_2-3-专业技术之略知一二" aria-hidden="true">#</a> 2.3 专业技术之略知一二</h2><h3 id="_2-3-1-nosql" tabindex="-1"><a class="header-anchor" href="#_2-3-1-nosql" aria-hidden="true">#</a> 2.3.1 NoSQL</h3><ul><li>mongodb</li></ul><h3 id="_2-3-2-搜索引擎" tabindex="-1"><a class="header-anchor" href="#_2-3-2-搜索引擎" aria-hidden="true">#</a> 2.3.2 搜索引擎</h3><ul><li>lucene</li><li>ElasticSearch</li></ul><h3 id="_2-3-3-序列化" tabindex="-1"><a class="header-anchor" href="#_2-3-3-序列化" aria-hidden="true">#</a> 2.3.3 序列化</h3><ul><li>Protobuf</li><li>Protostuff</li><li>Hessian</li><li>Bson</li></ul><h3 id="_2-3-4-分布式工具" tabindex="-1"><a class="header-anchor" href="#_2-3-4-分布式工具" aria-hidden="true">#</a> 2.3.4 分布式工具</h3><ul><li>分布式锁</li><li>ELK</li><li>Zookeeper</li><li>分布式事务</li></ul><h3 id="_2-3-5-正则表达式" tabindex="-1"><a class="header-anchor" href="#_2-3-5-正则表达式" aria-hidden="true">#</a> 2.3.5 正则表达式</h3><p>推荐阅读：</p><ul><li>《精通正则表达式》</li></ul><h2 id="_2-4-其他推荐书目" tabindex="-1"><a class="header-anchor" href="#_2-4-其他推荐书目" aria-hidden="true">#</a> 2.4 其他推荐书目</h2><ul><li>《程序员修炼之道：从小工到专家》</li><li>《代码大全》</li></ul><h2 id="_2-5-核心能力" tabindex="-1"><a class="header-anchor" href="#_2-5-核心能力" aria-hidden="true">#</a> 2.5 核心能力</h2><h3 id="_2-5-1-解决问题的能力" tabindex="-1"><a class="header-anchor" href="#_2-5-1-解决问题的能力" aria-hidden="true">#</a> 2.5.1 解决问题的能力</h3><p>解决问题的能力被排在第一位，因为这是最能体现工作价值的一个能力，从某一层面来讲，老板雇佣员工都是为了解决某一问题。</p><p>在解决问题之前先避免成为问题的引发者，避免成为 bug 生产专家，程序员不同于其他工种的一个地方在于——糟糕的程序员可能给企业带来负价值，所以在提升解决问题的能力之前要先确保自己不会成为问题，这个过程也需要自身在逻辑能力、工作严谨性、技术能力等多方面进行提升。</p><p>解决问题包含几个阶段：</p><ul><li>发现问题 <ul><li>不局限于个人工作领域，全盘看待整个团队。足够多的眼睛，就可以让所有问题浮现——linus。</li></ul></li><li>分析问题 <ul><li>许多时候一些技术问题会让人摸不着头脑，有一套<strong>分析问题的理论体系</strong>是很重要的，<strong>当问题出现时，首先收集数据，让数据支撑自己对问题的原因提出假设，然后验证假设是否成立，若不成立则重复这一步骤</strong>。对于可能原因的初步判断、如何高效率地进行分析，这些则需要通过不断的学习和经验积累来进行支撑。</li></ul></li><li>解决问题 <ul><li>解决问题时对准解决方法，而不是人。</li><li>解决问题时真正理解出问题的代码。</li></ul></li><li>问题记录 <ul><li>记录问题并进行复盘，防止此类问题再次发生，积累知识库。</li></ul></li></ul><p>在解决了具体的问题之后，我们不能仅局限于此，还需要多帮助团队成员解决问题，这是更能体现专业能力的地方。</p><h3 id="_2-5-2-学习能力" tabindex="-1"><a class="header-anchor" href="#_2-5-2-学习能力" aria-hidden="true">#</a> 2.5.2 学习能力</h3><p>学习能力对于技术岗位极其重要，一方面需要技术积累以支撑工作，另一方面工作中也会碰到推陈出新的技术，这些迫使我们在工作中需要不断学习，因此也重点强调该能力。</p><p>好的学习能力有以下几个要素：</p><ul><li>自驱力 <ul><li>对新知识、新技能具有强烈的渴求；积极利用多种途径为自己创造学习机会。</li></ul></li><li>好奇心 <ul><li>好奇心是工程师应具备的特质，它能够驱使你不断深入地学习。</li></ul></li><li>认真 <ul><li>学习方法上不存在银弹，认真阅读、认真记笔记、认真写读后感，这些最朴素的方式就是好的学习方法。</li></ul></li><li>动态规划 <ul><li>动态调整学习步伐。</li></ul></li><li>联想 <ul><li>将相关的技术串联在一起，帮助理解与记忆，加深思想。</li></ul></li></ul><h3 id="_2-5-3-信息获取能力" tabindex="-1"><a class="header-anchor" href="#_2-5-3-信息获取能力" aria-hidden="true">#</a> 2.5.3 信息获取能力</h3><p>IT 行业构建于信息论之上，程序员应当更善于获取信息，在工作中也需要无时不刻地利用互联网查取资料，这是非常容易被忽视的一个重要能力。不同的程序员获取信息的能力和渠道都是不同的，可以在以下方面进行提升。</p><ul><li>做信息的捕食者而不是被喂养者。</li><li>使用 Google ，充分利用全世界的信息。</li><li>提升英文水平。</li><li>学会利用各种信息工具。</li><li>编写爬虫抓取信息。</li></ul><h1 id="三、尾声" tabindex="-1"><a class="header-anchor" href="#三、尾声" aria-hidden="true">#</a> 三、尾声</h1><p>作为一个 Java 后端工程师，需要学习的东西非常多，即使成长为一个专业的 Java 工程师，后面的路也还很长，本文所定义的「专业」是指接近高级工程师的能力，在下篇将继续讲解从专业到高级再到专家所需具备的技能。</p>',35);function K(Z,U){const i=d("ExternalLinkIcon");return t(),o("div",null,[u,h(" TOC "),E,h(" /TOC "),c,a("ul",null,[a("li",null,[l("《Java 编程思想》"),a("a",p,[l("https://book.douban.com/subject/2130190/"),e(i)]),l(" 。")]),a("li",null,[l("《Java 核心技术》"),a("a",_,[l("https://book.douban.com/subject/3146174/"),e(i)]),l(" 。")]),a("li",null,[l("Java Guide 开源项目 "),a("a",B,[l("https://github.com/Snailclimb/JavaGuide"),e(i)]),l(" 。")])]),b,a("ul",null,[a("li",null,[l("《Spring 实战》"),a("a",f,[l("https://book.douban.com/subject/26767354/"),e(i)]),l(" 。")])]),A,a("ul",null,[a("li",null,[l("《SQL 必知必会》"),a("a",g,[l("https://book.douban.com/subject/24250054/"),e(i)]),l(" 。")])]),x,a("ul",null,[a("li",null,[l("《高性能 MySQL》"),a("a",v,[l("https://book.douban.com/subject/23008813/"),e(i)]),l(" 。")])]),k,a("ul",null,[m,a("li",null,[l("《Java 8 实战》 "),a("a",J,[l("https://book.douban.com/subject/26772632/"),e(i)])]),a("li",null,[l("《Java 性能优化权威指南》 "),a("a",j,[l("https://book.douban.com/subject/25828043/"),e(i)])])]),C,S,F,D,L,a("ul",null,[a("li",null,[a("a",w,[l("https://github.com/iluwatar/java-design-patterns"),e(i)])])]),y,N,R,a("ul",null,[a("li",null,[l("《SQL 语言艺术》"),a("a",P,[l("https://book.douban.com/subject/3012601/"),e(i)])]),a("li",null,[l("《MySQL技术内幕（第5版）》"),a("a",Q,[l("https://book.douban.com/subject/26436525/"),e(i)])])]),q,G,a("ul",null,[a("li",null,[a("a",I,[l("https://github.com/justjavac/free-programming-books-zh_CN#版本控制"),e(i)])]),a("li",null,[a("a",V,[l("Git分支管理策略"),e(i)])])]),W,M,a("ul",null,[a("li",null,[l("《Redis 设计与实现》"),a("a",O,[l("https://redisbook.readthedocs.io/en/latest/index.html"),e(i)])])]),T,a("ul",null,[a("li",null,[l("《Docker 从入门到实践》 "),a("a",H,[l("https://yeasy.gitbook.io/docker_practice/"),e(i)])])]),z])}const $=n(s,[["render",K],["__file","part_one_of_java_engineer_path.html.vue"]]);export{$ as default};
