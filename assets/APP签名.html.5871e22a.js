import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as t,a as e,b as a,d as n,e as l,r as o}from"./app.48f1d0d6.js";const p={},d=e("h1",{id:"app-signing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#app-signing","aria-hidden":"true"},"#"),a(" APP Signing")],-1),c=e("h2",{id:"android",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#android","aria-hidden":"true"},"#"),a(" Android")],-1),u=e("p",null,"Android 应用签名是应用打包过程的重要步骤之一，Google 要求所有的应用必须被签名才可以安装到 Android 操作系统中。Android 的签名机制也为开发者识别和更新自己应用提供了方便。",-1),k={href:"https://developer.android.com/studio/publish/app-signing",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.gstatic.com/play-apps-publisher-rapid/signing-tool/prod/pepk.jar",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.gstatic.com/play-apps-publisher-rapid/signing-tool/prod/pepk-src.jar",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/yongjhih/pepk",target:"_blank",rel:"noopener noreferrer"},g=l(`<h3 id="keystore" tabindex="-1"><a class="header-anchor" href="#keystore" aria-hidden="true">#</a> KeyStore</h3><p>数字证书，是一个存储了证书的文件。文件包含证书的私钥，公钥和对应的数字证书的信息。</p><ul><li>keytool</li></ul><p>jdk 工具包，在 JAVA_HOME 下查找</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成 keystore</span>
<span class="token comment"># validity 有效天数</span>
keytool <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-alias</span> ifuture <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-validity</span> <span class="token number">365</span> <span class="token parameter variable">-keystore</span> ifuture.keystore

<span class="token comment"># 查看</span>
keytool <span class="token parameter variable">-list</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-keystore</span> ifuture.keystore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Android Studio</li></ul><p>Build -&gt; Generate signed Bundle/APK</p><p>一般使用 <code>keytool</code> 生成的密码库类型是 <code>PKCS12</code> ,Android Studio 生成的是 <code>JKS</code></p><p>互相转换</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># PKCS12 -&gt; JKS</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> ifuture.keystore <span class="token parameter variable">-srcstoretype</span> PKCS12 <span class="token parameter variable">-deststoretype</span> JKS <span class="token parameter variable">-destkeystore</span> ifuture.jks
<span class="token comment"># JKS -&gt; PKCS12</span>
keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> ifuture.jks <span class="token parameter variable">-srcstoretype</span> JKS <span class="token parameter variable">-deststoretype</span> PKCS12 <span class="token parameter variable">-destkeystore</span> ifuture.keystore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导入导出cert</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>keytool <span class="token parameter variable">-export</span> <span class="token parameter variable">-alias</span> cert0001 <span class="token parameter variable">-keystore</span> trust.jks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-file</span> cert0001.cer
keytool <span class="token parameter variable">-import</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-alias</span> cert001 <span class="token parameter variable">-file</span> cert001.cer <span class="token parameter variable">-keystore</span> trust.jks <span class="token parameter variable">-storepass</span> <span class="token number">123456</span> <span class="token parameter variable">-noprompt</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="签名" tabindex="-1"><a class="header-anchor" href="#签名" aria-hidden="true">#</a> 签名</h3><ul><li>Android Studio</li></ul><p>Build -&gt; Generate signed Bundle/APK</p><ul><li>apksigner</li></ul><p>Android SDK 工具包,在 Android 安装目录下查找</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/Users/zzz/Library/Android/sdk/build-tools/29.0.3/apksigner
C:\\\\用户\\zzz\\AppData\\Local\\Android\\Sdk\\build-tools\\29.0.3\\apksigner.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># APK签名</span>
apksigner sign <span class="token parameter variable">--ks</span> ifuture.jks --ks-key-alias ifuture <span class="token parameter variable">--out</span> app_sign.apk app-debug-unsign.apk
<span class="token comment"># 验证签名</span>
apksigner verify <span class="token parameter variable">-v</span> C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>fanqi<span class="token punctuation">\\</span>app_sign.apk
Verifies
Verified using v1 scheme <span class="token punctuation">(</span>JAR signing<span class="token punctuation">)</span>: <span class="token boolean">true</span>
Verified using v2 scheme <span class="token punctuation">(</span>APK Signature Scheme v2<span class="token punctuation">)</span>: <span class="token boolean">true</span>
Verified using v3 scheme <span class="token punctuation">(</span>APK Signature Scheme v3<span class="token punctuation">)</span>: <span class="token boolean">false</span>
Number of signers: <span class="token number">1</span>
<span class="token comment"># 代表使用了 v2 进行的签名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="签名机制" tabindex="-1"><a class="header-anchor" href="#签名机制" aria-hidden="true">#</a> 签名机制</h3><ul><li>V1 JAR signing</li></ul><blockquote><p>第一代是基于 JAR 文件签名，它主要的缺陷是只保护了一部分文件，而不是对整个 APK 文件做保护。这是因为所有文件都不可能包含了自身的签名，因为它不可能为自己签名后再把签名信息保存到自己内部，这是一个鸡生蛋蛋生鸡的问题，因为这个问题的存在，第一代签名机制会忽略所有以 .SF/.DSA/.RSA 的文件以及 META-INFO 目录下的所有文件。 所以攻击者就可以解压缩后在 APK/META-INF 目录新增一个含有恶意代码的文件，然后再压缩成 APK，同样是可以覆盖安装正版应用的，这样一来好好的应用就会被杀毒软件标记为恶意软件，从而达到攻击应用的目的。 除了容易被攻击外，应用安装起来也比较慢，因为安装器在校验时需要解压计算所有文件的数字摘要，确认没有被恶意修改。</p></blockquote><ul><li>V2</li></ul><blockquote><p>Android 7.0 引入了第二代签名，避免了第一代签名模式的问题，主要改进在于它在验证过程中，将整个 APK 文件当作一个整体，只校验 APK 文件的签名就可以了，从而一方面更严苛的避免了 APK 被篡改，另外一方面也不用加压缩后对所有文件进行校验，从而极大提升了安装速度。第二代签名向后兼容，使用新签名的 APK 可以安装到 &lt;7.0 的系统上，但要求 APK 同时也进行 v1 的签名。 具体来说，第二代签名将整个 APK 文件进行签名，并将签名信息保存在了 APK 文件的的尾部 Central Directory 的前边。它可以对第一三四，以及第二块除了签名部分的其他区域提供一致性保护。<br> 在计算签名的时候，会将这些部分的数据切割成 1MB 大小的 CHUNK，分别计算签名，然后汇总后再计算一个总签名，这么做的主要目的是为了并行计算，加快速度。<br> 为了避免攻击者在 7.0 以上系统中绕过 v2 签名机制（比如删除 APK Signing Block？），v2 签名要求如果 APK 同时提供了 V1 签名的话，需要在 META-INF/*.SF 文件中增加一行 X-Android-APK-Signed 属性，这样一来，支持 V2 签名的系统在回滚到 V1 签名的时候就会校验是否存在这个属性，如果存在，就会拒绝安装 APK，这一切都是建立在 *.SF 文件被 V1 签名保护的基础之上。</p></blockquote><ul><li>V3</li></ul><blockquote><p>Android 9.0 引入了第三代签名机制，主要增加一个功能叫 APK key rotation. 意思是允许开发者在更新 APK 的时候更换签名。签名的主要机制跟 V2 其实是一样的，只是重新设计了 APK Signing Block 的存储结构，以支持更换签名。这里就不再细说，可以参考官方的 文档 下图是安装一个 APK 时，系统对三代签名校验的流程示意。</p></blockquote>`,26);function h(A,y){const s=o("ExternalLinkIcon");return i(),t("div",null,[d,c,u,e("ul",null,[e("li",null,[e("a",k,[a("Android"),n(s)])]),e("li",null,[e("a",v,[a("Google pepk.jar"),n(s)])]),e("li",null,[e("a",m,[a("Google pepk-src.jar"),n(s)])]),e("li",null,[e("a",b,[a("pepk-src"),n(s)])])]),g])}const K=r(p,[["render",h],["__file","APP签名.html.vue"]]);export{K as default};
