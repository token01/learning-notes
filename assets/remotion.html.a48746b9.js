import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as s,b as n,d as t,e as p,r as i}from"./app.945d736a.js";const l={},u=p('<h1 id="🎄-react-使用-remotion-制作视频-让圣诞快乐-psd-动起来" tabindex="-1"><a class="header-anchor" href="#🎄-react-使用-remotion-制作视频-让圣诞快乐-psd-动起来" aria-hidden="true">#</a> 🎄 [React] 使用 remotion 制作视频，让圣诞快乐 PSD 动起来</h1><h2 id="psd-自动生成动画视频" tabindex="-1"><a class="header-anchor" href="#psd-自动生成动画视频" aria-hidden="true">#</a> PSD 自动生成动画视频</h2><p>话不多说，先看效果。</p><p>效果 1：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e895654e94824a2a9302a0e8389ae2c0~tplv-k3u1fbpfcp-watermark.image?" alt="merryc-s.gif" loading="lazy"></p><p>效果 2：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f9f96a190604d5783f0380713319825~tplv-k3u1fbpfcp-watermark.image?" alt="merryc1-s.gif" loading="lazy"></p>',7),k={href:"https://github.com/animate-css/animate.css",target:"_blank",rel:"noopener noreferrer"},r={href:"https://github.com/remotion-dev/remotion",target:"_blank",rel:"noopener noreferrer"},d=s("h2",{id:"remotion",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#remotion","aria-hidden":"true"},"#"),n(" remotion")],-1),m={href:"https://github.com/remotion-dev/remotion",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/remotion-dev/trailer",target:"_blank",rel:"noopener noreferrer"},b=p(`<h3 id="remotion-核心概念" tabindex="-1"><a class="header-anchor" href="#remotion-核心概念" aria-hidden="true">#</a> remotion 核心概念</h3><p>remotion 背后的核心概念是，只要提供一个当前帧 <code>currentFrame</code> 和空白的 <code>canvas</code>，就可以使用 React 自由的渲染任何元素。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCurrentFrame <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;remotion&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">MyVideo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> frame <span class="token operator">=</span> <span class="token function">useCurrentFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> justifyContent<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> alignItems<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
      The current frame <span class="token keyword">is</span> <span class="token punctuation">{</span>frame<span class="token punctuation">}</span><span class="token punctuation">.</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个视频可以表达为一个随着时间变动的图像函数，根据每一帧改变内容，最终就能产生动画效果。</p><p>一个 remotion 视频还有几个核心的属性：<code>width</code>、<code>height</code>、<code>durationInFrames(视频总帧数)</code>、<code>fps</code>。这些属性可以通过 <code>useVideoConfig</code> hook 得到。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useVideoConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;remotion&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">MyVideo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fps<span class="token punctuation">,</span> durationInFrames<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useVideoConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> justifyContent<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">,</span> alignItems<span class="token operator">:</span> <span class="token string">&quot;center&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
      This video <span class="token keyword">is</span> <span class="token punctuation">{</span>durationInFrames <span class="token operator">/</span> fps<span class="token punctuation">}</span> seconds long<span class="token punctuation">.</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也就是说，定义好视频的<code>宽度、高度、总帧数和帧率(fps)</code>，remotion 会在运行时向我们提供 <code>currentFrame</code>，根据当前帧数和视频属性渲染当前状态下的图像即可。</p><h3 id="封装-animate-css-动画" tabindex="-1"><a class="header-anchor" href="#封装-animate-css-动画" aria-hidden="true">#</a> 封装 animate.css 动画</h3><p>跟我们在使用 <code>animate.css</code> 时只需要指定一个动画样式不同，现在渲染图像需要根据三个核心参数 <code>durationInFrames(总帧数)</code>、<code>currentFrame(当前帧)</code>、<code>fps(帧率)</code> 来计算出当前动画位置。如果每次都编码进行计算岂不是很繁琐，因此我们封装一个 <code>Animate 组件</code> 以进行重复利用。</p><p>计算逻辑：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>const frame = useCurrentFrame();
const { durationInFrames, fps } = useVideoConfig();
const duration = durationInFrames / fps; // 动画总时长
const delay = (frame / fps) &lt; duration ? (frame / fps) : duration - 0.00001; //动画播放到哪儿了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出计算逻辑并不复杂，得出动画播放位置，设置在动画元素的 <code>style</code> 属性上即可。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
	<span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value css language-css"><span class="token punctuation">{</span><span class="token punctuation">{</span></span></span></span>
		<span class="token attr-name"><span class="token namespace">animationPlayState:</span></span> <span class="token attr-name">&#39;paused&#39;,</span>
		<span class="token attr-name"><span class="token namespace">animationName:</span></span> <span class="token attr-name">animate,</span>
		<span class="token attr-name"><span class="token namespace">animationDelay:</span></span> <span class="token attr-name">\`-\${delay}s\`,</span>
		<span class="token attr-name"><span class="token namespace">animationDuration:</span></span> <span class="token attr-name">\`\${duration}s\`,</span>
	<span class="token attr-name">}}</span>
<span class="token punctuation">&gt;</span></span>
	{children}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),g={href:"https://github.com/ahgsql/remotion-animation",target:"_blank",rel:"noopener noreferrer"},f=s("p",null,"掌握 animate.css 动画的封装就已经完成了一半，接下来我们使用 Java 来解析 psd，并在返回的 psd 元素上设置随机动画效果。",-1),y=s("h2",{id:"使用-java-解析-psd",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-java-解析-psd","aria-hidden":"true"},"#"),n(" 使用 Java 解析 PSD")],-1),h={href:"https://github.com/meltingice/psd.js",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/inevo/java-psd-library",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 保存 PSD 中的图片元素，并返回 PSD 动画配置</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">PsdAnimateConfig</span> <span class="token function">processPsd</span><span class="token punctuation">(</span><span class="token class-name">File</span> inputFile<span class="token punctuation">,</span> <span class="token class-name">File</span> outputDir<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Psd</span> psdFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Psd</span><span class="token punctuation">(</span>inputFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputDir<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">PsdAnimateConfig</span> animateConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PsdAnimateConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    animateConfig<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>psdFile<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    animateConfig<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>psdFile<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    animateConfig<span class="token punctuation">.</span><span class="token function">setLayers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> total <span class="token operator">=</span> psdFile<span class="token punctuation">.</span><span class="token function">getLayersCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Layer</span> layer <span class="token operator">=</span> psdFile<span class="token punctuation">.</span><span class="token function">getLayer</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">writeLayer</span><span class="token punctuation">(</span>layer<span class="token punctuation">,</span> outputDir<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> animateConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 随机选择一个动画（这里把所有支持的动画放到了 txt文件）</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animates <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">readLines</span><span class="token punctuation">(</span><span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:animate.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">defaultCharset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;Out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> animate <span class="token operator">=</span> animates<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>animates<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AnimateLayer</span> layer <span class="token operator">:</span> animateConfig<span class="token punctuation">.</span><span class="token function">getLayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            layer<span class="token punctuation">.</span><span class="token function">setAnimate</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            layer<span class="token punctuation">.</span><span class="token function">setFromMillisecond</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置动画开始时间</span>
            layer<span class="token punctuation">.</span><span class="token function">setDurationMillisecond</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置动画持续时间</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> animateConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 保存 PSD 图片元素，并将图片元素加入动画配置</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">writeLayer</span><span class="token punctuation">(</span><span class="token class-name">Layer</span> layer<span class="token punctuation">,</span> <span class="token class-name">File</span> baseDir<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">PsdAnimateConfig</span> animateConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">LayerType</span><span class="token punctuation">.</span><span class="token constant">FOLDER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> layer<span class="token punctuation">.</span><span class="token function">getLayersCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Layer</span> subLayer <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">getLayer</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">writeLayer</span><span class="token punctuation">(</span>subLayer<span class="token punctuation">,</span> baseDir<span class="token punctuation">,</span> index<span class="token operator">++</span><span class="token punctuation">,</span> animateConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">LayerType</span><span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> outFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> path <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        outFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>outFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> outFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">AnimateLayer</span> animateLayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnimateLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setX</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setY</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>path <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            animateLayer<span class="token punctuation">.</span><span class="token function">setIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

            animateConfig<span class="token punctuation">.</span><span class="token function">getLayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>animateLayer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码比较简单，这里就不做讲解了，接下来我们看前端如何根据返回的配置来编写动画。</p><h2 id="从-psd-配置中创建动画视频" tabindex="-1"><a class="header-anchor" href="#从-psd-配置中创建动画视频" aria-hidden="true">#</a> 从 PSD 配置中创建动画视频</h2><p>在 remotion 组件中可以从接口获取到数据后再继续渲染，我们从 Java 服务端接口中获取配置，根据配置一步步渲染组件。</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token string">&quot;animate.css&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  continueRender<span class="token punctuation">,</span>
  delayRender<span class="token punctuation">,</span>
  Sequence<span class="token punctuation">,</span>
  useCurrentFrame<span class="token punctuation">,</span>
  useVideoConfig<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;remotion&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Animation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;remotion-animation&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">PsdVideo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>handle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delayRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://127.0.0.1:8080/psd/animateConfig&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setData</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">continueRender</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> videoConfig <span class="token operator">=</span> <span class="token function">useVideoConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> frame <span class="token operator">=</span> <span class="token function">useCurrentFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">加载中</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getDiv</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>layer<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          position<span class="token operator">:</span> <span class="token string">&quot;absolute&quot;</span><span class="token punctuation">,</span>
          width<span class="token operator">:</span> layer<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
          height<span class="token operator">:</span> layer<span class="token punctuation">.</span>height<span class="token punctuation">,</span>
          top<span class="token operator">:</span> layer<span class="token punctuation">.</span>y<span class="token punctuation">,</span>
          left<span class="token operator">:</span> layer<span class="token punctuation">.</span>x<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&quot;http://127.0.0.1:8080/psd/image?name=&quot;</span> <span class="token operator">+</span> layer<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span>
          <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>layer<span class="token punctuation">.</span>width<span class="token punctuation">}</span></span>
          <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>layer<span class="token punctuation">.</span>height<span class="token punctuation">}</span></span>
        <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getAnimate</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>layer<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> duration <span class="token operator">=</span> layer<span class="token punctuation">.</span>durationMillisecond <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>layer<span class="token punctuation">.</span>animate <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Animation</span></span> <span class="token attr-name">duration</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>duration<span class="token punctuation">}</span></span> <span class="token attr-name">animateName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>layer<span class="token punctuation">.</span>animate<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token function">getDiv</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Animation</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span><span class="token operator">!</span>layer<span class="token punctuation">.</span>animate <span class="token operator">&amp;&amp;</span> <span class="token function">getDiv</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> data<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token operator">:</span> data<span class="token punctuation">.</span>height<span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token string">&quot;relative&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>layers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> needPlay <span class="token operator">=</span> layer<span class="token punctuation">.</span>durationMillisecond<span class="token punctuation">;</span> <span class="token comment">// 设置了时间的是需要播放的</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token punctuation">{</span>needPlay <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Sequence</span></span>
                <span class="token attr-name">from</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">parseInt</span><span class="token punctuation">(</span>
                  <span class="token punctuation">(</span>videoConfig<span class="token punctuation">.</span>fps <span class="token operator">*</span> layer<span class="token punctuation">.</span>fromMillisecond<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span>
                <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
                <span class="token attr-name">durationInFrames</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">Infinity</span><span class="token punctuation">}</span></span>
              <span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token punctuation">{</span><span class="token function">getAnimate</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Sequence</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
            </span><span class="token punctuation">{</span><span class="token operator">!</span>needPlay <span class="token operator">&amp;&amp;</span> <span class="token function">getAnimate</span><span class="token punctuation">(</span>layer<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文代码所实现的视频效果比较简单，但提到了生成动画的核心概念、从服务端获取数据从而动态生成视频等，读者朋友如果感兴趣的话可以试着去创建更复杂的动画并导出成视频哦。</p>`,7);function _(q,C){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[n("说明：以上为视频预览，其中的动画效果使用了 "),s("a",k,[n("animate.css"),t(a)]),n(" 进行随机生成。")]),s("p",null,[n("虽然本文代码所实现的视频动画效果非常简单，主要是介绍如何根据一张有层次的 PSD 文件自动生成视频，但这些代码的基石 "),s("a",r,[n("remotion"),t(a)]),n(" 项目可不限于此，使用它可以实现非常复杂的视频。")]),d,s("p",null,[n("上面的效果是采用 "),s("a",m,[n("remotion"),t(a)]),n(" 进行实现的，这是一个可以让你使用 React 以编程的方式创建视频的开源项目。"),s("a",v,[n("remotion 宣传片"),t(a)]),n(" 就是使用 remotion 进行制作的，这是一个相当复杂的视频，通过这个宣传片，足见 remotion 的强大。")]),b,s("p",null,[n("完整代码："),s("a",g,[n("remotion-animation"),t(a)]),n("。")]),f,y,s("p",null,[n("解析 PSD 的方法有很多，由于作者刚好顺手用 Java 写了 PSD 的解析，所以这里就采用 Java 来介绍，更推荐大家使用 "),s("a",h,[n("psd.js"),t(a)]),n("，这样仅通过前端编码就能实现本文的效果。")]),s("p",null,[n("解析 PSD 使用了 "),s("a",w,[n("java-psd-library"),t(a)]),n(" 开源项目，处理 PSD 的部分代码如下：")]),x])}const D=e(l,[["render",_],["__file","remotion.html.vue"]]);export{D as default};
