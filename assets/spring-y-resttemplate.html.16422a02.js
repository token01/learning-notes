import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as n,b as a,d as t,f as c,r as l}from"./app.ec219279.js";const i={},u=c(`<h1 id="springboot\u4F7F\u7528resttemplate\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#springboot\u4F7F\u7528resttemplate\u8BF7\u6C42" aria-hidden="true">#</a> springboot\u4F7F\u7528RestTemplate\u8BF7\u6C42</h1><h2 id="_1-\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#_1-\u80CC\u666F" aria-hidden="true">#</a> 1. \u80CC\u666F</h2><p>\u56E0\u9879\u76EE\u9700\u8981\u8BF7\u6C42\u5916\u90E8\u9879\u76EE\u63A5\u53E3\uFF0Capache \u7684HttpClient\u6709\u70B9\u8001\u4E86\uFF0C\u800C\u4E14\u903B\u8F91\u7E41\u7410\uFF0C\u4EE3\u7801\u590D\u6742\uFF0C\u8FD8\u8981\u81EA\u5DF1\u7F16\u5199\u4F7F\u7528\u7C7BHttpClientUtil\uFF0C\u5C01\u88C5\u5BF9\u5E94\u7684post\uFF0Cget\uFF0Cdelete\u7B49\u65B9\u6CD5\u3002</p><h3 id="_1-1-resttemple-\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#_1-1-resttemple-\u662F\u4EC0\u4E48" aria-hidden="true">#</a> 1.1 RestTemple \u662F\u4EC0\u4E48</h3><p>RestTemple\u662FSpring\u63D0\u4F9B\u7684\u7528\u4E8E\u8BBF\u95EEHttp\u8BF7\u6C42\u7684\u5BA2\u6237\u7AEF\uFF0CRestTemple\u63D0\u4F9B\u4E86\u591A\u79CD\u7B80\u6D01\u7684\u8FDC\u7A0B\u8BBF\u95EE\u670D\u52A1\u7684\u65B9\u6CD5\uFF0C\u7701\u53BB\u4E86\u5F88\u591A\u65E0\u7528\u7684\u4EE3\u7801\u3002</p><h2 id="_2-\u96C6\u6210\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-\u96C6\u6210\u4F7F\u7528" aria-hidden="true">#</a> 2. \u96C6\u6210\u4F7F\u7528</h2><h3 id="_2-1-\u5BFC\u5165springboot-\u7684-web\u5305" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5BFC\u5165springboot-\u7684-web\u5305" aria-hidden="true">#</a> 2.1 \u5BFC\u5165springboot \u7684 web\u5305</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u521B\u5EFA\u914D\u7F6E\u7C7Bresttemplateconfig-class" tabindex="-1"><a class="header-anchor" href="#_2-2-\u521B\u5EFA\u914D\u7F6E\u7C7Bresttemplateconfig-class" aria-hidden="true">#</a> 2.2 \u521B\u5EFA\u914D\u7F6E\u7C7BRestTemplateConfig.class</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token class-name">ClientHttpRequestFactory</span> factory<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ClientHttpRequestFactory</span> <span class="token function">simpleClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">SimpleClientHttpRequestFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        factory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        factory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-service\u7C7B\u4E2D\u6CE8\u5165\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-3-service\u7C7B\u4E2D\u6CE8\u5165\u4F7F\u7528" aria-hidden="true">#</a> 2.3 Service\u7C7B\u4E2D\u6CE8\u5165\u4F7F\u7528</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8080/user?userId=&quot;</span><span class="token operator">+</span>id<span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-resttemplate\u7684\u547D\u540D\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#_3-resttemplate\u7684\u547D\u540D\u89C4\u8303" aria-hidden="true">#</a> 3. RestTemplate\u7684\u547D\u540D\u89C4\u8303</h2><p>RestTemplate\u63D0\u4F9B\u4E86\u516D\u79CD\u5E38\u7528\u7684HTTP\u65B9\u6CD5\u5B9E\u73B0\u8FDC\u7A0B\u670D\u52A1\u8C03\u7528\uFF0CRestTemplate\u7684\u65B9\u6CD5\u540D\u9075\u5FAA\u4E00\u5B9A\u7684\u547D\u540D\u89C4\u8303\uFF0C<strong>\u7B2C\u4E00\u90E8\u5206\u8868\u793A\u7528\u54EA\u79CDHTTP\u65B9\u6CD5\u8C03\u7528\uFF08get\uFF0Cpost\uFF09\uFF0C\u7B2C\u4E8C\u90E8\u5206\u8868\u793A\u8FD4\u56DE\u7C7B\u578B\u3002</strong></p><ul><li><p>getForObject</p><p>ptionsForAllow \u5206\u4E3A\u4E00\u7EC4\uFF0C\u8FD9\u7C7B\u65B9\u6CD5\u662F\u5E38\u89C4\u7684 Rest API\uFF08GET\u3001POST\u3001DELETE \u7B49\uFF09\u65B9\u6CD5\u8C03\u7528\uFF1B</p><ul><li><p>getForObject</p><p>\u53D1\u9001GET\u8BF7\u6C42\uFF0C\u5C06HTTP response\u8F6C\u6362\u6210\u4E00\u4E2A\u6307\u5B9A\u7684object\u5BF9\u8C61</p></li><li><p>postForEntity</p><p>\u53D1\u9001POST\u8BF7\u6C42\uFF0C\u5C06\u7ED9\u5B9A\u7684\u5BF9\u8C61\u5C01\u88C5\u5230HTTP\u8BF7\u6C42\u4F53\uFF0C\u8FD4\u56DE\u7C7B\u578B\u662F\u4E00\u4E2AHttpEntity\u5BF9\u8C61</p></li></ul></li><li><p>exchange</p><p>\u63A5\u6536\u4E00\u4E2A <code>RequestEntity</code> \u53C2\u6570\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u8BBE\u7F6E HTTP method\uFF0CURL\uFF0Cheaders \u548C body\uFF0C\u8FD4\u56DE ResponseEntity\uFF1B</p></li><li><p>execute</p><p>\u901A\u8FC7 callback \u63A5\u53E3\uFF0C\u53EF\u4EE5\u5BF9\u8BF7\u6C42\u548C\u8FD4\u56DE\u505A\u66F4\u52A0\u5168\u9762\u7684\u81EA\u5B9A\u4E49\u63A7\u5236\u3002</p></li></ul><h2 id="_4-resttemplate-\u7684http\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-resttemplate-\u7684http\u65B9\u6CD5" aria-hidden="true">#</a> 4. RestTemplate \u7684Http\u65B9\u6CD5</h2><h3 id="_4-1-get-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_4-1-get-\u8BF7\u6C42" aria-hidden="true">#</a> 4.1 Get \u8BF7\u6C42</h3><h4 id="_4-1-1-getforentity" tabindex="-1"><a class="header-anchor" href="#_4-1-1-getforentity" aria-hidden="true">#</a> 4.1.1 getForEntity</h4><p>get\u8BF7\u6C42\u5C31\u548C\u6B63\u5E38\u5728\u6D4F\u89C8\u5668url\u4E0A\u53D1\u9001\u8BF7\u6C42\u4E00\u6837</p><p>\u4E0B\u9762\u662F\u6709\u53C2\u6570\u7684get\u8BF7\u6C42</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getForEntity/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> response <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost/get/{id}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> user<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-getforobject" tabindex="-1"><a class="header-anchor" href="#_4-1-2-getforobject" aria-hidden="true">#</a> 4.1.2 getForObject</h4><p>getForObject \u548C getForEntity \u7528\u6CD5\u51E0\u4E4E\u76F8\u540C,\u6307\u793A\u8FD4\u56DE\u503C\u8FD4\u56DE\u7684\u662F \u54CD\u5E94\u4F53,\u7701\u53BB\u4E86\u6211\u4EEC \u518D\u53BB getBody()</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getForObject/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost/get/{id}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> user<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-post\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_4-2-post\u8BF7\u6C42" aria-hidden="true">#</a> 4.2 Post\u8BF7\u6C42</h3><h4 id="_4-2-1-postforobject\u53D1\u9001json\u683C\u5F0F\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#_4-2-1-postforobject\u53D1\u9001json\u683C\u5F0F\u8BF7\u6C42" aria-hidden="true">#</a> 4.2.1 postForObject\u53D1\u9001JSON\u683C\u5F0F\u8BF7\u6C42</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">PostTests</span> <span class="token punctuation">{</span>

   <span class="token annotation punctuation">@Resource</span>
   <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Test</span>
   <span class="token keyword">void</span> <span class="token function">testSimple</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
      <span class="token comment">// \u8BF7\u6C42\u5730\u5740</span>
      <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;http://jsonplaceholder.typicode.com/posts&quot;</span><span class="token punctuation">;</span>

      <span class="token comment">// \u8981\u53D1\u9001\u7684\u6570\u636E\u5BF9\u8C61</span>
      <span class="token class-name">PostDTO</span> postDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PostDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      postDTO<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      postDTO<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;zimug \u53D1\u5E03\u6587\u7AE0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      postDTO<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;zimug \u53D1\u5E03\u6587\u7AE0 \u6D4B\u8BD5\u5185\u5BB9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u53D1\u9001post\u8BF7\u6C42\uFF0C\u5E76\u8F93\u51FA\u7ED3\u679C</span>
      <span class="token class-name">PostDTO</span> result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> postDTO<span class="token punctuation">,</span> <span class="token class-name">PostDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-postforobject\u6A21\u62DF\u8868\u5355\u6570\u636E\u63D0\u4EA4" tabindex="-1"><a class="header-anchor" href="#_4-2-2-postforobject\u6A21\u62DF\u8868\u5355\u6570\u636E\u63D0\u4EA4" aria-hidden="true">#</a> 4.2.2 postForObject\u6A21\u62DF\u8868\u5355\u6570\u636E\u63D0\u4EA4</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u8BF7\u6C42\u5730\u5740</span>
   <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;http://jsonplaceholder.typicode.com/posts&quot;</span><span class="token punctuation">;</span>

   <span class="token comment">// \u8BF7\u6C42\u5934\u8BBE\u7F6E,x-www-form-urlencoded\u683C\u5F0F\u7684\u6570\u636E</span>
   <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_FORM_URLENCODED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//\u63D0\u4EA4\u53C2\u6570\u8BBE\u7F6E</span>
   <span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zimug \u53D1\u5E03\u6587\u7AE0\u7B2C\u4E8C\u7BC7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zimug \u53D1\u5E03\u6587\u7AE0\u7B2C\u4E8C\u7BC7 \u6D4B\u8BD5\u5185\u5BB9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u7EC4\u88C5\u8BF7\u6C42\u4F53</span>
   <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> request <span class="token operator">=</span>
               <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// \u53D1\u9001post\u8BF7\u6C42\uFF0C\u5E76\u6253\u5370\u7ED3\u679C\uFF0C\u4EE5String\u7C7B\u578B\u63A5\u6536\u54CD\u5E94\u7ED3\u679CJSON\u5B57\u7B26\u4E32</span>
   <span class="token class-name">String</span> result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-exchange" tabindex="-1"><a class="header-anchor" href="#_4-2-3-exchange" aria-hidden="true">#</a> 4.2.3 exchange</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;demo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
 
        <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//header\u53C2\u6570</span>
        headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;authorization&quot;</span><span class="token punctuation">,</span><span class="token class-name">Auth</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u653E\u5165body\u4E2D\u7684json\u53C2\u6570</span>
        obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JSONObject</span><span class="token punctuation">&gt;</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7EC4\u88C5</span>
  
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> response <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8080/demo&quot;</span><span class="token punctuation">,</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">,</span>request<span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-\u6587\u4EF6\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#_4-3-\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a> 4.3 \u6587\u4EF6\u4E0A\u4F20</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">uplaod</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JSONObject</span> params<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>

       <span class="token keyword">final</span> <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8888/hello/m3&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u5934</span>
        <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">MULTIPART_FORM_DATA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u8BF7\u6C42\u4F53\uFF0C\u6CE8\u610F\u662F LinkedMultiValueMap</span>
        <span class="token comment">// \u4E0B\u9762\u4E24\u4E2A\u6D41\u4ECE\u6587\u4EF6\u670D\u52A1\u4E0B\u8F7D\uFF0C\u8FD9\u8FB9\u7701\u7565\uFF08\u6CE8\u610F\u6700\u540E\u5173\u95ED\u6D41\uFF09</span>
        <span class="token class-name">InputStream</span> fis1 <span class="token operator">=</span> 
        <span class="token class-name">InputStream</span> fis2 <span class="token operator">=</span> 

        <span class="token class-name">InMemoryResource</span> resource1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryResource</span><span class="token punctuation">(</span><span class="token string">&quot;file1.jpg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;description1&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FileCopyUtils</span><span class="token punctuation">.</span><span class="token function">copyToByteArray</span><span class="token punctuation">(</span>fis1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">InMemoryResource</span> resource2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryResource</span><span class="token punctuation">(</span><span class="token string">&quot;file2.jpg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;description2&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FileCopyUtils</span><span class="token punctuation">.</span><span class="token function">copyToByteArray</span><span class="token punctuation">(</span>fis2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        form<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> resource1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        form<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> resource2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        form<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;param1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> files <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>form<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> s <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-exchange-\u548Cexecute" tabindex="-1"><a class="header-anchor" href="#_5-exchange-\u548Cexecute" aria-hidden="true">#</a> 5. exchange \u548Cexecute</h2><h3 id="_5-1-exchange" tabindex="-1"><a class="header-anchor" href="#_5-1-exchange" aria-hidden="true">#</a> 5.1 exchange</h3><p>exchange(String url, HttpMethod method,@Nullable HttpEntity&lt;?&gt; requestEntity, Class responseType, Map map)</p><h4 id="_5-1-1-\u53C2\u6570\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#_5-1-1-\u53C2\u6570\u8BF4\u660E" aria-hidden="true">#</a> 5.1.1 \u53C2\u6570\u8BF4\u660E</h4><ul><li>url\uFF1A\u8BF7\u6C42\u8DEF\u5F84</li><li>method\uFF1A\u8BF7\u6C42\u7684\u65B9\u6CD5\uFF08GET\u3001POST\u3001PUT\u7B49\uFF09</li><li>requestEntity\uFF1AHttpEntity\u5BF9\u8C61\uFF0C\u5C01\u88C5\u4E86\u8BF7\u6C42\u5934\u548C\u8BF7\u6C42</li><li>responseType\uFF1A\u8FD4\u56DE\u6570\u636E\u7C7B\u578B</li><li>uriVariables\uFF1A\u652F\u6301PathVariable\u7C7B\u578B\u7684\u6570\u636E</li></ul><h3 id="_5-1-2-\u8BF7\u6C42\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_5-1-2-\u8BF7\u6C42\u793A\u4F8B" aria-hidden="true">#</a> 5.1.2 \u8BF7\u6C42\u793A\u4F8B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token class-name">RemoteUrl</span> <span class="token operator">+</span> <span class="token string">&quot;/id&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BBE\u7F6EHttp\u7684Header</span>
        <span class="token class-name">HttpHeaders</span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON_UTF8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">//\u8BBE\u7F6E\u8BBF\u95EE\u53C2\u6570</span>
        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
		<span class="token comment">//\u8BBE\u7F6E\u8BBF\u95EE\u7684Entity</span>
        <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
        	<span class="token comment">//\u53D1\u8D77\u4E00\u4E2APOST\u8BF7\u6C42</span>
            result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">,</span> entity<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">JSONObject</span> data <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6id\u5931\u8D25\uFF1A &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,41),k={href:"https://blog.csdn.net/weixin_40461281/article/details/83540604",target:"_blank",rel:"noopener noreferrer"},r={href:"https://blog.csdn.net/zxh1991811/article/details/102744155",target:"_blank",rel:"noopener noreferrer"};function d(m,v){const s=l("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",k,[a("springboot 2.0 \u6574\u5408 RestTemplate \u4E0E\u4F7F\u7528\u6559\u7A0B"),t(s)])]),n("p",null,[n("a",r,[a("RestTemplate\u4F7F\u7528\u5B9E\u6218-exchange\u65B9\u6CD5\u8BB2\u89E3"),t(s)])])])}const h=p(i,[["render",d],["__file","spring-y-resttemplate.html.vue"]]);export{h as default};
