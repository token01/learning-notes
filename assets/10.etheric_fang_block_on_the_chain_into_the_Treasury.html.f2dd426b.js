import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,b as e,d as o,f as c,r as u}from"./app.206d958e.js";const i={},l=c(`<blockquote><p>\u6D45\u8C08\u4EE5\u592A\u574A\u6E90\u7801\u5206\u6790\u4E4B\u533A\u5757\u4E0A\u94FE\u5165\u5E93</p></blockquote><h2 id="\u5F15\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5F15\u8A00" aria-hidden="true">#</a> \u5F15\u8A00</h2><p>\u4E0D\u7BA1\u662F\u77FF\u5DE5\u6316\u77FF\u8FD8\u662F<code>Fetcher</code>\u540C\u6B65\uFF0C<code>Downloader</code>\u540C\u6B65\uFF0C\u6216\u8005\u662F\u5BFC\u5165\u672C\u5730\u6587\u4EF6\u7B49\u7B49\uFF0C\u6700\u4E2D\u90FD\u662F\u5C06\u533A\u5757\u4E0A\u94FE\u5165\u5E93\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u8BE6\u7EC6\u5206\u6790\u8FD9\u90E8\u5206\u7684\u52A8\u4F5C\u3002</p><h2 id="\u51E0\u5904\u53EF\u80FD\u8C03\u7528\u7684\u5730\u65B9" tabindex="-1"><a class="header-anchor" href="#\u51E0\u5904\u53EF\u80FD\u8C03\u7528\u7684\u5730\u65B9" aria-hidden="true">#</a> \u51E0\u5904\u53EF\u80FD\u8C03\u7528\u7684\u5730\u65B9</h2><p>\u2460\uFF1A\u5728Downloader\u540C\u6B65\u6700\u540E\u4F1A\u5C06\u533A\u5757\u63D2\u5165\u5230\u533A\u5757\u94FE\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>d <span class="token operator">*</span>Downloader<span class="token punctuation">)</span> <span class="token function">importBlockResults</span><span class="token punctuation">(</span>results <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>fetchResult<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">if</span> index<span class="token punctuation">,</span> err <span class="token operator">:=</span> d<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">InsertChain</span><span class="token punctuation">(</span>blocks<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u4EE5\u592A\u574A\u534F\u8BAE\u7BA1\u7406\u5668\uFF0C\u4E5F\u4F1A\u5C06\u533A\u5757\u63D2\u5165\u5230\u94FE\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">NewProtocolManager</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ProtocolManager<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  n<span class="token punctuation">,</span> err <span class="token operator">:=</span> manager<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">InsertChain</span><span class="token punctuation">(</span>blocks<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u63D2\u5165\u4FA7\u94FE\u6570\u636E</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>bc <span class="token operator">*</span>BlockChain<span class="token punctuation">)</span> <span class="token function">insertSideChain</span><span class="token punctuation">(</span>block <span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> it <span class="token operator">*</span>insertIterator<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> bc<span class="token punctuation">.</span><span class="token function">insertChain</span><span class="token punctuation">(</span>blocks<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u4ECE\u672C\u5730\u6587\u4EF6\u5BFC\u5165\u94FE</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>api <span class="token operator">*</span>PrivateAdminAPI<span class="token punctuation">)</span> <span class="token function">ImportChain</span><span class="token punctuation">(</span>file <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> api<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">BlockChain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">InsertChain</span><span class="token punctuation">(</span>blocks<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1Afetcher\u540C\u6B65\u5BFC\u5165\u5757</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>f <span class="token operator">*</span>Fetcher<span class="token punctuation">)</span> <span class="token function">insert</span><span class="token punctuation">(</span>peer <span class="token builtin">string</span><span class="token punctuation">,</span> block <span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>
  <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">insertChain</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span>Blocks<span class="token punctuation">{</span>block<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u5C31\u662F\u6BD4\u8F83\u5E38\u89C1\u7684\u9700\u8981\u5C06\u533A\u5757\u4E0A\u94FE\u7684\u52A8\u4F5C\u3002\u8C03\u7528\u7684\u6838\u5FC3\u65B9\u6CD5\u5C31\u662F\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>bc <span class="token operator">*</span>BlockChain<span class="token punctuation">)</span> <span class="token function">insertChain</span><span class="token punctuation">(</span>chain types<span class="token punctuation">.</span>Blocks<span class="token punctuation">,</span> verifySeals <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><blockquote><p>\u83B7\u53D6\u533A\u5757\u94FE\u6240\u6709\u76F8\u5173\u6587\u7AE0\u4EE5\u53CA\u8D44\u6599\uFF0C\u8BF7\u53C2\u9605\uFF1A&lt; /&gt;</p></blockquote><h2 id="\u63D2\u5165\u6570\u636E\u5230blockchain\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6570\u636E\u5230blockchain\u4E2D" aria-hidden="true">#</a> \u63D2\u5165\u6570\u636E\u5230blockchain\u4E2D</h2><p>\u2460\uFF1A\u5982\u679C\u94FE\u6B63\u5728\u4E2D\u65AD\uFF0C\u76F4\u63A5\u8FD4\u56DE</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>if atomic.LoadInt32(&amp;bc.procInterrupt) == 1 {
  return 0, nil
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5F00\u542F\u5E76\u884C\u7684\u7B7E\u540D\u6062\u590D</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code> senderCacher.recoverFromBlocks(types.MakeSigner(bc.chainConfig, chain[0].Number()), chain)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5F00\u542F\u5E76\u884C\u6821\u9A8Cheader</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>abort<span class="token punctuation">,</span> results <span class="token operator">:=</span> bc<span class="token punctuation">.</span>engine<span class="token punctuation">.</span><span class="token function">VerifyHeaders</span><span class="token punctuation">(</span>bc<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> seals<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6821\u9A8C<code>header</code>\u662F\u5171\u8BC6\u5F15\u64CE\u6240\u8981\u505A\u7684\u4E8B\u60C5\uFF0C\u6211\u4EEC\u8FD9\u91CC\u53EA\u5206\u6790<code>ethash</code>\u5B83\u7684\u5B9E\u73B0\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">VerifyHeaders</span><span class="token punctuation">(</span>chain consensus<span class="token punctuation">.</span>ChainReader<span class="token punctuation">,</span> headers <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> seals <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">.</span>
  errors<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> ethash<span class="token punctuation">.</span><span class="token function">verifyHeaderWorker</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> seals<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">verifyHeaderWorker</span><span class="token punctuation">(</span>chain consensus<span class="token punctuation">.</span>ChainReader<span class="token punctuation">,</span> headers <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> seals <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">bool</span><span class="token punctuation">,</span> index <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> parent <span class="token operator">*</span>types<span class="token punctuation">.</span>Header
 <span class="token keyword">if</span> index <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
  parent <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ParentHash<span class="token punctuation">,</span> headers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Number<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> headers<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> headers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>ParentHash <span class="token punctuation">{</span>
  parent <span class="token operator">=</span> headers<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">if</span> parent <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> consensus<span class="token punctuation">.</span>ErrUnknownAncestor
 <span class="token punctuation">}</span>
 <span class="token keyword">if</span> chain<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span>headers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>Number<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span> <span class="token comment">// known block</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> ethash<span class="token punctuation">.</span><span class="token function">verifyHeader</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> headers<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> seals<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u4F1A\u8C03\u7528<code>verifyHeaderWorker</code>\u8FDB\u884C\u6821\u9A8C\uFF0C\u4E3B\u8981\u68C0\u9A8C\u5757\u7684\u7956\u5148\u662F\u5426\u5DF2\u77E5\u4EE5\u53CA\u5757\u662F\u5426\u5DF2\u77E5\uFF0C\u63A5\u7740\u4F1A\u8C03\u7528<code>verifyHeader</code>\u8FDB\u884C\u66F4\u6DF1\u7684\u6821\u9A8C\uFF0C\u4E5F\u662F\u6700\u6838\u5FC3\u7684\u6821\u9A8C\uFF0C\u5927\u6982\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><ol><li>header.Extra<em>\u4E0D\u53EF\u8D85\u8FC732\u5B57\u8282</em></li><li>header.Time<em>\u4E0D\u80FD\u8D85\u8FC715\u79D2\uFF0C15\u79D2\u4EE5\u540E\u7684\u5C31\u88AB\u8BA4\u5B9A\u4E3A\u672A\u6765\u7684\u5757</em></li><li><em>\u5F53\u524Dheader\u7684\u65F6\u95F4\u6233\u4E0D\u53EF\u4EE5\u7B49\u4E8E\u7236\u5757\u7684\u65F6\u95F4\u6233</em></li><li><em>\u6839\u636E\u96BE\u5EA6\u8BA1\u7B97\u7B97\u6CD5\u5F97\u51FA\u7684expected\u5FC5\u987B\u548Cheader.Difficulty \u4E00\u81F4\u3002</em></li><li><em>Gas limit \u8981 &lt;= 2 ^ 63-1</em></li><li><em>gasUsed&lt;= gasLimit</em></li><li><em>Gas limit \u8981\u5728\u5141\u8BB8\u8303\u56F4\u5185</em></li><li><em>\u5757\u53F7\u5FC5\u987B\u662F\u7236\u5757\u52A01</em></li><li><em>\u6839\u636E ethash.VerifySeal\u53BB\u9A8C\u8BC1\u5757\u662F\u5426\u6EE1\u8DB3POW\u96BE\u5EA6\u8981\u6C42</em></li></ol><p>\u5230\u6B64\u9A8C\u8BC1header\u7684\u4E8B\u60C5\u5C31\u505A\u5B8C\u4E86\u3002</p><p>\u2463\uFF1A\u5FAA\u73AF\u6821\u9A8Cbody</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>block<span class="token punctuation">,</span> err <span class="token operator">:=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token operator">-</span><span class="token operator">&gt;</span> ValidateBody
  <span class="token operator">-</span><span class="token operator">&gt;</span> VerifyUncles
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5305\u62EC\u4EE5\u4E0B\u9519\u8BEF\uFF1A</p><ul><li><strong>block</strong>\u5DF2\u77E5</li><li><strong>uncle</strong>\u592A\u591A</li><li>\u91CD\u590D\u7684<strong>uncle</strong></li><li><strong>uncle</strong>\u662F\u7956\u5148\u5757</li><li><strong>uncle</strong>\u54C8\u5E0C\u4E0D\u5339\u914D</li><li>\u4EA4\u6613\u54C8\u5E0C\u4E0D\u5339\u914D</li><li>\u672A\u77E5\u7956\u5148</li><li>\u7956\u5148\u5757\u7684\u72B6\u6001\u65E0\u6CD5\u83B7\u53D6</li></ul><p>4.1 \u5982\u679C<code>block</code>\u5B58\u5728\uFF0C\u4E14\u662F\u5DF2\u77E5\u5757\uFF0C\u5219\u5199\u5165\u5DF2\u77E5\u5757\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span><span class="token function">writeKnownBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.2 \u5982\u679C\u662F\u7956\u5148\u5757\u7684\u72B6\u6001\u65E0\u6CD5\u83B7\u53D6\u7684\u9519\u8BEF\uFF0C\u5219\u4F5C\u4E3A\u4FA7\u94FE\u63D2\u5165\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span><span class="token function">insertSideChain</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> it<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4.3 \u5982\u679C\u662F\u672A\u6765\u5757\u6216\u8005\u672A\u77E5\u7956\u5148\uFF0C\u5219\u6DFB\u52A0\u672A\u6765\u5757\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span><span class="token function">addFutureBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u7684\u6DFB\u52A0 futureBlock\uFF0C\u4F1A\u88AB\u6254\u8FDBfutureBlocks\u91CC\u9762\u53BB\uFF0C\u5728NewBlockChain\u7684\u65F6\u5019\u4F1A\u5F00\u542F\u65B0\u7684goroutine:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">go</span> bc<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>bc <span class="token operator">*</span>BlockChain<span class="token punctuation">)</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  futureTimer <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">NewTicker</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
  <span class="token keyword">for</span><span class="token punctuation">{</span>
    <span class="token keyword">select</span><span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token operator">&lt;-</span>futureTimer<span class="token punctuation">.</span>C<span class="token punctuation">:</span>
   bc<span class="token punctuation">.</span><span class="token function">procFutureBlocks</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>bc <span class="token operator">*</span>BlockChain<span class="token punctuation">)</span> <span class="token function">procFutureBlocks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> hash <span class="token operator">:=</span> <span class="token keyword">range</span> bc<span class="token punctuation">.</span>futureBlocks<span class="token punctuation">.</span><span class="token function">Keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> block<span class="token punctuation">,</span> exist <span class="token operator">:=</span> bc<span class="token punctuation">.</span>futureBlocks<span class="token punctuation">.</span><span class="token function">Peek</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span> exist <span class="token punctuation">{</span>
   blocks <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>blocks<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token operator">...</span>
  <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> blocks <span class="token punctuation">{</span>
   bc<span class="token punctuation">.</span><span class="token function">InsertChain</span><span class="token punctuation">(</span>blocks<span class="token punctuation">[</span>i <span class="token punctuation">:</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F1A\u5F00\u542F\u4E00\u4E2A\u8BA1\u65F6\u5668\uFF0C\u6BCF5\u79D2\u5C31\u4F1A\u53BB\u6267\u884C\u63D2\u5165\u8FD9\u4E9B\u672A\u6765\u7684\u5757\u3002</p><p>4.4 \u5982\u679C\u662F\u5176\u4ED6\u9519\u8BEF\uFF0C\u76F4\u63A5\u4E2D\u65AD\uFF0C\u5E76\u4E14\u62A5\u544A\u574F\u5757\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span>futureBlocks<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
bc<span class="token punctuation">.</span><span class="token function">reportBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A\u6CA1\u6709\u6821\u9A8C\u9519\u8BEF</p><p>5.1 \u5982\u679C\u662F\u574F\u5757\uFF0C\u5219\u62A5\u544A\uFF1B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> BadHashes<span class="token punctuation">[</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
   bc<span class="token punctuation">.</span><span class="token function">reportBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> ErrBlacklistedHash<span class="token punctuation">)</span>
   <span class="token keyword">return</span> it<span class="token punctuation">.</span>index<span class="token punctuation">,</span> ErrBlacklistedHash
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.2 \u5982\u679C\u662F\u672A\u77E5\u5757\uFF0C\u5219\u5199\u5165\u672A\u77E5\u5757\uFF1B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> err <span class="token operator">==</span> ErrKnownBlock <span class="token punctuation">{</span>
   logger <span class="token operator">:=</span> log<span class="token punctuation">.</span>Debug
   <span class="token keyword">if</span> bc<span class="token punctuation">.</span>chainConfig<span class="token punctuation">.</span>Clique <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    logger <span class="token operator">=</span> log<span class="token punctuation">.</span>Warn
   <span class="token punctuation">}</span>
  <span class="token operator">...</span>
   <span class="token keyword">if</span> err <span class="token operator">:=</span> bc<span class="token punctuation">.</span><span class="token function">writeKnownBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> it<span class="token punctuation">.</span>index<span class="token punctuation">,</span> err
   <span class="token punctuation">}</span>
   stats<span class="token punctuation">.</span>processed<span class="token operator">++</span>
   lastCanon <span class="token operator">=</span> block
   <span class="token keyword">continue</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.3 \u6839\u636E\u7ED9\u5B9Atrie\uFF0C\u521B\u5EFA\u72B6\u6001\uFF1B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>parent <span class="token operator">:=</span> it<span class="token punctuation">.</span><span class="token function">previous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> parent <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   parent <span class="token operator">=</span> bc<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  statedb<span class="token punctuation">,</span> err <span class="token operator">:=</span> state<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>Root<span class="token punctuation">,</span> bc<span class="token punctuation">.</span>stateCache<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.4\u6267\u884C\u5757\u4E2D\u7684\u4EA4\u6613\uFF1A (<strong>\u7A0D\u540E\u4F1A\u5728\u4E0B\u8282\u5BF9\u6B64\u8FDB\u884C\u8BE6\u7EC6\u5206\u6790</strong>)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>receipts<span class="token punctuation">,</span> logs<span class="token punctuation">,</span> usedGas<span class="token punctuation">,</span> err <span class="token operator">:=</span> bc<span class="token punctuation">.</span>processor<span class="token punctuation">.</span><span class="token function">Process</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> statedb<span class="token punctuation">,</span> bc<span class="token punctuation">.</span>vmConfig<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.5 \u4F7F\u7528\u9ED8\u8BA4\u7684validator\u6821\u9A8C\u72B6\u6001\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span>validator<span class="token punctuation">.</span><span class="token function">ValidateState</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> statedb<span class="token punctuation">,</span> receipts<span class="token punctuation">,</span> usedGas<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.6 \u5C06\u5757\u5199\u5165\u5230\u533A\u5757\u94FE\u4E2D\u5E76\u83B7\u53D6\u72B6\u6001\uFF1A (<strong>\u7A0D\u540E\u4F1A\u5728\u4E0B\u8282\u5BF9\u6B64\u8FDB\u884C\u8BE6\u7EC6\u5206\u6790</strong>)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>status<span class="token punctuation">,</span> err <span class="token operator">:=</span> bc<span class="token punctuation">.</span><span class="token function">writeBlockWithState</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> receipts<span class="token punctuation">,</span> logs<span class="token punctuation">,</span> statedb<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2465\uFF1A\u6821\u9A8C\u5199\u5165\u533A\u5757\u7684\u72B6\u6001</p><ul><li><code>CanonStatTy</code> \uFF1A \u63D2\u5165\u6210\u529F\u65B0\u7684block</li><li><code>SideStatTy</code>\uFF1A\u63D2\u5165\u6210\u529F\u65B0\u7684\u5206\u53C9\u533A\u5757</li><li><code>Default</code>\uFF1A\u63D2\u5165\u672A\u77E5\u72B6\u6001\u7684block</li></ul><p>\u2466\uFF1A\u5982\u679C\u8FD8\u6709\u5757\uFF0C\u5E76\u4E14\u662F\u672A\u6765\u5757\u7684\u8BDD\uFF0C\u90A3\u4E48\u5C06\u5757\u6DFB\u52A0\u5230\u672A\u6765\u5757\u7684\u7F13\u5B58\u4E2D\u53BB</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>bc<span class="token punctuation">.</span><span class="token function">addFutureBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u81F3\u6B64<code>insertChain</code> \u5927\u6982\u4ECB\u7ECD\u6E05\u695A\u3002</p><hr><h3 id="\u6267\u884C\u5757\u4E2D\u4EA4\u6613" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u5757\u4E2D\u4EA4\u6613" aria-hidden="true">#</a> \u6267\u884C\u5757\u4E2D\u4EA4\u6613</h3><p>\u5728\u6211\u4EEC\u5C06\u533A\u5757\u4E0A\u94FE\uFF0C\u6709\u4E00\u4E2A\u5173\u952E\u6B65\u9AA4\u5C31\u662F\u6267\u884C\u533A\u5757\u4EA4\u6613\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>receipts<span class="token punctuation">,</span> logs<span class="token punctuation">,</span> usedGas<span class="token punctuation">,</span> err <span class="token operator">:=</span> bc<span class="token punctuation">.</span>processor<span class="token punctuation">.</span><span class="token function">Process</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> statedb<span class="token punctuation">,</span> bc<span class="token punctuation">.</span>vmConfig<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FDB\u5165\u51FD\u6570\uFF0C\u5177\u4F53\u5206\u6790\uFF1A</p><p>\u2460\uFF1A\u51C6\u5907\u8981\u7528\u7684\u5B57\u6BB5\uFF0C\u5FAA\u73AF\u6267\u884C\u4EA4\u6613</p><p>\u5173\u952E\u51FD\u6570\uFF1A<code>ApplyTransaction</code>,\u6839\u636E\u6B64\u51FD\u6570\u8FD4\u56DE\u6536\u636E\u3002</p><p>1.1 \u5C06\u4EA4\u6613\u7ED3\u6784\u8F6C\u6210<code>Message</code>\u7ED3\u6784</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>msg<span class="token punctuation">,</span> err <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">AsMessage</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span><span class="token function">MakeSigner</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>1.2 \u521B\u5EFA\u8981\u5728EVM\u73AF\u5883\u4E2D\u4F7F\u7528\u7684\u65B0\u4E0A\u4E0B\u6587</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>context <span class="token operator">:=</span> <span class="token function">NewEVMContext</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> header<span class="token punctuation">,</span> bc<span class="token punctuation">,</span> author<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>1.3 \u521B\u5EFA\u4E00\u4E2A\u65B0\u73AF\u5883\uFF0C\u5176\u4E2D\u5305\u542B\u6709\u5173\u4E8B\u52A1\u548C\u8C03\u7528\u673A\u5236\u7684\u6240\u6709\u76F8\u5173\u4FE1\u606F\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>vmenv := vm.NewEVM(context, statedb, config, cfg)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>1.4 \u5C06\u4EA4\u6613\u5E94\u7528\u5230\u5F53\u524D\u72B6\u6001(\u5305\u542B\u5728env\u4E2D)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token boolean">_</span><span class="token punctuation">,</span> gas<span class="token punctuation">,</span> failed<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">ApplyMessage</span><span class="token punctuation">(</span>vmenv<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> gp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u90E8\u5206\u4EE3\u7801\u7EE7\u7EED\u8DDF\u8FDB\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ApplyMessage</span><span class="token punctuation">(</span>evm <span class="token operator">*</span>vm<span class="token punctuation">.</span>EVM<span class="token punctuation">,</span> msg Message<span class="token punctuation">,</span> gp <span class="token operator">*</span>GasPool<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">uint64</span><span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token function">NewStateTransition</span><span class="token punctuation">(</span>evm<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> gp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TransitionDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>NewStateTransition</code> \u662F\u4E00\u4E2A\u72B6\u6001\u8F6C\u6362\u5BF9\u8C61\uFF0C<code>TransitionDb()</code> \u8D1F\u8D23\u8F6C\u6362\u4EA4\u6613\u72B6\u6001\uFF0C\u7EE7\u7EED\u8DDF\u8FDB\uFF1A \u5148\u8FDB\u884C<code>preCheck</code>\uFF0C\u7528\u6765\u6821\u9A8C<code>nonce</code>\u662F\u5426\u6B63\u786E</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>st<span class="token punctuation">.</span><span class="token function">preCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> st<span class="token punctuation">.</span>msg<span class="token punctuation">.</span><span class="token function">CheckNonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  nonce <span class="token operator">:=</span> st<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">GetNonce</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span>msg<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> nonce <span class="token operator">&lt;</span> st<span class="token punctuation">.</span>msg<span class="token punctuation">.</span><span class="token function">Nonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> ErrNonceTooHigh
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> nonce <span class="token operator">&gt;</span> st<span class="token punctuation">.</span>msg<span class="token punctuation">.</span><span class="token function">Nonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> ErrNonceTooLow
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BA1\u7B97\u6240\u9700<code>gas</code>\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>gas<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">IntrinsicGas</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span>data<span class="token punctuation">,</span> contractCreation<span class="token punctuation">,</span> homestead<span class="token punctuation">,</span> istanbul<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6263\u9664<code>gas</code>\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> err <span class="token operator">=</span> st<span class="token punctuation">.</span><span class="token function">useGas</span><span class="token punctuation">(</span>gas<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> err
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>st <span class="token operator">*</span>StateTransition<span class="token punctuation">)</span> <span class="token function">useGas</span><span class="token punctuation">(</span>amount <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> st<span class="token punctuation">.</span>gas <span class="token operator">&lt;</span> amount <span class="token punctuation">{</span>
  <span class="token keyword">return</span> vm<span class="token punctuation">.</span>ErrOutOfGas
 <span class="token punctuation">}</span>
 st<span class="token punctuation">.</span>gas <span class="token operator">-=</span> amount
 <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662F\u5408\u7EA6\u4EA4\u6613,\u5219\u65B0\u5EFA\u4E00\u4E2A\u5408\u7EA6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ret<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> st<span class="token punctuation">.</span>gas<span class="token punctuation">,</span> vmerr <span class="token operator">=</span> evm<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> st<span class="token punctuation">.</span>data<span class="token punctuation">,</span> st<span class="token punctuation">.</span>gas<span class="token punctuation">,</span> st<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u662F\u5408\u7EA6\u4EA4\u6613\uFF0C\u5219\u589E\u52A0<code>nonce</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>st<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">SetNonce</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> st<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">GetNonce</span><span class="token punctuation">(</span>sender<span class="token punctuation">.</span><span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
ret<span class="token punctuation">,</span> st<span class="token punctuation">.</span>gas<span class="token punctuation">,</span> vmerr <span class="token operator">=</span> evm<span class="token punctuation">.</span><span class="token function">Call</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> st<span class="token punctuation">.</span><span class="token function">to</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> st<span class="token punctuation">.</span>data<span class="token punctuation">,</span> st<span class="token punctuation">.</span>gas<span class="token punctuation">,</span> st<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u5173\u6CE8<code>evm.call</code>\u65B9\u6CD5\uFF1A</p><p><em>\u68C0\u67E5\u8D26\u6237\u662F\u5426\u6709\u8DB3\u591F\u7684\u6C14\u4F53\u8FDB\u884C\u8F6C\u8D26</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token operator">!</span>evm<span class="token punctuation">.</span>Context<span class="token punctuation">.</span><span class="token function">CanTransfer</span><span class="token punctuation">(</span>evm<span class="token punctuation">.</span>StateDB<span class="token punctuation">,</span> caller<span class="token punctuation">.</span><span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> gas<span class="token punctuation">,</span> ErrInsufficientBalance
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u5982\u679CstateDb\u4E0D\u5B58\u5728\u6B64\u8D26\u6237\uFF0C\u5219\u65B0\u5EFA\u8D26\u6237</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token operator">!</span>evm<span class="token punctuation">.</span>StateDB<span class="token punctuation">.</span><span class="token function">Exist</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  evm<span class="token punctuation">.</span>StateDB<span class="token punctuation">.</span><span class="token function">CreateAccount</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u6267\u884C\u8F6C\u8D26\u64CD\u4F5C</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>evm<span class="token punctuation">.</span><span class="token function">Transfer</span><span class="token punctuation">(</span>evm<span class="token punctuation">.</span>StateDB<span class="token punctuation">,</span> caller<span class="token punctuation">.</span><span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">.</span><span class="token function">Address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>\u521B\u5EFA\u5408\u7EA6</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>contract <span class="token operator">:=</span> <span class="token function">NewContract</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> to<span class="token punctuation">,</span> value<span class="token punctuation">,</span> gas<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>\u6267\u884C\u5408\u7EA6</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ret<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">run</span><span class="token punctuation">(</span>evm<span class="token punctuation">,</span> contract<span class="token punctuation">,</span> input<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6DFB\u52A0\u4F59\u989D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> st<span class="token punctuation">.</span>state<span class="token punctuation">.</span><span class="token function">AddBalance</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span>evm<span class="token punctuation">.</span>Coinbase<span class="token punctuation">,</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Mul</span><span class="token punctuation">(</span><span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetUint64</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">gasUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> st<span class="token punctuation">.</span>gasPrice<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u56DE\u5230<code>ApplyTransaction</code></p><p>1.5 \u8C03\u7528<code>IntermediateRoot</code>\u8BA1\u7B97\u72B6\u6001<code>trie</code>\u7684\u5F53\u524D\u6839\u54C8\u5E0C\u503C\u3002</p><p>\u6700\u7EC8\u786E\u5B9A\u6240\u6709\u80AE\u810F\u7684\u5B58\u50A8\u72B6\u6001\uFF0C\u5E76\u628A\u5B83\u4EEC\u5199\u8FDB<code>trie</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>s<span class="token punctuation">.</span><span class="token function">Finalise</span><span class="token punctuation">(</span>deleteEmptyObjects<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C06trie\u6839\u8BBE\u7F6E\u4E3A\u5F53\u524D\u7684\u6839\u54C8\u5E0C\u5E76\u5C06\u7ED9\u5B9A\u7684<code>object</code>\u5199\u5165\u5230<code>trie</code>\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>obj<span class="token punctuation">.</span><span class="token function">updateRoot</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>db<span class="token punctuation">)</span>
s<span class="token punctuation">.</span><span class="token function">updateStateObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>1.6 \u521B\u5EFA\u6536\u636E</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>receipt <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">NewReceipt</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> failed<span class="token punctuation">,</span> <span class="token operator">*</span>usedGas<span class="token punctuation">)</span>
 receipt<span class="token punctuation">.</span>TxHash <span class="token operator">=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 receipt<span class="token punctuation">.</span>GasUsed <span class="token operator">=</span> gas
 <span class="token keyword">if</span> msg<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  receipt<span class="token punctuation">.</span>ContractAddress <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">CreateAddress</span><span class="token punctuation">(</span>vmenv<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>Origin<span class="token punctuation">,</span> tx<span class="token punctuation">.</span><span class="token function">Nonce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// Set the receipt logs and create a bloom for filtering</span>
 receipt<span class="token punctuation">.</span>Logs <span class="token operator">=</span> statedb<span class="token punctuation">.</span><span class="token function">GetLogs</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 receipt<span class="token punctuation">.</span>Bloom <span class="token operator">=</span> types<span class="token punctuation">.</span><span class="token function">CreateBloom</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span>Receipts<span class="token punctuation">{</span>receipt<span class="token punctuation">}</span><span class="token punctuation">)</span>
 receipt<span class="token punctuation">.</span>BlockHash <span class="token operator">=</span> statedb<span class="token punctuation">.</span><span class="token function">BlockHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 receipt<span class="token punctuation">.</span>BlockNumber <span class="token operator">=</span> header<span class="token punctuation">.</span>Number
 receipt<span class="token punctuation">.</span>TransactionIndex <span class="token operator">=</span> <span class="token function">uint</span><span class="token punctuation">(</span>statedb<span class="token punctuation">.</span><span class="token function">TxIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u6700\u540E\u5B8C\u6210\u533A\u5757\uFF0C\u5E94\u7528\u4EFB\u4F55\u5171\u8BC6\u5F15\u64CE\u7279\u5B9A\u7684\u989D\u5916\u529F\u80FD(\u4F8B\u5982\u533A\u5757\u5956\u52B1)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>p<span class="token punctuation">.</span>engine<span class="token punctuation">.</span><span class="token function">Finalize</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>bc<span class="token punctuation">,</span> header<span class="token punctuation">,</span> statedb<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Uncles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">Finalize</span><span class="token punctuation">(</span>chain consensus<span class="token punctuation">.</span>ChainReader<span class="token punctuation">,</span> header <span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> state <span class="token operator">*</span>state<span class="token punctuation">.</span>StateDB<span class="token punctuation">,</span> txs <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Transaction<span class="token punctuation">,</span> uncles <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// Accumulate any block and uncle rewards and commit the final state root</span>
 <span class="token comment">//\u7D2F\u79EF\u4EFB\u4F55\u5757\u548C\u53D4\u53D4\u7684\u5956\u52B1\u5E76\u63D0\u4EA4\u6700\u7EC8\u72B6\u6001\u6811\u6839</span>
 <span class="token function">accumulateRewards</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> header<span class="token punctuation">,</span> uncles<span class="token punctuation">)</span>
 header<span class="token punctuation">.</span>Root <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">IntermediateRoot</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsEIP158</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u4E3A\u6B62<code>bc.processor.Process</code>\u6267\u884C\u5B8C\u6BD5\uFF0C\u8FD4\u56DE<code>receipts</code>.</p><hr><h3 id="\u6821\u9A8C\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u6821\u9A8C\u72B6\u6001" aria-hidden="true">#</a> \u6821\u9A8C\u72B6\u6001</h3><p>\u5927\u81F4\u5305\u62EC4\u90E8\u5206\u7684\u6821\u9A8C\uFF1A</p><p>\u2460\uFF1A\u6821\u9A8C\u4F7F\u7528\u7684<code>gas</code>\u662F\u5426\u76F8\u7B49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> block<span class="token punctuation">.</span><span class="token function">GasUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> usedGas <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid gas used (remote: %d local: %d)&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">GasUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> usedGas<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u6821\u9A8Cbloom\u662F\u5426\u76F8\u7B49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>rbloom <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">CreateBloom</span><span class="token punctuation">(</span>receipts<span class="token punctuation">)</span>
 <span class="token keyword">if</span> rbloom <span class="token operator">!=</span> header<span class="token punctuation">.</span>Bloom <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid bloom (remote: %x  local: %x)&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>Bloom<span class="token punctuation">,</span> rbloom<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u6821\u9A8C\u6536\u636E\u54C8\u5E0C\u662F\u5426\u76F8\u7B49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>receiptSha <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">DeriveSha</span><span class="token punctuation">(</span>receipts<span class="token punctuation">)</span>
 <span class="token keyword">if</span> receiptSha <span class="token operator">!=</span> header<span class="token punctuation">.</span>ReceiptHash <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid receipt root hash (remote: %x local: %x)&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>ReceiptHash<span class="token punctuation">,</span> receiptSha<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u6821\u9A8Cmerkleroot \u662F\u5426\u76F8\u7B49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> root <span class="token operator">:=</span> statedb<span class="token punctuation">.</span><span class="token function">IntermediateRoot</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">IsEIP158</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> header<span class="token punctuation">.</span>Root <span class="token operator">!=</span> root <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid merkle root (remote: %x local: %x)&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>Root<span class="token punctuation">,</span> root<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="\u5C06\u5757\u548C\u5173\u8054\u72B6\u6001\u5199\u5165\u5230\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#\u5C06\u5757\u548C\u5173\u8054\u72B6\u6001\u5199\u5165\u5230\u6570\u636E\u5E93" aria-hidden="true">#</a> \u5C06\u5757\u548C\u5173\u8054\u72B6\u6001\u5199\u5165\u5230\u6570\u636E\u5E93</h3><p>\u51FD\u6570\uFF1A<strong>WriteBlockWithState</strong></p><p>\u2460\uFF1A\u8BA1\u7B97\u5757\u7684<code>total td</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ptd <span class="token operator">:=</span> bc<span class="token punctuation">.</span><span class="token function">GetTd</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2461\uFF1A\u6DFB\u52A0\u5F85\u63D2\u5165\u5757\u672C\u8EAB\u7684<code>td</code> ,\u5E76\u5C06\u6B64\u65F6\u6700\u65B0\u7684<code>total td</code> \u5B58\u50A8\u5230\u6570\u636E\u5E93\u4E2D\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>bc.hc.WriteTd(block.Hash(), block.NumberU64(), externTd)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5C06\u5757\u7684<code>header</code>\u548C<code>body</code>\u5206\u522B\u5E8F\u5217\u5316\u5230\u6570\u636E\u5E93</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>rawdb<span class="token punctuation">.</span><span class="token function">WriteBlock</span><span class="token punctuation">(</span>bc<span class="token punctuation">.</span>db<span class="token punctuation">,</span> block<span class="token punctuation">)</span>
 <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">WriteBody</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u5C06\u72B6\u6001\u5199\u5165\u5E95\u5C42\u5185\u5B58<code>Trie</code>\u6570\u636E\u5E93</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>state<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span>bc<span class="token punctuation">.</span>chainConfig<span class="token punctuation">.</span><span class="token function">IsEIP158</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2464\uFF1A\u904D\u5386\u8282\u70B9\u6570\u636E\u5199\u5165\u5230\u78C1\u76D8</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>triedb<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Root<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2465\uFF1A\u5B58\u50A8\u4E00\u4E2A\u5757\u7684\u6240\u6709\u4EA4\u6613\u6570\u636E</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>rawdb<span class="token punctuation">.</span><span class="token function">WriteReceipts</span><span class="token punctuation">(</span>batch<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> receipts<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2466\uFF1A\u5C06\u65B0\u7684<code>head</code>\u5757\u6CE8\u5165\u5230\u5F53\u524D\u94FE\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> status <span class="token operator">==</span> CanonStatTy <span class="token punctuation">{</span>
  bc<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B58\u50A8\u5206\u914D\u7ED9\u89C4\u8303\u5757\u7684\u54C8\u5E0C</li><li>\u5B58\u50A8\u5934\u5757\u7684\u54C8\u5E0C</li><li>\u5B58\u50A8\u6700\u65B0\u7684\u5FEB</li><li>\u66F4\u65B0<code>currentFastBlock</code></li></ul><p>\u2467\uFF1A\u53D1\u9001<code>chainEvent</code>\u4E8B\u4EF6\u6216\u8005<code>ChainSideEvent</code>\u4E8B\u4EF6\u6216\u8005<code>ChainHeadEvent</code>\u4E8B\u4EF6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> status <span class="token operator">==</span> CanonStatTy <span class="token punctuation">{</span>
  bc<span class="token punctuation">.</span>chainFeed<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>ChainEvent<span class="token punctuation">{</span>Block<span class="token punctuation">:</span> block<span class="token punctuation">,</span> Hash<span class="token punctuation">:</span> block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Logs<span class="token punctuation">:</span> logs<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>logs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
   bc<span class="token punctuation">.</span>logsFeed<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>logs<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">if</span> emitHeadEvent <span class="token punctuation">{</span>
   bc<span class="token punctuation">.</span>chainHeadFeed<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>ChainHeadEvent<span class="token punctuation">{</span>Block<span class="token punctuation">:</span> block<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  bc<span class="token punctuation">.</span>chainSideFeed<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>ChainSideEvent<span class="token punctuation">{</span>Block<span class="token punctuation">:</span> block<span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64writeBlockWithState \u7ED3\u675F\uFF0C\u4ECE\u4E0A\u9762\u53EF\u4EE5\u77E5\u9053\uFF0CinsertChain\u7684\u6700\u7EC8\u8FD8\u662F\u8C03\u7528\u4E86<code>writeBlockWithState</code>\u7684insert\u65B9\u6CD5\u5B8C\u6210\u4E86\u6700\u7EC8\u7684\u4E0A\u94FE\u5165\u5E93\u52A8\u4F5C\u3002</p><p>\u6700\u540E\u6574\u4E2A<code>insertChain</code> <em>\u51FD\u6570\uFF0C\u5982\u679C\u5DF2\u7ECF\u5B8C\u6210\u4E86\u63D2\u5165\uFF0C\u5C31\u53D1\u9001<code>chain head</code>\u4E8B\u4EF6</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> lastCanon <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> bc<span class="token punctuation">.</span><span class="token function">CurrentBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> lastCanon<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   bc<span class="token punctuation">.</span>chainHeadFeed<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span>ChainHeadEvent<span class="token punctuation">{</span>lastCanon<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BD4\u8F83\u5E38\u89C1\u7684\u6709\u8FD9\u4E48\u51E0\u5904\u4F1A\u8FDB\u884C\u8BA2\u9605<code>chain head</code> \u4E8B\u4EF6\uFF1A</p><ol><li><p>\u5728tx_pool.go\u4E2D\uFF0C\u6536\u5230\u6B64\u4E8B\u4EF6\u4F1A\u8FDB\u884C\u6362head\u7684\u64CD\u4F5C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>pool<span class="token punctuation">.</span>chainHeadSub <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">SubscribeChainHeadEvent</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>chainHeadCh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u5728worker.go\u4E2D,\u5176\u4ED6\u8282\u70B9\u7684\u77FF\u5DE5\u6536\u5230\u6B64\u4E8B\u4EF6\u5C31\u4F1A\u505C\u6B62\u5F53\u524D\u7684\u6316\u77FF\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u4E2A\u6316\u77FF\u4EFB\u52A1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>worker<span class="token punctuation">.</span>chainHeadSub <span class="token operator">=</span> eth<span class="token punctuation">.</span><span class="token function">BlockChain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SubscribeChainHeadEvent</span><span class="token punctuation">(</span>worker<span class="token punctuation">.</span>chainHeadCh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>\u5230\u6B64\u6574\u4E2A\u533A\u5757\u4E0A\u94FE\u5165\u5E93\u5C31\u5B8C\u6210\u4E86\uFF0C\u6700\u540E\u518D\u9001\u4E0A\u4E00\u5F20\u603B\u7ED3\u7684\u56FE\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glyqxrr9p0j31530u0jz0.jpg" alt="image-20201224104046731"></p><hr><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,159),k={href:"https://mindcarver.cn",target:"_blank",rel:"noopener noreferrer"},r=n("p",null,"< >",-1);function d(v,b){const s=u("ExternalLinkIcon");return t(),p("div",null,[l,n("blockquote",null,[n("p",null,[n("a",k,[e("https://mindcarver.cn"),o(s)])]),r])])}const h=a(i,[["render",d],["__file","10.etheric_fang_block_on_the_chain_into_the_Treasury.html.vue"]]);export{h as default};
