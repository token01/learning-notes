import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.c8d9b7d0.js";const p={},e=t(`<h1 id="python\u722C\u53D6\u8C46\u74E3\u5F71\u8BC4\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#python\u722C\u53D6\u8C46\u74E3\u5F71\u8BC4\u5206\u6790" aria-hidden="true">#</a> python\u722C\u53D6\u8C46\u74E3\u5F71\u8BC4\u5206\u6790</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>\u8BFB\u53D6\u8C46\u74E3\u5F71\u8BC4\uFF0C\u5E76\u6839\u636E\u5F71\u8BC4\u5206\u6790\u51FA\u5F71\u8BC4\u5173\u952E\u8BCD</p><h2 id="_2-\u6D89\u53CA\u77E5\u8BC6\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-\u6D89\u53CA\u77E5\u8BC6\u70B9" aria-hidden="true">#</a> 2. \u6D89\u53CA\u77E5\u8BC6\u70B9</h2><ol><li><p>requests.Session() \u4F1A\u8BDD\u4FDD\u6301</p><blockquote><p>requests\u5E93\u7684session\u4F1A\u8BDD\u5BF9\u8C61\u53EF\u4EE5\u8DE8\u8BF7\u6C42\u4FDD\u6301\u67D0\u4E9B\u53C2\u6570\uFF0C\u8BF4\u767D\u4E86\uFF0C\u5C31\u662F\u6BD4\u5982\u4F60\u4F7F\u7528session\u6210\u529F\u7684\u767B\u5F55\u4E86\u67D0\u4E2A\u7F51\u7AD9\uFF0C\u5219\u5728\u518D\u6B21\u4F7F\u7528\u8BE5session\u5BF9\u8C61\u6C42\u6C42\u8BE5\u7F51\u7AD9\u7684\u5176\u4ED6\u7F51\u9875\u90FD\u4F1A\u9ED8\u8BA4\u4F7F\u7528\u8BE5session\u4E4B\u524D\u4F7F\u7528\u7684cookie\u7B49\u53C2\u6570</p></blockquote></li><li><p>requests \u8BF7\u6C42\u7F51\u7EDC\u4EE3\u7406</p><p>\u5982\u679C\u9700\u8981\u4F7F\u7528\u4EE3\u7406\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u4E3A\u4EFB\u610F\u8BF7\u6C42\u65B9\u6CD5\u63D0\u4F9B proxies \u53C2\u6570\u6765\u914D\u7F6E\u5355\u4E2A\u8BF7\u6C42:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import requests 
proxies = { &quot;http&quot;: &quot;http://10.10.1.10:3128&quot;, &quot;https&quot;: &quot;http://10.10.1.10:1080&quot;, } 
requests.get(&quot;http://example.org&quot;, proxies=proxies)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8F93\u5165</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>kind = int(input(&quot;\u8BF7\u9009\u62E9\u641C\u7D22\u7C7B\u578B\uFF1A1.\u6839\u636E\u7535\u5F71\u94FE\u63A5 2.\u6839\u636E\u7535\u5F71id 3.\u6839\u636E\u7535\u5F71\u540D\uFF1A&quot;))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>selenium \u6A21\u62DF\u64CD\u4F5C,\u901A\u8FC7xpath\u67E5\u627E\u5143\u7D20</p></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> drive = webdriver.Chrome()
    drive.get(html.url)
    first_result = drive.find_element_by_xpath(&#39;//*[@id=&quot;root&quot;]/div/div[2]/div[1]/div[1]/div[1]/div/div/div[1]/a&#39;).get_attribute(&#39;href&#39;)
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><p>\u4F7F\u7528lxml \u89E3\u6790\u8BC4\u8BBA\u6570\u636E</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  from lxml import etree
  path_tree = etree.HTML(html.text)
  comment_divs = xpath_tree.xpath(&#39;//*[@id=&quot;comments&quot;]/div&#39;)

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>PIL\u56FE\u50CF\u5904\u7406</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>from PIL import Image
Image.open(&#39;Emile.jpg&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>jieba \u7ED3\u5DF4\u4E2D\u6587\u5206\u8BCD</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import jieba
jieba.cut(comment_txt)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8BCD\u4E91</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
def create_word_cloud():
    # \u8BBE\u7F6E\u8BCD\u4E91\u5F62\u72B6\u56FE\u7247,numpy+PIL\u65B9\u5F0F\u8BFB\u53D6\u56FE\u7247
    wc_mask = np.array(Image.open(&#39;Emile.jpg&#39;))
    # \u6570\u636E\u6E05\u6D17\u8BCD\u5217\u8868
    stop_words = [&#39;\u7684&#39;,&#39;\u662F&#39;,&#39;\u6211&#39;,&#39;\u90FD&#39;,&#39;\u4E86&#39;,&#39;\u6709&#39;,&#39;\u5728&#39;,&#39;\u7ED9&#39;,&#39;\u5417&#39;,&#39;\u548C&#39;,&#39;\u5C31\u662F&#39;, &#39;\u4E0D\u662F&#39;, &#39;\u4F46\u662F&#39;, &#39;\u8FD8\u662F&#39;, &#39;\u53EA\u662F&#39;, &#39;\u8FD9\u6837&#39;, &#39;\u8FD9\u4E2A&#39;, &#39;\u4E00\u4E2A&#39;, &#39;\u4EC0\u4E48&#39;, &#39;\u7535\u5F71&#39;, &#39;\u6CA1\u6709&#39;]
    # \u8BBE\u7F6E\u8BCD\u4E91\u7684\u4E00\u4E9B\u914D\u7F6E\uFF0C\u5982\uFF1A\u5B57\u4F53\uFF0C\u80CC\u666F\u8272\uFF0C\u8BCD\u4E91\u5F62\u72B6\uFF0C\u5927\u5C0F,\u751F\u6210\u8BCD\u4E91\u5BF9\u8C61
    wc = WordCloud(mask=wc_mask,font_path=WC_FONT_PATH,  background_color=&quot;white&quot;, stopwords=stop_words, max_words=50, scale=4,
                   max_font_size=50, random_state=42)
    # \u751F\u6210\u8BCD\u4E91
    wc.generate(cut_word())

    # \u5728\u53EA\u8BBE\u7F6Emask\u7684\u60C5\u51B5\u4E0B,\u4F60\u5C06\u4F1A\u5F97\u5230\u4E00\u4E2A\u62E5\u6709\u56FE\u7247\u5F62\u72B6\u7684\u8BCD\u4E91
    # \u5F00\u59CB\u753B\u56FE
    plt.imshow(wc, interpolation=&quot;bilinear&quot;)
    # \u4E3A\u4E91\u56FE\u53BB\u6389\u5750\u6807\u8F74
    plt.axis(&quot;off&quot;)
    plt.figure()
    plt.show()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>matplotlib\u7ED8\u56FE</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>from matplotlib import pyplot as plt
plt.rcParams[&#39;font.sans-serif&#39;]=[&#39;SimHei&#39;] #\u7528\u6765\u6B63\u5E38\u663E\u793A\u4E2D\u6587\u6807\u7B7E
plt.rcParams[&#39;axes.unicode_minus&#39;]=False #\u7528\u6765\u6B63\u5E38\u663E\u793A\u8D1F\u53F7

def data_show():
    f = open(&#39;result.txt&#39;, &#39;r&#39;, encoding=&#39;UTF-8&#39;)
    list = f.readlines()
    sentimentslist = []
    for i in list:
        s = SnowNLP(i)
        sentimentslist.append(s.sentiments)
    print(sentimentslist)
    print(len(sentimentslist))
    plt.hist(sentimentslist, bins=10, facecolor=&#39;g&#39;)
    plt.xlabel(&#39;\u60C5\u611F\u6982\u7387&#39;)
    plt.ylabel(&#39;\u6570\u91CF&#39;)
    plt.title(&#39;\u60C5\u611F\u5206\u6790&#39;)
    plt.show()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_3-\u5B8C\u6574\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_3-\u5B8C\u6574\u4EE3\u7801" aria-hidden="true">#</a> 3. \u5B8C\u6574\u4EE3\u7801</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree
<span class="token keyword">import</span> time
<span class="token keyword">import</span> random
<span class="token keyword">import</span> jieba
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;font.sans-serif&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;SimHei&#39;</span><span class="token punctuation">]</span> <span class="token comment">#\u7528\u6765\u6B63\u5E38\u663E\u793A\u4E2D\u6587\u6807\u7B7E</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.unicode_minus&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span> <span class="token comment">#\u7528\u6765\u6B63\u5E38\u663E\u793A\u8D1F\u53F7</span>
<span class="token keyword">from</span> wordcloud <span class="token keyword">import</span> WordCloud
<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlencode
<span class="token keyword">from</span> snownlp <span class="token keyword">import</span> SnowNLP

<span class="token keyword">import</span> io
<span class="token keyword">import</span> sys
sys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> io<span class="token punctuation">.</span>TextIOWrapper<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token builtin">buffer</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&#39;gb18030&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf8&#39;)</span>


<span class="token comment"># \u8BBE\u7F6E\u8BCD\u4E91\u8DEF\u5F84</span>
WC_FONT_PATH <span class="token operator">=</span> <span class="token string">r&#39;C:\\Windows\\Fonts\\simfang.ttf&#39;</span>

session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
proxies<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&quot;http&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://218.95.37.252:3128&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;http&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;http://60.205.159.195:3128&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0&#39;</span><span class="token punctuation">,</span>
               <span class="token string">&quot;Referer&quot;</span><span class="token punctuation">:</span><span class="token string">&#39;https://accounts.douban.com/passport/login&#39;</span>
           <span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">&quot;https://accounts.douban.com/j/mobile/login/basic&quot;</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;13616008640&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;zsz123456&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;remember&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;false&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token comment"># \u8BBE\u7F6E\u4EE3\u7406\uFF0C\u4ECE\u897F\u523A\u514D\u8D39\u4EE3\u7406\u7F51\u7AD9\u4E0A\u627E\u51FA\u4E00\u4E2A\u53EF\u7528\u7684\u4EE3\u7406IP</span>
    user <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>text<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">spider_lianjie</span><span class="token punctuation">(</span>lianjie<span class="token punctuation">)</span><span class="token punctuation">:</span>
    page <span class="token operator">=</span> <span class="token number">0</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;result.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        comment_url <span class="token operator">=</span> lianjie<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;comments&#39;</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;start&#39;</span><span class="token punctuation">:</span>page<span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;limit&#39;</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;sort&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;new_score&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;P&#39;</span>
        <span class="token punctuation">}</span>
        html <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>comment_url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
        page <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB\u722C\u53D6\u7B2C{0}\u9875***********************************************************************\uFF1A&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        xpath_tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>html<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        comment_divs <span class="token operator">=</span> xpath_tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;comments&quot;]/div&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment_divs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token comment"># \u83B7\u53D6\u6BCF\u4E00\u6761\u8BC4\u8BBA\u7684\u5177\u4F53\u5185\u5BB9</span>
            <span class="token keyword">for</span> comment_div <span class="token keyword">in</span> comment_divs<span class="token punctuation">:</span>
                comment <span class="token operator">=</span> comment_div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;./div[2]/p/span/text()&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u7EA6\u5171{0}\u9875\u8BC4\u8BBA&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>


<span class="token keyword">def</span> <span class="token function">spider_id</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    page <span class="token operator">=</span> <span class="token number">0</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;result.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        move_url <span class="token operator">=</span> <span class="token string">&#39;https://movie.douban.com/subject/&#39;</span><span class="token operator">+</span><span class="token builtin">id</span><span class="token operator">+</span><span class="token string">&#39;/comments?&#39;</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;start&#39;</span><span class="token punctuation">:</span>page<span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;limit&#39;</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;sort&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;new_score&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;P&#39;</span>
        <span class="token punctuation">}</span>
        html <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>move_url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        page <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB\u722C\u53D6\u7B2C{0}\u9875***********************************************************************\uFF1A&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        xpath_tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>html<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        comment_divs <span class="token operator">=</span> xpath_tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;comments&quot;]/div&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment_divs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token comment"># \u83B7\u53D6\u6BCF\u4E00\u6761\u8BC4\u8BBA\u7684\u5177\u4F53\u5185\u5BB9</span>
            <span class="token keyword">for</span> comment_div <span class="token keyword">in</span> comment_divs<span class="token punctuation">:</span>
                comment <span class="token operator">=</span> comment_div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;./div[2]/p/span/text()&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u7EA6\u5171{0}\u9875\u8BC4\u8BBA&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>


<span class="token keyword">def</span> <span class="token function">spider_name</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    params <span class="token operator">=</span> urlencode<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;search_text&#39;</span><span class="token punctuation">:</span>name<span class="token punctuation">}</span><span class="token punctuation">)</span>
    move_url <span class="token operator">=</span> <span class="token string">&#39;https://movie.douban.com/subject_search&#39;</span>
    html <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>move_url<span class="token punctuation">,</span>headers <span class="token operator">=</span> headers<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span>proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
    <span class="token comment"># \u5229\u7528selenium\u6A21\u62DF\u6D4F\u89C8\u5668\uFF0C\u627E\u5230\u7535\u5F71\u7684url</span>
    drive <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>
    drive<span class="token punctuation">.</span>get<span class="token punctuation">(</span>html<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    first_result <span class="token operator">=</span> drive<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;root&quot;]/div/div[2]/div[1]/div[1]/div[1]/div/div/div[1]/a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
    page <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token comment"># \u6BCF\u6B21\u5199\u5165\u524D\u6E05\u7A7A\u6587\u4EF6</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;result.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>html<span class="token punctuation">.</span>encoding<span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        move_url <span class="token operator">=</span> first_result<span class="token operator">+</span> <span class="token string">&#39;/comments?&#39;</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;start&#39;</span><span class="token punctuation">:</span> page <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;limit&#39;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string">&#39;sort&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new_score&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;P&#39;</span>
        <span class="token punctuation">}</span>
        html <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>move_url<span class="token punctuation">,</span> headers <span class="token operator">=</span> headers<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
        page <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB\u722C\u53D6\u7B2C{0}\u9875***********************************************************************\uFF1A&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        xpath_tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>html<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        comment_divs <span class="token operator">=</span> xpath_tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;comments&quot;]/div&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment_divs<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token comment"># \u83B7\u53D6\u6BCF\u4E00\u6761\u8BC4\u8BBA\u7684\u5177\u4F53\u5185\u5BB9</span>
            <span class="token keyword">for</span> comment_div <span class="token keyword">in</span> comment_divs<span class="token punctuation">:</span>
                comment <span class="token operator">=</span> comment_div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;./div[2]/p/span/text()&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u7EA6\u5171{0}\u9875\u8BC4\u8BBA&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>


<span class="token comment"># \u5B9A\u4E49\u641C\u7D22\u7C7B\u578B</span>
<span class="token keyword">def</span> <span class="token function">spider_kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    kind <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u9009\u62E9\u641C\u7D22\u7C7B\u578B\uFF1A1.\u6839\u636E\u7535\u5F71\u94FE\u63A5 2.\u6839\u636E\u7535\u5F71id 3.\u6839\u636E\u7535\u5F71\u540D\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> kind <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        lianjie <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7535\u5F71\u94FE\u63A5:&quot;</span><span class="token punctuation">)</span>
        spider_lianjie<span class="token punctuation">(</span>lianjie<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> kind <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token builtin">id</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7535\u5F71id:&quot;</span><span class="token punctuation">)</span>
        spider_id<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> kind <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u7535\u5F71\u540D:&quot;</span><span class="token punctuation">)</span>
        spider_name<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;sorry,\u8F93\u5165\u9519\u8BEF\uFF01&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">cut_word</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;result.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
        <span class="token comment"># \u8BFB\u53D6\u6587\u4EF6\u91CC\u9762\u7684\u5168\u90E8\u5185\u5BB9</span>
        comment_txt <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># \u4F7F\u7528jieba\u8FDB\u884C\u5206\u5272</span>
        wordlist <span class="token operator">=</span> jieba<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>comment_txt<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;***********&#39;</span><span class="token punctuation">,</span>wordlist<span class="token punctuation">)</span>
        wl <span class="token operator">=</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>wordlist<span class="token punctuation">)</span>
        <span class="token comment"># print(wl)</span>
        <span class="token keyword">return</span> wl


<span class="token keyword">def</span> <span class="token function">create_word_cloud</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u8BBE\u7F6E\u8BCD\u4E91\u5F62\u72B6\u56FE\u7247,numpy+PIL\u65B9\u5F0F\u8BFB\u53D6\u56FE\u7247</span>
    wc_mask <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;Emile.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># \u6570\u636E\u6E05\u6D17\u8BCD\u5217\u8868</span>
    stop_words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u7684&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u662F&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u6211&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u90FD&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u4E86&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u6709&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u5728&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u7ED9&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u5417&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u548C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u5C31\u662F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E0D\u662F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4F46\u662F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8FD8\u662F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u53EA\u662F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8FD9\u6837&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u8FD9\u4E2A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4E00\u4E2A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u4EC0\u4E48&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u7535\u5F71&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u6CA1\u6709&#39;</span><span class="token punctuation">]</span>
    <span class="token comment"># \u8BBE\u7F6E\u8BCD\u4E91\u7684\u4E00\u4E9B\u914D\u7F6E\uFF0C\u5982\uFF1A\u5B57\u4F53\uFF0C\u80CC\u666F\u8272\uFF0C\u8BCD\u4E91\u5F62\u72B6\uFF0C\u5927\u5C0F,\u751F\u6210\u8BCD\u4E91\u5BF9\u8C61</span>
    wc <span class="token operator">=</span> WordCloud<span class="token punctuation">(</span>mask<span class="token operator">=</span>wc_mask<span class="token punctuation">,</span>font_path<span class="token operator">=</span>WC_FONT_PATH<span class="token punctuation">,</span>  background_color<span class="token operator">=</span><span class="token string">&quot;white&quot;</span><span class="token punctuation">,</span> stopwords<span class="token operator">=</span>stop_words<span class="token punctuation">,</span> max_words<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>
                   max_font_size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>
    <span class="token comment"># \u751F\u6210\u8BCD\u4E91</span>
    wc<span class="token punctuation">.</span>generate<span class="token punctuation">(</span>cut_word<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># \u5728\u53EA\u8BBE\u7F6Emask\u7684\u60C5\u51B5\u4E0B,\u4F60\u5C06\u4F1A\u5F97\u5230\u4E00\u4E2A\u62E5\u6709\u56FE\u7247\u5F62\u72B6\u7684\u8BCD\u4E91</span>
    <span class="token comment"># \u5F00\u59CB\u753B\u56FE</span>
    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>wc<span class="token punctuation">,</span> interpolation<span class="token operator">=</span><span class="token string">&quot;bilinear&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># \u4E3A\u4E91\u56FE\u53BB\u6389\u5750\u6807\u8F74</span>
    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">data_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;result.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;UTF-8&#39;</span><span class="token punctuation">)</span>
    <span class="token builtin">list</span> <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sentimentslist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>
        s <span class="token operator">=</span> SnowNLP<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        sentimentslist<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">.</span>sentiments<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>sentimentslist<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sentimentslist<span class="token punctuation">)</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>sentimentslist<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;\u60C5\u611F\u6982\u7387&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;\u6570\u91CF&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;\u60C5\u611F\u5206\u6790&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    login<span class="token punctuation">(</span><span class="token punctuation">)</span>
    spider_kind<span class="token punctuation">(</span><span class="token punctuation">)</span>
    create_word_cloud<span class="token punctuation">(</span><span class="token punctuation">)</span>
    data_show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[e];function i(c,l){return s(),a("div",null,o)}const k=n(p,[["render",i],["__file","python-douban-rating.html.vue"]]);export{k as default};
