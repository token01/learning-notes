import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as p,a as n,b as t,d as o,f as c,r as i}from"./app.da5f94a0.js";const l={},u=c(`<h2 id="fetcher-\u529F\u80FD\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#fetcher-\u529F\u80FD\u6982\u8FF0" aria-hidden="true">#</a> Fetcher \u529F\u80FD\u6982\u8FF0</h2><p>\u533A\u5757\u6570\u636E\u540C\u6B65\u5206\u4E3A\u88AB\u52A8\u540C\u6B65\u548C\u4E3B\u52A8\u540C\u6B65:</p><ul><li><p>\u88AB\u52A8\u540C\u6B65\u662F\u6307\u672C\u5730\u8282\u70B9\u6536\u5230\u5176\u4ED6\u8282\u70B9\u7684\u4E00\u4E9B<strong>\u5E7F\u64AD</strong>\u7684\u6D88\u606F\uFF0C\u7136\u540E\u8BF7\u6C42\u533A\u5757\u4FE1\u606F\u3002</p></li><li><p>\u4E3B\u52A8\u540C\u6B65\u662F\u6307\u8282\u70B9\u4E3B\u52A8\u5411\u5176\u4ED6\u8282\u70B9\u8BF7\u6C42\u533A\u5757\u6570\u636E\uFF0C\u6BD4\u5982geth\u521A\u542F\u52A8\u65F6\u7684syning\uFF0C\u4EE5\u53CA\u8FD0\u884C\u65F6\u5B9A\u65F6\u548C\u76F8\u90BB\u8282\u70B9\u540C\u6B65</p></li></ul><p><code>Fetcher</code>\u8D1F\u8D23\u88AB\u52A8\u540C\u6B65\uFF0C\u4E3B\u8981\u505A\u4EE5\u4E0B\u4E8B\u60C5\uFF1A</p><ul><li>\u6536\u5230\u5B8C\u6574\u7684block\u5E7F\u64AD\u6D88\u606F(NewBlockMsg)</li><li>\u6536\u5230blockhash\u5E7F\u64AD\u6D88\u606F(NewBlockHashesMsg)</li></ul><p>\u8FD9\u4E24\u4E2A\u6D88\u606F\u53C8\u662F\u5206\u522B\u7531 <code>peer.AsyncSendNewBlockHash</code> \u548C <code>peer.AsyncSendNewBlock</code> \u4E24\u4E2A\u65B9\u6CD5\u53D1\u51FA\u7684\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u53EA\u6709\u5728\u77FF\u5DE5\u6316\u5230\u65B0\u7684\u533A\u5757\u65F6\u624D\u4F1A\u88AB\u8C03\u7528\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u8BA2\u9605\u672C\u5730\u6316\u5230\u65B0\u7684\u533A\u5757\u7684\u6D88\u606F</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>pm <span class="token operator">*</span>ProtocolManager<span class="token punctuation">)</span> <span class="token function">minedBroadcastLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> obj <span class="token operator">:=</span> <span class="token keyword">range</span> pm<span class="token punctuation">.</span>minedBlockSub<span class="token punctuation">.</span><span class="token function">Chan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> ev<span class="token punctuation">,</span> ok <span class="token operator">:=</span> obj<span class="token punctuation">.</span>Data<span class="token punctuation">.</span><span class="token punctuation">(</span>core<span class="token punctuation">.</span>NewMinedBlockEvent<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
            pm<span class="token punctuation">.</span><span class="token function">BroadcastBlock</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// First propagate block to peers</span>
            pm<span class="token punctuation">.</span><span class="token function">BroadcastBlock</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// Only then announce to the rest</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>pm <span class="token operator">*</span>ProtocolManager<span class="token punctuation">)</span> <span class="token function">BroadcastBlock</span><span class="token punctuation">(</span>block <span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> propagate <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token operator">...</span>
    <span class="token keyword">if</span> propagate <span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token operator">...</span>
        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> peer <span class="token operator">:=</span> <span class="token keyword">range</span> transfer <span class="token punctuation">{</span>
            peer<span class="token punctuation">.</span><span class="token function">AsyncSendNewBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> td<span class="token punctuation">)</span> <span class="token comment">//\u53D1\u9001\u533A\u5757\u6570\u636E</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> pm<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">HasBlock</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> peer <span class="token operator">:=</span> <span class="token keyword">range</span> peers <span class="token punctuation">{</span>
            peer<span class="token punctuation">.</span><span class="token function">AsyncSendNewBlockHash</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span> <span class="token comment">//\u53D1\u9001\u533A\u5757\u54C8\u5E0C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u5F53\u67D0\u4E2A\u77FF\u5DE5\u4EA7\u751F\u4E86\u65B0\u7684\u533A\u5757\u3001\u5E76\u5C06\u8FD9\u4E2A\u65B0\u533A\u5757\u5E7F\u64AD\u7ED9\u5176\u5B83\u8282\u70B9\uFF0C\u800C<strong>\u5176\u5B83\u8FDC\u7A0B\u8282\u70B9</strong>\u6536\u5230\u5E7F\u64AD\u7684\u6D88\u606F\u65F6\uFF0C\u624D\u4F1A\u7528\u5230 <code>fetcher</code> \u6A21\u5757\u53BB\u540C\u6B65\u8FD9\u4E9B\u533A\u5757\u3002</p><hr><h2 id="fetcher\u7684\u72B6\u6001\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#fetcher\u7684\u72B6\u6001\u5B57\u6BB5" aria-hidden="true">#</a> fetcher\u7684\u72B6\u6001\u5B57\u6BB5</h2><p>\u5728 <code>Fetcher</code> \u5185\u90E8\u5BF9\u533A\u5757\u8FDB\u884C\u540C\u6B65\u65F6\uFF0C\u4F1A\u88AB\u5206\u6210\u5982\u4E0B\u51E0\u4E2A\u9636\u6BB5\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u9636\u6BB5\u90FD\u6709\u4E00\u4E2A\u72B6\u6001\u5B57\u6BB5\u4E0E\u4E4B\u5BF9\u5E94\uFF0C\u7528\u6765\u8BB0\u5F55\u8FD9\u4E2A\u9636\u6BB5\u7684\u6570\u636E\uFF1A</p><ul><li><code>Fetcher.announced</code>:\u6B64\u9636\u6BB5\u4EE3\u8868\u8282\u70B9\u5BA3\u79F0\u4EA7\u751F\u4E86\u65B0\u7684\u533A\u5757\uFF08\u8FD9\u4E2A\u65B0\u4EA7\u751F\u7684\u533A\u5757\u4E0D\u4E00\u5B9A\u662F\u81EA\u5DF1\u4EA7\u751F\u7684\uFF0C\u4E5F\u53EF\u80FD\u662F\u540C\u6B65\u4E86\u5176\u5B83\u8282\u70B9\u65B0\u4EA7\u751F\u7684\u533A\u5757\uFF09\uFF0C<code>Fetcher</code> \u5BF9\u8C61\u5C06\u76F8\u5173\u4FE1\u606F\u653E\u5230 <code>Fetcher.announced</code> \u4E2D\uFF0C\u7B49\u5F85\u4E0B\u8F7D\u3002</li><li><code>Fetcher.fetching</code>\uFF1A\u6B64\u9636\u6BB5\u4EE3\u8868\u4E4B\u524D\u300Cannounced\u300D\u7684\u533A\u5757\u6B63\u5728\u88AB\u4E0B\u8F7D\u3002</li><li><code>Fetcher.fetched</code>\uFF1A\u4EE3\u8868\u533A\u5757\u7684 <code>header</code> \u5DF2\u4E0B\u8F7D\u6210\u529F\uFF0C\u73B0\u5728\u7B49\u5F85\u4E0B\u8F7D <code>body</code>\u3002</li><li><code>Fetcher.completing</code>\uFF1A\u4EE3\u8868 <code>body</code> \u5DF2\u7ECF\u53D1\u8D77\u4E86\u4E0B\u8F7D\uFF0C\u6B63\u5728\u7B49\u5F85 <code>body</code> \u4E0B\u8F7D\u6210\u529F\u3002</li><li><code>Fetcher.queued</code>:\u4EE3\u8868 <code>body</code> \u5DF2\u7ECF\u4E0B\u8F7D\u6210\u529F\u3002\u56E0\u6B64\u4E00\u4E2A\u533A\u5757\u7684\u6570\u636E\uFF1A<code>header</code> \u548C body \u90FD\u5DF2\u4E0B\u8F7D\u5B8C\u6210\uFF0C\u6B64\u533A\u5757\u6B63\u5728\u7B49\u5F85\u5199\u5165\u672C\u5730\u6570\u636E\u5E93\u3002</li></ul><h2 id="fetcher-\u540C\u6B65\u533A\u5757\u54C8\u5E0C" tabindex="-1"><a class="header-anchor" href="#fetcher-\u540C\u6B65\u533A\u5757\u54C8\u5E0C" aria-hidden="true">#</a> Fetcher \u540C\u6B65\u533A\u5757\u54C8\u5E0C</h2><p>\u800C\u65B0\u4EA7\u751F\u533A\u5757\u65F6\uFF0C\u4F1A\u4F7F\u7528\u6D88\u606F <code>NewBlockHashesMsg</code> \u548C <code>NewBlockMsg</code> \u5BF9\u5176\u8FDB\u884C\u4F20\u64AD\u3002\u56E0\u6B64 <code>Fetcher</code> \u5BF9\u8C61\u4E5F\u662F\u4ECE\u8FD9\u4E24\u4E2A\u6D88\u606F\u5904\u53D1\u73B0\u65B0\u7684\u533A\u5757\u4FE1\u606F\u7684\u3002\u5148\u6765\u770B\u540C\u6B65\u533A\u5757\u54C8\u5E0C\u7684\u8FC7\u7A0B\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> NewBlockHashesMsg<span class="token punctuation">:</span>
  <span class="token keyword">var</span> announces newBlockHashesData
  <span class="token keyword">if</span> err <span class="token operator">:=</span> msg<span class="token punctuation">.</span><span class="token function">Decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>announces<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">errResp</span><span class="token punctuation">(</span>ErrDecode<span class="token punctuation">,</span> <span class="token string">&quot;%v: %v&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Mark the hashes as present at the remote node</span>
  <span class="token comment">// \u5C06hash \u6807\u8BB0\u5B58\u5728\u4E8E\u8FDC\u7A0B\u8282\u70B9\u4E0A</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> block <span class="token operator">:=</span> <span class="token keyword">range</span> announces <span class="token punctuation">{</span>
   p<span class="token punctuation">.</span><span class="token function">MarkBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>Hash<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Schedule all the unknown hashes for retrieval \u68C0\u7D22\u6240\u6709\u672A\u77E5\u54C8\u5E0C</span>
  unknown <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span>newBlockHashesData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>announces<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> block <span class="token operator">:=</span> <span class="token keyword">range</span> announces <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token operator">!</span>pm<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">HasBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>Hash<span class="token punctuation">,</span> block<span class="token punctuation">.</span>Number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    unknown <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>unknown<span class="token punctuation">,</span> block<span class="token punctuation">)</span> <span class="token comment">// \u672C\u5730\u4E0D\u5B58\u5728\u7684\u8BDD\u5C31\u6254\u5230unkonwn\u91CC\u9762</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> block <span class="token operator">:=</span> <span class="token keyword">range</span> unknown <span class="token punctuation">{</span>
   pm<span class="token punctuation">.</span>fetcher<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> block<span class="token punctuation">.</span>Hash<span class="token punctuation">,</span> block<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>RequestOneHeader<span class="token punctuation">,</span> p<span class="token punctuation">.</span>RequestBodies<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u5C06\u63A5\u6536\u7684\u54C8\u5E0C\u6807\u8BB0\u5728\u8FDC\u7A0B\u8282\u70B9\u4E0A\uFF0C\u7136\u540E\u53BB\u672C\u5730\u68C0\u7D22\u662F\u5426\u6709\u8FD9\u4E2A\u54C8\u5E0C\uFF0C\u5982\u679C\u672C\u5730\u6570\u636E\u5E93\u4E0D\u5B58\u5728\u7684\u8BDD\uFF0C\u5C31\u653E\u5230<code>unknown</code>\u91CC\u9762\uFF0C\u7136\u540E\u901A\u77E5\u672C\u5730\u7684<code>fetcher</code>\u6A21\u5757\u518D\u53BB\u8FDC\u7A0B\u8282\u70B9\u4E0A\u8BF7\u6C42\u6B64\u533A\u5757\u7684<code>header</code>\u548C<code>body</code>\u3002 \u63A5\u4E0B\u6765\u8FDB\u5165\u5230<code>fetcher.Notify</code>\u65B9\u6CD5\u4E2D\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>func (f *Fetcher) Notify(peer string, hash common.Hash, number uint64, time time.Time,
 headerFetcher headerRequesterFn, bodyFetcher bodyRequesterFn) error {
 block := &amp;announce{
  hash:        hash,
  number:      number,
  time:        time,
  origin:      peer,
  fetchHeader: headerFetcher,
  fetchBodies: bodyFetcher,
 }
 select {
 case f.notify &lt;- block:
  return nil
 case &lt;-f.quit:
  return errTerminated
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u6784\u9020\u4E86\u4E00\u4E2A <code>announce</code> \u7ED3\u6784\uFF0C\u5E76\u5C06\u5176\u53D1\u9001\u7ED9\u4E86 <code>Fetcher.notify</code> \u8FD9\u4E2A channel\u3002\u6CE8\u610F <code>announce</code> \u8FD9\u4E2A\u7ED3\u6784\u91CC\u5E26\u7740\u4E0B\u8F7D header \u548C body \u7684\u65B9\u6CD5\uFF1A <code>fetchHeader</code> \u548C <code>fetchBodies</code> \u3002\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5728\u4E0B\u9762\u7684\u8FC7\u7A0B\u4E2D\u4F1A\u8BB2\u5230\u3002 \u63A5\u4E0B\u6765\u6211\u4EEC\u8FDB\u5165\u5230<code>fetcher.go</code>\u7684loop\u51FD\u6570\u4E2D\uFF0C\u627E\u5230<code>notify</code>\uFF0C\u5206\u4EE5\u4E0B\u51E0\u4E2A\u5185\u5BB9\uFF1A</p><p>\u2460\uFF1A\u6821\u9A8C\u9632\u6B62Dos\u653B\u51FB(\u9650\u5236\u4E3A256\u4E2A)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>count <span class="token operator">:=</span> f<span class="token punctuation">.</span>announces<span class="token punctuation">[</span>notification<span class="token punctuation">.</span>origin<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
   <span class="token keyword">if</span> count <span class="token operator">&gt;</span> hashLimit <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Peer exceeded outstanding announces&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peer&quot;</span><span class="token punctuation">,</span> notification<span class="token punctuation">.</span>origin<span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token punctuation">,</span> hashLimit<span class="token punctuation">)</span>
    propAnnounceDOSMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">break</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u65B0\u6765\u7684\u5757\u53F7\u5FC5\u987B\u6EE1\u8DB3 $chainHeight - blockno &lt; 7$ \u6216\u8005 $blockno - chainHeight &lt; 32$</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> notification<span class="token punctuation">.</span>number <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> dist <span class="token operator">:=</span> <span class="token function">int64</span><span class="token punctuation">(</span>notification<span class="token punctuation">.</span>number<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">int64</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">chainHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> dist <span class="token operator">&lt;</span> <span class="token operator">-</span>maxUncleDist <span class="token operator">||</span> dist <span class="token operator">&gt;</span> maxQueueDist <span class="token punctuation">{</span>
   <span class="token operator">...</span>   <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u51C6\u5907\u4E0B\u8F7D<code>header</code>\u7684<code>fetching</code>\u4E2D\u5B58\u5728\u6B64\u54C8\u5E0C\u5219\u8DF3\u8FC7</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>if _, ok := f.fetching[notification.hash]; ok { 
  break
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u51C6\u5907\u4E0B\u8F7D<code>body</code>\u7684<code>completing</code>\u4E2D\u5B58\u5728\u6B64\u54C8\u5E0C\u4E5F\u8DF3\u8FC7</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>notification<span class="token punctuation">.</span>hash<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
    <span class="token keyword">break</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A\u5F53\u786E\u5B9A<code>fetching</code>\u548C<code>completing</code>\u4E0D\u5B58\u5728\u6B64\u533A\u5757\u54C8\u5E0C\u65F6\uFF0C\u5219\u628A\u6B64\u533A\u5757\u54C8\u5E0C\u653E\u5165\u5230<code>announced</code>\u4E2D\uFF0C\u51C6\u5907\u62C9\u53D6<code>header</code>\u548C<code>body</code>\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>f.announced[notification.hash] = append(f.announced[notification.hash], notification)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2465\uFF1A\u5982\u679C <code>Fetcher.announced</code> \u4E2D\u53EA\u6709\u521A\u624D\u65B0\u52A0\u5165\u7684\u8FD9\u4E00\u4E2A\u533A\u5757\u54C8\u5E0C\uFF0C\u90A3\u4E48\u8C03\u7528 <code>Fetcher.rescheduleFetch</code> \u91CD\u65B0\u8BBE\u7F6E\u53D8\u91CF <code>fetchTimer</code> \u7684\u5468\u671F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>announced<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">.</span><span class="token function">rescheduleFetch</span><span class="token punctuation">(</span>fetchTimer<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u62C9\u53D6header" tabindex="-1"><a class="header-anchor" href="#\u62C9\u53D6header" aria-hidden="true">#</a> \u62C9\u53D6header</h3><p>\u63A5\u4E0B\u6765\u5C31\u662F\u5230<code>fetchTimer.C</code>\u51FD\u6570\u4E2D\uFF1A\u8FDB\u884C\u62C9\u53D6header\u7684\u64CD\u4F5C\u4E86,\u5177\u4F53\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><p>\u2460\uFF1A\u9009\u62E9\u8981\u4E0B\u8F7D\u7684\u533A\u5757\uFF0C\u4ECE <code>announced</code> \u8F6C\u79FB\u5230 <code>fetching</code> \u4E2D</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>for hash, announces := range f.announced {
    if time.Since(announces[0].time) &gt; arriveTimeout-gatherSlack {
    // \u968F\u673A\u6311\u4E00\u4E2A\u8FDB\u884Cfetching
     announce := announces[rand.Intn(len(announces))]
     f.forgetHash(hash)

     // If the block still didn&#39;t arrive, queue for fetching
     if f.getBlock(hash) == nil {
      request[announce.origin] = append(request[announce.origin], hash)
      f.fetching[hash] = announce //
     }
    }
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u53D1\u9001\u4E0B\u8F7D <code>header</code> \u7684\u8BF7\u6C42</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>//\u53D1\u9001\u6240\u6709\u7684header\u8BF7\u6C42
   for peer, hashes := range request {
    log.Trace(&quot;Fetching scheduled headers&quot;, &quot;peer&quot;, peer, &quot;list&quot;, hashes)
    fetchHeader, hashes := f.fetching[hashes[0]].fetchHeader, hashes
    go func() {
     if f.fetchingHook != nil {
      f.fetchingHook(hashes)
     }
     for _, hash := range hashes {
      headerFetchMeter.Mark(1)
      fetchHeader(hash) 
     }
    }()
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u518D\u56DE\u5230<code>f.notify</code>\u51FD\u6570\u4E2D\uFF0C\u627E\u5230<code>p.RequestOneHeader</code>\uFF0C\u53D1\u9001<code>GetBlockHeadersMsg</code>\u7ED9\u8FDC\u7A0B\u8282\u70B9\uFF0C\u7136\u540E\u8FDC\u7A0B\u8282\u70B9\u518D\u901A\u8FC7<code>case msg.Code == GetBlockHeadersMsg</code>\u8FDB\u884C\u5904\u7406\uFF0C\u672C\u5730\u533A\u5757\u94FE\u4F1A\u8FD4\u56DEheaders\uFF0C\u7136\u540E\u518D\u53D1\u9001\u56DE\u53BB\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>origin = pm.blockchain.GetHeaderByHash(query.Origin.Hash)
...
p.SendBlockHeaders(headers)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u65F6\u5019\u6211\u4EEC\u8BF7\u6C42\u7684<code>headers</code>\u88AB\u8FDC\u7A0B\u8282\u70B9\u7ED9\u53D1\u9001\u56DE\u6765\u4E86\uFF0C\u53C8\u662F\u901A\u8FC7\u65B0\u7684\u6D88\u606F<code>BlockHeadersMsg</code>\u6765\u4F20\u9012\u7684,\u5F53\u8BF7\u6C42\u7684 <code>header</code> \u5230\u6765\u65F6\uFF0C\u4F1A\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u6765\u8FC7\u6EE4header \uFF1A</p><ol><li><code>Fetcher.FilterHeaders</code> \u901A\u77E5 <code>Fetcher</code> \u5BF9\u8C61</li></ol><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> BlockHeadersMsg<span class="token punctuation">:</span>
<span class="token operator">...</span><span class="token punctuation">.</span>
filter <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span>
<span class="token keyword">if</span> filter <span class="token punctuation">{</span>
  headers <span class="token operator">=</span> pm<span class="token punctuation">.</span>fetcher<span class="token punctuation">.</span><span class="token function">FilterHeaders</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.<code>downloader.DeliverHeaders</code> \u901A\u77E5<code>downloader</code>\u5BF9\u8C61</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span>filter <span class="token punctuation">{</span>
   err <span class="token operator">:=</span> pm<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span><span class="token function">DeliverHeaders</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> headers<span class="token punctuation">)</span>
  <span class="token operator">...</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>downloader</code>\u76F8\u5173\u7684\u653E\u5728\u63A5\u4E0B\u7684\u6587\u7AE0\u63A2\u8BA8\u3002\u7EE7\u7EED\u770B<code>FilterHeaders</code>:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>filter <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token operator">*</span>headerFilterTask<span class="token punctuation">)</span>
 <span class="token keyword">select</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> f<span class="token punctuation">.</span>headerFilter <span class="token operator">&lt;-</span> filter<span class="token punctuation">:</span> \u2460
<span class="token operator">...</span><span class="token punctuation">.</span>
 <span class="token keyword">select</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> filter <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>headerFilterTask<span class="token punctuation">{</span>peer<span class="token punctuation">:</span> peer<span class="token punctuation">,</span> headers<span class="token punctuation">:</span> headers<span class="token punctuation">,</span> time<span class="token punctuation">:</span> time<span class="token punctuation">}</span><span class="token punctuation">:</span> \u2461
<span class="token operator">...</span>
 <span class="token keyword">select</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> task <span class="token operator">:=</span> <span class="token operator">&lt;-</span>filter<span class="token punctuation">:</span> \u2462
  <span class="token keyword">return</span> task<span class="token punctuation">.</span>headers
<span class="token operator">...</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u8981\u5206\u4E3A3\u4E2A\u6B65\u9AA4\uFF1A</p><ol><li>\u5148\u53D1\u4E00\u4E2A\u901A\u4FE1\u7528\u7684 <code>channel</code> \u7ED9 <code>headerFilter</code></li><li>\u5C06\u8981\u8FC7\u6EE4\u7684 <code>headerFilterTask</code> \u53D1\u9001\u7ED9 <code>filter</code></li><li>\u68C0\u7D22\u8FC7\u6EE4\u540E\u5269\u4F59\u7684\u6807\u9898</li></ol><p>\u4E3B\u8981\u7684\u5904\u7406\u6B65\u9AA4\u8FD8\u662F\u5728<code>loop</code>\u51FD\u6570\u4E2D\u7684<code>filter := &lt;-f.headerFilter</code>\uFF0C\u5728\u63A2\u8BA8\u5904\u7406\u524D\uFF0C\u5148\u4E86\u89E3\u4E09\u4E2A\u53C2\u6570\u7684\u542B\u4E49\uFF1A</p><ul><li><code>unknown\uFF1A</code>\u672A\u77E5\u7684header</li><li><code>incomplete\uFF1A</code><strong>header</strong>\u62C9\u53D6\u5B8C\u6210\uFF0C\u4F46\u662F<strong>body</strong>\u8FD8\u6CA1\u6709\u62C9\u53D6</li><li><code>complete\uFF1A</code><strong>header</strong>\u548C<strong>body</strong>\u90FD\u62C9\u53D6\u5B8C\u6210\uFF0C\u4E00\u4E2A\u5B8C\u6574\u7684\u5757\uFF0C\u53EF\u5BFC\u5165\u5230\u6570\u636E\u5E93</li></ul><p>\u63A5\u4E0B\u6765\u6B63\u5F0F\u8FDB\u5165\u5230<code>for _, header := range task.headers {}</code>\u5FAA\u73AF\u4E2D: <strong>\u8FD9\u662F\u7B2C\u4E00\u6BB5\u91CD\u8981\u7684\u5FAA\u73AF</strong></p><p>\u2460\uFF1A\u5224\u65AD\u662F\u5426\u662F\u5728<code>fetching</code>\u4E2D\u7684header\uFF0C\u5E76\u4E14\u4E0D\u662F\u5176\u4ED6\u540C\u6B65\u7B97\u6CD5\u7684<code>header</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> announce <span class="token operator">:=</span> f<span class="token punctuation">.</span>fetching<span class="token punctuation">[</span>hash<span class="token punctuation">]</span><span class="token punctuation">;</span> announce <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> announce<span class="token punctuation">.</span>origin <span class="token operator">==</span> task<span class="token punctuation">.</span>peer <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>fetched<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>queued<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5982\u679C\u4F20\u9012\u7684<code>header</code>\u4E0E\u627F\u8BFA\u7684<code>number</code>\u4E0D\u5339\u914D\uFF0C\u5220\u9664<code>peer</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> header<span class="token punctuation">.</span>Number<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> announce<span class="token punctuation">.</span>number <span class="token punctuation">{</span>
  f<span class="token punctuation">.</span><span class="token function">dropPeer</span><span class="token punctuation">(</span>announce<span class="token punctuation">.</span>origin<span class="token punctuation">)</span>
  f<span class="token punctuation">.</span><span class="token function">forgetHash</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5224\u65AD\u6B64\u533A\u5757\u5728\u672C\u5730\u662F\u5426\u5DF2\u5B58\u5728,\u5982\u679C\u4E0D\u5B58\u5728\u4E14\u53EA\u6709<code>header</code>\uFF08\u7A7A\u5757\uFF09\uFF0C\u76F4\u63A5\u653E\u5165<code>complete</code>\u4EE5\u53CA<code>f.completing</code>\u4E2D\uFF0C\u5426\u5219\u5C31\u653E\u5165\u5230<code>incomplete</code>\u4E2D\u7B49\u5F85\u540C\u6B65<code>body</code>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> f<span class="token punctuation">.</span><span class="token function">getBlock</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      announce<span class="token punctuation">.</span>header <span class="token operator">=</span> header
      announce<span class="token punctuation">.</span>time <span class="token operator">=</span> task<span class="token punctuation">.</span>time

      <span class="token keyword">if</span> header<span class="token punctuation">.</span>TxHash <span class="token operator">==</span> types<span class="token punctuation">.</span><span class="token function">DeriveSha</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span>Transactions<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> header<span class="token punctuation">.</span>UncleHash <span class="token operator">==</span> types<span class="token punctuation">.</span><span class="token function">CalcUncleHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
       block <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">NewBlockWithHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span>
       block<span class="token punctuation">.</span>ReceivedAt <span class="token operator">=</span> task<span class="token punctuation">.</span>time

       complete <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>complete<span class="token punctuation">,</span> block<span class="token punctuation">)</span>
       f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> announce
       <span class="token keyword">continue</span>
            <span class="token punctuation">}</span>
      incomplete <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>incomplete<span class="token punctuation">,</span> announce<span class="token punctuation">)</span> <span class="token comment">// \u5426\u5219\u6DFB\u52A0\u5230\u9700\u8981\u5B8C\u6210\u62C9\u53D6body\u7684\u5217\u8868\u4E2D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u5982\u679C<code>f.fetching</code>\u4E2D\u4E0D\u5B58\u5728\u6B64\u54C8\u5E0C\uFF0C\u5C31\u653E\u5165\u5230<code>unkown</code>\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token comment">// Fetcher doesn&#39;t know about it, add to the return list |fetcher \u4E0D\u8BA4\u8BC6\u7684\u653E\u5230unkown\u4E2D</span>
     unknown <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>unknown<span class="token punctuation">,</span> header<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A\u4E4B\u540E\u518D\u628A<code>Unknown</code>\u7684<code>header</code>\u518D\u901A\u77E5fetcher\u7EE7\u7EED\u8FC7\u6EE4</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">select</span> <span class="token punctuation">{</span>
   <span class="token keyword">case</span> filter <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>headerFilterTask<span class="token punctuation">{</span>headers<span class="token punctuation">:</span> unknown<span class="token punctuation">,</span> time<span class="token punctuation">:</span> task<span class="token punctuation">.</span>time<span class="token punctuation">}</span><span class="token punctuation">:</span>
   <span class="token keyword">case</span> <span class="token operator">&lt;-</span>f<span class="token punctuation">.</span>quit<span class="token punctuation">:</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u5C31\u662F<strong>\u8FDB\u5165\u5230\u7B2C\u4E8C\u4E2A\u5FAA\u73AF</strong>\uFF0C\u8981\u51C6\u5907\u62FF\u51FAincomplete\u91CC\u7684\u54C8\u5E0C\uFF0C\u8FDB\u884C\u540C\u6B65body\u7684\u540C\u6B65</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> announce <span class="token operator">:=</span> <span class="token keyword">range</span> incomplete <span class="token punctuation">{</span>
    hash <span class="token operator">:=</span> announce<span class="token punctuation">.</span>header<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>hash<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
     <span class="token keyword">continue</span>
    <span class="token punctuation">}</span>
    f<span class="token punctuation">.</span>fetched<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>fetched<span class="token punctuation">[</span>hash<span class="token punctuation">]</span><span class="token punctuation">,</span> announce<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>fetched<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
     f<span class="token punctuation">.</span><span class="token function">rescheduleComplete</span><span class="token punctuation">(</span>completeTimer<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>f.completing</code>\u4E2D\u5B58\u5728\uFF0C\u5C31\u8868\u660E\u5DF2\u7ECF\u5728\u5F00\u59CB\u540C\u6B65<code>body</code>\u4E86\uFF0C\u76F4\u63A5\u8DF3\u8FC7\uFF0C\u5426\u5219\u628A\u8FD9\u4E2A\u54C8\u5E0C\u653E\u5165\u5230<code>f.fetched</code>\uFF0C\u8868\u793A<code>header</code>\u540C\u6B65\u5B8C\u6BD5\uFF0C\u51C6\u5907<code>body</code>\u540C\u6B65\uFF0C\u7531<code>f.rescheduleComplete(completeTimer)</code>\u5B8C\u6210\u3002\u6700\u540E\u662F\u5B89\u6392\u53EA\u6709<code>header</code>\u7684\u533A\u5757\u8FDB\u884C\u5BFC\u5165\u64CD\u4F5C.</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>for _, block := range complete {
    if announce := f.completing[block.Hash()]; announce != nil {
     f.enqueue(announce.origin, block)
    }
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u5206\u6790<code>completeTimer.C</code>\uFF0C\u540C\u6B65<code>body</code>\u7684\u64CD\u4F5C\uFF0C\u8FD9\u6B65\u5B8C\u6210\u5C31\u662F\u8981\u51C6\u5907\u533A\u5757\u5BFC\u5165\u5230\u6570\u636E\u5E93\u6D41\u7A0B\u4E86\u3002</p><h3 id="\u62C9\u53D6body" tabindex="-1"><a class="header-anchor" href="#\u62C9\u53D6body" aria-hidden="true">#</a> \u62C9\u53D6body</h3><p>\u8FDB\u5165<code>completeTimer.C</code>\uFF0C\u4ECEf.fetched\u83B7\u53D6\u54C8\u5E0C\uFF0C\u5982\u679C\u672C\u5730\u533A\u5757\u94FE\u67E5\u4E0D\u5230\u7684\u8BDD\u5C31\u628A\u8FD9\u4E2A\u54C8\u5E0C\u653E\u5165\u5230<code>f.completing</code>\u4E2D\uFF0C\u518D\u5FAA\u73AF\u8FDB\u884C<code>fetchBodies</code>\uFF0C\u6574\u4E2A\u6D41\u7A0B\u5C31\u7ED3\u675F\u4E86\uFF0C\u4EE3\u7801\u5927\u81F4\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> <span class="token operator">&lt;-</span>completeTimer<span class="token punctuation">.</span>C<span class="token punctuation">:</span>
<span class="token operator">...</span>
   <span class="token keyword">for</span> hash<span class="token punctuation">,</span> announces <span class="token operator">:=</span> <span class="token keyword">range</span> f<span class="token punctuation">.</span>fetched <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">.</span>
    <span class="token keyword">if</span> f<span class="token punctuation">.</span><span class="token function">getBlock</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
     request<span class="token punctuation">[</span>announce<span class="token punctuation">.</span>origin<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>request<span class="token punctuation">[</span>announce<span class="token punctuation">.</span>origin<span class="token punctuation">]</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
     f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> announce
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">for</span> peer<span class="token punctuation">,</span> hashes <span class="token operator">:=</span> <span class="token keyword">range</span> request <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token keyword">go</span> f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>hashes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">fetchBodies</span><span class="token punctuation">(</span>hashes<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u952E\u7684\u62C9\u53D6<code>body</code>\u51FD\u6570\uFF1A <code>p.RequestBodies</code>\uFF0C\u53D1\u9001<code>GetBlockBodiesMsg</code>\u6D88\u606F\u540C\u6B65<code>body</code>\u3002\u56DE\u5230<code>handler</code>\u91CC\u9762\u53BB\u67E5\u770B\u5BF9\u5E94\u7684\u6D88\u606F\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> msg<span class="token punctuation">.</span>Code <span class="token operator">==</span> GetBlockBodiesMsg<span class="token punctuation">:</span>
  <span class="token comment">// Decode the retrieval message</span>
  msgStream <span class="token operator">:=</span> rlp<span class="token punctuation">.</span><span class="token function">NewStream</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>Payload<span class="token punctuation">,</span> <span class="token function">uint64</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>Size<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> msgStream<span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> err
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> <span class="token punctuation">(</span>
   hash   common<span class="token punctuation">.</span>Hash
   bytes  <span class="token builtin">int</span>
   bodies <span class="token punctuation">[</span><span class="token punctuation">]</span>rlp<span class="token punctuation">.</span>RawValue
  <span class="token punctuation">)</span>
  <span class="token keyword">for</span> bytes <span class="token operator">&lt;</span> softResponseLimit <span class="token operator">&amp;&amp;</span> <span class="token function">len</span><span class="token punctuation">(</span>bodies<span class="token punctuation">)</span> <span class="token operator">&lt;</span> downloader<span class="token punctuation">.</span>MaxBlockFetch <span class="token punctuation">{</span>
   <span class="token operator">...</span>
   <span class="token keyword">if</span> data <span class="token operator">:=</span> pm<span class="token punctuation">.</span>blockchain<span class="token punctuation">.</span><span class="token function">GetBodyRLP</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    bodies <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>bodies<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
    bytes <span class="token operator">+=</span> <span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">SendBlockBodiesRLP</span><span class="token punctuation">(</span>bodies<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>softResponseLimit</code>\u8FD4\u56DE\u7684<code>body</code>\u5927\u5C0F\u6700\u5927\u4E3A$2 <em>1024</em> 1024$,<code>MaxBlockFetch</code>\u8868\u793A\u6BCF\u4E2A\u8BF7\u6C42\u6700\u591A128\u4E2A<code>body</code>\u3002</p><p>\u4E4B\u540E\u76F4\u63A5\u901A\u8FC7<code>GetBodyRLP</code>\u8FD4\u56DE\u6570\u636E\u901A\u8FC7<code>SendBlockBodiesRLP</code>\u53D1\u56DE\u7ED9\u8282\u70B9\u3002</p><p>\u8282\u70B9\u5C06\u4F1A\u63A5\u6536\u5230\u65B0\u6D88\u606F\uFF1A<code>BlockBodiesMsg</code>\uFF0C\u8FDB\u5165\u67E5\u770B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u8FC7\u6EE4\u6389filter\u8BF7\u6C42\u7684body \u540C\u6B65\uFF0C\u5176\u4ED6\u7684\u90FD\u4EA4\u7ED9downloader</span>
  filter <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>transactions<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">len</span><span class="token punctuation">(</span>uncles<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
  <span class="token keyword">if</span> filter <span class="token punctuation">{</span>
   transactions<span class="token punctuation">,</span> uncles <span class="token operator">=</span> pm<span class="token punctuation">.</span>fetcher<span class="token punctuation">.</span><span class="token function">FilterBodies</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> transactions<span class="token punctuation">,</span> uncles<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>transactions<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">len</span><span class="token punctuation">(</span>uncles<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span>filter <span class="token punctuation">{</span>
   err <span class="token operator">:=</span> pm<span class="token punctuation">.</span>downloader<span class="token punctuation">.</span><span class="token function">DeliverBodies</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> transactions<span class="token punctuation">,</span> uncles<span class="token punctuation">)</span>
<span class="token operator">...</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FC7\u6EE4\u6389<code>filter</code>\u8BF7\u6C42\u7684<code>body</code> \u540C\u6B65\uFF0C\u5176\u4ED6\u7684\u90FD\u4EA4\u7ED9<code>downloader</code>\uFF0C<code>downloader</code>\u90E8\u5206\u4E4B\u540E\u7684\u7BC7\u7AE0\u8BB2\u3002\u8FDB\u5165\u5230<code>FilterBodies</code>\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> filter <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token operator">*</span>bodyFilterTask<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> f<span class="token punctuation">.</span>bodyFilter <span class="token operator">&lt;-</span> filter<span class="token punctuation">:</span>  \u2460
 <span class="token keyword">case</span> <span class="token operator">&lt;-</span>f<span class="token punctuation">.</span>quit<span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// Request the filtering of the body list</span>
 <span class="token comment">// \u8BF7\u6C42\u8FC7\u6EE4body \u5217\u8868</span>
 <span class="token keyword">select</span> <span class="token punctuation">{</span> \u2461
 <span class="token keyword">case</span> filter <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>bodyFilterTask<span class="token punctuation">{</span>peer<span class="token punctuation">:</span> peer<span class="token punctuation">,</span> transactions<span class="token punctuation">:</span> transactions<span class="token punctuation">,</span> uncles<span class="token punctuation">:</span> uncles<span class="token punctuation">,</span> time<span class="token punctuation">:</span> time<span class="token punctuation">}</span><span class="token punctuation">:</span>
 <span class="token keyword">case</span> <span class="token operator">&lt;-</span>f<span class="token punctuation">.</span>quit<span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// Retrieve the bodies remaining after filtering</span>
 <span class="token keyword">select</span> <span class="token punctuation">{</span> \u2462\uFF1A
 <span class="token keyword">case</span> task <span class="token operator">:=</span> <span class="token operator">&lt;-</span>filter<span class="token punctuation">:</span>
  <span class="token keyword">return</span> task<span class="token punctuation">.</span>transactions<span class="token punctuation">,</span> task<span class="token punctuation">.</span>uncles
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u8981\u5206\u4E3A3\u4E2A\u6B65\u9AA4\uFF1A</p><ol><li>\u5148\u53D1\u4E00\u4E2A\u901A\u4FE1\u7528\u7684 <code>channel</code> \u7ED9 <code>bodyFilter</code></li><li>\u5C06\u8981\u8FC7\u6EE4\u7684 <code>bodyFilterTask</code> \u53D1\u9001\u7ED9 <code>filter</code></li><li>\u68C0\u7D22\u8FC7\u6EE4\u540E\u5269\u4F59\u7684<code>body</code></li></ol><p>\u73B0\u5728\u8FDB\u5165\u5230<code>case filter := &lt;-f.bodyFilter</code>\u91CC\u9762\uFF0C\u5927\u81F4\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><p>\u2460\uFF1A\u9996\u5148\u4ECEf.completing\u4E2D\u83B7\u53D6\u8981\u540C\u6B65body\u7684\u54C8\u5E0C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>transactions<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>uncles<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> hash<span class="token punctuation">,</span> announce <span class="token operator">:=</span> <span class="token keyword">range</span> f<span class="token punctuation">.</span>completing <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u7136\u540E\u4ECEf.queued\u53BB\u67E5\u8FD9\u4E2A\u54C8\u5E0C\u662F\u4E0D\u662F\u5DF2\u7ECF\u83B7\u53D6\u4E86body\uFF0C\u5982\u679C\u6CA1\u6709\u5E76\u6EE1\u8DB3\u6761\u4EF6\u5C31\u521B\u5EFA\u4E00\u4E2A\u5B8C\u6574block</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> f<span class="token punctuation">.</span>queued<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      txnHash <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">DeriveSha</span><span class="token punctuation">(</span>types<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>transactions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      uncleHash <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">CalcUncleHash</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>uncles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> txnHash <span class="token operator">==</span> announce<span class="token punctuation">.</span>header<span class="token punctuation">.</span>TxHash <span class="token operator">&amp;&amp;</span> uncleHash <span class="token operator">==</span> announce<span class="token punctuation">.</span>header<span class="token punctuation">.</span>UncleHash <span class="token operator">&amp;&amp;</span> announce<span class="token punctuation">.</span>origin <span class="token operator">==</span> task<span class="token punctuation">.</span>peer <span class="token punctuation">{</span>
       matched <span class="token operator">=</span> <span class="token boolean">true</span>

       <span class="token keyword">if</span> f<span class="token punctuation">.</span><span class="token function">getBlock</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        block <span class="token operator">:=</span> types<span class="token punctuation">.</span><span class="token function">NewBlockWithHeader</span><span class="token punctuation">(</span>announce<span class="token punctuation">.</span>header<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WithBody</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>transactions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span>uncles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        block<span class="token punctuation">.</span>ReceivedAt <span class="token operator">=</span> task<span class="token punctuation">.</span>time

                blocks <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>blocks<span class="token punctuation">,</span> block<span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u6700\u540E\u5BF9\u5B8C\u6574\u7684\u5757\u8FDB\u884C\u5BFC\u5165</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> block <span class="token operator">:=</span> <span class="token keyword">range</span> blocks <span class="token punctuation">{</span>
    <span class="token keyword">if</span> announce <span class="token operator">:=</span> f<span class="token punctuation">.</span>completing<span class="token punctuation">[</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> announce <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
     f<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>announce<span class="token punctuation">.</span>origin<span class="token punctuation">,</span> block<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u7528\u4E00\u5F20\u7C97\u7565\u7684\u56FE\u6765\u5927\u6982\u7684\u63CF\u8FF0\u4E00\u4E0B\u6574\u4E2A\u540C\u6B65\u533A\u5757\u54C8\u5E0C\u7684\u6D41\u7A0B\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glae3zccpdj30wm0t6q67.jpg" alt="image-20201203090304059"></p><hr><p>\u540C\u6B65\u533A\u5757\u54C8\u5E0C\u7684\u6700\u7EC8\u4F1A\u8D70\u5230<code>f.enqueue</code>\u91CC\u9762\uFF0C\u8FD9\u4E2A\u4E5F\u662F<strong>\u540C\u6B65\u533A\u5757</strong>\u6700\u91CD\u8981\u7684\u8981\u505A\u7684\u4E00\u4EF6\u4E8B\uFF0C\u4E0B\u6587\u5C31\u4F1A\u8BB2\u5230\u3002</p><h2 id="fetcher-\u540C\u6B65\u533A\u5757" tabindex="-1"><a class="header-anchor" href="#fetcher-\u540C\u6B65\u533A\u5757" aria-hidden="true">#</a> Fetcher \u540C\u6B65\u533A\u5757</h2><p>\u5206\u6790\u5B8C\u4E0A\u9762\u6BD4\u8F83\u590D\u6742\u7684\u540C\u6B65\u533A\u5757\u54C8\u5E0C\u8FC7\u7A0B\uFF0C\u63A5\u4E0B\u6765\u5C31\u8981\u5206\u6790\u6BD4\u8F83\u7B80\u5355\u7684\u540C\u6B65\u533A\u5757\u8FC7\u7A0B\u3002\u4ECE<code>NewBlockMsg</code>\u5F00\u59CB\uFF1A</p><p>\u4E3B\u8981\u505A\u4E24\u4EF6\u4E8B\uFF1A</p><p>\u2460\uFF1A<code>fetcher</code>\u6A21\u5757\u5BFC\u5165\u8FDC\u7A0B\u8282\u70B9\u53D1\u8FC7\u6765\u7684\u533A\u5757</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>pm.fetcher.Enqueue(p.id, request.Block)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2461\uFF1A<strong>\u4E3B\u52A8\u540C\u6B65</strong>\u8FDC\u7A0B\u8282\u70B9</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>if _, td := p.Head(); trueTD.Cmp(td) &gt; 0 {
   p.SetHead(trueHead, trueTD)
   currentBlock := pm.blockchain.CurrentBlock()
   if trueTD.Cmp(pm.blockchain.GetTd(currentBlock.Hash(), currentBlock.NumberU64())) &gt; 0 {
    go pm.synchronise(p)
   }
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u52A8\u540C\u6B65\u7531<code>Downloader</code>\u53BB\u5904\u7406\uFF0C\u6211\u4EEC\u8FD9\u7BC7\u53EA\u8BA8\u8BBA<code>fetcher</code>\u76F8\u5173\u3002</p><h3 id="\u533A\u5757\u5165\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u533A\u5757\u5165\u961F\u5217" aria-hidden="true">#</a> \u533A\u5757\u5165\u961F\u5217</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>pm<span class="token punctuation">.</span>fetcher<span class="token punctuation">.</span><span class="token function">Enqueue</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>id<span class="token punctuation">,</span> request<span class="token punctuation">.</span>Block<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">case</span> op <span class="token operator">:=</span> <span class="token operator">&lt;-</span>f<span class="token punctuation">.</span>inject<span class="token punctuation">:</span>
   propBroadcastInMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
   f<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>op<span class="token punctuation">.</span>origin<span class="token punctuation">,</span> op<span class="token punctuation">.</span>block<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B63\u5F0F\u8FDB\u5165\u5C06\u533A\u5757\u9001\u8FDB<code>queue</code>\u4E2D\uFF0C\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><p>\u2460\uFF1A \u786E\u4FDD\u65B0\u52A0<code>peer</code>\u6CA1\u6709\u5BFC\u81F4<code>DOS</code>\u653B\u51FB</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>count <span class="token operator">:=</span> f<span class="token punctuation">.</span>queues<span class="token punctuation">[</span>peer<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
 <span class="token keyword">if</span> count <span class="token operator">&gt;</span> blockLimit <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Discarded propagated block, exceeded allowance&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peer&quot;</span><span class="token punctuation">,</span> peer<span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token punctuation">,</span> blockLimit<span class="token punctuation">)</span>
  propBroadcastDOSMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  f<span class="token punctuation">.</span><span class="token function">forgetHash</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
  <span class="token keyword">return</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u4E22\u5F03\u6389\u8FC7\u53BB\u7684\u548C\u6BD4\u8F83\u8001\u7684\u533A\u5757</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> dist <span class="token operator">:=</span> <span class="token function">int64</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">int64</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">chainHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> dist <span class="token operator">&lt;</span> <span class="token operator">-</span>maxUncleDist <span class="token operator">||</span> dist <span class="token operator">&gt;</span> maxQueueDist <span class="token punctuation">{</span>
  f<span class="token punctuation">.</span><span class="token function">forgetHash</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5B89\u6392\u533A\u5757\u5BFC\u5165</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code> <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> f<span class="token punctuation">.</span>queued<span class="token punctuation">[</span>hash<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
  op <span class="token operator">:=</span> <span class="token operator">&amp;</span>inject<span class="token punctuation">{</span>
   origin<span class="token punctuation">:</span> peer<span class="token punctuation">,</span>
   block<span class="token punctuation">:</span>  block<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  f<span class="token punctuation">.</span>queues<span class="token punctuation">[</span>peer<span class="token punctuation">]</span> <span class="token operator">=</span> count
  f<span class="token punctuation">.</span>queued<span class="token punctuation">[</span>hash<span class="token punctuation">]</span> <span class="token operator">=</span> op
  f<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span>op<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token function">int64</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> f<span class="token punctuation">.</span>queueChangeHook <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   f<span class="token punctuation">.</span><span class="token function">queueChangeHook</span><span class="token punctuation">(</span>op<span class="token punctuation">.</span>block<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Queued propagated block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peer&quot;</span><span class="token punctuation">,</span> peer<span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&quot;queued&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span>queue<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u4E3A\u6B62\uFF0C\u5DF2\u7ECF\u5C06\u533A\u5757\u9001\u5165\u5230<code>queue</code>\u4E2D\uFF0C\u63A5\u4E0B\u6765\u5C31\u662F\u8981\u56DE\u5230<code>loop</code>\u51FD\u6570\u4E2D\u53BB\u5904\u7406<code>queue</code>\u4E2D\u7684\u533A\u5757\u3002</p><h3 id="\u533A\u5757\u5165\u5E93" tabindex="-1"><a class="header-anchor" href="#\u533A\u5757\u5165\u5E93" aria-hidden="true">#</a> \u533A\u5757\u5165\u5E93</h3><p>loop\u51FD\u6570\u5728\u5904\u7406\u961F\u5217\u4E2D\u7684\u533A\u5757\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u4E8B\u60C5\uFF1A</p><ol><li>\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</li><li>\u53D6\u51FA\u533A\u5757\u54C8\u5E0C\uFF0C\u5E76\u4E14\u548C\u672C\u5730\u94FE\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u592A\u9AD8\u7684\u8BDD\uFF0C\u5C31\u6682\u65F6\u4E0D\u5BFC\u5165</li><li>\u6700\u540E\u901A\u8FC7f.insert\u5C06\u533A\u5757\u63D2\u5165\u5230\u6570\u636E\u5E93\u3002</li></ol><p>\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>height := f.chainHeight()
  for !f.queue.Empty() {
   op := f.queue.PopItem().(*inject)
   hash := op.block.Hash()
  ...
   number := op.block.NumberU64()
   if number &gt; height+1 {
    f.queue.Push(op, -int64(number))
 ...
    break
   }
   if number+maxUncleDist &lt; height || f.getBlock(hash) != nil {
    f.forgetBlock(hash)
    continue
   }
   f.insert(op.origin, op.block) //\u5BFC\u5165\u5757
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FDB\u5165\u5230<code>f.insert</code>\u4E2D\uFF0C\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><p>\u2460\uFF1A\u5224\u65AD\u533A\u5757\u7684\u7236\u5757\u662F\u5426\u5B58\u5728\uFF0C\u4E0D\u5B58\u5728\u5219\u4E2D\u65AD\u63D2\u5165</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>  parent <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">getBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> parent <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown parent of propagated block&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peer&quot;</span><span class="token punctuation">,</span> peer<span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&quot;parent&quot;</span><span class="token punctuation">,</span> block<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A \u5FEB\u901F\u9A8C\u8BC1header\uFF0C<strong>\u5E76\u5728\u4F20\u9012\u65F6\u5E7F\u64AD\u8BE5\u5757</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">switch</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">verifyHeader</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token boolean">nil</span><span class="token punctuation">:</span>
   propBroadcastOutTimer<span class="token punctuation">.</span><span class="token function">UpdateSince</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>ReceivedAt<span class="token punctuation">)</span>
   <span class="token keyword">go</span> f<span class="token punctuation">.</span><span class="token function">broadcastBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u8FD0\u884C\u771F\u6B63\u7684\u63D2\u5165\u903B\u8F91</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>if _, err := f.insertChain(types.Blocks{block}); err != nil {
   log.Debug(&quot;Propagated block import failed&quot;, &quot;peer&quot;, peer, &quot;number&quot;, block.Number(), &quot;hash&quot;, hash, &quot;err&quot;, err)
   return
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u5BFC\u5165\u6210\u529F\u5E7F\u64AD\u6B64\u5757</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">go</span> f<span class="token punctuation">.</span><span class="token function">broadcastBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u771F\u6B63\u505A\u533A\u5757\u5165\u5E93\u7684\u662Ff.insertChain\uFF0C\u8FD9\u91CC\u4F1A\u8C03\u7528blockchain\u6A21\u5757\u53BB\u64CD\u4F5C\uFF0C\u5177\u4F53\u7EC6\u8282\u4F1A\u540E\u7EED\u6587\u7AE0\u8BB2\u8FF0\uFF0C\u5230\u6B64\u4E3A\u6B62Fether\u6A21\u5757\u7684\u540C\u6B65\u5C31\u5230\u6B64\u7ED3\u675F\u4E86\uFF0C\u4E0B\u9762\u662F\u540C\u6B65\u533A\u5757\u7684\u6D41\u7A0B\u56FE\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glae40anr7j30ps0mkn0t.jpg" alt="image-20201203090327173"></p><hr><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,127),d={href:"https://mindcarver.cn",target:"_blank",rel:"noopener noreferrer"},r=n("p",null,"< >",-1);function k(v,m){const s=i("ExternalLinkIcon");return e(),p("div",null,[u,n("blockquote",null,[n("p",null,[n("a",d,[t("https://mindcarver.cn"),o(s)])]),r])])}const g=a(l,[["render",k],["__file","6.Etheric_fang_Fetcher_synchronization_of_the_source_code_analysis.html.vue"]]);export{g as default};
