import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,b as e,d as o,f as c,r as i}from"./app.2036996b.js";const l={},u=c(`<h1 id="\u4F7F\u7528zxing\u751F\u6210\u4E8C\u7EF4\u7801\u53BB\u9664\u767D\u8FB9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528zxing\u751F\u6210\u4E8C\u7EF4\u7801\u53BB\u9664\u767D\u8FB9" aria-hidden="true">#</a> \u4F7F\u7528zxing\u751F\u6210\u4E8C\u7EF4\u7801\u53BB\u9664\u767D\u8FB9</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>\u6211\u4EEC\u5728\u4F7F\u7528zxing\u751F\u6210\u4E8C\u7EF4\u7801\u7684\u65F6\u5019\uFF0C\u4F1A\u5E26\u4E0A\u4E00\u4E2A\u767D\u8272\u8FB9\u6846\u3002\u56E0\u4E1A\u52A1\u9700\u8981\u4E0D\u80FD\u6709\u8FD9\u4E2A\u767D\u8FB9\uFF0C\u4E00\u5B9A\u8981\u628A\u8FD9\u4E2A\u767D\u8FB9\u53BB\u9664\uFF0C\u90A3\u4E48\u5982\u4F55\u53BB\u9664\u5462\uFF1F</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220527142912892.png" alt="image-20220527142912892"></p><h2 id="_2-\u6E90\u7801\u767D\u8FB9\u4EA7\u751F" tabindex="-1"><a class="header-anchor" href="#_2-\u6E90\u7801\u767D\u8FB9\u4EA7\u751F" aria-hidden="true">#</a> 2. \u6E90\u7801\u767D\u8FB9\u4EA7\u751F</h2><p>\u6211\u4EEC\u5148\u770B\u770B\u4E8C\u7EF4\u7801\u751F\u6210\u7684\u6B65\u9AA4</p><h3 id="_2-1-\u521B\u5EFA\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_2-1-\u521B\u5EFA\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 2.1 \u521B\u5EFA\u5B57\u7B26\u4E32</h3><p>\u521B\u5EFA\u6BD4\u7279\u77E9\u9635(\u4F4D\u77E9\u9635)\u7684QR\u7801\u7F16\u7801\u7684\u5B57\u7B26\u4E32\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token class-name">QRCodeWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QRCodeWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u89E3\u51B3\u4E2D\u6587\u4E71\u7801\u95EE\u9898</span>
<span class="token class-name">String</span> contentCharset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BitMatrix</span> matrix <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contentCharset<span class="token punctuation">,</span> format<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-encode-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-encode-\u65B9\u6CD5" aria-hidden="true">#</a> 2.2 encode \u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token class-name">BitMatrix</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">String</span> contents<span class="token punctuation">,</span> <span class="token class-name">BarcodeFormat</span> format<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">WriterException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contents<span class="token punctuation">,</span> format<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BitMatrix</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">String</span> contents<span class="token punctuation">,</span> <span class="token class-name">BarcodeFormat</span> format<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> hints<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">WriterException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>contents<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Found empty contents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>format <span class="token operator">!=</span> <span class="token class-name">BarcodeFormat</span><span class="token punctuation">.</span><span class="token constant">QR_CODE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Can only encode QR_CODE, but got &quot;</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ErrorCorrectionLevel</span> errorCorrectionLevel <span class="token operator">=</span> <span class="token class-name">ErrorCorrectionLevel<span class="token punctuation">.</span>L</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> quietZone <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hints <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">ERROR_CORRECTION</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    errorCorrectionLevel <span class="token operator">=</span> <span class="token class-name">ErrorCorrectionLevel</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">ERROR_CORRECTION</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">MARGIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    quietZone <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">MARGIN</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token function">renderResult</span><span class="token punctuation">(</span><span class="token class-name">Encoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contents<span class="token punctuation">,</span> errorCorrectionLevel<span class="token punctuation">,</span> hints<span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> quietZone<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Requested dimensions are too small: &quot;</span> <span class="token operator">+</span> width <span class="token operator">+</span> <span class="token char">&#39;x&#39;</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-renderresult-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3-renderresult-\u65B9\u6CD5" aria-hidden="true">#</a> 2.3 renderResult \u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">BitMatrix</span> <span class="token function">renderResult</span><span class="token punctuation">(</span><span class="token class-name">QRCode</span> code<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> quietZone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ByteMatrix</span> input<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>input <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">getMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> inputWidth <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> inputHeight <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           	<span class="token comment">//\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u539F\u59CB\u4EE3\u7801\u4E2D\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570</span>
            <span class="token keyword">int</span> qrWidth <span class="token operator">=</span> inputWidth <span class="token operator">+</span> <span class="token punctuation">(</span>quietZone <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> qrHeight <span class="token operator">=</span> inputHeight <span class="token operator">+</span> <span class="token punctuation">(</span>quietZone <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> outputWidth <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> qrWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> outputHeight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> qrHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> multiple <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>outputWidth <span class="token operator">/</span> qrWidth<span class="token punctuation">,</span> outputHeight <span class="token operator">/</span> qrHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> <span class="token punctuation">(</span>outputWidth <span class="token operator">-</span> inputWidth <span class="token operator">*</span> multiple<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> topPadding <span class="token operator">=</span> <span class="token punctuation">(</span>outputHeight <span class="token operator">-</span> inputHeight <span class="token operator">*</span> multiple<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token class-name">BitMatrix</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitMatrix</span><span class="token punctuation">(</span>outputWidth<span class="token punctuation">,</span> outputHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> inputY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> outputY <span class="token operator">=</span> topPadding<span class="token punctuation">;</span> inputY <span class="token operator">&lt;</span> inputHeight<span class="token punctuation">;</span> outputY <span class="token operator">+=</span> multiple<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> inputX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> outputX <span class="token operator">=</span> leftPadding<span class="token punctuation">;</span> inputX <span class="token operator">&lt;</span> inputWidth<span class="token punctuation">;</span> outputX <span class="token operator">+=</span> multiple<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>inputX<span class="token punctuation">,</span> inputY<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        output<span class="token punctuation">.</span><span class="token function">setRegion</span><span class="token punctuation">(</span>outputX<span class="token punctuation">,</span> outputY<span class="token punctuation">,</span> multiple<span class="token punctuation">,</span> multiple<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token operator">++</span>inputX<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token operator">++</span>inputY<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> output<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u95EE\u9898\u539F\u56E0" tabindex="-1"><a class="header-anchor" href="#_3-\u95EE\u9898\u539F\u56E0" aria-hidden="true">#</a> 3. \u95EE\u9898\u539F\u56E0</h2><p>zxing\u5728renderResult\u65B9\u6CD5\u4E2D\u5E2E\u6211\u4EEC\u8BA1\u7B97\u4E86\u8FB9\u6846\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>//\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u539F\u59CB\u4EE3\u7801\u4E2D\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570
    //int qrWidth = inputWidth + (quietZone &lt;&lt; 1);
    //int qrHeight = inputHeight + (quietZone &lt;&lt; 1);
   //\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u4FEE\u6539\u540E\u7684\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570
    int qrWidth = inputWidth + 2;
    int qrHeight = inputHeight + 2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u9700\u8981\u66F4\u6539\uFF0C\u5219\u81EA\u884C\u8C03\u6574qrWidth \u4EE5\u53CAqrHeight \u6765\u8BBE\u7F6E\u95F4\u8DDD</p><h2 id="_4-\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#_4-\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> 4. \u89E3\u51B3\u65B9\u6848</h2><p>\u81EA\u884C\u590D\u5236QRCodeWriter\uFF0C\u4FEE\u6539\u3002\u5982\u6211\u81EA\u5B9A\u4E49\u4E86\u7C7BMyQRCodeWriter</p><blockquote><p>QRCodeWriter \u662Ffinal \u7C7B\u4E0D\u80FD\u7EE7\u627F\uFF0C\u6240\u4EE5\u53EA\u80FD\u65B0\u5EFA\u7C7B\u4E86</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>faduit<span class="token punctuation">.</span>report<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>qr</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span></span><span class="token class-name">BarcodeFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span></span><span class="token class-name">EncodeHintType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span></span><span class="token class-name">Writer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span></span><span class="token class-name">WriterException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">BitMatrix</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span>qrcode<span class="token punctuation">.</span>decoder<span class="token punctuation">.</span></span><span class="token class-name">ErrorCorrectionLevel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span>qrcode<span class="token punctuation">.</span>encoder<span class="token punctuation">.</span></span><span class="token class-name">ByteMatrix</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span>qrcode<span class="token punctuation">.</span>encoder<span class="token punctuation">.</span></span><span class="token class-name">Encoder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>zxing<span class="token punctuation">.</span>qrcode<span class="token punctuation">.</span>encoder<span class="token punctuation">.</span></span><span class="token class-name">QRCode</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> zsz
 * <span class="token keyword">@date</span> 2022-05-27
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyQRCodeWriter</span> <span class="token keyword">implements</span> <span class="token class-name">Writer</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">QUIET_ZONE_SIZE</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MyQRCodeWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BitMatrix</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">String</span> contents<span class="token punctuation">,</span> <span class="token class-name">BarcodeFormat</span> format<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">WriterException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contents<span class="token punctuation">,</span> format<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BitMatrix</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">String</span> contents<span class="token punctuation">,</span> <span class="token class-name">BarcodeFormat</span> format<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> hints<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">WriterException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>contents<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Found empty contents&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>format <span class="token operator">!=</span> <span class="token class-name">BarcodeFormat</span><span class="token punctuation">.</span><span class="token constant">QR_CODE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Can only encode QR_CODE, but got &quot;</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> height <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ErrorCorrectionLevel</span> errorCorrectionLevel <span class="token operator">=</span> <span class="token class-name">ErrorCorrectionLevel<span class="token punctuation">.</span>L</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> quietZone <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hints <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">ERROR_CORRECTION</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    errorCorrectionLevel <span class="token operator">=</span> <span class="token class-name">ErrorCorrectionLevel</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">ERROR_CORRECTION</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">MARGIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    quietZone <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>hints<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">EncodeHintType</span><span class="token punctuation">.</span><span class="token constant">MARGIN</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token function">renderResult</span><span class="token punctuation">(</span><span class="token class-name">Encoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contents<span class="token punctuation">,</span> errorCorrectionLevel<span class="token punctuation">,</span> hints<span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> quietZone<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Requested dimensions are too small: &quot;</span> <span class="token operator">+</span> width <span class="token operator">+</span> <span class="token char">&#39;x&#39;</span> <span class="token operator">+</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">BitMatrix</span> <span class="token function">renderResult</span><span class="token punctuation">(</span><span class="token class-name">QRCode</span> code<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> quietZone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ByteMatrix</span> input <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">getMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> inputWidth <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> inputHeight <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u539F\u59CB\u4EE3\u7801\u4E2D\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570</span>
        <span class="token comment">//int qrWidth = inputWidth + (quietZone &lt;&lt; 1);</span>
        <span class="token comment">//int qrHeight = inputHeight + (quietZone &lt;&lt; 1);</span>
        <span class="token comment">//\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u4FEE\u6539\u540E\u7684\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570</span>
        <span class="token keyword">int</span> qrWidth <span class="token operator">=</span> inputWidth <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> qrHeight <span class="token operator">=</span> inputHeight <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> outputWidth <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> qrWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> outputHeight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> qrHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> multiple <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>outputWidth <span class="token operator">/</span> qrWidth<span class="token punctuation">,</span> outputHeight <span class="token operator">/</span> qrHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Padding includes both the quiet zone and the extra white pixels to accommodate the requested</span>
        <span class="token comment">// dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.</span>
        <span class="token comment">// If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will</span>
        <span class="token comment">// handle all the padding from 100x100 (the actual QR) up to 200x160.</span>
        <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> <span class="token punctuation">(</span>outputWidth <span class="token operator">-</span> <span class="token punctuation">(</span>inputWidth <span class="token operator">*</span> multiple<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> topPadding <span class="token operator">=</span> <span class="token punctuation">(</span>outputHeight <span class="token operator">-</span> <span class="token punctuation">(</span>inputHeight <span class="token operator">*</span> multiple<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

        <span class="token class-name">BitMatrix</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitMatrix</span><span class="token punctuation">(</span>outputWidth<span class="token punctuation">,</span> outputHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> inputY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> outputY <span class="token operator">=</span> topPadding<span class="token punctuation">;</span> inputY <span class="token operator">&lt;</span> inputHeight<span class="token punctuation">;</span> inputY<span class="token operator">++</span><span class="token punctuation">,</span> outputY <span class="token operator">+=</span> multiple<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Write the contents of this row of the barcode</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> inputX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> outputX <span class="token operator">=</span> leftPadding<span class="token punctuation">;</span> inputX <span class="token operator">&lt;</span> inputWidth<span class="token punctuation">;</span> inputX<span class="token operator">++</span><span class="token punctuation">,</span> outputX <span class="token operator">+=</span> multiple<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>inputX<span class="token punctuation">,</span> inputY<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    output<span class="token punctuation">.</span><span class="token function">setRegion</span><span class="token punctuation">(</span>outputX<span class="token punctuation">,</span> outputY<span class="token punctuation">,</span> multiple<span class="token punctuation">,</span> multiple<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u6539\u52A8\u4E86\u8FB9\u6846\u8BBE\u7F6E</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">//\u4EE5\u4E0B\u4E24\u884C\u6E90\u7801\u662F\u4FEE\u6539\u540E\u7684\u63A7\u5236\u8FB9\u8DDD\u7684\u53C2\u6570</span>
<span class="token keyword">int</span> qrWidth <span class="token operator">=</span> inputWidth <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> qrHeight <span class="token operator">=</span> inputHeight <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u7684\u65F6\u5019\u8C03\u7528\u81EA\u5DF1\u7684\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>      <span class="token class-name">MyQRCodeWriter</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyQRCodeWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u89E3\u51B3\u4E2D\u6587\u4E71\u7801\u95EE\u9898</span>
        <span class="token class-name">String</span> contentCharset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BitMatrix</span> matrix <span class="token operator">=</span> writer<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>contentCharset<span class="token punctuation">,</span> format<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220527144637643.png" alt="image-20220527144637643"></p><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,27),k={href:"https://www.jianshu.com/p/5e44cff150c6",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const s=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",k,[e("\u4F7F\u7528zxing\u751F\u6210\u4E8C\u7EF4\u7801\u53BB\u9664\u767D\u8FB9"),o(s)])])])}const b=a(l,[["render",r],["__file","qr-x-zxing-white-lace.html.vue"]]);export{b as default};
