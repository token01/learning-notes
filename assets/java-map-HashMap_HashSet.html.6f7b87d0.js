import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,a as n,b as e,d as o,f as c,r as l}from"./app.c33d508b.js";const u={},i=c(`<h1 id="map-hashset-hashmap-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#map-hashset-hashmap-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> Map - HashSet &amp; HashMap \u6E90\u7801\u89E3\u6790</h1><h2 id="_1-java7-hashmap" tabindex="-1"><a class="header-anchor" href="#_1-java7-hashmap" aria-hidden="true">#</a> 1. Java7 HashMap</h2><h3 id="_1-1-\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_1-1-\u6982\u8FF0" aria-hidden="true">#</a> 1.1 \u6982\u8FF0</h3><p>\u4E4B\u6240\u4EE5\u628A<em>HashSet</em>\u548C<em>HashMap</em>\u653E\u5728\u4E00\u8D77\u8BB2\u89E3\uFF0C\u662F\u56E0\u4E3A\u4E8C\u8005\u5728Java\u91CC\u6709\u7740\u76F8\u540C\u7684\u5B9E\u73B0\uFF0C\u524D\u8005\u4EC5\u4EC5\u662F\u5BF9\u540E\u8005\u505A\u4E86\u4E00\u5C42\u5305\u88C5\uFF0C\u4E5F\u5C31\u662F\u8BF4<em>HashSet</em>\u91CC\u9762\u6709\u4E00\u4E2A<em>HashMap</em>(\u9002\u914D\u5668\u6A21\u5F0F)\u3002\u56E0\u6B64\u672C\u6587\u5C06\u91CD\u70B9\u5206\u6790<em>HashMap</em>\u3002</p><p><em>HashMap</em>\u5B9E\u73B0\u4E86<em>Map</em>\u63A5\u53E3\uFF0C\u5373\u5141\u8BB8\u653E\u5165<code>key</code>\u4E3A<code>null</code>\u7684\u5143\u7D20\uFF0C\u4E5F\u5141\u8BB8\u63D2\u5165<code>value</code>\u4E3A<code>null</code>\u7684\u5143\u7D20\uFF1B\u9664\u8BE5\u7C7B\u672A\u5B9E\u73B0\u540C\u6B65\u5916\uFF0C\u5176\u4F59\u8DDF<code>Hashtable</code>\u5927\u81F4\u76F8\u540C\uFF1B\u8DDF<em>TreeMap</em>\u4E0D\u540C\uFF0C\u8BE5\u5BB9\u5668\u4E0D\u4FDD\u8BC1\u5143\u7D20\u987A\u5E8F\uFF0C\u6839\u636E\u9700\u8981\u8BE5\u5BB9\u5668\u53EF\u80FD\u4F1A\u5BF9\u5143\u7D20\u91CD\u65B0\u54C8\u5E0C\uFF0C\u5143\u7D20\u7684\u987A\u5E8F\u4E5F\u4F1A\u88AB\u91CD\u65B0\u6253\u6563\uFF0C\u56E0\u6B64\u4E0D\u540C\u65F6\u95F4\u8FED\u4EE3\u540C\u4E00\u4E2A<em>HashMap</em>\u7684\u987A\u5E8F\u53EF\u80FD\u4F1A\u4E0D\u540C\u3002 \u6839\u636E\u5BF9\u51B2\u7A81\u7684\u5904\u7406\u65B9\u5F0F\u4E0D\u540C\uFF0C\u54C8\u5E0C\u8868\u6709\u4E24\u79CD\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u4E00\u79CD\u5F00\u653E\u5730\u5740\u65B9\u5F0F(Open addressing)\uFF0C\u53E6\u4E00\u79CD\u662F\u51B2\u7A81\u94FE\u8868\u65B9\u5F0F(Separate chaining with linked lists)\u3002<strong>Java7 *HashMap*\u91C7\u7528\u7684\u662F\u51B2\u7A81\u94FE\u8868\u65B9\u5F0F</strong>\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220816213838104.png" alt="image-20220816213838104"></p><p>\u4ECE\u4E0A\u56FE\u5BB9\u6613\u770B\u51FA\uFF0C\u5982\u679C\u9009\u62E9\u5408\u9002\u7684\u54C8\u5E0C\u51FD\u6570\uFF0C<code>put()</code>\u548C<code>get()</code>\u65B9\u6CD5\u53EF\u4EE5\u5728\u5E38\u6570\u65F6\u95F4\u5185\u5B8C\u6210\u3002\u4F46\u5728\u5BF9<em>HashMap</em>\u8FDB\u884C\u8FED\u4EE3\u65F6\uFF0C\u9700\u8981\u904D\u5386\u6574\u4E2Atable\u4EE5\u53CA\u540E\u9762\u8DDF\u7684\u51B2\u7A81\u94FE\u8868\u3002\u56E0\u6B64\u5BF9\u4E8E\u8FED\u4EE3\u6BD4\u8F83\u9891\u7E41\u7684\u573A\u666F\uFF0C\u4E0D\u5B9C\u5C06<em>HashMap</em>\u7684\u521D\u59CB\u5927\u5C0F\u8BBE\u7684\u8FC7\u5927\u3002</p><p>\u6709\u4E24\u4E2A\u53C2\u6570\u53EF\u4EE5\u5F71\u54CD<em>HashMap</em>\u7684\u6027\u80FD: \u521D\u59CB\u5BB9\u91CF(inital capacity)\u548C\u8D1F\u8F7D\u7CFB\u6570(load factor)\u3002\u521D\u59CB\u5BB9\u91CF\u6307\u5B9A\u4E86\u521D\u59CB<code>table</code>\u7684\u5927\u5C0F\uFF0C\u8D1F\u8F7D\u7CFB\u6570\u7528\u6765\u6307\u5B9A\u81EA\u52A8\u6269\u5BB9\u7684\u4E34\u754C\u503C\u3002\u5F53<code>entry</code>\u7684\u6570\u91CF\u8D85\u8FC7<code>capacity*load_factor</code>\u65F6\uFF0C\u5BB9\u5668\u5C06\u81EA\u52A8\u6269\u5BB9\u5E76\u91CD\u65B0\u54C8\u5E0C\u3002\u5BF9\u4E8E\u63D2\u5165\u5143\u7D20\u8F83\u591A\u7684\u573A\u666F\uFF0C\u5C06\u521D\u59CB\u5BB9\u91CF\u8BBE\u5927\u53EF\u4EE5\u51CF\u5C11\u91CD\u65B0\u54C8\u5E0C\u7684\u6B21\u6570\u3002</p><p>\u5C06\u5BF9\u8C61\u653E\u5165\u5230<em>HashMap</em>\u6216<em>HashSet</em>\u4E2D\u65F6\uFF0C\u6709\u4E24\u4E2A\u65B9\u6CD5\u9700\u8981\u7279\u522B\u5173\u5FC3: <code>hashCode()</code>\u548C<code>equals()</code>\u3002<strong><code>hashCode()</code>\u65B9\u6CD5\u51B3\u5B9A\u4E86\u5BF9\u8C61\u4F1A\u88AB\u653E\u5230\u54EA\u4E2A<code>bucket</code>\u91CC\uFF0C\u5F53\u591A\u4E2A\u5BF9\u8C61\u7684\u54C8\u5E0C\u503C\u51B2\u7A81\u65F6\uFF0C<code>equals()</code>\u65B9\u6CD5\u51B3\u5B9A\u4E86\u8FD9\u4E9B\u5BF9\u8C61\u662F\u5426\u662F\u201C\u540C\u4E00\u4E2A\u5BF9\u8C61\u201D</strong>\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u8981\u5C06\u81EA\u5B9A\u4E49\u7684\u5BF9\u8C61\u653E\u5165\u5230<code>HashMap</code>\u6216<code>HashSet</code>\u4E2D\uFF0C\u9700\u8981**@Override** <code>hashCode()</code>\u548C<code>equals()</code>\u65B9\u6CD5\u3002</p><h3 id="_1-2-get" tabindex="-1"><a class="header-anchor" href="#_1-2-get" aria-hidden="true">#</a> 1.2 get()</h3><p><code>get(Object key)</code>\u65B9\u6CD5\u6839\u636E\u6307\u5B9A\u7684<code>key</code>\u503C\u8FD4\u56DE\u5BF9\u5E94\u7684<code>value</code>\uFF0C\u8BE5\u65B9\u6CD5\u8C03\u7528\u4E86<code>getEntry(Object key)</code>\u5F97\u5230\u76F8\u5E94\u7684<code>entry</code>\uFF0C\u7136\u540E\u8FD4\u56DE<code>entry.getValue()</code>\u3002\u56E0\u6B64<code>getEntry()</code>\u662F\u7B97\u6CD5\u7684\u6838\u5FC3\u3002 \u7B97\u6CD5\u601D\u60F3\u662F\u9996\u5148\u901A\u8FC7<code>hash()</code>\u51FD\u6570\u5F97\u5230\u5BF9\u5E94<code>bucket</code>\u7684\u4E0B\u6807\uFF0C\u7136\u540E\u4F9D\u6B21\u904D\u5386\u51B2\u7A81\u94FE\u8868\uFF0C\u901A\u8FC7<code>key.equals(k)</code>\u65B9\u6CD5\u6765\u5224\u65AD\u662F\u5426\u662F\u8981\u627E\u7684\u90A3\u4E2A<code>entry</code>\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220816214556502.png" alt="image-20220816214556502"></p><p>\u4E0A\u56FE\u4E2D<code>hash(k)&amp;(table.length-1)</code>\u7B49\u4EF7\u4E8E<code>hash(k)%table.length</code>\uFF0C\u539F\u56E0\u662F<em>HashMap</em>\u8981\u6C42<code>table.length</code>\u5FC5\u987B\u662F2\u7684\u6307\u6570\uFF0C\u56E0\u6B64<code>table.length-1</code>\u5C31\u662F\u4E8C\u8FDB\u5236\u4F4E\u4F4D\u5168\u662F1\uFF0C\u8DDF<code>hash(k)</code>\u76F8\u4E0E\u4F1A\u5C06\u54C8\u5E0C\u503C\u7684\u9AD8\u4F4D\u5168\u62B9\u6389\uFF0C\u5269\u4E0B\u7684\u5C31\u662F\u4F59\u6570\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//getEntry()\u65B9\u6CD5</span>
<span class="token keyword">final</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getEntry</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>hash<span class="token operator">&amp;</span><span class="token punctuation">(</span>table<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u5F97\u5230\u51B2\u7A81\u94FE\u8868</span>
         e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u4F9D\u6B21\u904D\u5386\u51B2\u7A81\u94FE\u8868\u4E2D\u7684\u6BCF\u4E2Aentry</span>
        <span class="token class-name">Object</span> k<span class="token punctuation">;</span>
        <span class="token comment">//\u4F9D\u636Eequals()\u65B9\u6CD5\u5224\u65AD\u662F\u5426\u76F8\u7B49</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-put" tabindex="-1"><a class="header-anchor" href="#_1-3-put" aria-hidden="true">#</a> 1.3 put()</h3><p><code>put(K key, V value)</code>\u65B9\u6CD5\u662F\u5C06\u6307\u5B9A\u7684<code>key, value</code>\u5BF9\u6DFB\u52A0\u5230<code>map</code>\u91CC\u3002\u8BE5\u65B9\u6CD5\u9996\u5148\u4F1A\u5BF9<code>map</code>\u505A\u4E00\u6B21\u67E5\u627E\uFF0C\u770B\u662F\u5426\u5305\u542B\u8BE5\u5143\u7EC4\uFF0C\u5982\u679C\u5DF2\u7ECF\u5305\u542B\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u67E5\u627E\u8FC7\u7A0B\u7C7B\u4F3C\u4E8E<code>getEntry()</code>\u65B9\u6CD5\uFF1B\u5982\u679C\u6CA1\u6709\u627E\u5230\uFF0C\u5219\u4F1A\u901A\u8FC7<code>addEntry(int hash, K key, V value, int bucketIndex)</code>\u65B9\u6CD5\u63D2\u5165\u65B0\u7684<code>entry</code>\uFF0C\u63D2\u5165\u65B9\u5F0F\u4E3A<strong>\u5934\u63D2\u6CD5</strong>\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220816214939228.png" alt="image-20220816214939228"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//addEntry()</span>
<span class="token keyword">void</span> <span class="token function">addEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> threshold<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u81EA\u52A8\u6269\u5BB9\uFF0C\u5E76\u91CD\u65B0\u54C8\u5E0C</span>
        hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        bucketIndex <span class="token operator">=</span> hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>table<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hash%table.length</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5728\u51B2\u7A81\u94FE\u8868\u5934\u90E8\u63D2\u5165\u65B0\u7684entry</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-remove" tabindex="-1"><a class="header-anchor" href="#_1-4-remove" aria-hidden="true">#</a> 1.4 remove()</h3><p><code>remove(Object key)</code>\u7684\u4F5C\u7528\u662F\u5220\u9664<code>key</code>\u503C\u5BF9\u5E94\u7684<code>entry</code>\uFF0C\u8BE5\u65B9\u6CD5\u7684\u5177\u4F53\u903B\u8F91\u662F\u5728<code>removeEntryForKey(Object key)</code>\u91CC\u5B9E\u73B0\u7684\u3002<code>removeEntryForKey()</code>\u65B9\u6CD5\u4F1A\u9996\u5148\u627E\u5230<code>key</code>\u503C\u5BF9\u5E94\u7684<code>entry</code>\uFF0C\u7136\u540E\u5220\u9664\u8BE5<code>entry</code>(\u4FEE\u6539\u94FE\u8868\u7684\u76F8\u5E94\u5F15\u7528)\u3002\u67E5\u627E\u8FC7\u7A0B\u8DDF<code>getEntry()</code>\u8FC7\u7A0B\u7C7B\u4F3C\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220816215257287.png" alt="image-20220816215257287"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//removeEntryForKey()</span>
<span class="token keyword">final</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeEntryForKey</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hash&amp;(table.length-1)</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> prev <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//\u5F97\u5230\u51B2\u7A81\u94FE\u8868</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u904D\u5386\u51B2\u7A81\u94FE\u8868</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token class-name">Object</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u627E\u5230\u8981\u5220\u9664\u7684entry</span>
            modCount<span class="token operator">++</span><span class="token punctuation">;</span> size<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">==</span> e<span class="token punctuation">)</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> next<span class="token punctuation">;</span><span class="token comment">//\u5220\u9664\u7684\u662F\u51B2\u7A81\u94FE\u8868\u7684\u7B2C\u4E00\u4E2Aentry</span>
            <span class="token keyword">else</span> prev<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token keyword">return</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prev <span class="token operator">=</span> e<span class="token punctuation">;</span> e <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-java8-hashmap" tabindex="-1"><a class="header-anchor" href="#_2-java8-hashmap" aria-hidden="true">#</a> 2. Java8 HashMap</h2><p>Java8 \u5BF9 HashMap \u8FDB\u884C\u4E86\u4E00\u4E9B\u4FEE\u6539\uFF0C\u6700\u5927\u7684\u4E0D\u540C\u5C31\u662F\u5229\u7528\u4E86\u7EA2\u9ED1\u6811\uFF0C\u6240\u4EE5\u5176\u7531 <strong>\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811</strong> \u7EC4\u6210\u3002</p><p>\u6839\u636E Java7 HashMap \u7684\u4ECB\u7ECD\uFF0C\u6211\u4EEC\u77E5\u9053\uFF0C\u67E5\u627E\u7684\u65F6\u5019\uFF0C\u6839\u636E hash \u503C\u6211\u4EEC\u80FD\u591F\u5FEB\u901F\u5B9A\u4F4D\u5230\u6570\u7EC4\u7684\u5177\u4F53\u4E0B\u6807\uFF0C\u4F46\u662F\u4E4B\u540E\u7684\u8BDD\uFF0C\u9700\u8981\u987A\u7740\u94FE\u8868\u4E00\u4E2A\u4E2A\u6BD4\u8F83\u4E0B\u53BB\u624D\u80FD\u627E\u5230\u6211\u4EEC\u9700\u8981\u7684\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u53D6\u51B3\u4E8E\u94FE\u8868\u7684\u957F\u5EA6\uFF0C\u4E3A O(n)\u3002</p><p>\u4E3A\u4E86\u964D\u4F4E\u8FD9\u90E8\u5206\u7684\u5F00\u9500\uFF0C\u5728 Java8 \u4E2D\uFF0C\u5F53\u94FE\u8868\u4E2D\u7684\u5143\u7D20\u8FBE\u5230\u4E86 8 \u4E2A\u65F6\uFF0C\u4F1A\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5728\u8FD9\u4E9B\u4F4D\u7F6E\u8FDB\u884C\u67E5\u627E\u7684\u65F6\u5019\u53EF\u4EE5\u964D\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002</p><p>\u6765\u4E00\u5F20\u56FE\u7B80\u5355\u793A\u610F\u4E00\u4E0B\u5427\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220816215508328.png" alt="image-20220816215508328"></p><p>\u6CE8\u610F\uFF0C\u4E0A\u56FE\u662F\u793A\u610F\u56FE\uFF0C\u4E3B\u8981\u662F\u63CF\u8FF0\u7ED3\u6784\uFF0C\u4E0D\u4F1A\u8FBE\u5230\u8FD9\u4E2A\u72B6\u6001\u7684\uFF0C\u56E0\u4E3A\u8FD9\u4E48\u591A\u6570\u636E\u7684\u65F6\u5019\u65E9\u5C31\u6269\u5BB9\u4E86\u3002</p><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u8FD8\u662F\u7528\u4EE3\u7801\u6765\u4ECB\u7ECD\u5427\uFF0C\u4E2A\u4EBA\u611F\u89C9\uFF0CJava8 \u7684\u6E90\u7801\u53EF\u8BFB\u6027\u8981\u5DEE\u4E00\u4E9B\uFF0C\u4E0D\u8FC7\u7CBE\u7B80\u4E00\u4E9B\u3002</p><p>Java7 \u4E2D\u4F7F\u7528 Entry \u6765\u4EE3\u8868\u6BCF\u4E2A HashMap \u4E2D\u7684\u6570\u636E\u8282\u70B9\uFF0CJava8 \u4E2D\u4F7F\u7528 Node\uFF0C\u57FA\u672C\u6CA1\u6709\u533A\u522B\uFF0C\u90FD\u662F key\uFF0Cvalue\uFF0Chash \u548C next \u8FD9\u56DB\u4E2A\u5C5E\u6027\uFF0C\u4E0D\u8FC7\uFF0CNode \u53EA\u80FD\u7528\u4E8E\u94FE\u8868\u7684\u60C5\u51B5\uFF0C\u7EA2\u9ED1\u6811\u7684\u60C5\u51B5\u9700\u8981\u4F7F\u7528 TreeNode\u3002</p><p>\u6211\u4EEC\u6839\u636E\u6570\u7EC4\u5143\u7D20\u4E2D\uFF0C\u7B2C\u4E00\u4E2A\u8282\u70B9\u6570\u636E\u7C7B\u578B\u662F Node \u8FD8\u662F TreeNode \u6765\u5224\u65AD\u8BE5\u4F4D\u7F6E\u4E0B\u662F\u94FE\u8868\u8FD8\u662F\u7EA2\u9ED1\u6811\u7684</p><h3 id="_2-1-put-\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_2-1-put-\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> 2.1 put \u8FC7\u7A0B\u5206\u6790</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B2C\u56DB\u4E2A\u53C2\u6570 onlyIfAbsent \u5982\u679C\u662F true\uFF0C\u90A3\u4E48\u53EA\u6709\u5728\u4E0D\u5B58\u5728\u8BE5 key \u65F6\u624D\u4F1A\u8FDB\u884C put \u64CD\u4F5C</span>
<span class="token comment">// \u7B2C\u4E94\u4E2A\u53C2\u6570 evict \u6211\u4EEC\u8FD9\u91CC\u4E0D\u5173\u5FC3</span>
<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
               <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21 put \u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u89E6\u53D1\u4E0B\u9762\u7684 resize()\uFF0C\u7C7B\u4F3C java7 \u7684\u7B2C\u4E00\u6B21 put \u4E5F\u8981\u521D\u59CB\u5316\u6570\u7EC4\u957F\u5EA6</span>
    <span class="token comment">// \u7B2C\u4E00\u6B21 resize \u548C\u540E\u7EED\u7684\u6269\u5BB9\u6709\u4E9B\u4E0D\u4E00\u6837\uFF0C\u56E0\u4E3A\u8FD9\u6B21\u662F\u6570\u7EC4\u4ECE null \u521D\u59CB\u5316\u5230\u9ED8\u8BA4\u7684 16 \u6216\u81EA\u5B9A\u4E49\u7684\u521D\u59CB\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u627E\u5230\u5177\u4F53\u7684\u6570\u7EC4\u4E0B\u6807\uFF0C\u5982\u679C\u6B64\u4F4D\u7F6E\u6CA1\u6709\u503C\uFF0C\u90A3\u4E48\u76F4\u63A5\u521D\u59CB\u5316\u4E00\u4E0B Node \u5E76\u653E\u7F6E\u5728\u8FD9\u4E2A\u4F4D\u7F6E\u5C31\u53EF\u4EE5\u4E86</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u6570\u7EC4\u8BE5\u4F4D\u7F6E\u6709\u6570\u636E</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
        <span class="token comment">// \u9996\u5148\uFF0C\u5224\u65AD\u8BE5\u4F4D\u7F6E\u7684\u7B2C\u4E00\u4E2A\u6570\u636E\u548C\u6211\u4EEC\u8981\u63D2\u5165\u7684\u6570\u636E\uFF0Ckey \u662F\u4E0D\u662F&quot;\u76F8\u7B49&quot;\uFF0C\u5982\u679C\u662F\uFF0C\u53D6\u51FA\u8FD9\u4E2A\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u8BE5\u8282\u70B9\u662F\u4EE3\u8868\u7EA2\u9ED1\u6811\u7684\u8282\u70B9\uFF0C\u8C03\u7528\u7EA2\u9ED1\u6811\u7684\u63D2\u503C\u65B9\u6CD5\uFF0C\u672C\u6587\u4E0D\u5C55\u5F00\u8BF4\u7EA2\u9ED1\u6811</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
            e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5230\u8FD9\u91CC\uFF0C\u8BF4\u660E\u6570\u7EC4\u8BE5\u4F4D\u7F6E\u4E0A\u662F\u4E00\u4E2A\u94FE\u8868</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u63D2\u5165\u5230\u94FE\u8868\u7684\u6700\u540E\u9762(Java7 \u662F\u63D2\u5165\u5230\u94FE\u8868\u7684\u6700\u524D\u9762)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// TREEIFY_THRESHOLD \u4E3A 8\uFF0C\u6240\u4EE5\uFF0C\u5982\u679C\u65B0\u63D2\u5165\u7684\u503C\u662F\u94FE\u8868\u4E2D\u7684\u7B2C 8 \u4E2A</span>
                    <span class="token comment">// \u4F1A\u89E6\u53D1\u4E0B\u9762\u7684 treeifyBin\uFF0C\u4E5F\u5C31\u662F\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> <span class="token constant">TREEIFY_THRESHOLD</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                        <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5982\u679C\u5728\u8BE5\u94FE\u8868\u4E2D\u627E\u5230\u4E86&quot;\u76F8\u7B49&quot;\u7684 key(== \u6216 equals)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token comment">// \u6B64\u65F6 break\uFF0C\u90A3\u4E48 e \u4E3A\u94FE\u8868\u4E2D[\u4E0E\u8981\u63D2\u5165\u7684\u65B0\u503C\u7684 key &quot;\u76F8\u7B49&quot;]\u7684 node</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                p <span class="token operator">=</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// e!=null \u8BF4\u660E\u5B58\u5728\u65E7\u503C\u7684key\u4E0E\u8981\u63D2\u5165\u7684key&quot;\u76F8\u7B49&quot;</span>
        <span class="token comment">// \u5BF9\u4E8E\u6211\u4EEC\u5206\u6790\u7684put\u64CD\u4F5C\uFF0C\u4E0B\u9762\u8FD9\u4E2A if \u5176\u5B9E\u5C31\u662F\u8FDB\u884C &quot;\u503C\u8986\u76D6&quot;\uFF0C\u7136\u540E\u8FD4\u56DE\u65E7\u503C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C HashMap \u7531\u4E8E\u65B0\u63D2\u5165\u8FD9\u4E2A\u503C\u5BFC\u81F4 size \u5DF2\u7ECF\u8D85\u8FC7\u4E86\u9608\u503C\uFF0C\u9700\u8981\u8FDB\u884C\u6269\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u548C Java7 \u7A0D\u5FAE\u6709\u70B9\u4E0D\u4E00\u6837\u7684\u5730\u65B9\u5C31\u662F\uFF0CJava7 \u662F\u5148\u6269\u5BB9\u540E\u63D2\u5165\u65B0\u503C\u7684\uFF0CJava8 \u5148\u63D2\u503C\u518D\u6269\u5BB9\uFF0C\u4E0D\u8FC7\u8FD9\u4E2A\u4E0D\u91CD\u8981</p><h3 id="_2-2-\u6570\u7EC4\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#_2-2-\u6570\u7EC4\u6269\u5BB9" aria-hidden="true">#</a> 2.2 \u6570\u7EC4\u6269\u5BB9</h3><p>resize() \u65B9\u6CD5\u7528\u4E8E\u521D\u59CB\u5316\u6570\u7EC4\u6216\u6570\u7EC4\u6269\u5BB9\uFF0C\u6BCF\u6B21\u6269\u5BB9\u540E\uFF0C\u5BB9\u91CF\u4E3A\u539F\u6765\u7684 2 \u500D\uFF0C\u5E76\u8FDB\u884C\u6570\u636E\u8FC1\u79FB\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5BF9\u5E94\u6570\u7EC4\u6269\u5BB9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5C06\u6570\u7EC4\u5927\u5C0F\u6269\u5927\u4E00\u500D</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span>
                 oldCap <span class="token operator">&gt;=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5C06\u9608\u503C\u6269\u5927\u4E00\u500D</span>
            newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u5BF9\u5E94\u4F7F\u7528 new HashMap(int initialCapacity) \u521D\u59CB\u5316\u540E\uFF0C\u7B2C\u4E00\u6B21 put \u7684\u65F6\u5019</span>
        newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5BF9\u5E94\u4F7F\u7528 new HashMap() \u521D\u59CB\u5316\u540E\uFF0C\u7B2C\u4E00\u6B21 put \u7684\u65F6\u5019</span>
        newCap <span class="token operator">=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_LOAD_FACTOR</span> <span class="token operator">*</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
        newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">?</span>
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>

    <span class="token comment">// \u7528\u65B0\u7684\u6570\u7EC4\u5927\u5C0F\u521D\u59CB\u5316\u65B0\u7684\u6570\u7EC4</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTab<span class="token punctuation">;</span> <span class="token comment">// \u5982\u679C\u662F\u521D\u59CB\u5316\u6570\u7EC4\uFF0C\u5230\u8FD9\u91CC\u5C31\u7ED3\u675F\u4E86\uFF0C\u8FD4\u56DE newTab \u5373\u53EF</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5F00\u59CB\u904D\u5386\u539F\u6570\u7EC4\uFF0C\u8FDB\u884C\u6570\u636E\u8FC1\u79FB\u3002</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C\u8BE5\u6570\u7EC4\u4F4D\u7F6E\u4E0A\u53EA\u6709\u5355\u4E2A\u5143\u7D20\uFF0C\u90A3\u5C31\u7B80\u5355\u4E86\uFF0C\u7B80\u5355\u8FC1\u79FB\u8FD9\u4E2A\u5143\u7D20\u5C31\u53EF\u4EE5\u4E86</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token comment">// \u5982\u679C\u662F\u7EA2\u9ED1\u6811\uFF0C\u5177\u4F53\u6211\u4EEC\u5C31\u4E0D\u5C55\u5F00\u4E86</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span> 
                    <span class="token comment">// \u8FD9\u5757\u662F\u5904\u7406\u94FE\u8868\u7684\u60C5\u51B5\uFF0C</span>
                    <span class="token comment">// \u9700\u8981\u5C06\u6B64\u94FE\u8868\u62C6\u6210\u4E24\u4E2A\u94FE\u8868\uFF0C\u653E\u5230\u65B0\u7684\u6570\u7EC4\u4E2D\uFF0C\u5E76\u4E14\u4FDD\u7559\u539F\u6765\u7684\u5148\u540E\u987A\u5E8F</span>
                    <span class="token comment">// loHead\u3001loTail \u5BF9\u5E94\u4E00\u6761\u94FE\u8868\uFF0ChiHead\u3001hiTail \u5BF9\u5E94\u53E6\u4E00\u6761\u94FE\u8868\uFF0C\u4EE3\u7801\u8FD8\u662F\u6BD4\u8F83\u7B80\u5355\u7684</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">else</span>
                                hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token comment">// \u7B2C\u4E00\u6761\u94FE\u8868</span>
                        newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token comment">// \u7B2C\u4E8C\u6761\u94FE\u8868\u7684\u65B0\u7684\u4F4D\u7F6E\u662F j + oldCap\uFF0C\u8FD9\u4E2A\u5F88\u597D\u7406\u89E3</span>
                        newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-get-\u8FC7\u7A0B\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_2-3-get-\u8FC7\u7A0B\u5206\u6790" aria-hidden="true">#</a> 2.3 get \u8FC7\u7A0B\u5206\u6790</h3><p>\u76F8\u5BF9\u4E8E put \u6765\u8BF4\uFF0Cget \u771F\u7684\u592A\u7B80\u5355\u4E86\u3002</p><ul><li>\u8BA1\u7B97 key \u7684 hash \u503C\uFF0C\u6839\u636E hash \u503C\u627E\u5230\u5BF9\u5E94\u6570\u7EC4\u4E0B\u6807: hash &amp; (length-1)</li><li>\u5224\u65AD\u6570\u7EC4\u8BE5\u4F4D\u7F6E\u5904\u7684\u5143\u7D20\u662F\u5426\u521A\u597D\u5C31\u662F\u6211\u4EEC\u8981\u627E\u7684\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u8D70\u7B2C\u4E09\u6B65</li><li>\u5224\u65AD\u8BE5\u5143\u7D20\u7C7B\u578B\u662F\u5426\u662F TreeNode\uFF0C\u5982\u679C\u662F\uFF0C\u7528\u7EA2\u9ED1\u6811\u7684\u65B9\u6CD5\u53D6\u6570\u636E\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u8D70\u7B2C\u56DB\u6B65</li><li>\u904D\u5386\u94FE\u8868\uFF0C\u76F4\u5230\u627E\u5230\u76F8\u7B49(==\u6216equals)\u7684 key</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u4E0D\u662F\u5C31\u662F\u9700\u8981\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> first<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u94FE\u8868\u904D\u5386</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-hashset" tabindex="-1"><a class="header-anchor" href="#_3-hashset" aria-hidden="true">#</a> 3. HashSet</h2><p>\u524D\u9762\u5DF2\u7ECF\u8BF4\u8FC7<em>HashSet</em>\u662F\u5BF9<em>HashMap</em>\u7684\u7B80\u5355\u5305\u88C5\uFF0C\u5BF9<em>HashSet</em>\u7684\u51FD\u6570\u8C03\u7528\u90FD\u4F1A\u8F6C\u6362\u6210\u5408\u9002\u7684<em>HashMap</em>\u65B9\u6CD5\uFF0C\u56E0\u6B64<em>HashSet</em>\u7684\u5B9E\u73B0\u975E\u5E38\u7B80\u5355\uFF0C\u53EA\u6709\u4E0D\u5230300\u884C\u4EE3\u7801\u3002\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//HashSet\u662F\u5BF9HashMap\u7684\u7B80\u5355\u5305\u88C5</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span><span class="token comment">//HashSet\u91CC\u9762\u6709\u4E00\u4E2AHashMap</span>
    <span class="token comment">// Dummy value to associate with an Object in the backing Map</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> <span class="token constant">PRESENT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u7B80\u5355\u7684\u65B9\u6CD5\u8F6C\u6362</span>
        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token constant">PRESENT</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,46),k={href:"https://pdai.tech/md/java/collection/java-map-HashMap&HashSet.html",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const s=l("ExternalLinkIcon");return p(),t("div",null,[i,n("p",null,[n("a",k,[e("Map - HashSet & HashMap \u6E90\u7801\u89E3\u6790"),o(s)])])])}const h=a(u,[["render",r],["__file","java-map-HashMap&HashSet.html.vue"]]);export{h as default};
