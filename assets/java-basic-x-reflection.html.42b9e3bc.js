import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as p,r as l}from"./app.74b2ce1e.js";const i={},u=p(`<h1 id="java-\u57FA\u7840-\u53CD\u5C04\u673A\u5236\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#java-\u57FA\u7840-\u53CD\u5C04\u673A\u5236\u8BE6\u89E3" aria-hidden="true">#</a> Java \u57FA\u7840 - \u53CD\u5C04\u673A\u5236\u8BE6\u89E3</h1><blockquote><p>JAVA\u53CD\u5C04\u673A\u5236\u662F\u5728\u8FD0\u884C\u72B6\u6001\u4E2D\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u4E00\u4E2A\u7C7B\uFF0C\u90FD\u80FD\u591F\u77E5\u9053\u8FD9\u4E2A\u7C7B\u7684\u6240\u6709\u5C5E\u6027\u548C\u65B9\u6CD5\uFF1B\u5BF9\u4E8E\u4EFB\u610F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u90FD\u80FD\u591F\u8C03\u7528\u5B83\u7684\u4EFB\u610F\u4E00\u4E2A\u65B9\u6CD5\u548C\u5C5E\u6027\uFF1B\u8FD9\u79CD\u52A8\u6001\u83B7\u53D6\u7684\u4FE1\u606F\u4EE5\u53CA\u52A8\u6001\u8C03\u7528\u5BF9\u8C61\u7684\u65B9\u6CD5\u7684\u529F\u80FD\u79F0\u4E3Ajava\u8BED\u8A00\u7684\u53CD\u5C04\u673A\u5236\u3002Java\u53CD\u5C04\u673A\u5236\u5728\u6846\u67B6\u8BBE\u8BA1\u4E2D\u6781\u4E3A\u5E7F\u6CDB\uFF0C\u9700\u8981\u6DF1\u5165\u7406\u89E3\u3002\u672C\u6587\u7EFC\u5408\u591A\u7BC7\u6587\u7AE0\u540E\uFF0C\u603B\u7ED3\u4E86Java \u53CD\u5C04\u7684\u76F8\u5173\u77E5\u8BC6\uFF0C\u5E0C\u671B\u53EF\u4EE5\u63D0\u5347\u4F60\u5BF9Java\u4E2D\u53CD\u5C04\u7684\u8BA4\u77E5\u6548\u7387\u3002</p></blockquote><h2 id="_0-\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_0-\u57FA\u7840" aria-hidden="true">#</a> 0. \u57FA\u7840</h2><h3 id="_0-1-\u4EC0\u4E48\u662F\u53CD\u5C04" tabindex="-1"><a class="header-anchor" href="#_0-1-\u4EC0\u4E48\u662F\u53CD\u5C04" aria-hidden="true">#</a> 0.1 \u4EC0\u4E48\u662F\u53CD\u5C04\uFF1F</h3><p>\u53EF\u4EE5\u5728<strong>\u8FD0\u884C\u65F6\u83B7\u5F97</strong>\u7A0B\u5E8F\u6216\u7A0B\u5E8F\u96C6\u4E2D<strong>\u6BCF\u4E00\u4E2A\u7C7B\u578B\u7684\u6210\u5458\u548C\u6210\u5458\u7684\u4FE1\u606F</strong>\u3002</p><p>\u7A0B\u5E8F\u4E2D\u4E00\u822C\u7684\u5BF9\u8C61\u7684\u7C7B\u578B\u90FD\u662F\u5728\u7F16\u8BD1\u671F\u786E\u5B9A\u4E0B\u6765\u7684\uFF0C\u800C<strong>java\u53CD\u5C04\u673A\u5236\u53EF\u4EE5\u52A8\u6001\u5730\u521B\u5EFA\u5BF9\u8C61\u5E76\u8C03\u7528\u5176\u5C5E\u6027</strong>\uFF0C\u8FD9\u6837\u7684\u5BF9\u8C61\u5728\u7F16\u8BD1\u671F\u662F\u672A\u77E5\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u53CD\u5C04\u96C6\u4E2D\u5236\u76F4\u63A5\u521B\u5EFA\u5BF9\u8C61\uFF0C\u5373\u4F7F\u8FD9\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\u5728\u7F16\u8BD1\u5668\u662F\u672A\u77E5\u7684\u3002</p><h3 id="_0-2-\u53CD\u5C04\u7684\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_0-2-\u53CD\u5C04\u7684\u7F3A\u70B9" aria-hidden="true">#</a> 0.2 \u53CD\u5C04\u7684\u7F3A\u70B9\uFF1F</h3><ul><li>\u4F1A\u989D\u5916\u6D88\u8017\u4E00\u5B9A\u7684\u7CFB\u7EDF\u8D44\u6E90</li><li>\u4F1A\u7834\u574F\u5C01\u88C5\u6027\u4ECE\u800C\u5BFC\u81F4\u5B89\u5168\u95EE\u9898</li></ul><h3 id="_0-3-\u4F60\u662F\u600E\u4E48\u7406\u89E3\u53CD\u5C04\u7684-\u4E3A\u4EC0\u4E48\u6846\u67B6\u9700\u8981\u53CD\u5C04" tabindex="-1"><a class="header-anchor" href="#_0-3-\u4F60\u662F\u600E\u4E48\u7406\u89E3\u53CD\u5C04\u7684-\u4E3A\u4EC0\u4E48\u6846\u67B6\u9700\u8981\u53CD\u5C04" aria-hidden="true">#</a> 0.3 \u4F60\u662F\u600E\u4E48\u7406\u89E3\u53CD\u5C04\u7684\uFF08\u4E3A\u4EC0\u4E48\u6846\u67B6\u9700\u8981\u53CD\u5C04\uFF09</h3><p><strong>java\u53CD\u5C04\u673A\u5236\u53EF\u4EE5\u52A8\u6001\u5730\u521B\u5EFA\u5BF9\u8C61\u5E76\u8C03\u7528\u5176\u5C5E\u6027</strong>\u3002</p><p>\u5F88\u591A\u6846\u67B6\uFF08\u6BD4\u5982Spring\uFF09\u90FD\u662F\u914D\u7F6E\u5316\u7684\uFF08\u6BD4\u5982\u901A\u8FC7XML\u6587\u4EF6\u914D\u7F6EBean\uFF09\uFF0C<strong>\u4E3A\u4E86\u4FDD\u8BC1\u6846\u67B6\u7684\u901A\u7528\u6027</strong>\uFF0C\u5B83\u4EEC\u53EF\u80FD\u9700\u8981<strong>\u6839\u636E\u914D\u7F6E\u6587\u4EF6\u52A0\u8F7D\u4E0D\u540C\u7684\u5BF9\u8C61\u6216\u7C7B\uFF0C\u8C03\u7528\u4E0D\u540C\u7684\u65B9\u6CD5</strong>\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5C31\u5FC5\u987B\u7528\u5230\u53CD\u5C04\uFF0C\u8FD0\u884C\u65F6\u52A8\u6001\u52A0\u8F7D\u9700\u8981\u52A0\u8F7D\u7684\u5BF9\u8C61</p><h2 id="_1-\u53CD\u5C04\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_1-\u53CD\u5C04\u57FA\u7840" aria-hidden="true">#</a> 1. \u53CD\u5C04\u57FA\u7840</h2><p>RTTI\uFF08Run-Time Type Identification\uFF09\u8FD0\u884C\u65F6\u7C7B\u578B\u8BC6\u522B\u3002\u5728\u300AThinking in Java\u300B\u4E00\u4E66\u7B2C\u5341\u56DB\u7AE0\u4E2D\u6709\u63D0\u5230\uFF0C\u5176\u4F5C\u7528\u662F\u5728\u8FD0\u884C\u65F6\u8BC6\u522B\u4E00\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\u548C\u7C7B\u7684\u4FE1\u606F\u3002\u4E3B\u8981\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A\u4E00\u79CD\u662F\u201C\u4F20\u7EDF\u7684\u201DRTTI\uFF0C\u5B83\u5047\u5B9A\u6211\u4EEC\u5728\u7F16\u8BD1\u65F6\u5DF2\u7ECF\u77E5\u9053\u4E86\u6240\u6709\u7684\u7C7B\u578B\uFF1B\u53E6\u4E00\u79CD\u662F\u201C\u53CD\u5C04\u201D\u673A\u5236\uFF0C\u5B83\u5141\u8BB8\u6211\u4EEC\u5728\u8FD0\u884C\u65F6\u53D1\u73B0\u548C\u4F7F\u7528\u7C7B\u7684\u4FE1\u606F\u3002</p><p>\u53CD\u5C04\u5C31\u662F\u628Ajava\u7C7B\u4E2D\u7684\u5404\u79CD\u6210\u5206\u6620\u5C04\u6210\u4E00\u4E2A\u4E2A\u7684Java\u5BF9\u8C61</p><p>\u4F8B\u5982\uFF1A\u4E00\u4E2A\u7C7B\u6709\uFF1A\u6210\u5458\u53D8\u91CF\u3001\u65B9\u6CD5\u3001\u6784\u9020\u65B9\u6CD5\u3001\u5305\u7B49\u7B49\u4FE1\u606F\uFF0C\u5229\u7528\u53CD\u5C04\u6280\u672F\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u7C7B\u8FDB\u884C\u89E3\u5256\uFF0C\u628A\u4E2A\u4E2A\u7EC4\u6210\u90E8\u5206\u6620\u5C04\u6210\u4E00\u4E2A\u4E2A\u5BF9\u8C61\u3002</p><blockquote><p>\u8FD9\u91CC\u6211\u4EEC\u9996\u5148\u9700\u8981\u7406\u89E3 Class\u7C7B\uFF0C\u4EE5\u53CA\u7C7B\u7684\u52A0\u8F7D\u673A\u5236\uFF1B \u7136\u540E\u57FA\u4E8E\u6B64\u6211\u4EEC\u5982\u4F55\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6Class\u7C7B\u4EE5\u53CA\u7C7B\u4E2D\u7684\u6210\u5458\u53D8\u91CF\u3001\u65B9\u6CD5\u3001\u6784\u9020\u65B9\u6CD5\u7B49\u3002</p></blockquote><h3 id="_1-1-class\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-1-class\u7C7B" aria-hidden="true">#</a> 1.1 Class\u7C7B</h3><p>Class\u7C7B\uFF0CClass\u7C7B\u4E5F\u662F\u4E00\u4E2A\u5B9E\u5B9E\u5728\u5728\u7684\u7C7B\uFF0C\u5B58\u5728\u4E8EJDK\u7684java.lang\u5305\u4E2D\u3002Class\u7C7B\u7684\u5B9E\u4F8B\u8868\u793Ajava\u5E94\u7528\u8FD0\u884C\u65F6\u7684\u7C7B(class ans enum)\u6216\u63A5\u53E3(interface and annotation)\uFF08\u6BCF\u4E2Ajava\u7C7B\u8FD0\u884C\u65F6\u90FD\u5728JVM\u91CC\u8868\u73B0\u4E3A\u4E00\u4E2Aclass\u5BF9\u8C61\uFF0C\u53EF\u901A\u8FC7\u7C7B\u540D.class\u3001\u7C7B\u578B.getClass()\u3001Class.forName(&quot;\u7C7B\u540D&quot;)\u7B49\u65B9\u6CD5\u83B7\u53D6class\u5BF9\u8C61\uFF09\u3002\u6570\u7EC4\u540C\u6837\u4E5F\u88AB\u6620\u5C04\u4E3Aclass \u5BF9\u8C61\u7684\u4E00\u4E2A\u7C7B\uFF0C\u6240\u6709\u5177\u6709\u76F8\u540C\u5143\u7D20\u7C7B\u578B\u548C\u7EF4\u6570\u7684\u6570\u7EC4\u90FD\u5171\u4EAB\u8BE5 Class \u5BF9\u8C61\u3002\u57FA\u672C\u7C7B\u578Bboolean\uFF0Cbyte\uFF0Cchar\uFF0Cshort\uFF0Cint\uFF0Clong\uFF0Cfloat\uFF0Cdouble\u548C\u5173\u952E\u5B57void\u540C\u6837\u8868\u73B0\u4E3A class \u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span><span class="token punctuation">,</span>
                              <span class="token class-name">GenericDeclaration</span><span class="token punctuation">,</span>
                              <span class="token class-name">Type</span><span class="token punctuation">,</span>
                              <span class="token class-name">AnnotatedElement</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ANNOTATION</span><span class="token operator">=</span> <span class="token number">0x00002000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">ENUM</span>      <span class="token operator">=</span> <span class="token number">0x00004000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SYNTHETIC</span> <span class="token operator">=</span> <span class="token number">0x00001000</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token function">registerNatives</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * Private constructor. Only the Java Virtual Machine creates Class objects.   //\u79C1\u6709\u6784\u9020\u5668\uFF0C\u53EA\u6709JVM\u624D\u80FD\u8C03\u7528\u521B\u5EFAClass\u5BF9\u8C61
     * This constructor is not used and prevents the default constructor being
     * generated.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Class</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Initialize final field for classLoader.  The initialization value of non-null</span>
        <span class="token comment">// prevents future JIT optimizations from assuming this final field is null.</span>
        classLoader <span class="token operator">=</span> loader<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u6211\u4EEC\u4E5F\u5C31\u53EF\u4EE5\u5F97\u51FA\u4EE5\u4E0B\u51E0\u70B9\u4FE1\u606F\uFF1A</p><ul><li>Class\u7C7B\u4E5F\u662F\u7C7B\u7684\u4E00\u79CD\uFF0C\u4E0Eclass\u5173\u952E\u5B57\u662F\u4E0D\u4E00\u6837\u7684\u3002</li><li>\u624B\u52A8\u7F16\u5199\u7684\u7C7B\u88AB\u7F16\u8BD1\u540E\u4F1A\u4EA7\u751F\u4E00\u4E2AClass\u5BF9\u8C61\uFF0C\u5176\u8868\u793A\u7684\u662F\u521B\u5EFA\u7684\u7C7B\u7684\u7C7B\u578B\u4FE1\u606F\uFF0C\u800C\u4E14\u8FD9\u4E2AClass\u5BF9\u8C61\u4FDD\u5B58\u5728\u540C\u540D.class\u7684\u6587\u4EF6\u4E2D(\u5B57\u8282\u7801\u6587\u4EF6)</li><li>\u6BCF\u4E2A\u901A\u8FC7\u5173\u952E\u5B57class\u6807\u8BC6\u7684\u7C7B\uFF0C\u5728\u5185\u5B58\u4E2D\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684Class\u5BF9\u8C61\u6765\u63CF\u8FF0\u5176\u7C7B\u578B\u4FE1\u606F\uFF0C\u65E0\u8BBA\u521B\u5EFA\u591A\u5C11\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5176\u4F9D\u636E\u7684\u90FD\u662F\u7528\u4E00\u4E2AClass\u5BF9\u8C61\u3002</li><li>Class\u7C7B\u53EA\u5B58\u79C1\u6709\u6784\u9020\u51FD\u6570\uFF0C\u56E0\u6B64\u5BF9\u5E94Class\u5BF9\u8C61\u53EA\u80FD\u6709JVM\u521B\u5EFA\u548C\u52A0\u8F7D</li><li>Class\u7C7B\u7684\u5BF9\u8C61\u4F5C\u7528\u662F\u8FD0\u884C\u65F6\u63D0\u4F9B\u6216\u83B7\u5F97\u67D0\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B\u4FE1\u606F\uFF0C\u8FD9\u70B9\u5BF9\u4E8E\u53CD\u5C04\u6280\u672F\u5F88\u91CD\u8981(\u5173\u4E8E\u53CD\u5C04\u7A0D\u540E\u5206\u6790)\u3002</li></ul><h3 id="_1-2-\u7C7B\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#_1-2-\u7C7B\u52A0\u8F7D" aria-hidden="true">#</a> 1.2 \u7C7B\u52A0\u8F7D</h3><p>\u7C7B\u52A0\u8F7D\u673A\u5236\u548C\u7C7B\u5B57\u8282\u7801\u6280\u672F\u53EF\u4EE5\u53C2\u8003\u5982\u4E0B\u4E24\u7BC7\u6587\u7AE0\uFF1A</p>`,23),k={href:"https://pdai.tech/md/java/jvm/java-jvm-class.html",target:"_blank",rel:"noopener noreferrer"},r=n("ul",null,[n("li",null,"\u6E90\u4EE3\u7801\u901A\u8FC7\u7F16\u8BD1\u5668\u7F16\u8BD1\u4E3A\u5B57\u8282\u7801\uFF0C\u518D\u901A\u8FC7\u7C7B\u52A0\u8F7D\u5B50\u7CFB\u7EDF\u8FDB\u884C\u52A0\u8F7D\u5230JVM\u4E2D\u8FD0\u884C")],-1),d={href:"https://pdai.tech/md/java/jvm/java-jvm-classload.html",target:"_blank",rel:"noopener noreferrer"},m=n("ul",null,[n("li",null,"\u8FD9\u7BC7\u6587\u7AE0\u5C06\u5E26\u4F60\u6DF1\u5165\u7406\u89E3Java \u7C7B\u52A0\u8F7D\u673A\u5236")],-1),v=p(`<p>\u5176\u4E2D\uFF0C\u8FD9\u91CC\u6211\u4EEC\u9700\u8981\u56DE\u987E\u7684\u662F\uFF1A</p><ol><li>\u7C7B\u52A0\u8F7D\u673A\u5236\u6D41\u7A0B</li></ol><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220814205219444.png" alt="image-20220814205219444"></p><ol start="2"><li>\u7C7B\u7684\u52A0\u8F7D</li></ol><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220814205303854.png" alt="image-20220814205303854"></p><h2 id="_2-\u53CD\u5C04\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-\u53CD\u5C04\u7684\u4F7F\u7528" aria-hidden="true">#</a> 2. \u53CD\u5C04\u7684\u4F7F\u7528</h2><blockquote><p>TIP</p><p>\u57FA\u4E8E\u6B64\u6211\u4EEC\u5982\u4F55\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6Class\u7C7B\u5BF9\u8C61\u4EE5\u53CA\u7C7B\u4E2D\u7684\u6210\u5458\u53D8\u91CF\u3001\u65B9\u6CD5\u3001\u6784\u9020\u65B9\u6CD5\u7B49</p></blockquote><p>\u5728Java\u4E2D\uFF0CClass\u7C7B\u4E0Ejava.lang.reflect\u7C7B\u5E93\u4E00\u8D77\u5BF9\u53CD\u5C04\u6280\u672F\u8FDB\u884C\u4E86\u5168\u529B\u7684\u652F\u6301\u3002\u5728\u53CD\u5C04\u5305\u4E2D\uFF0C\u6211\u4EEC\u5E38\u7528\u7684\u7C7B\u4E3B\u8981\u6709Constructor\u7C7B\u8868\u793A\u7684\u662FClass \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\uFF0C\u5229\u7528\u5B83\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u52A8\u6001\u521B\u5EFA\u5BF9\u8C61\u3001Field\u8868\u793AClass\u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6210\u5458\u53D8\u91CF\uFF0C\u901A\u8FC7\u5B83\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u52A8\u6001\u4FEE\u6539\u6210\u5458\u53D8\u91CF\u7684\u5C5E\u6027\u503C(\u5305\u542Bprivate)\u3001Method\u8868\u793AClass\u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6210\u5458\u65B9\u6CD5\uFF0C\u901A\u8FC7\u5B83\u53EF\u4EE5\u52A8\u6001\u8C03\u7528\u5BF9\u8C61\u7684\u65B9\u6CD5(\u5305\u542Bprivate)\uFF0C\u4E0B\u9762\u5C06\u5BF9\u8FD9\u51E0\u4E2A\u91CD\u8981\u7C7B\u8FDB\u884C\u5206\u522B\u8BF4\u660E\u3002</p><h3 id="_2-1-class\u7C7B\u5BF9\u8C61\u7684\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#_2-1-class\u7C7B\u5BF9\u8C61\u7684\u83B7\u53D6" aria-hidden="true">#</a> 2.1 Class\u7C7B\u5BF9\u8C61\u7684\u83B7\u53D6</h3><p>\u5728\u7C7B\u52A0\u8F7D\u7684\u65F6\u5019\uFF0Cjvm\u4F1A\u521B\u5EFA\u4E00\u4E2Aclass\u5BF9\u8C61</p><p>class\u5BF9\u8C61\u662F\u53EF\u4EE5\u8BF4\u662F\u53CD\u5C04\u4E2D\u6700\u5E38\u7528\u7684\uFF0C\u83B7\u53D6class\u5BF9\u8C61\u7684\u65B9\u5F0F\u7684\u4E3B\u8981\u6709\u4E09\u79CD</p><ul><li>\u6839\u636E\u7C7B\u540D\uFF1A\u7C7B\u540D.class</li><li>\u6839\u636E\u5BF9\u8C61\uFF1A\u5BF9\u8C61.getClass()</li><li>\u6839\u636E\u5168\u9650\u5B9A\u7C7B\u540D\uFF1AClass.forName(\u5168\u9650\u5B9A\u7C7B\u540D)</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">classTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6Class\u5BF9\u8C61\u7684\u4E09\u79CD\u65B9\u5F0F</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u7C7B\u540D:  \\t&quot;</span> <span class="token operator">+</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u5BF9\u8C61:  \\t&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u5168\u9650\u5B9A\u7C7B\u540D:\\t&quot;</span> <span class="token operator">+</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.test.User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5E38\u7528\u7684\u65B9\u6CD5</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6\u5168\u9650\u5B9A\u7C7B\u540D:\\t&quot;</span> <span class="token operator">+</span> userClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6\u7C7B\u540D:\\t&quot;</span> <span class="token operator">+</span> userClass<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B9E\u4F8B\u5316:\\t&quot;</span> <span class="token operator">+</span> userClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ...</span>
    <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;init&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;User [name=&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;, age=&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u6839\u636E\u7C7B\u540D<span class="token operator">:</span>  	<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>User</span>
\u6839\u636E\u5BF9\u8C61<span class="token operator">:</span>  	<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>User</span>
\u6839\u636E\u5168\u9650\u5B9A\u7C7B\u540D<span class="token operator">:</span>	<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>User</span>
\u83B7\u53D6\u5168\u9650\u5B9A\u7C7B\u540D<span class="token operator">:</span>	<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>test<span class="token punctuation">.</span></span>User</span>
\u83B7\u53D6\u7C7B\u540D<span class="token operator">:</span>	<span class="token class-name">User</span>
\u5B9E\u4F8B\u5316<span class="token operator">:</span>	<span class="token class-name">User</span> <span class="token punctuation">[</span>name<span class="token operator">=</span>init<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u518D\u6765\u770B\u770B <strong>Class\u7C7B\u7684\u65B9\u6CD5</strong></li></ul><table><thead><tr><th>\u65B9\u6CD5\u540D</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>forName()</td><td>(1)\u83B7\u53D6Class\u5BF9\u8C61\u7684\u4E00\u4E2A\u5F15\u7528\uFF0C\u4F46\u5F15\u7528\u7684\u7C7B\u8FD8\u6CA1\u6709\u52A0\u8F7D(\u8BE5\u7C7B\u7684\u7B2C\u4E00\u4E2A\u5BF9\u8C61\u6CA1\u6709\u751F\u6210)\u5C31\u52A0\u8F7D\u4E86\u8FD9\u4E2A\u7C7B\u3002</td></tr><tr><td>(2)\u4E3A\u4E86\u4EA7\u751FClass\u5F15\u7528\uFF0CforName()\u7ACB\u5373\u5C31\u8FDB\u884C\u4E86\u521D\u59CB\u5316\u3002</td><td></td></tr><tr><td>Object-getClass()</td><td>\u83B7\u53D6Class\u5BF9\u8C61\u7684\u4E00\u4E2A\u5F15\u7528\uFF0C\u8FD4\u56DE\u8868\u793A\u8BE5\u5BF9\u8C61\u7684\u5B9E\u9645\u7C7B\u578B\u7684Class\u5F15\u7528\u3002</td></tr><tr><td>getName()</td><td>\u53D6\u5168\u9650\u5B9A\u7684\u7C7B\u540D(\u5305\u62EC\u5305\u540D)\uFF0C\u5373\u7C7B\u7684\u5B8C\u6574\u540D\u5B57\u3002</td></tr><tr><td>getSimpleName()</td><td>\u83B7\u53D6\u7C7B\u540D(\u4E0D\u5305\u62EC\u5305\u540D)</td></tr><tr><td>getCanonicalName()</td><td>\u83B7\u53D6\u5168\u9650\u5B9A\u7684\u7C7B\u540D(\u5305\u62EC\u5305\u540D)</td></tr><tr><td>isInterface()</td><td>\u5224\u65ADClass\u5BF9\u8C61\u662F\u5426\u662F\u8868\u793A\u4E00\u4E2A\u63A5\u53E3</td></tr><tr><td>getInterfaces()</td><td>\u8FD4\u56DEClass\u5BF9\u8C61\u6570\u7EC4\uFF0C\u8868\u793AClass\u5BF9\u8C61\u6240\u5F15\u7528\u7684\u7C7B\u6240\u5B9E\u73B0\u7684\u6240\u6709\u63A5\u53E3\u3002</td></tr><tr><td>getSupercalss()</td><td>\u8FD4\u56DEClass\u5BF9\u8C61\uFF0C\u8868\u793AClass\u5BF9\u8C61\u6240\u5F15\u7528\u7684\u7C7B\u6240\u7EE7\u627F\u7684\u76F4\u63A5\u57FA\u7C7B\u3002\u5E94\u7528\u8BE5\u65B9\u6CD5\u53EF\u5728\u8FD0\u884C\u65F6\u53D1\u73B0\u4E00\u4E2A\u5BF9\u8C61\u5B8C\u6574\u7684\u7EE7\u627F\u7ED3\u6784\u3002</td></tr><tr><td>newInstance()</td><td>\u8FD4\u56DE\u4E00\u4E2AOject\u5BF9\u8C61\uFF0C\u662F\u5B9E\u73B0\u201C\u865A\u62DF\u6784\u9020\u5668\u201D\u7684\u4E00\u79CD\u9014\u5F84\u3002\u4F7F\u7528\u8BE5\u65B9\u6CD5\u521B\u5EFA\u7684\u7C7B\uFF0C\u5FC5\u987B\u5E26\u6709\u65E0\u53C2\u7684\u6784\u9020\u5668\u3002</td></tr><tr><td>getFields()</td><td>\u83B7\u5F97\u67D0\u4E2A\u7C7B\u7684\u6240\u6709\u7684\u516C\u5171\uFF08public\uFF09\u7684\u5B57\u6BB5\uFF0C\u5305\u62EC\u7EE7\u627F\u81EA\u7236\u7C7B\u7684\u6240\u6709\u516C\u5171\u5B57\u6BB5\u3002 \u7C7B\u4F3C\u7684\u8FD8\u6709getMethods\u548CgetConstructors\u3002</td></tr><tr><td>getDeclaredFields</td><td>\u83B7\u5F97\u67D0\u4E2A\u7C7B\u7684\u81EA\u5DF1\u58F0\u660E\u7684\u5B57\u6BB5\uFF0C\u5373\u5305\u62ECpublic\u3001private\u548Cproteced\uFF0C\u9ED8\u8BA4\u4F46\u662F\u4E0D\u5305\u62EC\u7236\u7C7B\u58F0\u660E\u7684\u4EFB\u4F55\u5B57\u6BB5\u3002\u7C7B\u4F3C\u7684\u8FD8\u6709getDeclaredMethods\u548CgetDeclaredConstructors\u3002</td></tr></tbody></table>`,17),b={href:"https://blog.csdn.net/mcryeasy/article/details/52344729%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>cry</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">I1</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">I2</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cell</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> mCellPublic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token keyword">extends</span>  <span class="token class-name">Cell</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mAnimalPrivate<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> mAnimalProtected<span class="token punctuation">;</span>
    <span class="token keyword">int</span> mAnimalDefault<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> mAnimalPublic<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sAnimalPrivate<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sAnimalProtected<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> sAnimalDefault<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sAnimalPublic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token keyword">implements</span> <span class="token class-name">I1</span><span class="token punctuation">,</span> <span class="token constant">I2</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mDogPrivate<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> mDogPublic<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> mDogProtected<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> mDogDefault<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sDogPrivate<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sDogProtected<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> sDogDefault<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> sDogPublic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Dog</span><span class="token punctuation">&gt;</span></span> dog <span class="token operator">=</span> <span class="token class-name">Dog</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7C7B\u540D\u6253\u5370</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//com.cry.Dog</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Dog</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//com.cry.Dog</span>
        <span class="token comment">//\u63A5\u53E3</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> iI <span class="token operator">:</span> dog<span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>iI<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
         <span class="token comment">/*
          interface com.cry.I1
          interface com.cry.I2
         */</span>

        <span class="token comment">//\u7236\u7C7B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>dog<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//class com.cry.Animal</span>
        <span class="token comment">//\u521B\u5EFA\u5BF9\u8C61</span>
        <span class="token class-name">Dog</span> d <span class="token operator">=</span> dog<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5B57\u6BB5</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> f <span class="token operator">:</span> dog<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">/*
            mDogPublic
            sDogPublic
            mAnimalPublic
            sAnimalPublic
            mCellPublic  //\u7236\u7C7B\u7684\u7236\u7C7B\u7684\u516C\u5171\u5B57\u6BB5\u4E5F\u6253\u5370\u51FA\u6765\u4E86
         */</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> f <span class="token operator">:</span> dog<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token doc-comment comment">/** \u53EA\u6709\u81EA\u5DF1\u7C7B\u58F0\u660E\u7684\u5B57\u6BB5
         mDogPrivate
         mDogPublic
         mDogProtected
         mDogDefault
         sDogPrivate
         sDogProtected
         sDogDefault
         sDogPublic
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>getName\u3001getCanonicalName\u4E0EgetSimpleName\u7684\u533A\u522B</strong>\uFF1A</p><ul><li>getSimpleName\uFF1A\u53EA\u83B7\u53D6\u7C7B\u540D</li><li>getName\uFF1A\u7C7B\u7684\u5168\u9650\u5B9A\u540D\uFF0Cjvm\u4E2DClass\u7684\u8868\u793A\uFF0C\u53EF\u4EE5\u7528\u4E8E\u52A8\u6001\u52A0\u8F7DClass\u5BF9\u8C61\uFF0C\u4F8B\u5982Class.forName\u3002</li><li>getCanonicalName\uFF1A\u8FD4\u56DE\u66F4\u5BB9\u6613\u7406\u89E3\u7684\u8868\u793A\uFF0C\u4E3B\u8981\u7528\u4E8E\u8F93\u51FA\uFF08toString\uFF09\u6216log\u6253\u5370\uFF0C\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u548CgetName\u4E00\u6837\uFF0C\u4F46\u662F\u5728\u5185\u90E8\u7C7B\u3001\u6570\u7EC4\u7B49\u7C7B\u578B\u7684\u8868\u793A\u5F62\u5F0F\u5C31\u4E0D\u540C\u4E86\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>cry</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span>  <span class="token keyword">class</span> inner<span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u666E\u901A\u7C7B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Test</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//com.cry.Test</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//com.cry.Test</span>
        <span class="token comment">//\u5185\u90E8\u7C7B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//inner</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//com.cry.Test$inner</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//com.cry.Test.inner</span>
        <span class="token comment">//\u6570\u7EC4</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//String[]</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[Ljava.lang.String;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCanonicalName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//java.lang.String[]</span>
        <span class="token comment">//\u6211\u4EEC\u4E0D\u80FD\u7528getCanonicalName\u53BB\u52A0\u8F7D\u7C7B\u5BF9\u8C61\uFF0C\u5FC5\u987B\u7528getName</span>
        <span class="token comment">//Class.forName(inner.class.getCanonicalName()); \u62A5\u9519</span>
        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>inner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-constructor\u7C7B\u53CA\u5176\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-2-constructor\u7C7B\u53CA\u5176\u7528\u6CD5" aria-hidden="true">#</a> 2.2 Constructor\u7C7B\u53CA\u5176\u7528\u6CD5</h3><blockquote><p>Constructor\u7C7B\u5B58\u5728\u4E8E\u53CD\u5C04\u5305(java.lang.reflect)\u4E2D\uFF0C\u53CD\u6620\u7684\u662FClass \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\u3002</p></blockquote><p>\u83B7\u53D6Constructor\u5BF9\u8C61\u662F\u901A\u8FC7Class\u7C7B\u4E2D\u7684\u65B9\u6CD5\u83B7\u53D6\u7684\uFF0CClass\u7C7B\u4E0EConstructor\u76F8\u5173\u7684\u4E3B\u8981\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>static Class&lt;?&gt;</td><td>forName(String className)</td><td>\u8FD4\u56DE\u4E0E\u5E26\u6709\u7ED9\u5B9A\u5B57\u7B26\u4E32\u540D\u7684\u7C7B\u6216\u63A5\u53E3\u76F8\u5173\u8054\u7684 Class \u5BF9\u8C61\u3002</td></tr><tr><td>Constructor</td><td>getConstructor(Class&lt;?&gt;... parameterTypes)</td><td>\u8FD4\u56DE\u6307\u5B9A\u53C2\u6570\u7C7B\u578B\u3001\u5177\u6709public\u8BBF\u95EE\u6743\u9650\u7684\u6784\u9020\u51FD\u6570\u5BF9\u8C61</td></tr><tr><td>Constructor&lt;?&gt;[]</td><td>getConstructors()</td><td>\u8FD4\u56DE\u6240\u6709\u5177\u6709public\u8BBF\u95EE\u6743\u9650\u7684\u6784\u9020\u51FD\u6570\u7684Constructor\u5BF9\u8C61\u6570\u7EC4</td></tr><tr><td>Constructor</td><td>getDeclaredConstructor(Class&lt;?&gt;... parameterTypes)</td><td>\u8FD4\u56DE\u6307\u5B9A\u53C2\u6570\u7C7B\u578B\u3001\u6240\u6709\u58F0\u660E\u7684\uFF08\u5305\u62ECprivate\uFF09\u6784\u9020\u51FD\u6570\u5BF9\u8C61</td></tr><tr><td>Constructor&lt;?&gt;[]</td><td>getDeclaredConstructor()</td><td>\u8FD4\u56DE\u6240\u6709\u58F0\u660E\u7684\uFF08\u5305\u62ECprivate\uFF09\u6784\u9020\u51FD\u6570\u5BF9\u8C61</td></tr><tr><td>T</td><td>newInstance()</td><td>\u8C03\u7528\u65E0\u53C2\u6784\u9020\u5668\u521B\u5EFA\u6B64 Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u7684\u4E00\u4E2A\u65B0\u5B9E\u4F8B\u3002</td></tr></tbody></table><p>\u4E0B\u9762\u770B\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50\u6765\u4E86\u89E3Constructor\u5BF9\u8C61\u7684\u4F7F\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConstructionTest</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6Class\u5BF9\u8C61\u7684\u5F15\u7528</span>
        clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.example.javabase.User&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u7B2C\u4E00\u79CD\u65B9\u6CD5\uFF0C\u5B9E\u4F8B\u5316\u9ED8\u8BA4\u6784\u9020\u65B9\u6CD5\uFF0CUser\u5FC5\u987B\u65E0\u53C2\u6784\u9020\u51FD\u6570,\u5426\u5219\u5C06\u629B\u5F02\u5E38</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u5E26String\u53C2\u6570\u7684public\u6784\u9020\u51FD\u6570</span>
        <span class="token class-name">Constructor</span> cs1 <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u521B\u5EFAUser</span>
        <span class="token class-name">User</span> user1<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> cs1<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;hiway&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user1<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;user1:&quot;</span><span class="token operator">+</span>user1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u53D6\u5F97\u6307\u5B9A\u5E26int\u548CString\u53C2\u6570\u6784\u9020\u51FD\u6570,\u8BE5\u65B9\u6CD5\u662F\u79C1\u6709\u6784\u9020private</span>
        <span class="token class-name">Constructor</span> cs2<span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7531\u4E8E\u662Fprivate\u5FC5\u987B\u8BBE\u7F6E\u53EF\u8BBF\u95EE</span>
        cs2<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u521B\u5EFAuser\u5BF9\u8C61</span>
        <span class="token class-name">User</span> user2<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> cs2<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">&quot;hiway2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;user2:&quot;</span><span class="token operator">+</span>user2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u6240\u6709\u6784\u9020\u5305\u542Bprivate</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cons<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u67E5\u770B\u6BCF\u4E2A\u6784\u9020\u65B9\u6CD5\u9700\u8981\u7684\u53C2\u6570</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cons<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u53D6\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazzs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> cons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6784\u9020\u51FD\u6570[&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;]:&quot;</span><span class="token operator">+</span>cons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u53C2\u6570\u7C7B\u578B[&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;]:(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> clazzs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> clazzs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>clazzs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>clazzs<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u79C1\u6709\u6784\u9020
     * <span class="token keyword">@param</span> <span class="token parameter">age</span>
     * <span class="token keyword">@param</span> <span class="token parameter">name</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;User{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;age=&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span>
                <span class="token string">&quot;, name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* output 
User{age=20, name=&#39;Jack&#39;}
--------------------------------------------
user1:User{age=22, name=&#39;hiway&#39;}
--------------------------------------------
user2:User{age=25, name=&#39;hiway2&#39;}
--------------------------------------------
\u6784\u9020\u51FD\u6570[0]:private com.example.javabase.User(int,java.lang.String)
\u53C2\u6570\u7C7B\u578B[0]:(int,java.lang.String)
\u6784\u9020\u51FD\u6570[1]:public com.example.javabase.User(java.lang.String)
\u53C2\u6570\u7C7B\u578B[1]:(java.lang.String)
\u6784\u9020\u51FD\u6570[2]:public com.example.javabase.User()
\u53C2\u6570\u7C7B\u578B[2]:()
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E<strong>Constructor\u7C7B\u672C\u8EAB\u4E00\u4E9B\u5E38\u7528\u65B9\u6CD5</strong>\u5982\u4E0B(\u4EC5\u90E8\u5206\uFF0C\u5176\u4ED6\u53EF\u67E5API)</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>Class</td><td>getDeclaringClass()</td><td>\u8FD4\u56DE Class \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u8868\u793A\u58F0\u660E\u7531\u6B64 Constructor \u5BF9\u8C61\u8868\u793A\u7684\u6784\u9020\u65B9\u6CD5\u7684\u7C7B,\u5176\u5B9E\u5C31\u662F\u8FD4\u56DE\u771F\u5B9E\u7C7B\u578B\uFF08\u4E0D\u5305\u542B\u53C2\u6570\uFF09</td></tr><tr><td>Type[]</td><td>getGenericParameterTypes()</td><td>\u6309\u7167\u58F0\u660E\u987A\u5E8F\u8FD4\u56DE\u4E00\u7EC4 Type \u5BF9\u8C61\uFF0C\u8FD4\u56DE\u7684\u5C31\u662F Constructor\u5BF9\u8C61\u6784\u9020\u51FD\u6570\u7684\u5F62\u53C2\u7C7B\u578B\u3002</td></tr><tr><td>String</td><td>getName()</td><td>\u4EE5\u5B57\u7B26\u4E32\u5F62\u5F0F\u8FD4\u56DE\u6B64\u6784\u9020\u65B9\u6CD5\u7684\u540D\u79F0\u3002</td></tr><tr><td>Class&lt;?&gt;[]</td><td>getParameterTypes()</td><td>\u6309\u7167\u58F0\u660E\u987A\u5E8F\u8FD4\u56DE\u4E00\u7EC4 Class \u5BF9\u8C61\uFF0C\u5373\u8FD4\u56DEConstructor \u5BF9\u8C61\u6240\u8868\u793A\u6784\u9020\u65B9\u6CD5\u7684\u5F62\u53C2\u7C7B\u578B</td></tr><tr><td>T</td><td>newInstance(Object... initargs)</td><td>\u4F7F\u7528\u6B64 Constructor\u5BF9\u8C61\u8868\u793A\u7684\u6784\u9020\u51FD\u6570\u6765\u521B\u5EFA\u65B0\u5B9E\u4F8B</td></tr><tr><td>String</td><td>toGenericString()</td><td>\u8FD4\u56DE\u63CF\u8FF0\u6B64 Constructor \u7684\u5B57\u7B26\u4E32\uFF0C\u5176\u4E2D\u5305\u62EC\u7C7B\u578B\u53C2\u6570\u3002</td></tr></tbody></table><p>\u4EE3\u7801\u6F14\u793A\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Constructor</span> cs3 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getDeclaringClass-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Class</span> uclazz<span class="token operator">=</span>cs3<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Constructor\u5BF9\u8C61\u8868\u793A\u7684\u6784\u9020\u65B9\u6CD5\u7684\u7C7B</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6784\u9020\u65B9\u6CD5\u7684\u7C7B:&quot;</span><span class="token operator">+</span>uclazz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getGenericParameterTypes-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u5BF9\u8C61\u8868\u793A\u6B64 Constructor \u5BF9\u8C61\u6240\u8868\u793A\u7684\u65B9\u6CD5\u7684\u5F62\u53C2\u7C7B\u578B</span>
<span class="token class-name">Type</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tps<span class="token operator">=</span>cs3<span class="token punctuation">.</span><span class="token function">getGenericParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> tp<span class="token operator">:</span>tps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53C2\u6570\u540D\u79F0tp:&quot;</span><span class="token operator">+</span>tp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getParameterTypes-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u53D6\u6784\u9020\u51FD\u6570\u53C2\u6570\u7C7B\u578B</span>
<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazzs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> cs3<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span> claz<span class="token operator">:</span>clazzs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53C2\u6570\u540D\u79F0:&quot;</span><span class="token operator">+</span>claz<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getName-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4EE5\u5B57\u7B26\u4E32\u5F62\u5F0F\u8FD4\u56DE\u6B64\u6784\u9020\u65B9\u6CD5\u7684\u540D\u79F0</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getName:&quot;</span><span class="token operator">+</span>cs3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-----getoGenericString-----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD4\u56DE\u63CF\u8FF0\u6B64 Constructor \u7684\u5B57\u7B26\u4E32\uFF0C\u5176\u4E2D\u5305\u62EC\u7C7B\u578B\u53C2\u6570\u3002</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getoGenericString():&quot;</span><span class="token operator">+</span>cs3<span class="token punctuation">.</span><span class="token function">toGenericString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>getDeclaringClass<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
\u6784\u9020\u65B9\u6CD5\u7684\u7C7B<span class="token operator">:</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>javabase<span class="token punctuation">.</span></span>User</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>getGenericParameterTypes<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
\u53C2\u6570\u540D\u79F0tp<span class="token operator">:</span><span class="token keyword">int</span>
\u53C2\u6570\u540D\u79F0tp<span class="token operator">:</span><span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>getParameterTypes<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
\u53C2\u6570\u540D\u79F0<span class="token operator">:</span><span class="token keyword">int</span>
\u53C2\u6570\u540D\u79F0<span class="token operator">:</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>getName<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
getName<span class="token operator">:</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>javabase<span class="token punctuation">.</span></span>User</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>getoGenericString<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token function">getoGenericString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">private</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>javabase<span class="token punctuation">.</span></span>User</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-field\u7C7B\u53CA\u5176\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-3-field\u7C7B\u53CA\u5176\u7528\u6CD5" aria-hidden="true">#</a> 2.3 Field\u7C7B\u53CA\u5176\u7528\u6CD5</h3><blockquote><p>Field \u63D0\u4F9B\u6709\u5173\u7C7B\u6216\u63A5\u53E3\u7684\u5355\u4E2A\u5B57\u6BB5\u7684\u4FE1\u606F\uFF0C\u4EE5\u53CA\u5BF9\u5B83\u7684\u52A8\u6001\u8BBF\u95EE\u6743\u9650\u3002\u53CD\u5C04\u7684\u5B57\u6BB5\u53EF\u80FD\u662F\u4E00\u4E2A\u7C7B\uFF08\u9759\u6001\uFF09\u5B57\u6BB5\u6216\u5B9E\u4F8B\u5B57\u6BB5\u3002</p></blockquote><p>\u540C\u6837\u7684\u9053\u7406\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7Class\u7C7B\u7684\u63D0\u4F9B\u7684\u65B9\u6CD5\u6765\u83B7\u53D6\u4EE3\u8868\u5B57\u6BB5\u4FE1\u606F\u7684Field\u5BF9\u8C61\uFF0CClass\u7C7B\u4E0EField\u5BF9\u8C61\u76F8\u5173\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>Field</td><td>getDeclaredField(String name)</td><td>\u83B7\u53D6\u6307\u5B9Aname\u540D\u79F0\u7684(\u5305\u542Bprivate\u4FEE\u9970\u7684)\u5B57\u6BB5\uFF0C\u4E0D\u5305\u62EC\u7EE7\u627F\u7684\u5B57\u6BB5</td></tr><tr><td>Field[]</td><td>getDeclaredFields()</td><td>\u83B7\u53D6Class\u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u6216\u63A5\u53E3\u7684\u6240\u6709(\u5305\u542Bprivate\u4FEE\u9970\u7684)\u5B57\u6BB5,\u4E0D\u5305\u62EC\u7EE7\u627F\u7684\u5B57\u6BB5</td></tr><tr><td>Field</td><td>getField(String name)</td><td>\u83B7\u53D6\u6307\u5B9Aname\u540D\u79F0\u3001\u5177\u6709public\u4FEE\u9970\u7684\u5B57\u6BB5\uFF0C\u5305\u542B\u7EE7\u627F\u5B57\u6BB5</td></tr><tr><td>Field[]</td><td>getFields()</td><td>\u83B7\u53D6\u4FEE\u9970\u7B26\u4E3Apublic\u7684\u5B57\u6BB5\uFF0C\u5305\u542B\u7EE7\u627F\u5B57\u6BB5</td></tr></tbody></table><p>\u4E0B\u9762\u7684\u4EE3\u7801\u6F14\u793A\u4E86\u4E0A\u8FF0\u65B9\u6CD5\u7684\u4F7F\u7528\u8FC7\u7A0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectField</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchFieldException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;reflect.Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u83B7\u53D6\u6307\u5B9A\u5B57\u6BB5\u540D\u79F0\u7684Field\u7C7B,\u6CE8\u610F\u5B57\u6BB5\u4FEE\u9970\u7B26\u5FC5\u987B\u4E3Apublic\u800C\u4E14\u5B58\u5728\u8BE5\u5B57\u6BB5,</span>
        <span class="token comment">// \u5426\u5219\u629BNoSuchFieldException</span>
        <span class="token class-name">Field</span> field <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;field:&quot;</span><span class="token operator">+</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u6240\u6709\u4FEE\u9970\u7B26\u4E3Apublic\u7684\u5B57\u6BB5,\u5305\u542B\u7236\u7C7B\u5B57\u6BB5,\u6CE8\u610F\u4FEE\u9970\u7B26\u4E3Apublic\u624D\u4F1A\u83B7\u53D6</span>
        <span class="token class-name">Field</span> fields<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> f<span class="token operator">:</span>fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;f:&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;================getDeclaredFields====================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7C7B\u6240\u5B57\u6BB5(\u5305\u542Bprivate\u5B57\u6BB5),\u6CE8\u610F\u4E0D\u5305\u542B\u7236\u7C7B\u7684\u5B57\u6BB5</span>
        <span class="token class-name">Field</span> fields2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> f<span class="token operator">:</span>fields2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;f2:&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u83B7\u53D6\u6307\u5B9A\u5B57\u6BB5\u540D\u79F0\u7684Field\u7C7B,\u53EF\u4EE5\u662F\u4EFB\u610F\u4FEE\u9970\u7B26\u7684\u81EA\u52A8,\u6CE8\u610F\u4E0D\u5305\u542B\u7236\u7C7B\u7684\u5B57\u6BB5</span>
        <span class="token class-name">Field</span> field2 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;field2:&quot;</span><span class="token operator">+</span>field2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
      \u8F93\u51FA\u7ED3\u679C: 
     field:public int reflect.Person.age
     f:public java.lang.String reflect.Student.desc
     f:public int reflect.Person.age
     f:public java.lang.String reflect.Person.name

     ================getDeclaredFields====================
     f2:public java.lang.String reflect.Student.desc
     f2:private int reflect.Student.score
     field2:public java.lang.String reflect.Student.desc
     */</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token comment">//\u7701\u7565set\u548Cget\u65B9\u6CD5</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> desc<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> score<span class="token punctuation">;</span>
    <span class="token comment">//\u7701\u7565set\u548Cget\u65B9\u6CD5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u65B9\u6CD5\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5982\u679C\u6211\u4EEC\u4E0D\u671F\u671B\u83B7\u53D6\u5176\u7236\u7C7B\u7684\u5B57\u6BB5\uFF0C\u5219\u9700\u4F7F\u7528Class\u7C7B\u7684getDeclaredField/getDeclaredFields\u65B9\u6CD5\u6765\u83B7\u53D6\u5B57\u6BB5\u5373\u53EF\uFF0C\u5018\u82E5\u9700\u8981\u8FDE\u5E26\u83B7\u53D6\u5230\u7236\u7C7B\u7684\u5B57\u6BB5\uFF0C\u90A3\u4E48\u8BF7\u4F7F\u7528Class\u7C7B\u7684getField/getFields\uFF0C\u4F46\u662F\u4E5F\u53EA\u80FD\u83B7\u53D6\u5230public\u4FEE\u9970\u7684\u7684\u5B57\u6BB5\uFF0C\u65E0\u6CD5\u83B7\u53D6\u7236\u7C7B\u7684\u79C1\u6709\u5B57\u6BB5\u3002\u4E0B\u9762\u5C06\u901A\u8FC7Field\u7C7B\u672C\u8EAB\u7684\u65B9\u6CD5\u5BF9\u6307\u5B9A\u7C7B\u5C5E\u6027\u8D4B\u503C\uFF0C\u4EE3\u7801\u6F14\u793A\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u83B7\u53D6Class\u5BF9\u8C61\u5F15\u7528</span>
<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;reflect.Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Student</span> st<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u53D6\u7236\u7C7Bpublic\u5B57\u6BB5\u5E76\u8D4B\u503C</span>
<span class="token class-name">Field</span> ageField <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ageField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span> nameField <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
nameField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token string">&quot;Lily&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u53EA\u83B7\u53D6\u5F53\u524D\u7C7B\u7684\u5B57\u6BB5,\u4E0D\u83B7\u53D6\u7236\u7C7B\u7684\u5B57\u6BB5</span>
<span class="token class-name">Field</span> descField <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
descField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token string">&quot;I am student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span> scoreField <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8BBE\u7F6E\u53EF\u8BBF\u95EE\uFF0Cscore\u662Fprivate\u7684</span>
scoreField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scoreField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u8F93\u51FA\u7ED3\u679C\uFF1AStudent{age=18, name=&#39;Lily ,desc=&#39;I am student&#39;, score=88} </span>

<span class="token comment">//\u83B7\u53D6\u5B57\u6BB5\u503C</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scoreField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 88</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u7684set(Object obj, Object value)\u65B9\u6CD5\u662FField\u7C7B\u672C\u8EAB\u7684\u65B9\u6CD5\uFF0C\u7528\u4E8E\u8BBE\u7F6E\u5B57\u6BB5\u7684\u503C\uFF0C\u800Cget(Object obj)\u5219\u662F\u83B7\u53D6\u5B57\u6BB5\u7684\u503C\uFF0C\u5F53\u7136\u5173\u4E8EField\u7C7B\u8FD8\u6709\u5176\u4ED6\u5E38\u7528\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>void</td><td>set(Object obj, Object value)</td><td>\u5C06\u6307\u5B9A\u5BF9\u8C61\u53D8\u91CF\u4E0A\u6B64 Field \u5BF9\u8C61\u8868\u793A\u7684\u5B57\u6BB5\u8BBE\u7F6E\u4E3A\u6307\u5B9A\u7684\u65B0\u503C\u3002</td></tr><tr><td>Object</td><td>get(Object obj)</td><td>\u8FD4\u56DE\u6307\u5B9A\u5BF9\u8C61\u4E0A\u6B64 Field \u8868\u793A\u7684\u5B57\u6BB5\u7684\u503C</td></tr><tr><td>Class&lt;?&gt;</td><td>getType()</td><td>\u8FD4\u56DE\u4E00\u4E2A Class \u5BF9\u8C61\uFF0C\u5B83\u6807\u8BC6\u4E86\u6B64Field \u5BF9\u8C61\u6240\u8868\u793A\u5B57\u6BB5\u7684\u58F0\u660E\u7C7B\u578B\u3002</td></tr><tr><td>boolean</td><td>isEnumConstant()</td><td>\u5982\u679C\u6B64\u5B57\u6BB5\u8868\u793A\u679A\u4E3E\u7C7B\u578B\u7684\u5143\u7D20\u5219\u8FD4\u56DE true\uFF1B\u5426\u5219\u8FD4\u56DE false</td></tr><tr><td>String</td><td>toGenericString()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u63CF\u8FF0\u6B64 Field\uFF08\u5305\u62EC\u5176\u4E00\u822C\u7C7B\u578B\uFF09\u7684\u5B57\u7B26\u4E32</td></tr><tr><td>String</td><td>getName()</td><td>\u8FD4\u56DE\u6B64 Field \u5BF9\u8C61\u8868\u793A\u7684\u5B57\u6BB5\u7684\u540D\u79F0</td></tr><tr><td>Class&lt;?&gt;</td><td>getDeclaringClass()</td><td>\u8FD4\u56DE\u8868\u793A\u7C7B\u6216\u63A5\u53E3\u7684 Class \u5BF9\u8C61\uFF0C\u8BE5\u7C7B\u6216\u63A5\u53E3\u58F0\u660E\u7531\u6B64 Field \u5BF9\u8C61\u8868\u793A\u7684\u5B57\u6BB5</td></tr><tr><td>void</td><td>setAccessible(boolean flag)</td><td>\u5C06\u6B64\u5BF9\u8C61\u7684 accessible \u6807\u5FD7\u8BBE\u7F6E\u4E3A\u6307\u793A\u7684\u5E03\u5C14\u503C,\u5373\u8BBE\u7F6E\u5176\u53EF\u8BBF\u95EE\u6027</td></tr></tbody></table><p>\u4E0A\u8FF0\u65B9\u6CD5\u53EF\u80FD\u662F\u8F83\u4E3A\u5E38\u7528\u7684\uFF0C\u4E8B\u5B9E\u4E0A\u5728\u8BBE\u7F6E\u503C\u7684\u65B9\u6CD5\u4E0A\uFF0CField\u7C7B\u8FD8\u63D0\u4F9B\u4E86\u4E13\u95E8\u9488\u5BF9\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u65B9\u6CD5\uFF0C\u5982<code>setInt()/getInt()</code>\u3001<code>setBoolean()/getBoolean</code>\u3001<code>setChar()/getChar()</code>\u7B49\u7B49\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u5168\u90E8\u5217\u51FA\u4E86\uFF0C\u9700\u8981\u65F6\u67E5API\u6587\u6863\u5373\u53EF\u3002\u9700\u8981\u7279\u522B\u6CE8\u610F\u7684\u662F\u88ABfinal\u5173\u952E\u5B57\u4FEE\u9970\u7684Field\u5B57\u6BB5\u662F\u5B89\u5168\u7684\uFF0C\u5728\u8FD0\u884C\u65F6\u53EF\u4EE5\u63A5\u6536\u4EFB\u4F55\u4FEE\u6539\uFF0C\u4F46\u6700\u7EC8\u5176\u5B9E\u9645\u503C\u662F\u4E0D\u4F1A\u53D1\u751F\u6539\u53D8\u7684\u3002</p><h3 id="_2-4-method\u7C7B\u53CA\u5176\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-4-method\u7C7B\u53CA\u5176\u7528\u6CD5" aria-hidden="true">#</a> 2.4 Method\u7C7B\u53CA\u5176\u7528\u6CD5</h3><blockquote><p>Method \u63D0\u4F9B\u5173\u4E8E\u7C7B\u6216\u63A5\u53E3\u4E0A\u5355\u72EC\u67D0\u4E2A\u65B9\u6CD5\uFF08\u4EE5\u53CA\u5982\u4F55\u8BBF\u95EE\u8BE5\u65B9\u6CD5\uFF09\u7684\u4FE1\u606F\uFF0C\u6240\u53CD\u6620\u7684\u65B9\u6CD5\u53EF\u80FD\u662F\u7C7B\u65B9\u6CD5\u6216\u5B9E\u4F8B\u65B9\u6CD5\uFF08\u5305\u62EC\u62BD\u8C61\u65B9\u6CD5\uFF09\u3002</p></blockquote><p>\u4E0B\u9762\u662FClass\u7C7B\u83B7\u53D6Method\u5BF9\u8C61\u76F8\u5173\u7684\u65B9\u6CD5\uFF1A</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>Method</td><td>getDeclaredMethod(String name, Class&lt;?&gt;... parameterTypes)</td><td>\u8FD4\u56DE\u4E00\u4E2A\u6307\u5B9A\u53C2\u6570\u7684Method\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u53CD\u6620\u6B64 Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u6216\u63A5\u53E3\u7684\u6307\u5B9A\u5DF2\u58F0\u660E\u65B9\u6CD5\u3002</td></tr><tr><td>Method[]</td><td>getDeclaredMethod()</td><td>\u8FD4\u56DE Method \u5BF9\u8C61\u7684\u4E00\u4E2A\u6570\u7EC4\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u53CD\u6620\u6B64 Class \u5BF9\u8C61\u8868\u793A\u7684\u7C7B\u6216\u63A5\u53E3\u58F0\u660E\u7684\u6240\u6709\u65B9\u6CD5\uFF0C\u5305\u62EC\u516C\u5171\u3001\u4FDD\u62A4\u3001\u9ED8\u8BA4\uFF08\u5305\uFF09\u8BBF\u95EE\u548C\u79C1\u6709\u65B9\u6CD5\uFF0C\u4F46\u4E0D\u5305\u62EC\u7EE7\u627F\u7684\u65B9\u6CD5\u3002</td></tr><tr><td>Method</td><td>getMethod(String name, Class&lt;?&gt;... parameterTypes)</td><td>\u8FD4\u56DE\u4E00\u4E2A Method \u5BF9\u8C61\uFF0C\u5B83\u53CD\u6620\u6B64 Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u6216\u63A5\u53E3\u7684\u6307\u5B9A\u516C\u5171\u6210\u5458\u65B9\u6CD5\u3002</td></tr><tr><td>Method[]</td><td>getMethods()</td><td>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u67D0\u4E9B Method \u5BF9\u8C61\u7684\u6570\u7EC4\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u53CD\u6620\u6B64 Class \u5BF9\u8C61\u6240\u8868\u793A\u7684\u7C7B\u6216\u63A5\u53E3\uFF08\u5305\u62EC\u90A3\u4E9B\u7531\u8BE5\u7C7B\u6216\u63A5\u53E3\u58F0\u660E\u7684\u4EE5\u53CA\u4ECE\u8D85\u7C7B\u548C\u8D85\u63A5\u53E3\u7EE7\u627F\u7684\u90A3\u4E9B\u7684\u7C7B\u6216\u63A5\u53E3\uFF09\u7684\u516C\u5171 member \u65B9\u6CD5\u3002</td></tr></tbody></table><p>\u540C\u6837\u901A\u8FC7\u6848\u4F8B\u6F14\u793A\u4E0A\u8FF0\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReflectMethod</span>  <span class="token punctuation">{</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span> <span class="token punctuation">{</span>

        <span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;reflect.Circle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u6839\u636E\u53C2\u6570\u83B7\u53D6public\u7684Method,\u5305\u542B\u7EE7\u627F\u81EA\u7236\u7C7B\u7684\u65B9\u6CD5</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;draw&quot;</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;method:&quot;</span><span class="token operator">+</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u6240\u6709public\u7684\u65B9\u6CD5:</span>
        <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token operator">:</span>methods<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;m::&quot;</span><span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=========================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7C7B\u7684\u65B9\u6CD5\u5305\u542Bprivate,\u8BE5\u65B9\u6CD5\u65E0\u6CD5\u83B7\u53D6\u7EE7\u627F\u81EA\u7236\u7C7B\u7684method</span>
        <span class="token class-name">Method</span> method1 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;drawCircle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;method1::&quot;</span><span class="token operator">+</span>method1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u83B7\u53D6\u5F53\u524D\u7C7B\u7684\u6240\u6709\u65B9\u6CD5\u5305\u542Bprivate,\u8BE5\u65B9\u6CD5\u65E0\u6CD5\u83B7\u53D6\u7EE7\u627F\u81EA\u7236\u7C7B\u7684method</span>
        <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods1<span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token operator">:</span>methods1<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;m1::&quot;</span><span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;draw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">int</span> count <span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;draw &quot;</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">&quot;,count=&quot;</span><span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Circle</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span><span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;drawCircle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAllCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>method<span class="token operator">:</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Shape</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>

m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Circle</span><span class="token punctuation">.</span><span class="token function">getAllCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Shape</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Shape</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>InterruptedException</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>InterruptedException</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>InterruptedException</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
method1<span class="token operator">::</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Circle</span><span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

m1<span class="token operator">::</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Circle</span><span class="token punctuation">.</span><span class="token function">getAllCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m1<span class="token operator">::</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token class-name"><span class="token namespace">reflect<span class="token punctuation">.</span></span>Circle</span><span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u901A\u8FC7getMethods\u65B9\u6CD5\u83B7\u53D6Method\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u628A\u7236\u7C7B\u7684\u65B9\u6CD5\u4E5F\u83B7\u53D6\u5230\uFF0C\u5982\u4E0A\u7684\u8F93\u51FA\u7ED3\u679C\uFF0C\u628AObject\u7C7B\u7684\u65B9\u6CD5\u90FD\u6253\u5370\u51FA\u6765\u4E86\u3002\u800C<code>getDeclaredMethod/getDeclaredMethods</code>\u65B9\u6CD5\u90FD\u53EA\u80FD\u83B7\u53D6\u5F53\u524D\u7C7B\u7684\u65B9\u6CD5\u3002\u6211\u4EEC\u5728\u4F7F\u7528\u65F6\u6839\u636E\u60C5\u51B5\u9009\u62E9\u5373\u53EF\u3002\u4E0B\u9762\u5C06\u6F14\u793A\u901A\u8FC7Method\u5BF9\u8C61\u8C03\u7528\u6307\u5B9A\u7C7B\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;reflect.Circle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u5BF9\u8C61</span>
<span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u83B7\u53D6\u6307\u5B9A\u53C2\u6570\u7684\u65B9\u6CD5\u5BF9\u8C61Method</span>
<span class="token class-name">Method</span> method <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;draw&quot;</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u901A\u8FC7Method\u5BF9\u8C61\u7684invoke(Object obj,Object... args)\u65B9\u6CD5\u8C03\u7528</span>
method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>circle<span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">&quot;\u5708\u5708&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u5BF9\u79C1\u6709\u65E0\u53C2\u65B9\u6CD5\u7684\u64CD\u4F5C</span>
<span class="token class-name">Method</span> method1 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;drawCircle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4FEE\u6539\u79C1\u6709\u65B9\u6CD5\u7684\u8BBF\u95EE\u6807\u8BC6</span>
method1<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
method1<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u5BF9\u6709\u8FD4\u56DE\u503C\u5F97\u65B9\u6CD5\u64CD\u4F5C</span>
<span class="token class-name">Method</span> method2 <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getAllCount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span> count <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> method2<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;count:&quot;</span><span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>draw \u5708\u5708<span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">15</span>
drawCircle
count<span class="token operator">:</span><span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u8C03\u7528\u65B9\u6CD5\uFF0C\u4F7F\u7528\u4E86Method\u7C7B\u7684<code>invoke(Object obj,Object... args)</code>\u7B2C\u4E00\u4E2A\u53C2\u6570\u4EE3\u8868\u8C03\u7528\u7684\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F20\u9012\u7684\u8C03\u7528\u65B9\u6CD5\u7684\u53C2\u6570\u3002\u8FD9\u6837\u5C31\u5B8C\u6210\u4E86\u7C7B\u65B9\u6CD5\u7684\u52A8\u6001\u8C03\u7528\u3002</p><table><thead><tr><th>\u65B9\u6CD5\u8FD4\u56DE\u503C</th><th>\u65B9\u6CD5\u540D\u79F0</th><th>\u65B9\u6CD5\u8BF4\u660E</th></tr></thead><tbody><tr><td>Object</td><td>invoke(Object obj, Object... args)</td><td>\u5BF9\u5E26\u6709\u6307\u5B9A\u53C2\u6570\u7684\u6307\u5B9A\u5BF9\u8C61\u8C03\u7528\u7531\u6B64 Method \u5BF9\u8C61\u8868\u793A\u7684\u5E95\u5C42\u65B9\u6CD5\u3002</td></tr><tr><td>Class&lt;?&gt;</td><td>getReturnType()</td><td>\u8FD4\u56DE\u4E00\u4E2A Class \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u63CF\u8FF0\u4E86\u6B64 Method \u5BF9\u8C61\u6240\u8868\u793A\u7684\u65B9\u6CD5\u7684\u6B63\u5F0F\u8FD4\u56DE\u7C7B\u578B,\u5373\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B</td></tr><tr><td>Type</td><td>getGenericReturnType()</td><td>\u8FD4\u56DE\u8868\u793A\u7531\u6B64 Method \u5BF9\u8C61\u6240\u8868\u793A\u65B9\u6CD5\u7684\u6B63\u5F0F\u8FD4\u56DE\u7C7B\u578B\u7684 Type \u5BF9\u8C61\uFF0C\u4E5F\u662F\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\u3002</td></tr><tr><td>Class&lt;?&gt;[]</td><td>getParameterTypes()</td><td>\u6309\u7167\u58F0\u660E\u987A\u5E8F\u8FD4\u56DE Class \u5BF9\u8C61\u7684\u6570\u7EC4\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u63CF\u8FF0\u4E86\u6B64 Method \u5BF9\u8C61\u6240\u8868\u793A\u7684\u65B9\u6CD5\u7684\u5F62\u53C2\u7C7B\u578B\u3002\u5373\u8FD4\u56DE\u65B9\u6CD5\u7684\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u6570\u7EC4</td></tr><tr><td>Type[]</td><td>getGenericParameterTypes()</td><td>\u6309\u7167\u58F0\u660E\u987A\u5E8F\u8FD4\u56DE Type \u5BF9\u8C61\u7684\u6570\u7EC4\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u63CF\u8FF0\u4E86\u6B64 Method \u5BF9\u8C61\u6240\u8868\u793A\u7684\u65B9\u6CD5\u7684\u5F62\u53C2\u7C7B\u578B\u7684\uFF0C\u4E5F\u662F\u8FD4\u56DE\u65B9\u6CD5\u7684\u53C2\u6570\u7C7B\u578B</td></tr><tr><td>String</td><td>getName()</td><td>\u4EE5 String \u5F62\u5F0F\u8FD4\u56DE\u6B64 Method \u5BF9\u8C61\u8868\u793A\u7684\u65B9\u6CD5\u540D\u79F0\uFF0C\u5373\u8FD4\u56DE\u65B9\u6CD5\u7684\u540D\u79F0</td></tr><tr><td>boolean</td><td>isVarArgs()</td><td>\u5224\u65AD\u65B9\u6CD5\u662F\u5426\u5E26\u53EF\u53D8\u53C2\u6570\uFF0C\u5982\u679C\u5C06\u6B64\u65B9\u6CD5\u58F0\u660E\u4E3A\u5E26\u6709\u53EF\u53D8\u6570\u91CF\u7684\u53C2\u6570\uFF0C\u5219\u8FD4\u56DE true\uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE false\u3002</td></tr><tr><td>String</td><td>toGenericString()</td><td>\u8FD4\u56DE\u63CF\u8FF0\u6B64 Method \u7684\u5B57\u7B26\u4E32\uFF0C\u5305\u62EC\u7C7B\u578B\u53C2\u6570\u3002</td></tr></tbody></table><p><code>getReturnType\u65B9\u6CD5/getGenericReturnType\u65B9\u6CD5</code>\u90FD\u662F\u83B7\u53D6Method\u5BF9\u8C61\u8868\u793A\u7684\u65B9\u6CD5\u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u53EA\u4E0D\u8FC7\u524D\u8005\u8FD4\u56DE\u7684Class\u7C7B\u578B\u540E\u8005\u8FD4\u56DE\u7684Type(\u524D\u9762\u5DF2\u5206\u6790\u8FC7)\uFF0CType\u5C31\u662F\u4E00\u4E2A\u63A5\u53E3\u800C\u5DF2\uFF0C\u5728Java8\u4E2D\u65B0\u589E\u4E00\u4E2A\u9ED8\u8BA4\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u8FD4\u56DE\u7684\u5C31\u53C2\u6570\u7C7B\u578B\u4FE1\u606F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    <span class="token comment">//1.8\u65B0\u589E</span>
    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C<code>getParameterTypes/getGenericParameterTypes</code>\u4E5F\u662F\u540C\u6837\u7684\u9053\u7406\uFF0C\u90FD\u662F\u83B7\u53D6Method\u5BF9\u8C61\u6240\u8868\u793A\u7684\u65B9\u6CD5\u7684\u53C2\u6570\u7C7B\u578B\uFF0C\u5176\u4ED6\u65B9\u6CD5\u4E0E\u524D\u9762\u7684Field\u548CConstructor\u662F\u7C7B\u4F3C\u7684\u3002</p><h2 id="_3-\u53CD\u5C04\u673A\u5236\u6267\u884C\u7684\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_3-\u53CD\u5C04\u673A\u5236\u6267\u884C\u7684\u6D41\u7A0B" aria-hidden="true">#</a> 3. \u53CD\u5C04\u673A\u5236\u6267\u884C\u7684\u6D41\u7A0B</h2>`,47),f={href:"https://www.cnblogs.com/yougewe/p/10125073.html",target:"_blank",rel:"noopener noreferrer"},y=p(`<p><strong>\u5148\u770B\u4E2A\u4F8B\u5B50</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloReflect</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 1. \u4F7F\u7528\u5916\u90E8\u914D\u7F6E\u7684\u5B9E\u73B0\uFF0C\u8FDB\u884C\u52A8\u6001\u52A0\u8F7D\u7C7B</span>
            <span class="token class-name">TempFunctionTest</span> test <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TempFunctionTest</span><span class="token punctuation">)</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.tester.HelloReflect&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            test<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">&quot;call directly&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 2. \u6839\u636E\u914D\u7F6E\u7684\u51FD\u6570\u540D\uFF0C\u8FDB\u884C\u65B9\u6CD5\u8C03\u7528\uFF08\u4E0D\u9700\u8981\u901A\u7528\u7684\u63A5\u53E3\u62BD\u8C61\uFF09</span>
            <span class="token class-name">Object</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempFunctionTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Method</span> method <span class="token operator">=</span> t2<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;sayHello&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>test<span class="token punctuation">,</span> <span class="token string">&quot;method invoke&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello,&quot;</span> <span class="token operator">+</span> word<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6765\u770B\u6267\u884C\u6D41\u7A0B</strong></p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220814212648301.png" alt="image-20220814212648301"></p><h3 id="_3-1-\u53CD\u5C04\u83B7\u53D6\u7C7B\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3-1-\u53CD\u5C04\u83B7\u53D6\u7C7B\u5B9E\u4F8B" aria-hidden="true">#</a> 3.1 \u53CD\u5C04\u83B7\u53D6\u7C7B\u5B9E\u4F8B</h3><p>\u9996\u5148\u8C03\u7528\u4E86 java.lang.Class \u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u83B7\u53D6\u7C7B\u4FE1\u606F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@CallerSensitive</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span>
                <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5148\u901A\u8FC7\u53CD\u5C04\uFF0C\u83B7\u53D6\u8C03\u7528\u8FDB\u6765\u7684\u7C7B\u4FE1\u606F\uFF0C\u4ECE\u800C\u83B7\u53D6\u5F53\u524D\u7684 classLoader</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8C03\u7528native\u65B9\u6CD5\u8FDB\u884C\u83B7\u53D6class\u4FE1\u606F</span>
        <span class="token keyword">return</span> <span class="token function">forName0</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span>caller<span class="token punctuation">)</span><span class="token punctuation">,</span> caller<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>forName()\u53CD\u5C04\u83B7\u53D6\u7C7B\u4FE1\u606F\uFF0C\u5E76\u6CA1\u6709\u5C06\u5B9E\u73B0\u7559\u7ED9\u4E86java,\u800C\u662F\u4EA4\u7ED9\u4E86jvm\u53BB\u52A0\u8F7D\u3002</p><p>\u4E3B\u8981\u662F\u5148\u83B7\u53D6 ClassLoader, \u7136\u540E\u8C03\u7528 native \u65B9\u6CD5\uFF0C\u83B7\u53D6\u4FE1\u606F\uFF0C\u52A0\u8F7D\u7C7B\u5219\u662F\u56DE\u8C03 java.lang.ClassLoader.</p><p>\u6700\u540E\uFF0Cjvm\u53C8\u4F1A\u56DE\u8C03 ClassLoader \u8FDB\u7C7B\u52A0\u8F7D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// </span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
        <span class="token comment">// sun.misc.Launcher</span>
        <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> var3 <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>var3 <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SecurityManager</span> var4 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>var4 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    var4<span class="token punctuation">.</span><span class="token function">checkPackageAccess</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ucp<span class="token punctuation">.</span><span class="token function">knownToNotExist</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Class</span> var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findLoadedClass</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolveClass</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">return</span> var5<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token comment">// java.lang.ClassLoader</span>
    <span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> resolve<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// \u5148\u83B7\u53D6\u9501</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// First, check if the class has already been loaded</span>
            <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u52A0\u8F7D\u4E86\u7684\u8BDD\uFF0C\u5C31\u4E0D\u7528\u518D\u52A0\u8F7D\u4E86</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> t0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53CC\u4EB2\u59D4\u6258\u52A0\u8F7D</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        c <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        c <span class="token operator">=</span> <span class="token function">findBootstrapClassOrNull</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// ClassNotFoundException thrown if class not found</span>
                    <span class="token comment">// from the non-null parent class loader</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// \u7236\u7C7B\u6CA1\u6709\u52A0\u8F7D\u5230\u65F6\uFF0C\u518D\u81EA\u5DF1\u52A0\u8F7D</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If still not found, then invoke findClass in order</span>
                    <span class="token comment">// to find the class.</span>
                    <span class="token keyword">long</span> t1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    c <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// this is the defining class loader; record the stats</span>
                    <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getParentDelegationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTime</span><span class="token punctuation">(</span>t1 <span class="token operator">-</span> t0<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClassTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addElapsedTimeFrom</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">resolveClass</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> c<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parallelLockMap <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4F7F\u7528 ConcurrentHashMap\u6765\u4FDD\u5B58\u9501</span>
            <span class="token class-name">Object</span> newLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            lock <span class="token operator">=</span> parallelLockMap<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> newLock<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lock <span class="token operator">=</span> newLock<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> lock<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">checkName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">findLoadedClass0</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6765\u770B\u4E00\u4E0B newInstance() \u7684\u5B9E\u73B0\u65B9\u5F0F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// \u9996\u5148\u80AF\u5B9A\u662F Class.newInstance</span>
    <span class="token annotation punctuation">@CallerSensitive</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">checkMemberAccess</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">.</span><span class="token constant">PUBLIC</span><span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// NOTE: the following code may not be strictly correct under</span>
        <span class="token comment">// the current Java memory model.</span>

        <span class="token comment">// Constructor lookup</span>
        <span class="token comment">// newInstance() \u5176\u5B9E\u76F8\u5F53\u4E8E\u8C03\u7528\u7C7B\u7684\u65E0\u53C2\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\uFF0C\u9996\u5148\u8981\u627E\u5230\u5176\u65E0\u53C2\u6784\u9020\u5668</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedConstructor <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u4E0D\u5141\u8BB8\u8C03\u7528 Class \u7684 newInstance() \u65B9\u6CD5</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Can not call newInstance() on the Class for java.lang.Class&quot;</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u83B7\u53D6\u65E0\u53C2\u6784\u9020\u5668</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> empty <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">getConstructor0</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token class-name">Member</span><span class="token punctuation">.</span><span class="token constant">DECLARED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Disable accessibility checks on the constructor</span>
                <span class="token comment">// since we have to do the security check here anyway</span>
                <span class="token comment">// (the stack depth is wrong for the Constructor&#39;s</span>
                <span class="token comment">// security check to work)</span>
                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">public</span> <span class="token class-name">Void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                c<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                cachedConstructor <span class="token operator">=</span> c<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span><span class="token punctuation">)</span>
                    <span class="token keyword">new</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">initCause</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> tmpConstructor <span class="token operator">=</span> cachedConstructor<span class="token punctuation">;</span>
        <span class="token comment">// Security check (same as in java.lang.reflect.Constructor)</span>
        <span class="token keyword">int</span> modifiers <span class="token operator">=</span> tmpConstructor<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>newInstanceCallerCache <span class="token operator">!=</span> caller<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">ensureMemberAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
                newInstanceCallerCache <span class="token operator">=</span> caller<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Run constructor</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8C03\u7528\u65E0\u53C2\u6784\u9020\u5668</span>
            <span class="token keyword">return</span> tmpConstructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">throwException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getTargetException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Not reached</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>newInstance() \u4E3B\u8981\u505A\u4E86\u4E09\u4EF6\u4E8B\uFF1A</p><ul><li><ol><li>\u6743\u9650\u68C0\u6D4B\uFF0C\u5982\u679C\u4E0D\u901A\u8FC7\u76F4\u63A5\u629B\u51FA\u5F02\u5E38\uFF1B</li></ol></li><li><ol start="2"><li>\u67E5\u627E\u65E0\u53C2\u6784\u9020\u5668\uFF0C\u5E76\u5C06\u5176\u7F13\u5B58\u8D77\u6765\uFF1B</li></ol></li><li><ol start="3"><li>\u8C03\u7528\u5177\u4F53\u65B9\u6CD5\u7684\u65E0\u53C2\u6784\u9020\u65B9\u6CD5\uFF0C\u751F\u6210\u5B9E\u4F8B\u5E76\u8FD4\u56DE\uFF1B</li></ol></li></ul><p>\u4E0B\u9762\u662F\u83B7\u53D6\u6784\u9020\u5668\u7684\u8FC7\u7A0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getConstructor0</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">,</span>
                                        <span class="token keyword">int</span> which<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// \u83B7\u53D6\u6240\u6709\u6784\u9020\u5668</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> constructors <span class="token operator">=</span> <span class="token function">privateGetDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">(</span>which <span class="token operator">==</span> <span class="token class-name">Member</span><span class="token punctuation">.</span><span class="token constant">PUBLIC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">:</span> constructors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">arrayContentsEq</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">,</span>
                                constructor<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">getReflectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyConstructor</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&lt;init&gt;&quot;</span> <span class="token operator">+</span> <span class="token function">argumentTypesToString</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getConstructor0() \u4E3A\u83B7\u53D6\u5339\u914D\u7684\u6784\u9020\u65B9\u5668\uFF1B\u5206\u4E09\u6B65\uFF1A</p><ul><li><ol><li>\u5148\u83B7\u53D6\u6240\u6709\u7684constructors, \u7136\u540E\u901A\u8FC7\u8FDB\u884C\u53C2\u6570\u7C7B\u578B\u6BD4\u8F83\uFF1B</li></ol></li><li><ol><li>\u627E\u5230\u5339\u914D\u540E\uFF0C\u901A\u8FC7 ReflectionFactory copy\u4E00\u4EFDconstructor\u8FD4\u56DE\uFF1B</li></ol></li><li><ol><li>\u5426\u5219\u629B\u51FA NoSuchMethodException;</li></ol></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u7C7B\u6240\u6709\u7684\u6784\u9020\u65B9\u6CD5\uFF0C\u901A\u8FC7jvm\u6216\u8005\u7F13\u5B58</span>
    <span class="token comment">// Returns an array of &quot;root&quot; constructors. These Constructor</span>
    <span class="token comment">// objects must NOT be propagated to the outside world, but must</span>
    <span class="token comment">// instead be copied via ReflectionFactory.copyConstructor.</span>
    <span class="token keyword">private</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">privateGetDeclaredConstructors</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> res<span class="token punctuation">;</span>
        <span class="token comment">// \u8C03\u7528 reflectionData(), \u83B7\u53D6\u4FDD\u5B58\u7684\u4FE1\u606F\uFF0C\u4F7F\u7528\u8F6F\u5F15\u7528\u4FDD\u5B58\uFF0C\u4ECE\u800C\u4F7F\u5185\u5B58\u4E0D\u591F\u53EF\u4EE5\u56DE\u6536</span>
        <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> publicOnly <span class="token operator">?</span> rd<span class="token punctuation">.</span>publicConstructors <span class="token operator">:</span> rd<span class="token punctuation">.</span>declaredConstructors<span class="token punctuation">;</span>
            <span class="token comment">// \u5B58\u5728\u7F13\u5B58\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// No cached value available; request value from VM</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
            <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> temporaryRes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            res <span class="token operator">=</span> temporaryRes<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4F7F\u7528native\u65B9\u6CD5\u4ECEjvm\u83B7\u53D6\u6784\u9020\u5668</span>
            res <span class="token operator">=</span> <span class="token function">getDeclaredConstructors0</span><span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6700\u540E\uFF0C\u5C06\u4ECEjvm\u4E2D\u8BFB\u53D6\u7684\u5185\u5BB9\uFF0C\u5B58\u5165\u7F13\u5B58</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rd<span class="token punctuation">.</span>publicConstructors <span class="token operator">=</span> res<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                rd<span class="token punctuation">.</span>declaredConstructors <span class="token operator">=</span> res<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// Lazily create and cache ReflectionData</span>
    <span class="token keyword">private</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReflectionData</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> reflectionData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reflectionData<span class="token punctuation">;</span>
        <span class="token keyword">int</span> classRedefinedCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classRedefinedCount<span class="token punctuation">;</span>
        <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>useCaches <span class="token operator">&amp;&amp;</span>
            reflectionData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>rd <span class="token operator">=</span> reflectionData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            rd<span class="token punctuation">.</span>redefinedCount <span class="token operator">==</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// else no SoftReference or cleared SoftReference or stale ReflectionData</span>
        <span class="token comment">// -&gt; create and replace new instance</span>
        <span class="token keyword">return</span> <span class="token function">newReflectionData</span><span class="token punctuation">(</span>reflectionData<span class="token punctuation">,</span> classRedefinedCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u65B0\u521B\u5EFA\u7F13\u5B58\uFF0C\u4FDD\u5B58\u53CD\u5C04\u4FE1\u606F</span>
    <span class="token keyword">private</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">newReflectionData</span><span class="token punctuation">(</span><span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ReflectionData</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> oldReflectionData<span class="token punctuation">,</span>
                                                <span class="token keyword">int</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>useCaches<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4F7F\u7528cas\u4FDD\u8BC1\u66F4\u65B0\u7684\u7EBF\u7A0B\u5B89\u5168\u6027\uFF0C\u6240\u4EE5\u53CD\u5C04\u662F\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u7684</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>classRedefinedCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// try to CAS it...</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Atomic</span><span class="token punctuation">.</span><span class="token function">casReflectionData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> oldReflectionData<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SoftReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>rd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u5148\u4F7F\u7528CAS\u66F4\u65B0\uFF0C\u5982\u679C\u66F4\u65B0\u6210\u529F\uFF0C\u5219\u7ACB\u5373\u8FD4\u56DE\uFF0C\u5426\u5219\u6D4B\u67E5\u5F53\u524D\u5DF2\u88AB\u5176\u4ED6\u7EBF\u7A0B\u66F4\u65B0\u7684\u60C5\u51B5\uFF0C\u5982\u679C\u548C\u81EA\u5DF1\u60F3\u8981\u66F4\u65B0\u7684\u72B6\u6001\u4E00\u81F4\uFF0C\u5219\u4E5F\u7B97\u662F\u6210\u529F\u4E86</span>
            oldReflectionData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reflectionData<span class="token punctuation">;</span>
            classRedefinedCount <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>classRedefinedCount<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldReflectionData <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span>rd <span class="token operator">=</span> oldReflectionData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                rd<span class="token punctuation">.</span>redefinedCount <span class="token operator">==</span> classRedefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> rd<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\uFF0CprivateGetDeclaredConstructors(), \u83B7\u53D6\u6240\u6709\u7684\u6784\u9020\u5668\u4E3B\u8981\u6B65\u9AA4\uFF1B</p><ul><li><ol><li>\u5148\u5C1D\u8BD5\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\uFF1B</li></ol></li><li><ol start="2"><li>\u5982\u679C\u7F13\u5B58\u6CA1\u6709\uFF0C\u5219\u4ECEjvm\u4E2D\u91CD\u65B0\u83B7\u53D6\uFF0C\u5E76\u5B58\u5165\u7F13\u5B58\uFF0C\u7F13\u5B58\u4F7F\u7528\u8F6F\u5F15\u7528\u8FDB\u884C\u4FDD\u5B58\uFF0C\u4FDD\u8BC1\u5185\u5B58\u53EF\u7528\uFF1B</li></ol></li></ul><p>\u53E6\u5916\uFF0C\u4F7F\u7528 relactionData() \u8FDB\u884C\u7F13\u5B58\u4FDD\u5B58\uFF1BReflectionData \u7684\u6570\u636E\u7ED3\u6784\u5982\u4E0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// reflection data that might get invalidated when JVM TI RedefineClasses() is called</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredFields<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicFields<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredMethods<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicMethods<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredConstructors<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> publicConstructors<span class="token punctuation">;</span>
        <span class="token comment">// Intermediate results for getFields and getMethods</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredPublicFields<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> declaredPublicMethods<span class="token punctuation">;</span>
        <span class="token keyword">volatile</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">;</span>

        <span class="token comment">// Value of classRedefinedCount when we created this ReflectionData instance</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> redefinedCount<span class="token punctuation">;</span>

        <span class="token class-name">ReflectionData</span><span class="token punctuation">(</span><span class="token keyword">int</span> redefinedCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>redefinedCount <span class="token operator">=</span> redefinedCount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C\u8FD8\u6709\u4E00\u4E2A\u70B9\uFF0C\u5C31\u662F\u5982\u4F55\u6BD4\u8F83\u6784\u9020\u662F\u5426\u662F\u8981\u67E5\u627E\u6784\u9020\u5668\uFF0C\u5176\u5B9E\u5C31\u662F\u6BD4\u8F83\u7C7B\u578B\u5B8C\u6210\u76F8\u7B49\u5C31\u5B8C\u4E86\uFF0C\u6709\u4E00\u4E2A\u4E0D\u76F8\u7B49\u5219\u8FD4\u56DEfalse\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">arrayContentsEq</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a1<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> a2<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>a2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>a1<span class="token punctuation">.</span>length <span class="token operator">!=</span> a2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> a2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// sun.reflect.ReflectionFactory</span>
    <span class="token doc-comment comment">/** Makes a copy of the passed constructor. The returned
        constructor is a &quot;child&quot; of the passed one; see the comments
        in Constructor.java for details. */</span>
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">copyConstructor</span><span class="token punctuation">(</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">langReflectAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyConstructor</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// java.lang.reflect.Constructor, copy \u5176\u5B9E\u5C31\u662F\u65B0new\u4E00\u4E2A Constructor \u51FA\u6765</span>
    <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This routine enables sharing of ConstructorAccessor objects</span>
        <span class="token comment">// among Constructor objects which refer to the same underlying</span>
        <span class="token comment">// method in the VM. (All of this contortion is only necessary</span>
        <span class="token comment">// because of the &quot;accessibility&quot; bit in AccessibleObject,</span>
        <span class="token comment">// which implicitly requires that new java.lang.reflect</span>
        <span class="token comment">// objects be fabricated for each reflective call on Class</span>
        <span class="token comment">// objects.)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Can not copy a non-root Constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span>
                                               parameterTypes<span class="token punctuation">,</span>
                                               exceptionTypes<span class="token punctuation">,</span> modifiers<span class="token punctuation">,</span> slot<span class="token punctuation">,</span>
                                               signature<span class="token punctuation">,</span>
                                               annotations<span class="token punctuation">,</span>
                                               parameterAnnotations<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// root \u6307\u5411\u5F53\u524D constructor</span>
        res<span class="token punctuation">.</span>root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token comment">// Might as well eagerly propagate this if already present</span>
        res<span class="token punctuation">.</span>constructorAccessor <span class="token operator">=</span> constructorAccessor<span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4E0A\u9762\uFF0C\u83B7\u53D6\u5230 Constructor \u4E86\u3002</p><p>\u63A5\u4E0B\u6765\u5C31\u53EA\u9700\u8C03\u7528\u5176\u76F8\u5E94\u6784\u9020\u5668\u7684 newInstance()\uFF0C\u5373\u8FD4\u56DE\u5B9E\u4F8B\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// return tmpConstructor.newInstance((Object[])null); </span>
    <span class="token comment">// java.lang.reflect.Constructor</span>
    <span class="token annotation punctuation">@CallerSensitive</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> initargs<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span>
               <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>override<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">checkAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token constant">ENUM</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot reflectively create enum objects&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ConstructorAccessor</span> ca <span class="token operator">=</span> constructorAccessor<span class="token punctuation">;</span>   <span class="token comment">// read volatile</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ca <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ca <span class="token operator">=</span> <span class="token function">acquireConstructorAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
        <span class="token class-name">T</span> inst <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> ca<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>initargs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> inst<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// sun.reflect.DelegatingConstructorAccessorImpl</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span>
             <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
             <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> delegate<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// sun.reflect.NativeConstructorAccessorImpl</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span>
               <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
               <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// We can&#39;t inflate a constructor belonging to a vm-anonymous class</span>
        <span class="token comment">// because that kind of class can&#39;t be referred to by name, hence can&#39;t</span>
        <span class="token comment">// be found from the generated bytecode.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>numInvocations <span class="token operator">&gt;</span> <span class="token class-name">ReflectionFactory</span><span class="token punctuation">.</span><span class="token function">inflationThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ConstructorAccessorImpl</span> acc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConstructorAccessorImpl</span><span class="token punctuation">)</span>
                <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">generateConstructor</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        c<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        c<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        c<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            parent<span class="token punctuation">.</span><span class="token function">setDelegate</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8C03\u7528native\u65B9\u6CD5\uFF0C\u8FDB\u884C\u8C03\u7528 constructor</span>
        <span class="token keyword">return</span> <span class="token function">newInstance0</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u6784\u9020\u5668\u7684\u5B9E\u4F8B\u540E\uFF0C\u53EF\u4EE5\u6839\u636E\u5916\u90E8\u8FDB\u884C\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\uFF0C\u4ECE\u800C\u4F7F\u7528\u63A5\u53E3\u6216\u65B9\u6CD5\u8FDB\u884C\u8C03\u7528\u5B9E\u4F8B\u529F\u80FD\u4E86\u3002</p><h3 id="_3-2-\u53CD\u5C04\u83B7\u53D6\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-\u53CD\u5C04\u83B7\u53D6\u65B9\u6CD5" aria-hidden="true">#</a> 3.2 \u53CD\u5C04\u83B7\u53D6\u65B9\u6CD5</h3><ul><li><strong>\u7B2C\u4E00\u6B65\uFF0C\u5148\u83B7\u53D6 Method</strong>;</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// java.lang.Class</span>
    <span class="token annotation punctuation">@CallerSensitive</span>
    <span class="token keyword">public</span> <span class="token class-name">Method</span> <span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> parameterTypes<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span> <span class="token punctuation">{</span>
        <span class="token function">checkMemberAccess</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">.</span><span class="token constant">DECLARED</span><span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token function">searchMethods</span><span class="token punctuation">(</span><span class="token function">privateGetDeclaredMethods</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> parameterTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token function">argumentTypesToString</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> method<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FFD\u7565\u7B2C\u4E00\u4E2A\u68C0\u67E5\u6743\u9650\uFF0C\u5269\u4E0B\u5C31\u53EA\u6709\u4E24\u4E2A\u52A8\u4F5C\u4E86\u3002</p><ul><li><ol><li>\u83B7\u53D6\u6240\u6709\u65B9\u6CD5\u5217\u8868\uFF1B</li></ol></li><li><ol start="2"><li>\u6839\u636E\u65B9\u6CD5\u540D\u79F0\u548C\u65B9\u6CD5\u5217\u8868\uFF0C\u9009\u51FA\u7B26\u5408\u8981\u6C42\u7684\u65B9\u6CD5\uFF1B</li></ol></li><li><ol start="3"><li>\u5982\u679C\u6CA1\u6709\u627E\u5230\u76F8\u5E94\u65B9\u6CD5\uFF0C\u629B\u51FA\u5F02\u5E38\uFF0C\u5426\u5219\u8FD4\u56DE\u5BF9\u5E94\u65B9\u6CD5\uFF1B</li></ol></li></ul><p>\u6240\u4EE5\uFF0C\u5148\u770B\u4E00\u4E0B\u600E\u6837\u83B7\u53D6\u7C7B\u58F0\u660E\u7684\u6240\u6709\u65B9\u6CD5\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// Returns an array of &quot;root&quot; methods. These Method objects must NOT</span>
    <span class="token comment">// be propagated to the outside world, but must instead be copied</span>
    <span class="token comment">// via ReflectionFactory.copyMethod.</span>
    <span class="token keyword">private</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">privateGetDeclaredMethods</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res<span class="token punctuation">;</span>
        <span class="token class-name">ReflectionData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> rd <span class="token operator">=</span> <span class="token function">reflectionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> publicOnly <span class="token operator">?</span> rd<span class="token punctuation">.</span>declaredPublicMethods <span class="token operator">:</span> rd<span class="token punctuation">.</span>declaredMethods<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// No cached value available; request value from VM</span>
        res <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">filterMethods</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getDeclaredMethods0</span><span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>publicOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rd<span class="token punctuation">.</span>declaredPublicMethods <span class="token operator">=</span> res<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                rd<span class="token punctuation">.</span>declaredMethods <span class="token operator">=</span> res<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u76F8\u4F3C\uFF0C\u548C\u83B7\u53D6\u6240\u6709\u6784\u9020\u5668\u7684\u65B9\u6CD5\u5F88\u76F8\u4F3C\uFF0C\u90FD\u662F\u5148\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u65B9\u6CD5\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u4ECEjvm\u4E2D\u83B7\u53D6\u3002</p><p>\u4E0D\u540C\u7684\u662F\uFF0C\u65B9\u6CD5\u5217\u8868\u9700\u8981\u8FDB\u884C\u8FC7\u6EE4 Reflection.filterMethods;\u5F53\u7136\u540E\u9762\u770B\u6765\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u4E00\u822C\u4E0D\u4F1A\u6D3E\u4E0A\u7528\u573A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// sun.misc.Reflection</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">filterMethods</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> containingClass<span class="token punctuation">,</span> <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>methodFilterMap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Bootstrapping</span>
            <span class="token keyword">return</span> methods<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">filter</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> methodFilterMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>containingClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53EF\u4EE5\u8FC7\u6EE4\u6307\u5B9A\u7684\u65B9\u6CD5\uFF0C\u4E00\u822C\u4E3A\u7A7A\uFF0C\u5982\u679C\u8981\u6307\u5B9A\u8FC7\u6EE4\uFF0C\u53EF\u4EE5\u8C03\u7528 registerMethodsToFilter(), \u6216\u8005...</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> members<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>filteredNames <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>members<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> members<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> numNewMembers <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Member</span> member <span class="token operator">:</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> shouldSkip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> filteredName <span class="token operator">:</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> filteredName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    shouldSkip <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldSkip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token operator">++</span>numNewMembers<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newMembers <span class="token operator">=</span>
            <span class="token punctuation">(</span><span class="token class-name">Member</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token class-name">Array</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>members<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> numNewMembers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> destIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Member</span> member <span class="token operator">:</span> members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> shouldSkip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> filteredName <span class="token operator">:</span> filteredNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>member<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> filteredName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    shouldSkip <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldSkip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                newMembers<span class="token punctuation">[</span>destIdx<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> member<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> newMembers<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>\u7B2C\u4E8C\u6B65\uFF0C\u6839\u636E\u65B9\u6CD5\u540D\u548C\u53C2\u6570\u7C7B\u578B\u8FC7\u6EE4\u6307\u5B9A\u65B9\u6CD5\u8FD4\u56DE</strong>\uFF1A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> <span class="token function">searchMethods</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods<span class="token punctuation">,</span>
                                        <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                                        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Method</span> res <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F7F\u7528\u5E38\u91CF\u6C60\uFF0C\u907F\u514D\u91CD\u590D\u521B\u5EFAString</span>
        <span class="token class-name">String</span> internedName <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">intern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> methods<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> m <span class="token operator">=</span> methods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> internedName
                <span class="token operator">&amp;&amp;</span> <span class="token function">arrayContentsEq</span><span class="token punctuation">(</span>parameterTypes<span class="token punctuation">,</span> m<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token keyword">null</span>
                    <span class="token operator">||</span> res<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                res <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> res <span class="token operator">:</span> <span class="token function">getReflectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">copyMethod</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u6982\u610F\u601D\u770B\u5F97\u660E\u767D\uFF0C\u5C31\u662F\u5339\u914D\u5230\u65B9\u6CD5\u540D\uFF0C\u7136\u540E\u53C2\u6570\u7C7B\u578B\u5339\u914D\uFF0C\u624D\u53EF\u4EE5\u3002</p><ul><li>\u4F46\u662F\u53EF\u4EE5\u770B\u5230\uFF0C\u5339\u914D\u5230\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5E76\u6CA1\u6709\u9000\u51FAfor\u5FAA\u73AF\uFF0C\u800C\u662F\u7EE7\u7EED\u8FDB\u884C\u5339\u914D\u3002</li><li>\u8FD9\u91CC\u662F\u5339\u914D\u6700\u7CBE\u786E\u7684\u5B50\u7C7B\u8FDB\u884C\u8FD4\u56DE\uFF08\u6700\u4F18\u5339\u914D\uFF09</li><li>\u6700\u540E\uFF0C\u8FD8\u662F\u901A\u8FC7 ReflectionFactory, copy \u65B9\u6CD5\u540E\u8FD4\u56DE\u3002</li></ul><h3 id="_3-3-\u8C03\u7528-method-invoke-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-3-\u8C03\u7528-method-invoke-\u65B9\u6CD5" aria-hidden="true">#</a> 3.3 \u8C03\u7528 method.invoke() \u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@CallerSensitive</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
           <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>override<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">quickCheckMemberAccess</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller <span class="token operator">=</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">checkAccess</span><span class="token punctuation">(</span>caller<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">MethodAccessor</span> ma <span class="token operator">=</span> methodAccessor<span class="token punctuation">;</span>             <span class="token comment">// read volatile</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ma <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ma <span class="token operator">=</span> <span class="token function">acquireMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ma<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>invoke\u65F6\uFF0C\u662F\u901A\u8FC7 MethodAccessor \u8FDB\u884C\u8C03\u7528\u7684\uFF0C\u800C MethodAccessor \u662F\u4E2A\u63A5\u53E3\uFF0C\u5728\u7B2C\u4E00\u6B21\u65F6\u8C03\u7528 acquireMethodAccessor() \u8FDB\u884C\u65B0\u521B\u5EFA\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// probably make the implementation more scalable.</span>
    <span class="token keyword">private</span> <span class="token class-name">MethodAccessor</span> <span class="token function">acquireMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// First check to see if one has been created yet, and take it</span>
        <span class="token comment">// if so</span>
        <span class="token class-name">MethodAccessor</span> tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> tmp <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getMethodAccessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B58\u5728\u7F13\u5B58\u65F6\uFF0C\u5B58\u5165 methodAccessor\uFF0C\u5426\u5219\u8C03\u7528 ReflectionFactory \u521B\u5EFA\u65B0\u7684 MethodAccessor</span>
            methodAccessor <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Otherwise fabricate one and propagate it up to the root</span>
            tmp <span class="token operator">=</span> reflectionFactory<span class="token punctuation">.</span><span class="token function">newMethodAccessor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setMethodAccessor</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// sun.reflect.ReflectionFactory</span>
    <span class="token keyword">public</span> <span class="token class-name">MethodAccessor</span> <span class="token function">newMethodAccessor</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkInitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>noInflation <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">generateMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               method<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               method<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">NativeMethodAccessorImpl</span> acc <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DelegatingMethodAccessorImpl</span> res <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            acc<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> res<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u4E2AAccessor\u8BE6\u60C5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//     NativeMethodAccessorImpl / DelegatingMethodAccessorImpl</span>
<span class="token keyword">class</span> <span class="token class-name">NativeMethodAccessorImpl</span> <span class="token keyword">extends</span> <span class="token class-name">MethodAccessorImpl</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Method</span> method<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">DelegatingMethodAccessorImpl</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> numInvocations<span class="token punctuation">;</span>

    <span class="token class-name">NativeMethodAccessorImpl</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>method <span class="token operator">=</span> method<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// We can&#39;t inflate methods belonging to vm-anonymous classes because</span>
        <span class="token comment">// that kind of class can&#39;t be referred to by name, hence can&#39;t be</span>
        <span class="token comment">// found from the generated bytecode.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>numInvocations <span class="token operator">&gt;</span> <span class="token class-name">ReflectionFactory</span><span class="token punctuation">.</span><span class="token function">inflationThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MethodAccessorImpl</span> acc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodAccessorImpl</span><span class="token punctuation">)</span>
                <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">generateMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            parent<span class="token punctuation">.</span><span class="token function">setDelegate</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token function">invoke0</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">setParent</span><span class="token punctuation">(</span><span class="token class-name">DelegatingMethodAccessorImpl</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token class-name">Object</span> <span class="token function">invoke0</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">DelegatingMethodAccessorImpl</span> <span class="token keyword">extends</span> <span class="token class-name">MethodAccessorImpl</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">MethodAccessorImpl</span> delegate<span class="token punctuation">;</span>

    <span class="token class-name">DelegatingMethodAccessorImpl</span><span class="token punctuation">(</span><span class="token class-name">MethodAccessorImpl</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setDelegate</span><span class="token punctuation">(</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> delegate<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">setDelegate</span><span class="token punctuation">(</span><span class="token class-name">MethodAccessorImpl</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> delegate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FDB\u884C ma.invoke(obj, args); \u8C03\u7528\u65F6\uFF0C\u8C03\u7528 DelegatingMethodAccessorImpl.invoke();</p><p>\u6700\u540E\u88AB\u59D4\u6258\u5230 NativeMethodAccessorImpl.invoke(), \u5373\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// We can&#39;t inflate methods belonging to vm-anonymous classes because</span>
        <span class="token comment">// that kind of class can&#39;t be referred to by name, hence can&#39;t be</span>
        <span class="token comment">// found from the generated bytecode.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>numInvocations <span class="token operator">&gt;</span> <span class="token class-name">ReflectionFactory</span><span class="token punctuation">.</span><span class="token function">inflationThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">isVMAnonymousClass</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MethodAccessorImpl</span> acc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MethodAccessorImpl</span><span class="token punctuation">)</span>
                <span class="token keyword">new</span> <span class="token class-name">MethodAccessorGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">generateMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getExceptionTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   method<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            parent<span class="token punctuation">.</span><span class="token function">setDelegate</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// invoke0 \u662F\u4E2A native \u65B9\u6CD5\uFF0C\u7531jvm\u8FDB\u884C\u8C03\u7528\u4E1A\u52A1\u65B9\u6CD5\u3002\u4ECE\u800C\u5B8C\u6210\u53CD\u5C04\u8C03\u7528\u529F\u80FD\u3002</span>
        <span class="token keyword">return</span> <span class="token function">invoke0</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C generateMethod() \u662F\u751F\u6210\u5177\u4F53\u7C7B\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/** This routine is not thread-safe */</span>
    <span class="token keyword">public</span> <span class="token class-name">MethodAccessor</span> <span class="token function">generateMethod</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> declaringClass<span class="token punctuation">,</span>
                                         <span class="token class-name">String</span>   name<span class="token punctuation">,</span>
                                         <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">,</span>
                                         <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span>   returnType<span class="token punctuation">,</span>
                                         <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> checkedExceptions<span class="token punctuation">,</span>
                                         <span class="token keyword">int</span> modifiers<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">MethodAccessor</span><span class="token punctuation">)</span> <span class="token function">generate</span><span class="token punctuation">(</span>declaringClass<span class="token punctuation">,</span>
                                         name<span class="token punctuation">,</span>
                                         parameterTypes<span class="token punctuation">,</span>
                                         returnType<span class="token punctuation">,</span>
                                         checkedExceptions<span class="token punctuation">,</span>
                                         modifiers<span class="token punctuation">,</span>
                                         <span class="token boolean">false</span><span class="token punctuation">,</span>
                                         <span class="token boolean">false</span><span class="token punctuation">,</span>
                                         <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>generate() \u6233\u8BE6\u60C5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/** This routine is not thread-safe */</span>
    <span class="token keyword">private</span> <span class="token class-name">MagicAccessorImpl</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> declaringClass<span class="token punctuation">,</span>
                                       <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                                       <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> parameterTypes<span class="token punctuation">,</span>
                                       <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span>   returnType<span class="token punctuation">,</span>
                                       <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> checkedExceptions<span class="token punctuation">,</span>
                                       <span class="token keyword">int</span> modifiers<span class="token punctuation">,</span>
                                       <span class="token keyword">boolean</span> isConstructor<span class="token punctuation">,</span>
                                       <span class="token keyword">boolean</span> forSerialization<span class="token punctuation">,</span>
                                       <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> serializationTargetClass<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ByteVector</span> vec <span class="token operator">=</span> <span class="token class-name">ByteVectorFactory</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassFileAssembler</span><span class="token punctuation">(</span>vec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>declaringClass <span class="token operator">=</span> declaringClass<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parameterTypes <span class="token operator">=</span> parameterTypes<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>returnType <span class="token operator">=</span> returnType<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>modifiers <span class="token operator">=</span> modifiers<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isConstructor <span class="token operator">=</span> isConstructor<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>forSerialization <span class="token operator">=</span> forSerialization<span class="token punctuation">;</span>

        asm<span class="token punctuation">.</span><span class="token function">emitMagicAndVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Constant pool entries:</span>
        <span class="token comment">// ( * = Boxing information: optional)</span>
        <span class="token comment">// (+  = Shared entries provided by AccessorGenerator)</span>
        <span class="token comment">// (^  = Only present if generating SerializationConstructorAccessor)</span>
        <span class="token comment">//     [UTF-8] [This class&#39;s name]</span>
        <span class="token comment">//     [CONSTANT_Class_info] for above</span>
        <span class="token comment">//     [UTF-8] &quot;sun/reflect/{MethodAccessorImpl,ConstructorAccessorImpl,SerializationConstructorAccessorImpl}&quot;</span>
        <span class="token comment">//     [CONSTANT_Class_info] for above</span>
        <span class="token comment">//     [UTF-8] [Target class&#39;s name]</span>
        <span class="token comment">//     [CONSTANT_Class_info] for above</span>
        <span class="token comment">// ^   [UTF-8] [Serialization: Class&#39;s name in which to invoke constructor]</span>
        <span class="token comment">// ^   [CONSTANT_Class_info] for above</span>
        <span class="token comment">//     [UTF-8] target method or constructor name</span>
        <span class="token comment">//     [UTF-8] target method or constructor signature</span>
        <span class="token comment">//     [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//     [CONSTANT_Methodref_info or CONSTANT_InterfaceMethodref_info] for target method</span>
        <span class="token comment">//     [UTF-8] &quot;invoke&quot; or &quot;newInstance&quot;</span>
        <span class="token comment">//     [UTF-8] invoke or newInstance descriptor</span>
        <span class="token comment">//     [UTF-8] descriptor for type of non-primitive parameter 1</span>
        <span class="token comment">//     [CONSTANT_Class_info] for type of non-primitive parameter 1</span>
        <span class="token comment">//     ...</span>
        <span class="token comment">//     [UTF-8] descriptor for type of non-primitive parameter n</span>
        <span class="token comment">//     [CONSTANT_Class_info] for type of non-primitive parameter n</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/Exception&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/ClassCastException&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/NullPointerException&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/IllegalArgumentException&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/InvocationTargetException&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;&lt;init&gt;&quot;</span>
        <span class="token comment">// +   [UTF-8] &quot;()V&quot;</span>
        <span class="token comment">// +   [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for NullPointerException&#39;s constructor</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for IllegalArgumentException&#39;s constructor</span>
        <span class="token comment">// +   [UTF-8] &quot;(Ljava/lang/String;)V&quot;</span>
        <span class="token comment">// +   [CONSTANT_NameAndType_info] for &quot;&lt;init&gt;(Ljava/lang/String;)V&quot;</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for IllegalArgumentException&#39;s constructor taking a String</span>
        <span class="token comment">// +   [UTF-8] &quot;(Ljava/lang/Throwable;)V&quot;</span>
        <span class="token comment">// +   [CONSTANT_NameAndType_info] for &quot;&lt;init&gt;(Ljava/lang/Throwable;)V&quot;</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for InvocationTargetException&#39;s constructor</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for &quot;super()&quot;</span>
        <span class="token comment">// +   [UTF-8] &quot;java/lang/Object&quot;</span>
        <span class="token comment">// +   [CONSTANT_Class_info] for above</span>
        <span class="token comment">// +   [UTF-8] &quot;toString&quot;</span>
        <span class="token comment">// +   [UTF-8] &quot;()Ljava/lang/String;&quot;</span>
        <span class="token comment">// +   [CONSTANT_NameAndType_info] for &quot;toString()Ljava/lang/String;&quot;</span>
        <span class="token comment">// +   [CONSTANT_Methodref_info] for Object&#39;s toString method</span>
        <span class="token comment">// +   [UTF-8] &quot;Code&quot;</span>
        <span class="token comment">// +   [UTF-8] &quot;Exceptions&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Boolean&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(Z)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;booleanValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()Z&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Byte&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(B)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;byteValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()B&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Character&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(C)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;charValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()C&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Double&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(D)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;doubleValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()D&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Float&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(F)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;floatValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()F&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Integer&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(I)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;intValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()I&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Long&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(J)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;longValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()J&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;java/lang/Short&quot;</span>
        <span class="token comment">//  *  [CONSTANT_Class_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;(S)V&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>
        <span class="token comment">//  *  [UTF-8] &quot;shortValue&quot;</span>
        <span class="token comment">//  *  [UTF-8] &quot;()S&quot;</span>
        <span class="token comment">//  *  [CONSTANT_NameAndType_info] for above</span>
        <span class="token comment">//  *  [CONSTANT_Methodref_info] for above</span>

        <span class="token keyword">short</span> numCPEntries <span class="token operator">=</span> <span class="token constant">NUM_BASE_CPOOL_ENTRIES</span> <span class="token operator">+</span> <span class="token constant">NUM_COMMON_CPOOL_ENTRIES</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> usesPrimitives <span class="token operator">=</span> <span class="token function">usesPrimitiveTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>usesPrimitives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            numCPEntries <span class="token operator">+=</span> <span class="token constant">NUM_BOXING_CPOOL_ENTRIES</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>forSerialization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            numCPEntries <span class="token operator">+=</span> <span class="token constant">NUM_SERIALIZATION_CPOOL_ENTRIES</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Add in variable-length number of entries to be able to describe</span>
        <span class="token comment">// non-primitive parameter types and checked exceptions.</span>
        numCPEntries <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token function">numNonPrimitiveParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span>numCPEntries<span class="token punctuation">,</span> <span class="token constant">S1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">String</span> generatedName <span class="token operator">=</span> <span class="token function">generateName</span><span class="token punctuation">(</span>isConstructor<span class="token punctuation">,</span> forSerialization<span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span>generatedName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolClass</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thisClass <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isConstructor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>forSerialization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                asm<span class="token punctuation">.</span>emitConstantPoolUTF8
                    <span class="token punctuation">(</span><span class="token string">&quot;sun/reflect/SerializationConstructorAccessorImpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token string">&quot;sun/reflect/ConstructorAccessorImpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token string">&quot;sun/reflect/MethodAccessorImpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolClass</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        superClass <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token function">getClassName</span><span class="token punctuation">(</span>declaringClass<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolClass</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        targetClass <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">short</span> serializationTargetClassIdx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>forSerialization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token function">getClassName</span><span class="token punctuation">(</span>serializationTargetClass<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolClass</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            serializationTargetClassIdx <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token function">buildInternalSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolNameAndType</span><span class="token punctuation">(</span><span class="token function">sub</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">S1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolInterfaceMethodref</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">,</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>forSerialization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolMethodref</span><span class="token punctuation">(</span>serializationTargetClassIdx<span class="token punctuation">,</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolMethodref</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">,</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        targetMethodRef <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isConstructor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token string">&quot;newInstance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token string">&quot;invoke&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        invokeIdx <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isConstructor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token string">&quot;([Ljava/lang/Object;)Ljava/lang/Object;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            asm<span class="token punctuation">.</span>emitConstantPoolUTF8
                <span class="token punctuation">(</span><span class="token string">&quot;(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        invokeDescriptorIdx <span class="token operator">=</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Output class information for non-primitive parameter types</span>
        nonPrimitiveParametersBaseIdx <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">S2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> parameterTypes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> parameterTypes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolUTF8</span><span class="token punctuation">(</span><span class="token function">getClassName</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                asm<span class="token punctuation">.</span><span class="token function">emitConstantPoolClass</span><span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Entries common to FieldAccessor, MethodAccessor and ConstructorAccessor</span>
        <span class="token function">emitCommonConstantPoolEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Boxing entries</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>usesPrimitives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">emitBoxingContantPoolEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> numCPEntries<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span><span class="token string">&quot;Adjust this code (cpi = &quot;</span> <span class="token operator">+</span> asm<span class="token punctuation">.</span><span class="token function">cpi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                                    <span class="token string">&quot;, numCPEntries = &quot;</span> <span class="token operator">+</span> numCPEntries <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Access flags</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token constant">ACC_PUBLIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// This class</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span>thisClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Superclass</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span>superClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Interfaces count and interfaces</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token constant">S0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Fields count and fields</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token constant">S0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Methods count and methods</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token constant">NUM_METHODS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">emitConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">emitInvoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Additional attributes (none)</span>
        asm<span class="token punctuation">.</span><span class="token function">emitShort</span><span class="token punctuation">(</span><span class="token constant">S0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Load class</span>
        vec<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> vec<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Note: the class loader is the only thing that really matters</span>
        <span class="token comment">// here -- it&#39;s important to get the generated code into the</span>
        <span class="token comment">// same namespace as the target class. Since the generated code</span>
        <span class="token comment">// is privileged anyway, the protection domain probably doesn&#39;t</span>
        <span class="token comment">// matter.</span>
        <span class="token keyword">return</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MagicAccessorImpl</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">public</span> <span class="token class-name">MagicAccessorImpl</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">MagicAccessorImpl</span><span class="token punctuation">)</span>
                        <span class="token class-name">ClassDefiner</span><span class="token punctuation">.</span>defineClass
                                <span class="token punctuation">(</span>generatedName<span class="token punctuation">,</span>
                                 bytes<span class="token punctuation">,</span>
                                 <span class="token number">0</span><span class="token punctuation">,</span>
                                 bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
                                 declaringClass<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> <span class="token operator">|</span> <span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u54B1\u4EEC\u4E3B\u8981\u770B\u8FD9\u4E00\u53E5\uFF1A<code>ClassDefiner.defineClass(xx, declaringClass.getClassLoader()).newInstance()</code>;</p><p>\u5728<code>ClassDefiner.defineClass</code>\u65B9\u6CD5\u5B9E\u73B0\u4E2D\uFF0C\u6BCF\u88AB\u8C03\u7528\u4E00\u6B21\u90FD\u4F1A\u751F\u6210\u4E00\u4E2ADelegatingClassLoader\u7C7B\u52A0\u8F7D\u5668\u5BF9\u8C61 \uFF0C\u8FD9\u91CC\u6BCF\u6B21\u90FD\u751F\u6210\u65B0\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u662F\u4E3A\u4E86\u6027\u80FD\u8003\u8651\uFF0C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u53EF\u4EE5\u5378\u8F7D\u8FD9\u4E9B\u751F\u6210\u7684\u7C7B\uFF0C\u56E0\u4E3A\u7C7B\u7684\u5378\u8F7D\u662F\u53EA\u6709\u5728\u7C7B\u52A0\u8F7D\u5668\u53EF\u4EE5\u88AB\u56DE\u6536\u7684\u60C5\u51B5\u4E0B\u624D\u4F1A\u88AB\u56DE\u6536\u7684\uFF0C\u5982\u679C\u7528\u4E86\u539F\u6765\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u90A3\u53EF\u80FD\u5BFC\u81F4\u8FD9\u4E9B\u65B0\u521B\u5EFA\u7684\u7C7B\u4E00\u76F4\u65E0\u6CD5\u88AB\u5378\u8F7D\u3002</p><p>\u800C\u53CD\u5C04\u751F\u6210\u7684\u7C7B\uFF0C\u6709\u65F6\u5019\u53EF\u80FD\u7528\u4E86\u5C31\u53EF\u4EE5\u5378\u8F7D\u4E86\uFF0C\u6240\u4EE5\u4F7F\u7528\u5176\u72EC\u7ACB\u7684\u7C7B\u52A0\u8F7D\u5668\uFF0C\u4ECE\u800C\u4F7F\u5F97\u66F4\u5BB9\u6613\u63A7\u5236\u53CD\u5C04\u7C7B\u7684\u751F\u547D\u5468\u671F\u3002</p><h3 id="_3-4-\u53CD\u5C04\u8C03\u7528\u6D41\u7A0B\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_3-4-\u53CD\u5C04\u8C03\u7528\u6D41\u7A0B\u5C0F\u7ED3" aria-hidden="true">#</a> 3.4 \u53CD\u5C04\u8C03\u7528\u6D41\u7A0B\u5C0F\u7ED3</h3><p>\u6700\u540E\uFF0C\u7528\u51E0\u53E5\u8BDD\u603B\u7ED3\u53CD\u5C04\u7684\u5B9E\u73B0\u539F\u7406\uFF1A</p><ol><li>\u53CD\u5C04\u7C7B\u53CA\u53CD\u5C04\u65B9\u6CD5\u7684\u83B7\u53D6\uFF0C\u90FD\u662F\u901A\u8FC7\u4ECE\u5217\u8868\u4E2D\u641C\u5BFB\u67E5\u627E\u5339\u914D\u7684\u65B9\u6CD5\uFF0C\u6240\u4EE5\u67E5\u627E\u6027\u80FD\u4F1A\u968F\u7C7B\u7684\u5927\u5C0F\u65B9\u6CD5\u591A\u5C11\u800C\u53D8\u5316\uFF1B</li><li>\u6BCF\u4E2A\u7C7B\u90FD\u4F1A\u6709\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684Class\u5B9E\u4F8B\uFF0C\u4ECE\u800C\u6BCF\u4E2A\u7C7B\u90FD\u53EF\u4EE5\u83B7\u53D6method\u53CD\u5C04\u65B9\u6CD5\uFF0C\u5E76\u4F5C\u7528\u5230\u5176\u4ED6\u5B9E\u4F8B\u8EAB\u4E0A\uFF1B</li><li>\u53CD\u5C04\u4E5F\u662F\u8003\u8651\u4E86\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u653E\u5FC3\u4F7F\u7528\uFF1B</li><li>\u53CD\u5C04\u4F7F\u7528\u8F6F\u5F15\u7528relectionData\u7F13\u5B58class\u4FE1\u606F\uFF0C\u907F\u514D\u6BCF\u6B21\u91CD\u65B0\u4ECEjvm\u83B7\u53D6\u5E26\u6765\u7684\u5F00\u9500\uFF1B</li><li>\u53CD\u5C04\u8C03\u7528\u591A\u6B21\u751F\u6210\u65B0\u4EE3\u7406Accessor, \u800C\u901A\u8FC7\u5B57\u8282\u7801\u751F\u5B58\u7684\u5219\u8003\u8651\u4E86\u5378\u8F7D\u529F\u80FD\uFF0C\u6240\u4EE5\u4F1A\u4F7F\u7528\u72EC\u7ACB\u7684\u7C7B\u52A0\u8F7D\u5668\uFF1B</li><li>\u5F53\u627E\u5230\u9700\u8981\u7684\u65B9\u6CD5\uFF0C\u90FD\u4F1Acopy\u4E00\u4EFD\u51FA\u6765\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528\u539F\u6765\u7684\u5B9E\u4F8B\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6570\u636E\u9694\u79BB\uFF1B</li><li>\u8C03\u5EA6\u53CD\u5C04\u65B9\u6CD5\uFF0C\u6700\u7EC8\u662F\u7531jvm\u6267\u884Cinvoke0()\u6267\u884C\uFF1B</li></ol><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,64),w={href:"https://pdai.tech/md/java/basic/java-basic-x-reflection.html",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"Java \u57FA\u7840 - \u53CD\u5C04\u673A\u5236\u8BE6\u89E3",-1);function C(T,S){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[s("JVM\u57FA\u7840 - \u7C7B\u5B57\u8282\u7801\u8BE6\u89E3"),t(a)]),r]),n("li",null,[n("a",d,[s("JVM\u57FA\u7840 - Java \u7C7B\u52A0\u8F7D\u673A\u5236"),t(a)]),m])]),v,n("p",null,[s("\u7B80\u5355\u6D4B\u8BD5\u4E0B\uFF08\u8FD9\u91CC\u4F8B\u5B50\u6E90\u4E8E"),n("a",b,[s("https://blog.csdn.net/mcryeasy/article/details/52344729\uFF09"),t(a)])]),g,n("blockquote",null,[n("p",null,[s("\u8FD9\u90E8\u5206\u4E3B\u8981\u53C2\u8003\u81EA"),n("a",f,[s("https://www.cnblogs.com/yougewe/p/10125073.html"),t(a)])])]),y,n("p",null,[n("a",w,[h,t(a)])])])}const N=e(i,[["render",C],["__file","java-basic-x-reflection.html.vue"]]);export{N as default};
