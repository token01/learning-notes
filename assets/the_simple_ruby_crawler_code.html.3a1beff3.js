import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as p}from"./app.945d736a.js";const t={},e=p(`<h1 id="一段简单的ruby爬虫代码" tabindex="-1"><a class="header-anchor" href="#一段简单的ruby爬虫代码" aria-hidden="true">#</a> 一段简单的ruby爬虫代码</h1><blockquote><p>每学一门语言，思维方式都会发生改变，编程语言亦是如此。</p></blockquote><p>编程语言从范型上来划分，主要有过程式语言、面向对象式语言和函数式语言，只有了解这些语言的变化、发展和设计哲学，深入地学习它们，才能够将它们融汇贯通，体会到不同范型中的精华和思想。如今有众多的编程语言，五花八门，《七周七语言》中挑选了7门优秀的语言进行讲解，这些语言包括了以上三种范型，其中有Ruby这样的面向对象的脚本语言、Io这样的原型语言、Haskell这样的纯函数式语言，也有Scala这种融合了函数式编程和面向对象编程的语言，这些语言都有其特别的设计和独门绝技，比如Ruby的简洁、效率和它的元编程特性。</p><p>本次用Ruby写了一段抓取程序，可以抓取煎蛋上评分较高的有趣图片，其中解析html用到了nokogiri模块。这段程序总共只有几十行代码，为了多使用一些语言上的特性，还加了一些没必要的代码，如果再精简一下的话，这段程序可以非常简短，实在是不得不佩服ruby的简洁和效率。</p><p>不多说了，直接上代码吧！</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code><span class="token comment">#encoding: utf-8</span>

<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;net/http&#39;</span></span>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;open-uri&#39;</span></span>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;nokogiri&#39;</span></span> <span class="token comment"># 用于解析html的模块</span>
                   <span class="token comment"># sudo apt-get install libxslt-dev libxml2-dev </span>
                   <span class="token comment"># sudo gem install nokogiri</span>
<span class="token keyword">require</span> <span class="token string-literal"><span class="token string">&#39;pathname&#39;</span></span>

<span class="token keyword">class</span> <span class="token class-name">JanDanSpider</span>
    attr_accessor <span class="token symbol">:base_uri</span><span class="token punctuation">,</span> <span class="token symbol">:cur_page</span> <span class="token comment"># 定义属性访问器</span>

    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span>pagesize<span class="token punctuation">)</span>
        <span class="token variable">@base_uri</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;http://jandan.net/pic&#39;</span></span> <span class="token comment"># @表示实例变量、@@表示类变量、$表示全局变量</span>
        <span class="token variable">@dir</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;/media/Develop/MyCode/SevenLang/ruby/pic&#39;</span></span>
        <span class="token variable">@pagesize</span> <span class="token operator">=</span> <span class="token builtin">Integer</span><span class="token punctuation">(</span>pagesize<span class="token punctuation">)</span> <span class="token comment"># 整型转换</span>
    <span class="token keyword">end</span>

    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">crawl</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token builtin">Dir</span><span class="token punctuation">.</span>mkdir <span class="token variable">@dir</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>directory<span class="token operator">?</span> <span class="token variable">@dir</span> <span class="token comment"># 表判断的方法结尾都有个?</span>
        totalpage <span class="token operator">=</span> crawlpage<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        puts <span class="token string-literal"><span class="token string">&quot;pagesize </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">totalpage</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token comment"># &quot;&quot;字符会引发字符串替换，&#39;&#39;则不会</span>
        <span class="token punctuation">(</span><span class="token number">1.</span><span class="token punctuation">.</span><span class="token variable">@pagesize</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>i<span class="token operator">|</span> <span class="token comment"># 遍历元组</span>
            crawlpage<span class="token punctuation">(</span>totalpage <span class="token operator">-</span> i<span class="token punctuation">)</span>
        <span class="token keyword">end</span>
        puts <span class="token string-literal"><span class="token string">&#39;complete!&#39;</span></span>
    <span class="token keyword">end</span>

    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">crawlpage</span></span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>
        url <span class="token operator">=</span> page<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">@base_uri</span> <span class="token operator">:</span> <span class="token variable">@base_uri</span><span class="token operator">+</span><span class="token string-literal"><span class="token string">&#39;/page-&#39;</span></span><span class="token operator">+</span>page<span class="token punctuation">.</span>to_s <span class="token comment"># to_s是必要的</span>
        puts <span class="token string-literal"><span class="token string">&quot;crawl-page: </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">url</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span>

        fpage <span class="token operator">=</span> open<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        html <span class="token operator">=</span> fpage<span class="token punctuation">.</span>read
        doc <span class="token operator">=</span> Nokogiri<span class="token double-colon punctuation">::</span><span class="token constant">HTML</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>
        doc<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;ol.commentlist li&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token punctuation">{</span> <span class="token operator">|</span>comment<span class="token operator">|</span>
            match <span class="token operator">=</span> <span class="token regex-literal"><span class="token regex">/comment-(\\d+)/</span></span><span class="token punctuation">.</span>match<span class="token punctuation">(</span>comment<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;id&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> match
                id <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
                oo <span class="token operator">=</span> <span class="token builtin">Integer</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;#cos_support&#39;</span></span><span class="token operator">+</span><span class="token string-literal"><span class="token string">&#39;-&#39;</span></span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
                xx <span class="token operator">=</span> <span class="token builtin">Integer</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;#cos_unsupport&#39;</span></span><span class="token operator">+</span><span class="token string-literal"><span class="token string">&#39;-&#39;</span></span><span class="token operator">+</span>id<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
                xx <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">if</span> xx<span class="token operator">==</span><span class="token number">0</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>oo<span class="token operator">&gt;</span>xx <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oo<span class="token operator">&gt;</span><span class="token number">200</span> <span class="token operator">||</span> oo<span class="token operator">/</span>xx <span class="token operator">&gt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>
                    src <span class="token operator">=</span> comment<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;p img&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;src&quot;</span></span><span class="token punctuation">]</span>
                    puts <span class="token string-literal"><span class="token string">&quot;crawl: oo </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">oo</span><span class="token delimiter punctuation">}</span></span><span class="token string"> xx </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">xx</span><span class="token delimiter punctuation">}</span></span><span class="token string"> src </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">src</span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span>
                    save_pic<span class="token punctuation">(</span>src<span class="token punctuation">)</span>
                <span class="token keyword">end</span>
            <span class="token keyword">end</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> page<span class="token operator">==</span><span class="token number">0</span>
            cur_page <span class="token operator">=</span> doc<span class="token punctuation">.</span>css<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;.current-comment-page&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>content
            page <span class="token operator">=</span> <span class="token builtin">Integer</span><span class="token punctuation">(</span><span class="token regex-literal"><span class="token regex">/\\d+/</span></span><span class="token punctuation">.</span>match<span class="token punctuation">(</span>cur_page<span class="token punctuation">)</span><span class="token punctuation">.</span>to_s<span class="token punctuation">)</span>
        <span class="token keyword">end</span>
        puts <span class="token string-literal"><span class="token string">&quot;page </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">page</span><span class="token delimiter punctuation">}</span></span><span class="token string"> done!&quot;</span></span>
        page <span class="token comment"># ruby中每条语句都有返回值，函数内最后一条语句的返回值会被return</span>
    <span class="token keyword">end</span>

    <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">save_pic</span></span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        urlpath <span class="token operator">=</span> <span class="token class-name">Pathname</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        filename <span class="token operator">=</span> urlpath<span class="token punctuation">.</span>basename<span class="token punctuation">.</span>to_s
        dirpath <span class="token operator">=</span> <span class="token class-name">Pathname</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token variable">@dir</span><span class="token punctuation">)</span>
        filepath <span class="token operator">=</span> dirpath<span class="token punctuation">.</span>join<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span>to_s
        open<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">|</span>fin<span class="token operator">|</span>
            open<span class="token punctuation">(</span>filepath<span class="token punctuation">,</span><span class="token string-literal"><span class="token string">&quot;wb&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">|</span>fout<span class="token operator">|</span>
                <span class="token keyword">while</span> buf <span class="token operator">=</span> fin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span> <span class="token keyword">do</span>
                    fout<span class="token punctuation">.</span>write buf
                <span class="token keyword">end</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>exists<span class="token operator">?</span> filepath <span class="token comment"># 仅当文件不存在时进行抓取</span>
        puts <span class="token string-literal"><span class="token string">&#39;done!&#39;</span></span>
    <span class="token keyword">end</span>

<span class="token keyword">end</span>

<span class="token keyword">if</span> <span class="token constant">ARGV</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span>
    spider <span class="token operator">=</span> <span class="token class-name">JanDanSpider</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>$<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 可从 ARGV 或 $* 读取命令行参数</span>
    spider<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">else</span>
    puts <span class="token string-literal"><span class="token string">&#39;please input pagesize&#39;</span></span> <span class="token comment">#tip: puts, 转义+换行符 print, 转义 p, 换行</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function l(c,i){return s(),a("div",null,o)}const k=n(t,[["render",l],["__file","the_simple_ruby_crawler_code.html.vue"]]);export{k as default};
