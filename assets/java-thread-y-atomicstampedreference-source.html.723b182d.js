import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as p,a as n,b as t,d as c,f as o,r as l}from"./app.f386ac8b.js";const i={},u=o(`<h1 id="\u7248\u672C\u53F7\u539F\u5B50\u7C7Batomicstampedreference\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u7248\u672C\u53F7\u539F\u5B50\u7C7Batomicstampedreference\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u7248\u672C\u53F7\u539F\u5B50\u7C7BAtomicStampedReference\u6E90\u7801\u89E3\u6790</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>\u901A\u8FC7\u539F\u5B50\u7684\u65B9\u5F0F\u66F4\u65B0\u5355\u4E2A\u53D8\u91CF\u7684\u539F\u5B50\u7C7B\u7684\u5347\u7EA7\u7248\uFF0CAtomic\u5305\u63D0\u4F9B\u4E86\u4EE5\u4E0B2\u4E2A\u7C7B\uFF1A</p><ul><li>AtomicMarkableReference&lt; V &gt;\uFF1A\u7EF4\u62A4\u5E26\u6709\u6807\u8BB0\u4F4D\u7684\u5BF9\u8C61\u5F15\u7528\uFF0C\u53EF\u4EE5\u539F\u5B50\u65B9\u5F0F\u5BF9\u5176\u8FDB\u884C\u66F4\u65B0\u3002</li><li>AtomicStampedReference&lt; V &gt;\uFF1A\u7EF4\u62A4\u5E26\u6709\u6574\u6570\u6807\u5FD7\u7684\u5BF9\u8C61\u5F15\u7528\uFF0C\u53EF\u7528\u539F\u5B50\u65B9\u5F0F\u5BF9\u5176\u8FDB\u884C\u66F4\u65B0\u3002</li></ul><p>\u4E0A\u9762\u4E24\u4E2A\u539F\u5B50\u7C7B\u7684\u65B9\u6CD5\u4EE5\u53CA\u539F\u7406\u51E0\u4E4E\u4E00\u81F4\uFF0C\u5C5E\u4E8E\u5E26\u6709\u7248\u672C\u53F7\u7684\u539F\u5B50\u7C7B</p><h3 id="_1-1-\u4E3A\u4EC0\u4E48\u9700\u8981\u5E26\u7248\u672C\u53F7-aba\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-1-\u4E3A\u4EC0\u4E48\u9700\u8981\u5E26\u7248\u672C\u53F7-aba\u95EE\u9898" aria-hidden="true">#</a> 1.1 \u4E3A\u4EC0\u4E48\u9700\u8981\u5E26\u7248\u672C\u53F7\uFF1F\uFF08ABA\u95EE\u9898\uFF09</h3><p>\u6211\u4EEC\u77E5\u9053CAS\u64CD\u4F5C\u7684\u4E09\u5927\u95EE\u9898\u4E4B\u4E00\u5C31\u662F\u201CABA\u201D\u95EE\u9898\uFF1A<strong>CAS\u5728\u64CD\u4F5C\u503C\u7684\u65F6\u5019\uFF0C\u9700\u8981\u68C0\u67E5\u9884\u671F\u503C\u6709\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u5982\u679C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u5219\u66F4\u65B0\u3002\u4F46\u662F\uFF0C\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0Bt1\u9996\u5148\u83B7\u53D6\u4E86\u9884\u671F\u503CA\uFF0C\u6B64\u65F6\u53E6\u4E00\u4E2A\u7EBF\u7A0Bt2\u5219\u5C06\u503C\u4ECEA\u53D8\u6210\u4E86B\uFF0C\u968F\u540E\u53C8\u53D8\u6210\u4E86A\uFF0C\u968F\u540Et1\u518D\u4F7F\u7528CAS\u8FDB\u884C\u6BD4\u8F83\u4EA4\u6362\u7684\u65F6\u5019\uFF0C\u4F1A\u53D1\u73B0\u5B83\u7684\u9884\u671F\u503C\u201C\u6CA1\u6709\u53D8\u5316\u201D\uFF0C\u4F46\u5B9E\u9645\u4E0A\u662F\u53D8\u5316\u8FC7\u7684\u3002\u8FD9\u5C31\u662FABA\u95EE\u9898\u7684\u7531\u6765</strong>\u3002</p><h3 id="_1-2-\u5982\u4F55\u89E3\u51B3aba\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_1-2-\u5982\u4F55\u89E3\u51B3aba\u95EE\u9898" aria-hidden="true">#</a> 1.2 \u5982\u4F55\u89E3\u51B3ABA\u95EE\u9898</h3><p>ABA\u95EE\u9898\u7684\u89E3\u51B3\u601D\u8DEF\u5C31\u662F\u4F7F\u7528\u7248\u672C\u53F7\uFF0C1A-&gt;2B-&gt;3A\uFF0C\u5728Atomic\u5305\u4E2D\uFF0C\u63D0\u4F9B\u4E86\u4E00\u4E2A\u73B0\u6210\u7684AtomicStampedReference\u7C7B\u6765\u89E3\u51B3ABA\u95EE\u9898\uFF0C\u4F7F\u7528\u7684\u5C31\u662F\u6DFB\u52A0\u7248\u672C\u53F7\u7684\u65B9\u6CD5\u3002\u8FD8\u6709\u4E00\u4E2AAtomicMarkableReference\u5B9E\u73B0\u7C7B\uFF0C\u5B83\u6BD4AtomicStampedReference\u66F4\u52A0\u7B80\u5355\uFF0CAtomicStampedReference\u4E2D\u6BCF\u66F4\u65B0\u4E00\u6B21\u6570\u636E\u7248\u672C\u53F7\u4E5F\u4F1A\u66F4\u65B0\u4E00\u6B21\uFF0C\u8FD9\u6837\u53EF\u4EE5\u4F7F\u7528\u7248\u672C\u53F7\u7EDF\u8BA1\u5230\u5E95\u66F4\u65B0\u4E86\u591A\u5C11\u6B21\uFF0C\u800CAtomicMarkableReference\u4EC5\u4EC5\u4F7F\u7528\u4E86\u4E00\u4E2Aboolean\u503C\u6765\u8868\u793A\u503C\u662F\u5426\u6539\u53D8\u8FC7\uFF0C\u56E0\u6B64\u4F7F\u7528\u7684\u6BD4\u8F83\u5C11\u3002</p><h2 id="_2-\u91CD\u8981\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_2-\u91CD\u8981\u5C5E\u6027" aria-hidden="true">#</a> 2. \u91CD\u8981\u5C5E\u6027</h2><p>AtomicStampedReference\u5185\u90E8\u4E0D\u4EC5\u7EF4\u62A4\u4E86\u6211\u4EEC\u7684\u4F20\u9012\u7684\u5BF9\u8C61reference\uFF0C<strong>\u8FD8\u7EF4\u62A4\u4E86\u4E00\u4E2Aint\u7C7B\u578B\u7684\u7248\u672C\u53F7stamp\uFF0C\u5B83\u4EEC\u90FD\u88AB\u5B58\u653E\u5230\u4E00\u4E2APair\u7C7B\u578B\u7684\u5185\u90E8\u7C7B\u5B9E\u4F8B\u4E2D</strong>\u3002\u5F53AtomicStampedReference \u5BF9\u5E94\u7684\u6570\u636E\u88AB\u4FEE\u6539\u65F6\uFF0C\u9664\u4E86\u66F4\u65B0\u6570\u636E\u672C\u8EAB\u5916\uFF0C\u8FD8\u5FC5\u987B\u8981\u66F4\u65B0\u7248\u672C\u53F7\uFF0C<strong>\u8FD9\u4E2A\u7248\u672C\u53F7\u4E00\u822C\u90FD\u662F\u81EA\u589E\u7684\u3002\u5F53AtomicStampedReference \u8BBE\u7F6E\u5BF9\u8C61\u503C\u65F6\uFF0C\u5BF9\u8C61\u503C\u53CA\u7248\u672C\u53F7\u90FD\u5FC5\u987B\u6EE1\u8DB3\u671F\u671B\u503C\uFF0C\u624D\u4F1A\u66F4\u65B0\u6210\u529F</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Pair\u5185\u90E8\u7C7B\uFF0C\u7528\u4E8E\u7EF4\u62A4reference\u548Cstamp
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u771F\u6B63\u7684\u6570\u636E
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">T</span> reference<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u7248\u672C\u53F7
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> stamp<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Pair</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">int</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reference <span class="token operator">=</span> reference<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stamp <span class="token operator">=</span> stamp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u8FD4\u56DEPair\u5B9E\u4F8B
     */</span>
    <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">T</span> reference<span class="token punctuation">,</span> <span class="token keyword">int</span> stamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u7531\u4E8E\u8981\u7EF4\u62A4\u4E24\u4E2A\u5C5E\u6027\uFF0C\u56E0\u6B64\u5E72\u8106\u4F7F\u7528\u4E00\u4E2A\u5185\u90E8\u7C7B\u5BF9\u8C61\u6765\u7EF4\u62A4\u8FD9\u4E24\u4E2A\u5C5E\u6027
 */</span>
<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pair<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u521B\u5EFA\u5177\u6709\u7ED9\u5B9A\u521D\u59CB\u503C\u7684\u65B0 AtomicStampedReference\u3002
 *
 * <span class="token keyword">@param</span> <span class="token parameter">initialRef</span>   \u521D\u59CB\u503C
 * <span class="token keyword">@param</span> <span class="token parameter">initialStamp</span> \u521D\u59CB\u7248\u672C\u53F7
 */</span>
<span class="token keyword">public</span> <span class="token class-name">AtomicStampedReference</span><span class="token punctuation">(</span><span class="token class-name">V</span> initialRef<span class="token punctuation">,</span> <span class="token keyword">int</span> initialStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521D\u59CB\u5316\u4E00\u4E2APair\u5BF9\u8C61\uFF0C\u5E76\u521D\u59CB\u5316\u5C5E\u6027\u503C</span>
    pair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>initialRef<span class="token punctuation">,</span> initialStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u91CD\u8981\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u91CD\u8981\u65B9\u6CD5" aria-hidden="true">#</a> 3. \u91CD\u8981\u65B9\u6CD5</h2><p>\u6700\u91CD\u8981\u7684\u5C31\u662FcompareAndSet\u65B9\u6CD5\uFF0C\u5B83\u9700\u8981\u4F20\u9012\uFF1A\u671F\u671B\u503C\u3001\u65B0\u503C\u3001\u671F\u671B\u7248\u672C\u53F7\u3001\u65B0\u7248\u672C\u53F7\uFF0C\u5F53\u671F\u671B\u503C\u548C\u671F\u671B\u7248\u672C\u53F7\u90FD\u4E0E\u6B64\u65F6\u5185\u90E8\u7684\u771F\u5B9E\u503C\u548C\u771F\u5B9E\u7248\u672C\u53F7\u76F8\u7B49\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u8C03\u7528compareAndSwapObject\u4F7F\u7528\u4E00\u4E2A\u65B0\u7684Pair\u5BF9\u8C61\u66FF\u6362\u65E7\u7684Pair\u5BF9\u8C61\uFF0C\u540C\u65F6\u5B8C\u6210reference\u548Cstamp\u7684\u66F4\u65B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5982\u679C\u5F53\u524D\u5F15\u7528 == \u9884\u671F\u5F15\u7528\uFF0C\u5E76\u4E14\u5F53\u524D\u7248\u672C\u53F7\u7B49\u4E8E\u9884\u671F\u7248\u672C\u53F7\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06\u8BE5\u5F15\u7528\u548C\u8BE5\u6807\u5FD7\u7684\u503C\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u7684\u66F4\u65B0\u503C\u3002
 *
 * <span class="token keyword">@param</span> <span class="token parameter">expectedReference</span> \u9884\u671F\u5F15\u7528
 * <span class="token keyword">@param</span> <span class="token parameter">newReference</span>      \u65B0\u5F15\u7528
 * <span class="token keyword">@param</span> <span class="token parameter">expectedStamp</span>     \u9884\u671F\u7248\u672C\u53F7
 * <span class="token keyword">@param</span> <span class="token parameter">newStamp</span>          \u65B0\u7248\u672C\u53F7
 * <span class="token keyword">@return</span> \u5982\u679C\u6210\u529F\uFF0C\u5219\u8FD4\u56DE true
 */</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token class-name">V</span> expectedReference<span class="token punctuation">,</span>
                             <span class="token class-name">V</span> newReference<span class="token punctuation">,</span>
                             <span class="token keyword">int</span> expectedStamp<span class="token punctuation">,</span>
                             <span class="token keyword">int</span> newStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> pair<span class="token punctuation">;</span>
    <span class="token comment">//\u4E00\u7CFB\u5217\u7684\u5224\u65AD\uFF0C\u5982\u679C\u4E24\u4E2A\u9884\u671F\u503C\u90FD\u76F8\u7B49\uFF0C\u90A3\u4E48\u5C1D\u8BD5\u8C03\u7528compareAndSwapObject\u4F7F\u7528\u65B0\u7684Pair\u5BF9\u8C61\u66FF\u4EE3\u65E7\u7684Pair\u5BF9\u8C61</span>
    <span class="token comment">//\u8FD9\u6837\u5C31\u540C\u65F6\u5B8C\u6210\u4E86reference\u548Cstamp\u7684\u66F4\u65B0</span>
    <span class="token keyword">return</span>
            expectedReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span>
                    expectedStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>newReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span>
                            newStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp<span class="token punctuation">)</span> <span class="token operator">||</span>
                            <span class="token function">casPair</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>newReference<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * CAS\u66FF\u6362\u5185\u90E8\u7684Pair\u5BF9\u8C61\u7684\u65B9\u6CD5
 *
 * <span class="token keyword">@param</span> <span class="token parameter">cmp</span> \u9884\u671Fpair\u5BF9\u8C61
 * <span class="token keyword">@param</span> <span class="token parameter">val</span> \u65B0pair\u5BF9\u8C61
 * <span class="token keyword">@return</span> \u5982\u679C\u6210\u529F\uFF0C\u5219\u8FD4\u56DE true
 */</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">casPair</span><span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> cmp<span class="token punctuation">,</span> <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">UNSAFE</span><span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> pairOffset<span class="token punctuation">,</span> cmp<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> \u83B7\u5F97\u5F53\u524D\u4FDD\u5B58\u7684\u5BF9\u8C61\u5F15\u7528
 */</span>
<span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pair<span class="token punctuation">.</span>reference<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> \u83B7\u5F97\u5F53\u524D\u4FDD\u5B58\u7684\u7248\u672C\u53F7
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> pair<span class="token punctuation">.</span>stamp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * \u8BBE\u7F6E\u65B0\u5BF9\u8C61\u5F15\u7528\u548C\u7248\u672C\u53F7
 *
 * <span class="token keyword">@param</span> <span class="token parameter">newReference</span> \u65B0\u5BF9\u8C61\u5F15\u7528
 * <span class="token keyword">@param</span> <span class="token parameter">newStamp</span>     \u65B0\u7248\u672C\u53F7
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">V</span> newReference<span class="token punctuation">,</span> <span class="token keyword">int</span> newStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> current <span class="token operator">=</span> pair<span class="token punctuation">;</span>
    <span class="token comment">//\u5982\u679C\u65B0\u5BF9\u8C61\u5F15\u7528\u4EE5\u53CA\u65B0\u7248\u672C\u53F7\u548C\u4E4B\u524D\u7684\u90FD\u4E00\u6837\u90A3\u5C31\u4E0D\u8BBE\u7F6E</span>
    <span class="token comment">//\u5426\u5219\u5C31\u662F\u65B0\u5EFA\u4E00\u4E2APair\u5BF9\u8C61\u5E76\u8BBE\u7F6E\u76F8\u5E94\u7684\u5C5E\u6027\uFF0C\u66FF\u4EE3\u539F\u6765\u7684Pair\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newReference <span class="token operator">!=</span> current<span class="token punctuation">.</span>reference <span class="token operator">||</span> newStamp <span class="token operator">!=</span> current<span class="token punctuation">.</span>stamp<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>newReference<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-\u6848\u4F8B" aria-hidden="true">#</a> 4. \u6848\u4F8B</h2><p>\u5B9E\u9645\u4E0A\uFF0C\u5982\u679C\u66F4\u65B0\u7684\u6570\u636E\u662F\u65E0\u72B6\u6001\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u4F7F\u7528\u57FA\u672C\u7684\u539F\u5B50\u7C7B\u4E5F\u53EF\u4EE5\u5B8C\u6210\u76EE\u7684\uFF0C\u5373\u5982\u679C\u7EBF\u7A0BA\u5C06\u503C\u4ECE1-&gt;2-&gt;1\uFF0C\u800C\u7EBF\u7A0BB\u4EC5\u4EC5\u662F\u4F7F\u7528\u4E86\u503C\uFF0C\u8FD9\u662F\u6CA1\u4EC0\u4E48\u95EE\u9898\u7684\uFF0C\u4F46\u662F\u5982\u679C\u548C\u4E1A\u52A1\u76F8\u5173\u8054\uFF0C\u6BD4\u8F83\u7684\u5BF9\u8C61\u662F\u6709\u72B6\u6001\u7684\uFF0C\u90A3\u4E48\u53EF\u80FD\u4F1A\u51FA\u73B0\u4E25\u91CD\u95EE\u9898\u3002</p><p><strong>\u6BD4\u5982\u8FD8\u662F\u7EBF\u7A0BA\u5C06\u503C\u4ECE1-&gt;2-&gt;1\uFF0C\u800C\u7EBF\u7A0BB\u7684\u4E1A\u52A1\u903B\u8F91\u662F\u5982\u679C\u53D1\u73B0\u6570\u636E\u6539\u53D8\u8FC7\uFF0C\u90A3\u4E48\u5C31\u4E0D\u80FD\u64CD\u4F5C\uFF0C\u8FD9\u6837\u7684\u8BDD\u5C31\u4E0D\u80FD\u5355\u7EAF\u7684\u6BD4\u8F83\u503C\u4E86\uFF0C\u8FD9\u5C31\u9700\u8981\u7528\u5230\u7248\u672C\u53F7\u4E86\u3002</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zszdevelop<span class="token punctuation">.</span>asposedemo</span><span class="token punctuation">;</span>


<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicStampedReference</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">LockSupport</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicStampedReferenceDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521D\u59CB\u503C\u4E3A0\uFF0C\u7248\u672C\u53F7\u4E3A0</span>
        <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomicStampedReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicStampedReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5148\u83B7\u53D6\u6807\u5FD7\u4F4D</span>
            <span class="token keyword">int</span> timestamp <span class="token operator">=</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u83B7\u53D6\u539F\u503C</span>
            <span class="token keyword">int</span> reference <span class="token operator">=</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u539F\u503Creference: &quot;</span> <span class="token operator">+</span> reference<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u963B\u585E\uFF0C\u7B49\u5F85\u88AB\u5524\u9192</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>atomicStampedReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> timestamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u66F4\u65B0\u6210\u529F\uFF0C\u65B0\u503Creference: &quot;</span> <span class="token operator">+</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u66F4\u65B0\u5931\u8D25\uFF0C\u65B0\u503Creference: &quot;</span> <span class="token operator">+</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u867D\u7136\u539F\u503C\u548C\u65B0\u503C\u76F8\u7B49\uFF0C\u4F46\u662F\u662F\u5728\u7EBF\u7A0B\u963B\u585E\u8FC7\u7A0B\u4E2D\u503C\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u53D8\u5316\u4E86&quot;</span> <span class="token operator">+</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u6B21&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5BF9\u6570\u636E\u5148\u52A0\u4E00\u518D\u51CF\u4E00\uFF0C\u53CD\u590D4\u6B21\uFF0C\u6700\u7EC8reference\u7684\u503C\u662F\u4E0D\u53D8\u7684</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> timestamp <span class="token operator">=</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getStamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> reference <span class="token operator">=</span> atomicStampedReference<span class="token punctuation">.</span><span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    atomicStampedReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> timestamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    atomicStampedReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> timestamp<span class="token punctuation">,</span> timestamp <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5524\u9192\u963B\u585E\u7684thread\u7EBF\u7A0B</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u540C\u6837\u7684\u903B\u8F91\uFF0C\u4F7F\u7528\u666E\u901A\u539F\u5B50\u7C7B\u5C31\u80FD\u66F4\u65B0\u6210\u529F\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zszdevelop<span class="token punctuation">.</span>asposedemo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicReference</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">LockSupport</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtomicRefrenceDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521D\u59CB\u503C\u4E3A0</span>
        <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomicReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> reference <span class="token operator">=</span> atomicReference<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u539F\u503Creference: &quot;</span> <span class="token operator">+</span> reference<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u963B\u585E\uFF0C\u7B49\u5F85\u88AB\u5524\u9192</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u66F4\u65B0\u6210\u529F\uFF0C\u65B0\u503Creference: &quot;</span> <span class="token operator">+</span> atomicReference<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u66F4\u65B0\u5931\u8D25\uFF0C\u65B0\u503Creference: &quot;</span> <span class="token operator">+</span> atomicReference<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5BF9\u6570\u636E\u5148\u52A0\u4E00\u518D\u51CF\u4E00\uFF0C\u53CD\u590D4\u6B21\uFF0C\u6700\u7EC8\u7684\u503C\u662F\u4E0D\u53D8\u7684</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> reference <span class="token operator">=</span> atomicReference<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>reference<span class="token punctuation">,</span> reference <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5524\u9192\u963B\u585E\u7684thread\u7EBF\u7A0B</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,22),r={href:"https://blog.csdn.net/weixin_43767015/article/details/124447418",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=l("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",r,[t("Java AtomicInteger\u548CAtomicStampedReference\u6E90\u7801\u6DF1\u5EA6\u89E3\u6790"),c(s)])])])}const f=a(i,[["render",k],["__file","java-thread-y-atomicstampedreference-source.html.vue"]]);export{f as default};
