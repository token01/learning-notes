import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as t,a as n,b as p,d as o,f as c,r as l}from"./app.e173e6f3.js";const i={},u=c(`<h1 id="juc\u9501-\u9501\u6838\u5FC3\u7C7Baqs\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#juc\u9501-\u9501\u6838\u5FC3\u7C7Baqs\u8BE6\u89E3" aria-hidden="true">#</a> JUC\u9501: \u9501\u6838\u5FC3\u7C7BAQS\u8BE6\u89E3</h1><h2 id="_0-\u9762\u8BD5\u9898" tabindex="-1"><a class="header-anchor" href="#_0-\u9762\u8BD5\u9898" aria-hidden="true">#</a> 0. \u9762\u8BD5\u9898</h2><ul><li>\u4EC0\u4E48\u662FAQS? \u4E3A\u4EC0\u4E48\u5B83\u662F\u6838\u5FC3?</li><li>AQS\u7684\u6838\u5FC3\u601D\u60F3\u662F\u4EC0\u4E48? \u5B83\u662F\u600E\u4E48\u5B9E\u73B0\u7684? \u5E95\u5C42\u6570\u636E\u7ED3\u6784\u7B49</li><li>AQS\u6709\u54EA\u4E9B\u6838\u5FC3\u7684\u65B9\u6CD5?</li><li>AQS\u5B9A\u4E49\u4EC0\u4E48\u6837\u7684\u8D44\u6E90\u83B7\u53D6\u65B9\u5F0F? AQS\u5B9A\u4E49\u4E86\u4E24\u79CD\u8D44\u6E90\u83B7\u53D6\u65B9\u5F0F\uFF1A<code>\u72EC\u5360</code>(\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u8BBF\u95EE\u6267\u884C\uFF0C\u53C8\u6839\u636E\u662F\u5426\u6309\u961F\u5217\u7684\u987A\u5E8F\u5206\u4E3A<code>\u516C\u5E73\u9501</code>\u548C<code>\u975E\u516C\u5E73\u9501</code>\uFF0C\u5982<code>ReentrantLock</code>) \u548C<code>\u5171\u4EAB</code>(\u591A\u4E2A\u7EBF\u7A0B\u53EF\u540C\u65F6\u8BBF\u95EE\u6267\u884C\uFF0C\u5982<code>Semaphore</code>\u3001<code>CountDownLatch</code>\u3001 <code>CyclicBarrier</code> )\u3002<code>ReentrantReadWriteLock</code>\u53EF\u4EE5\u770B\u6210\u662F\u7EC4\u5408\u5F0F\uFF0C\u5141\u8BB8\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9\u67D0\u4E00\u8D44\u6E90\u8FDB\u884C\u8BFB\u3002</li><li>AQS\u5E95\u5C42\u4F7F\u7528\u4E86\u4EC0\u4E48\u6837\u7684\u8BBE\u8BA1\u6A21\u5F0F? \u6A21\u677F</li><li>AQS\u7684\u5E94\u7528\u793A\u4F8B?</li></ul><h2 id="_1-abstractqueuedsynchronizer\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-abstractqueuedsynchronizer\u7B80\u4ECB" aria-hidden="true">#</a> 1. AbstractQueuedSynchronizer\u7B80\u4ECB</h2><p>AQS\u662F\u4E00\u4E2A\u7528\u6765\u6784\u5EFA\u9501\u548C\u540C\u6B65\u5668\u7684\u6846\u67B6\uFF0C\u4F7F\u7528AQS\u80FD\u7B80\u5355\u4E14\u9AD8\u6548\u5730\u6784\u9020\u51FA\u5E94\u7528\u5E7F\u6CDB\u7684\u5927\u91CF\u7684\u540C\u6B65\u5668\uFF0C\u6BD4\u5982\u6211\u4EEC\u63D0\u5230\u7684ReentrantLock\uFF0CReentrantReadWriteLock\uFF0CFutureTask\uFF0CCountDownLatch\u7B49\u7B49\u7686\u662F\u57FA\u4E8EAQS\u7684\u3002\u5F53\u7136\uFF0C\u6211\u4EEC\u81EA\u5DF1\u4E5F\u80FD\u5229\u7528AQS\u975E\u5E38\u8F7B\u677E\u5BB9\u6613\u5730\u6784\u9020\u51FA\u7B26\u5408\u6211\u4EEC\u81EA\u5DF1\u9700\u6C42\u7684\u540C\u6B65\u5668\u3002</p><h2 id="_2-aqs-\u6838\u5FC3\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#_2-aqs-\u6838\u5FC3\u601D\u60F3" aria-hidden="true">#</a> 2. AQS \u6838\u5FC3\u601D\u60F3</h2><p>AQS\u6838\u5FC3\u601D\u60F3\u662F\uFF0C\u5982\u679C\u88AB\u8BF7\u6C42\u7684\u5171\u4EAB\u8D44\u6E90\u7A7A\u95F2\uFF0C\u5219\u5C06\u5F53\u524D\u8BF7\u6C42\u8D44\u6E90\u7684\u7EBF\u7A0B\u8BBE\u7F6E\u4E3A\u6709\u6548\u7684\u5DE5\u4F5C\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u5C06\u5171\u4EAB\u8D44\u6E90\u8BBE\u7F6E\u4E3A\u9501\u5B9A\u72B6\u6001\u3002\u5982\u679C\u88AB\u8BF7\u6C42\u7684\u5171\u4EAB\u8D44\u6E90\u88AB\u5360\u7528\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u4E00\u5957\u7EBF\u7A0B\u963B\u585E\u7B49\u5F85\u4EE5\u53CA\u88AB\u5524\u9192\u65F6\u9501\u5206\u914D\u7684\u673A\u5236\uFF0C\u8FD9\u4E2A\u673A\u5236AQS\u662F\u7528CLH\u961F\u5217\u9501\u5B9E\u73B0\u7684\uFF0C\u5373\u5C06\u6682\u65F6\u83B7\u53D6\u4E0D\u5230\u9501\u7684\u7EBF\u7A0B\u52A0\u5165\u5230\u961F\u5217\u4E2D\u3002</p><blockquote><p>CLH(Craig,Landin,and Hagersten)\u961F\u5217\u662F\u4E00\u4E2A\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217(\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217\u5373\u4E0D\u5B58\u5728\u961F\u5217\u5B9E\u4F8B\uFF0C\u4EC5\u5B58\u5728\u7ED3\u70B9\u4E4B\u95F4\u7684\u5173\u8054\u5173\u7CFB)\u3002AQS\u662F\u5C06\u6BCF\u6761\u8BF7\u6C42\u5171\u4EAB\u8D44\u6E90\u7684\u7EBF\u7A0B\u5C01\u88C5\u6210\u4E00\u4E2ACLH\u9501\u961F\u5217\u7684\u4E00\u4E2A\u7ED3\u70B9(Node)\u6765\u5B9E\u73B0\u9501\u7684\u5206\u914D\u3002</p></blockquote><p>AQS\u4F7F\u7528\u4E00\u4E2Aint\u6210\u5458\u53D8\u91CF\u6765\u8868\u793A\u540C\u6B65\u72B6\u6001\uFF0C\u901A\u8FC7\u5185\u7F6E\u7684FIFO\u961F\u5217\u6765\u5B8C\u6210\u83B7\u53D6\u8D44\u6E90\u7EBF\u7A0B\u7684\u6392\u961F\u5DE5\u4F5C\u3002AQS\u4F7F\u7528CAS\u5BF9\u8BE5\u540C\u6B65\u72B6\u6001\u8FDB\u884C\u539F\u5B50\u64CD\u4F5C\u5B9E\u73B0\u5BF9\u5176\u503C\u7684\u4FEE\u6539\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span><span class="token comment">//\u5171\u4EAB\u53D8\u91CF\uFF0C\u4F7F\u7528volatile\u4FEE\u9970\u4FDD\u8BC1\u7EBF\u7A0B\u53EF\u89C1\u6027</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u72B6\u6001\u4FE1\u606F\u901A\u8FC7protected\u7C7B\u578B\u7684getState\uFF0CsetState\uFF0CcompareAndSetState\u8FDB\u884C\u64CD\u4F5C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8FD4\u56DE\u540C\u6B65\u72B6\u6001\u7684\u5F53\u524D\u503C</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 <span class="token comment">// \u8BBE\u7F6E\u540C\u6B65\u72B6\u6001\u7684\u503C</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token keyword">int</span> newState<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        state <span class="token operator">=</span> newState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u539F\u5B50\u5730(CAS\u64CD\u4F5C)\u5C06\u540C\u6B65\u72B6\u6001\u503C\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u503Cupdate\u5982\u679C\u5F53\u524D\u540C\u6B65\u72B6\u6001\u7684\u503C\u7B49\u4E8Eexpect(\u671F\u671B\u503C)</span>
<span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">,</span> <span class="token keyword">int</span> update<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> stateOffset<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-aqs-\u5BF9\u8D44\u6E90\u7684\u5171\u4EAB\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_3-aqs-\u5BF9\u8D44\u6E90\u7684\u5171\u4EAB\u65B9\u5F0F" aria-hidden="true">#</a> 3. AQS \u5BF9\u8D44\u6E90\u7684\u5171\u4EAB\u65B9\u5F0F</h2><p>AQS\u5B9A\u4E49\u4E24\u79CD\u8D44\u6E90\u5171\u4EAB\u65B9\u5F0F</p><ul><li>Exclusive(\u72EC\u5360)\uFF1A\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u6267\u884C\uFF0C\u5982ReentrantLock\u3002\u53C8\u53EF\u5206\u4E3A\u516C\u5E73\u9501\u548C\u975E\u516C\u5E73\u9501\uFF1A <ul><li>\u516C\u5E73\u9501\uFF1A\u6309\u7167\u7EBF\u7A0B\u5728\u961F\u5217\u4E2D\u7684\u6392\u961F\u987A\u5E8F\uFF0C\u5148\u5230\u8005\u5148\u62FF\u5230\u9501</li><li>\u975E\u516C\u5E73\u9501\uFF1A\u5F53\u7EBF\u7A0B\u8981\u83B7\u53D6\u9501\u65F6\uFF0C\u65E0\u89C6\u961F\u5217\u987A\u5E8F\u76F4\u63A5\u53BB\u62A2\u9501\uFF0C\u8C01\u62A2\u5230\u5C31\u662F\u8C01\u7684</li></ul></li><li>Share(\u5171\u4EAB)\uFF1A\u591A\u4E2A\u7EBF\u7A0B\u53EF\u540C\u65F6\u6267\u884C\uFF0C\u5982Semaphore/CountDownLatch\u3002Semaphore\u3001CountDownLatCh\u3001 CyclicBarrier\u3001ReadWriteLock \u6211\u4EEC\u90FD\u4F1A\u5728\u540E\u9762\u8BB2\u5230\u3002</li></ul><p>ReentrantReadWriteLock \u53EF\u4EE5\u770B\u6210\u662F\u7EC4\u5408\u5F0F\uFF0C\u56E0\u4E3AReentrantReadWriteLock\u4E5F\u5C31\u662F\u8BFB\u5199\u9501\u5141\u8BB8\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u5BF9\u67D0\u4E00\u8D44\u6E90\u8FDB\u884C\u8BFB\u3002</p><p>\u4E0D\u540C\u7684\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u4E89\u7528\u5171\u4EAB\u8D44\u6E90\u7684\u65B9\u5F0F\u4E5F\u4E0D\u540C\u3002\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u5728\u5B9E\u73B0\u65F6\u53EA\u9700\u8981\u5B9E\u73B0\u5171\u4EAB\u8D44\u6E90 state \u7684\u83B7\u53D6\u4E0E\u91CA\u653E\u65B9\u5F0F\u5373\u53EF\uFF0C\u81F3\u4E8E\u5177\u4F53\u7EBF\u7A0B\u7B49\u5F85\u961F\u5217\u7684\u7EF4\u62A4(\u5982\u83B7\u53D6\u8D44\u6E90\u5931\u8D25\u5165\u961F/\u5524\u9192\u51FA\u961F\u7B49)\uFF0CAQS\u5DF2\u7ECF\u5728\u4E0A\u5C42\u5DF2\u7ECF\u5E2E\u6211\u4EEC\u5B9E\u73B0\u597D\u4E86\u3002</p><h2 id="_4-aqs\u5E95\u5C42\u4F7F\u7528\u4E86\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-aqs\u5E95\u5C42\u4F7F\u7528\u4E86\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F" aria-hidden="true">#</a> 4. AQS\u5E95\u5C42\u4F7F\u7528\u4E86\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F</h2><blockquote><p>\u540C\u6B65\u5668\u7684\u8BBE\u8BA1\u662F\u57FA\u4E8E\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\u7684\uFF0C\u5982\u679C\u9700\u8981\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u4E00\u822C\u7684\u65B9\u5F0F\u662F\u8FD9\u6837(\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\u5F88\u7ECF\u5178\u7684\u4E00\u4E2A\u5E94\u7528)\uFF1A</p></blockquote><p>\u4F7F\u7528\u8005\u7EE7\u627FAbstractQueuedSynchronizer\u5E76\u91CD\u5199\u6307\u5B9A\u7684\u65B9\u6CD5\u3002(\u8FD9\u4E9B\u91CD\u5199\u65B9\u6CD5\u5F88\u7B80\u5355\uFF0C\u65E0\u975E\u662F\u5BF9\u4E8E\u5171\u4EAB\u8D44\u6E90state\u7684\u83B7\u53D6\u548C\u91CA\u653E) \u5C06AQS\u7EC4\u5408\u5728\u81EA\u5B9A\u4E49\u540C\u6B65\u7EC4\u4EF6\u7684\u5B9E\u73B0\u4E2D\uFF0C\u5E76\u8C03\u7528\u5176\u6A21\u677F\u65B9\u6CD5\uFF0C\u800C\u8FD9\u4E9B\u6A21\u677F\u65B9\u6CD5\u4F1A\u8C03\u7528\u4F7F\u7528\u8005\u91CD\u5199\u7684\u65B9\u6CD5\u3002</p><p>\u8FD9\u548C\u6211\u4EEC\u4EE5\u5F80\u901A\u8FC7\u5B9E\u73B0\u63A5\u53E3\u7684\u65B9\u5F0F\u6709\u5F88\u5927\u533A\u522B\uFF0C\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\u8BF7\u53C2\u770B\uFF1A<a href="">\u8BBE\u8BA1\u6A21\u5F0F\u884C\u4E3A\u578B - \u6A21\u677F\u65B9\u6CD5(Template Method)\u8BE6\u89E3</a></p><p>AQS\u4F7F\u7528\u4E86\u6A21\u677F\u65B9\u6CD5\u6A21\u5F0F\uFF0C\u81EA\u5B9A\u4E49\u540C\u6B65\u5668\u65F6\u9700\u8981\u91CD\u5199\u4E0B\u9762\u51E0\u4E2AAQS\u63D0\u4F9B\u7684\u6A21\u677F\u65B9\u6CD5\uFF1A</p><div class="language-JAVA ext-JAVA line-numbers-mode"><pre class="language-JAVA"><code>isHeldExclusively()//\u8BE5\u7EBF\u7A0B\u662F\u5426\u6B63\u5728\u72EC\u5360\u8D44\u6E90\u3002\u53EA\u6709\u7528\u5230condition\u624D\u9700\u8981\u53BB\u5B9E\u73B0\u5B83\u3002
tryAcquire(int)//\u72EC\u5360\u65B9\u5F0F\u3002\u5C1D\u8BD5\u83B7\u53D6\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002
tryRelease(int)//\u72EC\u5360\u65B9\u5F0F\u3002\u5C1D\u8BD5\u91CA\u653E\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002
tryAcquireShared(int)//\u5171\u4EAB\u65B9\u5F0F\u3002\u5C1D\u8BD5\u83B7\u53D6\u8D44\u6E90\u3002\u8D1F\u6570\u8868\u793A\u5931\u8D25\uFF1B0\u8868\u793A\u6210\u529F\uFF0C\u4F46\u6CA1\u6709\u5269\u4F59\u53EF\u7528\u8D44\u6E90\uFF1B\u6B63\u6570\u8868\u793A\u6210\u529F\uFF0C\u4E14\u6709\u5269\u4F59\u8D44\u6E90\u3002
tryReleaseShared(int)//\u5171\u4EAB\u65B9\u5F0F\u3002\u5C1D\u8BD5\u91CA\u653E\u8D44\u6E90\uFF0C\u6210\u529F\u5219\u8FD4\u56DEtrue\uFF0C\u5931\u8D25\u5219\u8FD4\u56DEfalse\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u629B\u51FA UnsupportedOperationException\u3002 \u8FD9\u4E9B\u65B9\u6CD5\u7684\u5B9E\u73B0\u5FC5\u987B\u662F\u5185\u90E8\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5E76\u4E14\u901A\u5E38\u5E94\u8BE5\u7B80\u77ED\u800C\u4E0D\u662F\u963B\u585E\u3002<strong>AQS\u7C7B\u4E2D\u7684\u5176\u4ED6\u65B9\u6CD5\u90FD\u662Ffinal \uFF0C\u6240\u4EE5\u65E0\u6CD5\u88AB\u5176\u4ED6\u7C7B\u4F7F\u7528\uFF0C\u53EA\u6709\u8FD9\u51E0\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u88AB\u5176\u4ED6\u7C7B\u4F7F\u7528</strong>\u3002</p><blockquote><p>\u4EE5ReentrantLock\u4E3A\u4F8B\uFF0Cstate\u521D\u59CB\u5316\u4E3A0\uFF0C\u8868\u793A\u672A\u9501\u5B9A\u72B6\u6001\u3002A\u7EBF\u7A0Block()\u65F6\uFF0C\u4F1A\u8C03\u7528tryAcquire()\u72EC\u5360\u8BE5\u9501\u5E76\u5C06state+1\u3002\u6B64\u540E\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u518DtryAcquire()\u65F6\u5C31\u4F1A\u5931\u8D25\uFF0C\u76F4\u5230A\u7EBF\u7A0Bunlock()\u5230state=0(\u5373\u91CA\u653E\u9501)\u4E3A\u6B62\uFF0C\u5176\u5B83\u7EBF\u7A0B\u624D\u6709\u673A\u4F1A\u83B7\u53D6\u8BE5\u9501\u3002\u5F53\u7136\uFF0C\u91CA\u653E\u9501\u4E4B\u524D\uFF0CA\u7EBF\u7A0B\u81EA\u5DF1\u662F\u53EF\u4EE5\u91CD\u590D\u83B7\u53D6\u6B64\u9501\u7684(state\u4F1A\u7D2F\u52A0)\uFF0C\u8FD9\u5C31\u662F\u53EF\u91CD\u5165\u7684\u6982\u5FF5\u3002\u4F46\u8981\u6CE8\u610F\uFF0C\u83B7\u53D6\u591A\u5C11\u6B21\u5C31\u8981\u91CA\u653E\u591A\u4E48\u6B21\uFF0C\u8FD9\u6837\u624D\u80FD\u4FDD\u8BC1state\u662F\u80FD\u56DE\u5230\u96F6\u6001\u7684\u3002</p></blockquote><h2 id="_5-aqs\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_5-aqs\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> 5. AQS\u6570\u636E\u7ED3\u6784</h2><p>AbstractQueuedSynchronizer\u7C7B\u5E95\u5C42\u7684\u6570\u636E\u7ED3\u6784\u662F\u4F7F\u7528<code>CLH(Craig,Landin,and Hagersten)\u961F\u5217</code>\u662F\u4E00\u4E2A\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217(\u865A\u62DF\u7684\u53CC\u5411\u961F\u5217\u5373\u4E0D\u5B58\u5728\u961F\u5217\u5B9E\u4F8B\uFF0C\u4EC5\u5B58\u5728\u7ED3\u70B9\u4E4B\u95F4\u7684\u5173\u8054\u5173\u7CFB)\u3002AQS\u662F\u5C06\u6BCF\u6761\u8BF7\u6C42\u5171\u4EAB\u8D44\u6E90\u7684\u7EBF\u7A0B\u5C01\u88C5\u6210\u4E00\u4E2ACLH\u9501\u961F\u5217\u7684\u4E00\u4E2A\u7ED3\u70B9(Node)\u6765\u5B9E\u73B0\u9501\u7684\u5206\u914D\u3002\u5176\u4E2DSync queue\uFF0C\u5373\u540C\u6B65\u961F\u5217\uFF0C\u662F\u53CC\u5411\u94FE\u8868\uFF0C\u5305\u62EChead\u7ED3\u70B9\u548Ctail\u7ED3\u70B9\uFF0Chead\u7ED3\u70B9\u4E3B\u8981\u7528\u4F5C\u540E\u7EED\u7684\u8C03\u5EA6\u3002\u800CCondition queue\u4E0D\u662F\u5FC5\u987B\u7684\uFF0C\u5176\u662F\u4E00\u4E2A\u5355\u5411\u94FE\u8868\uFF0C\u53EA\u6709\u5F53\u4F7F\u7528Condition\u65F6\uFF0C\u624D\u4F1A\u5B58\u5728\u6B64\u5355\u5411\u94FE\u8868\u3002\u5E76\u4E14\u53EF\u80FD\u4F1A\u6709\u591A\u4E2ACondition queue\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220526195317136.png" alt="image-20220526195317136"></p><h2 id="_6-aqs\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_6-aqs\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> 6. AQS\u6E90\u7801\u5206\u6790</h2><h3 id="_6-1-\u7C7B\u7684\u7EE7\u627F\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#_6-1-\u7C7B\u7684\u7EE7\u627F\u5173\u7CFB" aria-hidden="true">#</a> 6.1 \u7C7B\u7684\u7EE7\u627F\u5173\u7CFB</h3><p>AbstractQueuedSynchronizer\u7EE7\u627F\u81EAAbstractOwnableSynchronizer\u62BD\u8C61\u7C7B\uFF0C\u5E76\u4E14\u5B9E\u73B0\u4E86Serializable\u63A5\u53E3\uFF0C\u53EF\u4EE5\u8FDB\u884C\u5E8F\u5217\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2DAbstractOwnableSynchronizer\u62BD\u8C61\u7C7B\u7684\u6E90\u7801\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    
    <span class="token comment">// \u7248\u672C\u5E8F\u5217\u53F7</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">3737899427754241961L</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6784\u9020\u65B9\u6CD5</span>
    <span class="token keyword">protected</span> <span class="token class-name">AbstractOwnableSynchronizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token comment">// \u72EC\u5360\u6A21\u5F0F\u4E0B\u7684\u7EBF\u7A0B</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Thread</span> exclusiveOwnerThread<span class="token punctuation">;</span>
    
    <span class="token comment">// \u8BBE\u7F6E\u72EC\u5360\u7EBF\u7A0B </span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> thread<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exclusiveOwnerThread <span class="token operator">=</span> thread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u83B7\u53D6\u72EC\u5360\u7EBF\u7A0B </span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Thread</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> exclusiveOwnerThread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractOwnableSynchronizer\u62BD\u8C61\u7C7B\u4E2D\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u72EC\u5360\u8D44\u6E90\u7EBF\u7A0B\u548C\u83B7\u53D6\u72EC\u5360\u8D44\u6E90\u7EBF\u7A0B\u3002\u5206\u522B\u4E3AsetExclusiveOwnerThread\u4E0EgetExclusiveOwnerThread\u65B9\u6CD5\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u4F1A\u88AB\u5B50\u7C7B\u8C03\u7528\u3002</p><blockquote><p>AbstractQueuedSynchronizer\u7C7B\u6709\u4E24\u4E2A\u5185\u90E8\u7C7B\uFF0C\u5206\u522B\u4E3ANode\u7C7B\u4E0EConditionObject\u7C7B\u3002\u4E0B\u9762\u5206\u522B\u505A\u4ECB\u7ECD\u3002</p></blockquote><h3 id="_6-2-\u7C7B\u7684\u5185\u90E8\u7C7B-node\u7C7B" tabindex="-1"><a class="header-anchor" href="#_6-2-\u7C7B\u7684\u5185\u90E8\u7C7B-node\u7C7B" aria-hidden="true">#</a> 6.2 \u7C7B\u7684\u5185\u90E8\u7C7B - Node\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6A21\u5F0F\uFF0C\u5206\u4E3A\u5171\u4EAB\u4E0E\u72EC\u5360</span>
    <span class="token comment">// \u5171\u4EAB\u6A21\u5F0F</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Node</span> <span class="token constant">SHARED</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u72EC\u5360\u6A21\u5F0F</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Node</span> <span class="token constant">EXCLUSIVE</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        
    <span class="token comment">// \u7ED3\u70B9\u72B6\u6001</span>
    <span class="token comment">// CANCELLED\uFF0C\u503C\u4E3A1\uFF0C\u8868\u793A\u5F53\u524D\u7684\u7EBF\u7A0B\u88AB\u53D6\u6D88</span>
    <span class="token comment">// SIGNAL\uFF0C\u503C\u4E3A-1\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u7684\u540E\u7EE7\u8282\u70B9\u5305\u542B\u7684\u7EBF\u7A0B\u9700\u8981\u8FD0\u884C\uFF0C\u4E5F\u5C31\u662Funpark</span>
    <span class="token comment">// CONDITION\uFF0C\u503C\u4E3A-2\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u5728\u7B49\u5F85condition\uFF0C\u4E5F\u5C31\u662F\u5728condition\u961F\u5217\u4E2D</span>
    <span class="token comment">// PROPAGATE\uFF0C\u503C\u4E3A-3\uFF0C\u8868\u793A\u5F53\u524D\u573A\u666F\u4E0B\u540E\u7EED\u7684acquireShared\u80FD\u591F\u5F97\u4EE5\u6267\u884C</span>
    <span class="token comment">// \u503C\u4E3A0\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u5728sync\u961F\u5217\u4E2D\uFF0C\u7B49\u5F85\u7740\u83B7\u53D6\u9501</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CANCELLED</span> <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SIGNAL</span>    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CONDITION</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">PROPAGATE</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span>        

    <span class="token comment">// \u7ED3\u70B9\u72B6\u6001</span>
    <span class="token keyword">volatile</span> <span class="token keyword">int</span> waitStatus<span class="token punctuation">;</span>        
    <span class="token comment">// \u524D\u9A71\u7ED3\u70B9</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Node</span> prev<span class="token punctuation">;</span>    
    <span class="token comment">// \u540E\u7EE7\u7ED3\u70B9</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Node</span> next<span class="token punctuation">;</span>        
    <span class="token comment">// \u7ED3\u70B9\u6240\u5BF9\u5E94\u7684\u7EBF\u7A0B</span>
    <span class="token keyword">volatile</span> <span class="token class-name">Thread</span> thread<span class="token punctuation">;</span>        
    <span class="token comment">// \u4E0B\u4E00\u4E2A\u7B49\u5F85\u8005</span>
    <span class="token class-name">Node</span> nextWaiter<span class="token punctuation">;</span>
    
    <span class="token comment">// \u7ED3\u70B9\u662F\u5426\u5728\u5171\u4EAB\u6A21\u5F0F\u4E0B\u7B49\u5F85</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isShared</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nextWaiter <span class="token operator">==</span> <span class="token constant">SHARED</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u83B7\u53D6\u524D\u9A71\u7ED3\u70B9\uFF0C\u82E5\u524D\u9A71\u7ED3\u70B9\u4E3A\u7A7A\uFF0C\u629B\u51FA\u5F02\u5E38</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span> <span class="token function">predecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NullPointerException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u5B58\u524D\u9A71\u7ED3\u70B9</span>
        <span class="token class-name">Node</span> p <span class="token operator">=</span> prev<span class="token punctuation">;</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u9A71\u7ED3\u70B9\u4E3A\u7A7A\uFF0C\u629B\u51FA\u5F02\u5E38</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token comment">// \u524D\u9A71\u7ED3\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u8FD4\u56DE</span>
            <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u65E0\u53C2\u6784\u9020\u65B9\u6CD5</span>
    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Used to establish initial head or SHARED marker</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6784\u9020\u65B9\u6CD5</span>
        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> thread<span class="token punctuation">,</span> <span class="token class-name">Node</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Used by addWaiter</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> mode<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>thread <span class="token operator">=</span> thread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6784\u9020\u65B9\u6CD5</span>
    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> thread<span class="token punctuation">,</span> <span class="token keyword">int</span> waitStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Used by Condition</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>waitStatus <span class="token operator">=</span> waitStatus<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>thread <span class="token operator">=</span> thread<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>CANCELLED</code>\uFF0C\u503C\u4E3A1\uFF0C\u8868\u793A\u5F53\u524D\u7684\u7EBF\u7A0B\u88AB\u53D6\u6D88\u3002</li><li><code>SIGNAL</code>\uFF0C\u503C\u4E3A-1\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u7684\u540E\u7EE7\u8282\u70B9\u5305\u542B\u7684\u7EBF\u7A0B\u9700\u8981\u8FD0\u884C\uFF0C\u9700\u8981\u8FDB\u884Cunpark\u64CD\u4F5C\u3002</li><li><code>CONDITION</code>\uFF0C\u503C\u4E3A-2\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u5728\u7B49\u5F85condition\uFF0C\u4E5F\u5C31\u662F\u5728condition queue\u4E2D\u3002</li><li><code>PROPAGATE</code>\uFF0C\u503C\u4E3A-3\uFF0C\u8868\u793A\u5F53\u524D\u573A\u666F\u4E0B\u540E\u7EED\u7684acquireShared\u80FD\u591F\u5F97\u4EE5\u6267\u884C\u3002</li><li>\u503C\u4E3A0\uFF0C\u8868\u793A\u5F53\u524D\u8282\u70B9\u5728sync queue\u4E2D\uFF0C\u7B49\u5F85\u7740\u83B7\u53D6\u9501\u3002</li></ul><h3 id="_6-3-\u7C7B\u7684\u5185\u90E8\u7C7B-conditionobject\u7C7B" tabindex="-1"><a class="header-anchor" href="#_6-3-\u7C7B\u7684\u5185\u90E8\u7C7B-conditionobject\u7C7B" aria-hidden="true">#</a> 6.3 \u7C7B\u7684\u5185\u90E8\u7C7B - ConditionObject\u7C7B</h3><p>\u8FD9\u4E2A\u7C7B\u6709\u70B9\u957F\uFF0C\u8010\u5FC3:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5185\u90E8\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConditionObject</span> <span class="token keyword">implements</span> <span class="token class-name">Condition</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7248\u672C\u53F7</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1173984872572414699L</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** First node of condition queue. */</span>
    <span class="token comment">// condition\u961F\u5217\u7684\u5934\u8282\u70B9</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span> firstWaiter<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** Last node of condition queue. */</span>
    <span class="token comment">// condition\u961F\u5217\u7684\u5C3E\u7ED3\u70B9</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Node</span> lastWaiter<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
        * Creates a new <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ConditionObject</span></span></span><span class="token punctuation">}</span> instance.
        */</span>
    <span class="token comment">// \u6784\u9020\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token class-name">ConditionObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token comment">// Internal methods</span>

    <span class="token doc-comment comment">/**
        * Adds a new waiter to wait queue.
        * <span class="token keyword">@return</span> its new wait node
        */</span>
    <span class="token comment">// \u6DFB\u52A0\u65B0\u7684waiter\u5230wait\u961F\u5217</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u5B58\u5C3E\u7ED3\u70B9</span>
        <span class="token class-name">Node</span> t <span class="token operator">=</span> lastWaiter<span class="token punctuation">;</span>
        <span class="token comment">// If lastWaiter is cancelled, clean out.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>waitStatus <span class="token operator">!=</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u5E76\u4E14\u5C3E\u7ED3\u70B9\u7684\u72B6\u6001\u4E0D\u4E3ACONDITION</span>
            <span class="token comment">// \u6E05\u9664\u72B6\u6001\u4E3ACONDITION\u7684\u7ED3\u70B9</span>
            <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token comment">// \u5C06\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u91CD\u65B0\u8D4B\u503C\u7ED9t</span>
            t <span class="token operator">=</span> lastWaiter<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u7ED3\u70B9</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E3A\u7A7A</span>
            <span class="token comment">// \u8BBE\u7F6Econdition\u961F\u5217\u7684\u5934\u8282\u70B9</span>
            firstWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E0D\u4E3A\u7A7A</span>
            <span class="token comment">// \u8BBE\u7F6E\u4E3A\u8282\u70B9\u7684nextWaiter\u57DF\u4E3Anode\u7ED3\u70B9</span>
            t<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token comment">// \u66F4\u65B0condition\u961F\u5217\u7684\u5C3E\u7ED3\u70B9</span>
        lastWaiter <span class="token operator">=</span> node<span class="token punctuation">;</span>
        <span class="token keyword">return</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Removes and transfers nodes until hit non-cancelled one or
        * null. Split out from signal in part to encourage compilers
        * to inline the case of no waiters.
        * <span class="token keyword">@param</span> <span class="token parameter">first</span> (non-null) the first node on condition queue
        */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doSignal</span><span class="token punctuation">(</span><span class="token class-name">Node</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5FAA\u73AF</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>firstWaiter <span class="token operator">=</span> first<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u8BE5\u8282\u70B9\u7684nextWaiter\u4E3A\u7A7A</span>
                <span class="token comment">// \u8BBE\u7F6E\u5C3E\u7ED3\u70B9\u4E3A\u7A7A</span>
                lastWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8BBE\u7F6Efirst\u7ED3\u70B9\u7684nextWaiter\u57DF</span>
            first<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">transferForSignal</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>first <span class="token operator">=</span> firstWaiter<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u7ED3\u70B9\u4ECEcondition\u961F\u5217\u8F6C\u79FB\u5230sync\u961F\u5217\u5931\u8D25\u5E76\u4E14condition\u961F\u5217\u4E2D\u7684\u5934\u8282\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u4E00\u76F4\u5FAA\u73AF</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Removes and transfers all nodes.
        * <span class="token keyword">@param</span> <span class="token parameter">first</span> (non-null) the first node on condition queue
        */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">doSignalAll</span><span class="token punctuation">(</span><span class="token class-name">Node</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// condition\u961F\u5217\u7684\u5934\u8282\u70B9\u5C3E\u7ED3\u70B9\u90FD\u8BBE\u7F6E\u4E3A\u7A7A</span>
        lastWaiter <span class="token operator">=</span> firstWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5FAA\u73AF</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6first\u7ED3\u70B9\u7684nextWaiter\u57DF\u7ED3\u70B9</span>
            <span class="token class-name">Node</span> next <span class="token operator">=</span> first<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">;</span>
            <span class="token comment">// \u8BBE\u7F6Efirst\u7ED3\u70B9\u7684nextWaiter\u57DF\u4E3A\u7A7A</span>
            first<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5C06first\u7ED3\u70B9\u4ECEcondition\u961F\u5217\u8F6C\u79FB\u5230sync\u961F\u5217</span>
            <span class="token function">transferForSignal</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6Efirst</span>
            first <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>first <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Unlinks cancelled waiter nodes from condition queue.
        * Called only while holding lock. This is called when
        * cancellation occurred during condition wait, and upon
        * insertion of a new waiter when lastWaiter is seen to have
        * been cancelled. This method is needed to avoid garbage
        * retention in the absence of signals. So even though it may
        * require a full traversal, it comes into play only when
        * timeouts or cancellations occur in the absence of
        * signals. It traverses all nodes rather than stopping at a
        * particular target to unlink all pointers to garbage nodes
        * without requiring many re-traversals during cancellation
        * storms.
        */</span>
    <span class="token comment">// \u4ECEcondition\u961F\u5217\u4E2D\u6E05\u9664\u72B6\u6001\u4E3ACANCEL\u7684\u7ED3\u70B9</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FDD\u5B58condition\u961F\u5217\u5934\u8282\u70B9</span>
        <span class="token class-name">Node</span> t <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span>
        <span class="token class-name">Node</span> trail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// t\u4E0D\u4E3A\u7A7A</span>
            <span class="token comment">// \u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
            <span class="token class-name">Node</span> next <span class="token operator">=</span> t<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>waitStatus <span class="token operator">!=</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// t\u7ED3\u70B9\u7684\u72B6\u6001\u4E0D\u4E3ACONDTION\u72B6\u6001</span>
                <span class="token comment">// \u8BBE\u7F6Et\u8282\u70B9\u7684nextWaiter\u57DF\u4E3A\u7A7A</span>
                t<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>trail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// trail\u4E3A\u7A7A</span>
                    <span class="token comment">// \u91CD\u65B0\u8BBE\u7F6Econdition\u961F\u5217\u7684\u5934\u8282\u70B9</span>
                    firstWaiter <span class="token operator">=</span> next<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token comment">// trail\u4E0D\u4E3A\u7A7A</span>
                    <span class="token comment">// \u8BBE\u7F6Etrail\u7ED3\u70B9\u7684nextWaiter\u57DF\u4E3Anext\u7ED3\u70B9</span>
                    trail<span class="token punctuation">.</span>nextWaiter <span class="token operator">=</span> next<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// next\u7ED3\u70B9\u4E3A\u7A7A</span>
                    <span class="token comment">// \u8BBE\u7F6Econdition\u961F\u5217\u7684\u5C3E\u7ED3\u70B9</span>
                    lastWaiter <span class="token operator">=</span> trail<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token comment">// t\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ACONDTION\u72B6\u6001</span>
                <span class="token comment">// \u8BBE\u7F6Etrail\u7ED3\u70B9</span>
                trail <span class="token operator">=</span> t<span class="token punctuation">;</span>
            <span class="token comment">// \u8BBE\u7F6Et\u7ED3\u70B9</span>
            t <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// public methods</span>

    <span class="token doc-comment comment">/**
        * Moves the longest-waiting thread, if one exists, from the
        * wait queue for this condition to the wait queue for the
        * owning lock.
        *
        * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isHeldExclusively</span></span><span class="token punctuation">}</span>
        *         returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
        */</span>
    <span class="token comment">// \u5524\u9192\u4E00\u4E2A\u7B49\u5F85\u7EBF\u7A0B\u3002\u5982\u679C\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\uFF0C\u5219\u9009\u62E9\u5176\u4E2D\u7684\u4E00\u4E2A\u5524\u9192\u3002\u5728\u4ECE await \u8FD4\u56DE\u4E4B\u524D\uFF0C\u8BE5\u7EBF\u7A0B\u5FC5\u987B\u91CD\u65B0\u83B7\u53D6\u9501\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u88AB\u5F53\u524D\u7EBF\u7A0B\u72EC\u5360\uFF0C\u629B\u51FA\u5F02\u5E38</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FDD\u5B58condition\u961F\u5217\u5934\u8282\u70B9</span>
        <span class="token class-name">Node</span> first <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u5934\u8282\u70B9\u4E0D\u4E3A\u7A7A</span>
            <span class="token comment">// \u5524\u9192\u4E00\u4E2A\u7B49\u5F85\u7EBF\u7A0B</span>
            <span class="token function">doSignal</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Moves all threads from the wait queue for this condition to
        * the wait queue for the owning lock.
        *
        * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isHeldExclusively</span></span><span class="token punctuation">}</span>
        *         returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
        */</span>
    <span class="token comment">// \u5524\u9192\u6240\u6709\u7B49\u5F85\u7EBF\u7A0B\u3002\u5982\u679C\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\uFF0C\u5219\u5524\u9192\u6240\u6709\u7EBF\u7A0B\u3002\u5728\u4ECE await \u8FD4\u56DE\u4E4B\u524D\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u5FC5\u987B\u91CD\u65B0\u83B7\u53D6\u9501\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u88AB\u5F53\u524D\u7EBF\u7A0B\u72EC\u5360\uFF0C\u629B\u51FA\u5F02\u5E38</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FDD\u5B58condition\u961F\u5217\u5934\u8282\u70B9</span>
        <span class="token class-name">Node</span> first <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u5934\u8282\u70B9\u4E0D\u4E3A\u7A7A</span>
            <span class="token comment">// \u5524\u9192\u6240\u6709\u7B49\u5F85\u7EBF\u7A0B</span>
            <span class="token function">doSignalAll</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Implements uninterruptible condition wait.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Save lock state returned by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getState</span></span><span class="token punctuation">}</span>.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Invoke <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">release</span></span><span class="token punctuation">}</span> with saved state as argument,
        *      throwing IllegalMonitorStateException if it fails.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Block until signalled.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Reacquire by invoking specialized version of
        *      <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">acquire</span></span><span class="token punctuation">}</span> with saved state as argument.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        */</span>
    <span class="token comment">// \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\uFF0C\u4E0D\u54CD\u5E94\u4E2D\u65AD</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">awaitUninterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A\u7ED3\u70B9\u5230\u7B49\u5F85\u961F\u5217</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u83B7\u53D6\u91CA\u653E\u7684\u72B6\u6001</span>
        <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// </span>
            <span class="token comment">// \u963B\u585E\u5F53\u524D\u7EBF\u7A0B</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u88AB\u4E2D\u65AD</span>
                <span class="token comment">// \u8BBE\u7F6Einterrupted\u72B6\u6001</span>
                interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">||</span> interrupted<span class="token punctuation">)</span> <span class="token comment">// </span>
            <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
        * For interruptible waits, we need to track whether to throw
        * InterruptedException, if interrupted while blocked on
        * condition, versus reinterrupt current thread, if
        * interrupted while blocked waiting to re-acquire.
        */</span>

    <span class="token doc-comment comment">/** Mode meaning to reinterrupt on exit from wait */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">REINTERRUPT</span> <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/** Mode meaning to throw InterruptedException on exit from wait */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">THROW_IE</span>    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
        * Checks for interrupt, returning THROW_IE if interrupted
        * before signalled, REINTERRUPT if after signalled, or
        * 0 if not interrupted.
        */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span>
            <span class="token punctuation">(</span><span class="token function">transferAfterCancelledWait</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">THROW_IE</span> <span class="token operator">:</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">)</span> <span class="token operator">:</span>
            <span class="token number">0</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Throws InterruptedException, reinterrupts current thread, or
        * does nothing, depending on mode.
        */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span><span class="token keyword">int</span> interruptMode<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">==</span> <span class="token constant">THROW_IE</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">==</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">)</span>
            <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Implements interruptible condition wait.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If current thread is interrupted, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Save lock state returned by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getState</span></span><span class="token punctuation">}</span>.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Invoke <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">release</span></span><span class="token punctuation">}</span> with saved state as argument,
        *      throwing IllegalMonitorStateException if it fails.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Block until signalled or interrupted.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Reacquire by invoking specialized version of
        *      <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">acquire</span></span><span class="token punctuation">}</span> with saved state as argument.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If interrupted while blocked in step 4, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        */</span>
    <span class="token comment">// // \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u6216\u88AB\u4E2D\u65AD\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u88AB\u4E2D\u65AD\uFF0C\u629B\u51FA\u5F02\u5E38</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5728wait\u961F\u5217\u4E0A\u6DFB\u52A0\u4E00\u4E2A\u7ED3\u70B9</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// </span>
        <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> interruptMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u963B\u585E\u5F53\u524D\u7EBF\u7A0B</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>interruptMode <span class="token operator">=</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u68C0\u67E5\u7ED3\u70B9\u7B49\u5F85\u65F6\u7684\u4E2D\u65AD\u7C7B\u578B</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> interruptMode <span class="token operator">!=</span> <span class="token constant">THROW_IE</span><span class="token punctuation">)</span>
            interruptMode <span class="token operator">=</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nextWaiter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// clean up if cancelled</span>
            <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span>interruptMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Implements timed condition wait.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If current thread is interrupted, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Save lock state returned by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getState</span></span><span class="token punctuation">}</span>.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Invoke <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">release</span></span><span class="token punctuation">}</span> with saved state as argument,
        *      throwing IllegalMonitorStateException if it fails.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Block until signalled, interrupted, or timed out.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Reacquire by invoking specialized version of
        *      <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">acquire</span></span><span class="token punctuation">}</span> with saved state as argument.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If interrupted while blocked in step 4, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        */</span>
    <span class="token comment">// \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001 </span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">awaitNanos</span><span class="token punctuation">(</span><span class="token keyword">long</span> nanosTimeout<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> deadline <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> nanosTimeout<span class="token punctuation">;</span>
        <span class="token keyword">int</span> interruptMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanosTimeout <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">transferAfterCancelledWait</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanosTimeout <span class="token operator">&gt;=</span> spinForTimeoutThreshold<span class="token punctuation">)</span>
                <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">parkNanos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> nanosTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>interruptMode <span class="token operator">=</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            nanosTimeout <span class="token operator">=</span> deadline <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> interruptMode <span class="token operator">!=</span> <span class="token constant">THROW_IE</span><span class="token punctuation">)</span>
            interruptMode <span class="token operator">=</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nextWaiter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span>interruptMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> deadline <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Implements absolute timed condition wait.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If current thread is interrupted, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Save lock state returned by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getState</span></span><span class="token punctuation">}</span>.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Invoke <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">release</span></span><span class="token punctuation">}</span> with saved state as argument,
        *      throwing IllegalMonitorStateException if it fails.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Block until signalled, interrupted, or timed out.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Reacquire by invoking specialized version of
        *      <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">acquire</span></span><span class="token punctuation">}</span> with saved state as argument.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If interrupted while blocked in step 4, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If timed out while blocked in step 4, return false, else true.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        */</span>
    <span class="token comment">// \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u6700\u540E\u671F\u9650\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">awaitUntil</span><span class="token punctuation">(</span><span class="token class-name">Date</span> deadline<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> abstime <span class="token operator">=</span> deadline<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> timedout <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> interruptMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> abstime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                timedout <span class="token operator">=</span> <span class="token function">transferAfterCancelledWait</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">parkUntil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> abstime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>interruptMode <span class="token operator">=</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> interruptMode <span class="token operator">!=</span> <span class="token constant">THROW_IE</span><span class="token punctuation">)</span>
            interruptMode <span class="token operator">=</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nextWaiter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span>interruptMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">!</span>timedout<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Implements timed condition wait.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If current thread is interrupted, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Save lock state returned by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getState</span></span><span class="token punctuation">}</span>.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Invoke <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">release</span></span><span class="token punctuation">}</span> with saved state as argument,
        *      throwing IllegalMonitorStateException if it fails.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Block until signalled, interrupted, or timed out.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> Reacquire by invoking specialized version of
        *      <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">acquire</span></span><span class="token punctuation">}</span> with saved state as argument.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If interrupted while blocked in step 4, throw InterruptedException.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span> If timed out while blocked in step 4, return false, else true.
        * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
        */</span>
    <span class="token comment">// \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\u3002\u6B64\u65B9\u6CD5\u5728\u884C\u4E3A\u4E0A\u7B49\u6548\u4E8E: awaitNanos(unit.toNanos(time)) &gt; 0</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token keyword">long</span> time<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> nanosTimeout <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token function">addConditionWaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> savedState <span class="token operator">=</span> <span class="token function">fullyRelease</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">long</span> deadline <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> nanosTimeout<span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> timedout <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> interruptMode <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isOnSyncQueue</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanosTimeout <span class="token operator">&lt;=</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                timedout <span class="token operator">=</span> <span class="token function">transferAfterCancelledWait</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nanosTimeout <span class="token operator">&gt;=</span> spinForTimeoutThreshold<span class="token punctuation">)</span>
                <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">parkNanos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> nanosTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>interruptMode <span class="token operator">=</span> <span class="token function">checkInterruptWhileWaiting</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            nanosTimeout <span class="token operator">=</span> deadline <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">acquireQueued</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> savedState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> interruptMode <span class="token operator">!=</span> <span class="token constant">THROW_IE</span><span class="token punctuation">)</span>
            interruptMode <span class="token operator">=</span> <span class="token constant">REINTERRUPT</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>nextWaiter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token function">unlinkCancelledWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interruptMode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">reportInterruptAfterWait</span><span class="token punctuation">(</span>interruptMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token operator">!</span>timedout<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//  support for instrumentation</span>

    <span class="token doc-comment comment">/**
        * Returns true if this condition was created by the given
        * synchronization object.
        *
        * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if owned
        */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isOwnedBy</span><span class="token punctuation">(</span><span class="token class-name">AbstractQueuedSynchronizer</span> sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sync <span class="token operator">==</span> <span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Queries whether any threads are waiting on this condition.
        * Implements <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">#</span><span class="token function">hasWaiters</span><span class="token punctuation">(</span><span class="token class-name">ConditionObject</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>.
        *
        * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if there are any waiting threads
        * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isHeldExclusively</span></span><span class="token punctuation">}</span>
        *         returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
        */</span>
    <span class="token comment">//  \u67E5\u8BE2\u662F\u5426\u6709\u6B63\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\u7684\u4EFB\u4F55\u7EBF\u7A0B</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">hasWaiters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> w <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span> w <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> w <span class="token operator">=</span> w<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>waitStatus <span class="token operator">==</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Returns an estimate of the number of threads waiting on
        * this condition.
        * Implements <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">#</span><span class="token function">getWaitQueueLength</span><span class="token punctuation">(</span><span class="token class-name">ConditionObject</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>.
        *
        * <span class="token keyword">@return</span> the estimated number of waiting threads
        * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isHeldExclusively</span></span><span class="token punctuation">}</span>
        *         returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
        */</span>
    <span class="token comment">// \u8FD4\u56DE\u6B63\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\u7684\u7EBF\u7A0B\u6570\u4F30\u8BA1\u503C</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getWaitQueueLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> w <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span> w <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> w <span class="token operator">=</span> w<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>waitStatus <span class="token operator">==</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span>
                <span class="token operator">++</span>n<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
        * Returns a collection containing those threads that may be
        * waiting on this Condition.
        * Implements <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">#</span><span class="token function">getWaitingThreads</span><span class="token punctuation">(</span><span class="token class-name">ConditionObject</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>.
        *
        * <span class="token keyword">@return</span> the collection of threads
        * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalMonitorStateException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isHeldExclusively</span></span><span class="token punctuation">}</span>
        *         returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
        */</span>
    <span class="token comment">// \u8FD4\u56DE\u5305\u542B\u90A3\u4E9B\u53EF\u80FD\u6B63\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\u7684\u7EBF\u7A0B\u96C6\u5408</span>
    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> <span class="token function">getWaitingThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHeldExclusively</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalMonitorStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Thread</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> w <span class="token operator">=</span> firstWaiter<span class="token punctuation">;</span> w <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> w <span class="token operator">=</span> w<span class="token punctuation">.</span>nextWaiter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span>waitStatus <span class="token operator">==</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-3-1-condition\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_6-3-1-condition\u63A5\u53E3" aria-hidden="true">#</a> 6.3.1 Condition\u63A5\u53E3</h4><p>\u6B64\u7C7B\u5B9E\u73B0\u4E86Condition\u63A5\u53E3\uFF0CCondition\u63A5\u53E3\u5B9A\u4E49\u4E86\u6761\u4EF6\u64CD\u4F5C\u89C4\u8303\uFF0C\u5177\u4F53\u5982\u4E0B</p><div class="language-JAVA ext-JAVA line-numbers-mode"><pre class="language-JAVA"><code>public interface Condition {

    // \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u6216\u88AB\u4E2D\u65AD\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001
    void await() throws InterruptedException;
    
    // \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\uFF0C\u4E0D\u54CD\u5E94\u4E2D\u65AD
    void awaitUninterruptibly();
    
    //\u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001 
    long awaitNanos(long nanosTimeout) throws InterruptedException;
    
    // \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\u3002\u6B64\u65B9\u6CD5\u5728\u884C\u4E3A\u4E0A\u7B49\u6548\u4E8E: awaitNanos(unit.toNanos(time)) &gt; 0
    boolean await(long time, TimeUnit unit) throws InterruptedException;
    
    // \u7B49\u5F85\uFF0C\u5F53\u524D\u7EBF\u7A0B\u5728\u63A5\u5230\u4FE1\u53F7\u3001\u88AB\u4E2D\u65AD\u6216\u5230\u8FBE\u6307\u5B9A\u6700\u540E\u671F\u9650\u4E4B\u524D\u4E00\u76F4\u5904\u4E8E\u7B49\u5F85\u72B6\u6001
    boolean awaitUntil(Date deadline) throws InterruptedException;
    
    // \u5524\u9192\u4E00\u4E2A\u7B49\u5F85\u7EBF\u7A0B\u3002\u5982\u679C\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\uFF0C\u5219\u9009\u62E9\u5176\u4E2D\u7684\u4E00\u4E2A\u5524\u9192\u3002\u5728\u4ECE await \u8FD4\u56DE\u4E4B\u524D\uFF0C\u8BE5\u7EBF\u7A0B\u5FC5\u987B\u91CD\u65B0\u83B7\u53D6\u9501\u3002
    void signal();
    
    // \u5524\u9192\u6240\u6709\u7B49\u5F85\u7EBF\u7A0B\u3002\u5982\u679C\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u5728\u7B49\u5F85\u6B64\u6761\u4EF6\uFF0C\u5219\u5524\u9192\u6240\u6709\u7EBF\u7A0B\u3002\u5728\u4ECE await \u8FD4\u56DE\u4E4B\u524D\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u5FC5\u987B\u91CD\u65B0\u83B7\u53D6\u9501\u3002
    void signalAll();
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Condition\u63A5\u53E3\u4E2D\u5B9A\u4E49\u4E86await\u3001signal\u65B9\u6CD5\uFF0C\u7528\u6765\u7B49\u5F85\u6761\u4EF6\u3001\u91CA\u653E\u6761\u4EF6\u3002</p><h3 id="_6-4-\u7C7B\u7684\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_6-4-\u7C7B\u7684\u5C5E\u6027" aria-hidden="true">#</a> 6.4 \u7C7B\u7684\u5C5E\u6027</h3><p>\u5C5E\u6027\u4E2D\u5305\u542B\u4E86\u5934\u8282\u70B9head\uFF0C\u5C3E\u7ED3\u70B9tail\uFF0C\u72B6\u6001state\u3001\u81EA\u65CB\u65F6\u95F4spinForTimeoutThreshold\uFF0C\u8FD8\u6709AbstractQueuedSynchronizer\u62BD\u8C61\u7684\u5C5E\u6027\u5728\u5185\u5B58\u4E2D\u7684\u504F\u79FB\u5730\u5740\uFF0C\u901A\u8FC7\u8BE5\u504F\u79FB\u5730\u5740\uFF0C\u53EF\u4EE5\u83B7\u53D6\u548C\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u7684\u503C\uFF0C\u540C\u65F6\u8FD8\u5305\u62EC\u4E00\u4E2A\u9759\u6001\u521D\u59CB\u5316\u5757\uFF0C\u7528\u4E8E\u52A0\u8F7D\u5185\u5B58\u504F\u79FB\u5730\u5740\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span>
    <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>    
    <span class="token comment">// \u7248\u672C\u53F7</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">7373984972572414691L</span><span class="token punctuation">;</span>    
    <span class="token comment">// \u5934\u8282\u70B9</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span> head<span class="token punctuation">;</span>    
    <span class="token comment">// \u5C3E\u7ED3\u70B9</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span> tail<span class="token punctuation">;</span>    
    <span class="token comment">// \u72B6\u6001</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> state<span class="token punctuation">;</span>    
    <span class="token comment">// \u81EA\u65CB\u65F6\u95F4</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> spinForTimeoutThreshold <span class="token operator">=</span> <span class="token number">1000L</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Unsafe\u7C7B\u5B9E\u4F8B</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Unsafe</span> unsafe <span class="token operator">=</span> <span class="token class-name">Unsafe</span><span class="token punctuation">.</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// state\u5185\u5B58\u504F\u79FB\u5730\u5740</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> stateOffset<span class="token punctuation">;</span>
    <span class="token comment">// head\u5185\u5B58\u504F\u79FB\u5730\u5740</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> headOffset<span class="token punctuation">;</span>
    <span class="token comment">// state\u5185\u5B58\u504F\u79FB\u5730\u5740</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> tailOffset<span class="token punctuation">;</span>
    <span class="token comment">// tail\u5185\u5B58\u504F\u79FB\u5730\u5740</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> waitStatusOffset<span class="token punctuation">;</span>
    <span class="token comment">// next\u5185\u5B58\u504F\u79FB\u5730\u5740</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> nextOffset<span class="token punctuation">;</span>
    <span class="token comment">// \u9759\u6001\u521D\u59CB\u5316\u5757</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            stateOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;state&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            headOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tailOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;tail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            waitStatusOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;waitStatus&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            nextOffset <span class="token operator">=</span> unsafe<span class="token punctuation">.</span>objectFieldOffset
                <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-\u7C7B\u7684\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6-5-\u7C7B\u7684\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> 6.5 \u7C7B\u7684\u6784\u9020\u65B9\u6CD5</h3><p>\u6B64\u7C7B\u6784\u9020\u65B9\u6CD5\u4E3A\u4ECE\u62BD\u8C61\u6784\u9020\u65B9\u6CD5\uFF0C\u4F9B\u5B50\u7C7B\u8C03\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">AbstractQueuedSynchronizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>    

 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-6-\u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5-acquire\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6-6-\u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5-acquire\u65B9\u6CD5" aria-hidden="true">#</a> 6.6 \u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5 - acquire\u65B9\u6CD5</h3><p>\u8BE5\u65B9\u6CD5\u4EE5\u72EC\u5360\u6A21\u5F0F\u83B7\u53D6(\u8D44\u6E90)\uFF0C\u5FFD\u7565\u4E2D\u65AD\uFF0C\u5373\u7EBF\u7A0B\u5728aquire\u8FC7\u7A0B\u4E2D\uFF0C\u4E2D\u65AD\u6B64\u7EBF\u7A0B\u662F\u65E0\u6548\u7684\u3002\u6E90\u7801\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u6267\u884CAcquire(1)\u65F6\uFF0C\u4F1A\u901A\u8FC7tryAcquire\u83B7\u53D6\u9501\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u83B7\u53D6\u9501\u5931\u8D25\uFF0C\u5C31\u4F1A\u8C03\u7528 addWaiter\u52A0\u5165\u5230\u7B49\u5F85\u961F\u5217\u4E2D\u53BB\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">EXCLUSIVE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">selfInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E0A\u8FF0\u6E90\u7801\u53EF\u4EE5\u77E5\u9053\uFF0C\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8C03\u7528acquire\u65F6\uFF0C\u8C03\u7528\u65B9\u6CD5\u6D41\u7A0B\u5982\u4E0B</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220526203514243.png" alt="image-20220526203514243"></p><ul><li>\u9996\u5148\u8C03\u7528tryAcquire\u65B9\u6CD5\uFF0C\u8C03\u7528\u6B64\u65B9\u6CD5\u7684\u7EBF\u7A0B\u4F1A\u8BD5\u56FE\u5728\u72EC\u5360\u6A21\u5F0F\u4E0B\u83B7\u53D6\u5BF9\u8C61\u72B6\u6001\u3002\u6B64\u65B9\u6CD5\u5E94\u8BE5\u67E5\u8BE2\u662F\u5426\u5141\u8BB8\u5B83\u5728\u72EC\u5360\u6A21\u5F0F\u4E0B\u83B7\u53D6\u5BF9\u8C61\u72B6\u6001\uFF0C\u5982\u679C\u5141\u8BB8\uFF0C\u5219\u83B7\u53D6\u5B83\u3002\u5728AbstractQueuedSynchronizer\u6E90\u7801\u4E2D\u9ED8\u8BA4\u4F1A\u629B\u51FA\u4E00\u4E2A\u5F02\u5E38\uFF0C\u5373\u9700\u8981\u5B50\u7C7B\u53BB\u91CD\u5199\u6B64\u65B9\u6CD5\u5B8C\u6210\u81EA\u5DF1\u7684\u903B\u8F91\u3002\u4E4B\u540E\u4F1A\u8FDB\u884C\u5206\u6790\u3002</li><li>\u82E5tryAcquire\u5931\u8D25\uFF0C\u5219\u8C03\u7528addWaiter\u65B9\u6CD5\uFF0CaddWaiter\u65B9\u6CD5\u5B8C\u6210\u7684\u529F\u80FD\u662F\u5C06\u8C03\u7528\u6B64\u65B9\u6CD5\u7684\u7EBF\u7A0B\u5C01\u88C5\u6210\u4E3A\u4E00\u4E2A\u7ED3\u70B9\u5E76\u653E\u5165Sync queue\u3002</li><li>\u8C03\u7528acquireQueued\u65B9\u6CD5\uFF0C\u6B64\u65B9\u6CD5\u5B8C\u6210\u7684\u529F\u80FD\u662FSync queue\u4E2D\u7684\u7ED3\u70B9\u4E0D\u65AD\u5C1D\u8BD5\u83B7\u53D6\u8D44\u6E90\uFF0C\u82E5\u6210\u529F\uFF0C\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\uFF0C\u8FD4\u56DEfalse\u3002</li><li>\u7531\u4E8EtryAcquire\u9ED8\u8BA4\u5B9E\u73B0\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u6240\u4EE5\u6B64\u65F6\uFF0C\u4E0D\u8FDB\u884C\u5206\u6790\uFF0C\u4E4B\u540E\u4F1A\u7ED3\u5408\u4E00\u4E2A\u4F8B\u5B50\u8FDB\u884C\u5206\u6790\u3002</li></ul><p>\u9996\u5148\u5206\u6790addWaiter\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6DFB\u52A0\u7B49\u5F85\u8005</span>
<span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">addWaiter</span><span class="token punctuation">(</span><span class="token class-name">Node</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u751F\u6210\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u9ED8\u8BA4\u4E3A\u72EC\u5360\u6A21\u5F0F</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Try the fast path of enq; backup to full enq on failure</span>
    <span class="token comment">// \u4FDD\u5B58\u5C3E\u7ED3\u70B9</span>
    <span class="token class-name">Node</span> pred <span class="token operator">=</span> tail<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u5373\u5DF2\u7ECF\u88AB\u521D\u59CB\u5316</span>
        <span class="token comment">// \u5C06node\u7ED3\u70B9\u7684prev\u57DF\u8FDE\u63A5\u5230\u5C3E\u7ED3\u70B9</span>
        node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetTail</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BD4\u8F83pred\u662F\u5426\u4E3A\u5C3E\u7ED3\u70B9\uFF0C\u662F\u5219\u5C06\u5C3E\u7ED3\u70B9\u8BBE\u7F6E\u4E3Anode </span>
            <span class="token comment">// \u8BBE\u7F6E\u5C3E\u7ED3\u70B9\u7684next\u57DF\u4E3Anode</span>
            pred<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
            <span class="token keyword">return</span> node<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u65B0\u751F\u6210\u7684\u7ED3\u70B9</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">enq</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E3A\u7A7A(\u5373\u8FD8\u6CA1\u6709\u88AB\u521D\u59CB\u5316\u8FC7)\uFF0C\u6216\u8005\u662FcompareAndSetTail\u64CD\u4F5C\u5931\u8D25\uFF0C\u5219\u5165\u961F\u5217</span>
    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>addWaiter\u65B9\u6CD5\u4F7F\u7528\u5FEB\u901F\u6DFB\u52A0\u7684\u65B9\u5F0F\u5F80sync queue\u5C3E\u90E8\u6DFB\u52A0\u7ED3\u70B9\uFF0C\u5982\u679Csync queue\u961F\u5217\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\uFF0C\u5219\u4F1A\u4F7F\u7528enq\u63D2\u5165\u961F\u5217\u4E2D\uFF0Cenq\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Node</span> <span class="token function">enq</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65E0\u9650\u5FAA\u73AF\uFF0C\u786E\u4FDD\u7ED3\u70B9\u80FD\u591F\u6210\u529F\u5165\u961F\u5217</span>
        <span class="token comment">// \u4FDD\u5B58\u5C3E\u7ED3\u70B9</span>
        <span class="token class-name">Node</span> t <span class="token operator">=</span> tail<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E3A\u7A7A\uFF0C\u5373\u8FD8\u6CA1\u88AB\u521D\u59CB\u5316</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetHead</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5934\u8282\u70B9\u4E3A\u7A7A\uFF0C\u5E76\u8BBE\u7F6E\u5934\u8282\u70B9\u4E3A\u65B0\u751F\u6210\u7684\u7ED3\u70B9</span>
                tail <span class="token operator">=</span> head<span class="token punctuation">;</span> <span class="token comment">// \u5934\u8282\u70B9\u4E0E\u5C3E\u7ED3\u70B9\u90FD\u6307\u5411\u540C\u4E00\u4E2A\u65B0\u751F\u7ED3\u70B9</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C3E\u7ED3\u70B9\u4E0D\u4E3A\u7A7A\uFF0C\u5373\u5DF2\u7ECF\u88AB\u521D\u59CB\u5316\u8FC7</span>
            <span class="token comment">// \u5C06node\u7ED3\u70B9\u7684prev\u57DF\u8FDE\u63A5\u5230\u5C3E\u7ED3\u70B9</span>
            node<span class="token punctuation">.</span>prev <span class="token operator">=</span> t<span class="token punctuation">;</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetTail</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BD4\u8F83\u7ED3\u70B9t\u662F\u5426\u4E3A\u5C3E\u7ED3\u70B9\uFF0C\u82E5\u662F\u5219\u5C06\u5C3E\u7ED3\u70B9\u8BBE\u7F6E\u4E3Anode</span>
                <span class="token comment">// \u8BBE\u7F6E\u5C3E\u7ED3\u70B9\u7684next\u57DF\u4E3Anode</span>
                t<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span> 
                <span class="token keyword">return</span> t<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u5C3E\u7ED3\u70B9</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>enq\u65B9\u6CD5\u4F1A\u4F7F\u7528\u65E0\u9650\u5FAA\u73AF\u6765\u786E\u4FDD\u8282\u70B9\u7684\u6210\u529F\u63D2\u5165\u3002</p><p>\u73B0\u5728\uFF0C\u5206\u6790acquireQueue\u65B9\u6CD5\u3002\u5176\u6E90\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// sync\u961F\u5217\u4E2D\u7684\u7ED3\u70B9\u5728\u72EC\u5360\u4E14\u5FFD\u7565\u4E2D\u65AD\u7684\u6A21\u5F0F\u4E0B\u83B7\u53D6(\u8D44\u6E90)</span>
<span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">acquireQueued</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Node</span> node<span class="token punctuation">,</span> <span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6807\u5FD7</span>
    <span class="token keyword">boolean</span> failed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E2D\u65AD\u6807\u5FD7</span>
        <span class="token keyword">boolean</span> interrupted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65E0\u9650\u5FAA\u73AF</span>
            <span class="token comment">// \u83B7\u53D6node\u8282\u70B9\u7684\u524D\u9A71\u7ED3\u70B9</span>
            <span class="token keyword">final</span> <span class="token class-name">Node</span> p <span class="token operator">=</span> node<span class="token punctuation">.</span><span class="token function">predecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> head <span class="token operator">&amp;&amp;</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u524D\u9A71\u4E3A\u5934\u8282\u70B9\u5E76\u4E14\u6210\u529F\u83B7\u5F97\u9501</span>
                <span class="token function">setHead</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u5934\u8282\u70B9</span>
                p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// help GC</span>
                failed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u8BBE\u7F6E\u6807\u5FD7</span>
                <span class="token keyword">return</span> interrupted<span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldParkAfterFailedAcquire</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                interrupted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
            <span class="token function">cancelAcquire</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u83B7\u53D6\u5F53\u524D\u8282\u70B9\u7684\u524D\u9A71\u8282\u70B9\uFF0C\u5982\u679C\u524D\u9A71\u8282\u70B9\u662F\u5934\u8282\u70B9\u5E76\u4E14\u80FD\u591F\u83B7\u53D6(\u8D44\u6E90)\uFF0C\u4EE3\u8868\u8BE5\u5F53\u524D\u8282\u70B9\u80FD\u591F\u5360\u6709\u9501\uFF0C\u8BBE\u7F6E\u5934\u8282\u70B9\u4E3A\u5F53\u524D\u8282\u70B9\uFF0C\u8FD4\u56DE\u3002\u5426\u5219\uFF0C\u8C03\u7528shouldParkAfterFailedAcquire\u548CparkAndCheckInterrupt\u65B9\u6CD5\uFF0C\u9996\u5148\uFF0C\u6211\u4EEC\u770BshouldParkAfterFailedAcquire\u65B9\u6CD5\uFF0C\u4EE3\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5F53\u83B7\u53D6(\u8D44\u6E90)\u5931\u8D25\u540E\uFF0C\u68C0\u67E5\u5E76\u4E14\u66F4\u65B0\u7ED3\u70B9\u72B6\u6001</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">shouldParkAfterFailedAcquire</span><span class="token punctuation">(</span><span class="token class-name">Node</span> pred<span class="token punctuation">,</span> <span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u524D\u9A71\u7ED3\u70B9\u7684\u72B6\u6001</span>
    <span class="token keyword">int</span> ws <span class="token operator">=</span> pred<span class="token punctuation">.</span>waitStatus<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">==</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">SIGNAL</span><span class="token punctuation">)</span> <span class="token comment">// \u72B6\u6001\u4E3ASIGNAL\uFF0C\u4E3A-1</span>
        <span class="token comment">/*
            * This node has already set status asking a release
            * to signal it, so it can safely park.
            */</span>
        <span class="token comment">// \u53EF\u4EE5\u8FDB\u884Cpark\u64CD\u4F5C</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8868\u793A\u72B6\u6001\u4E3ACANCELLED\uFF0C\u4E3A1</span>
        <span class="token comment">/*
            * Predecessor was cancelled. Skip over predecessors and
            * indicate retry.
            */</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred <span class="token operator">=</span> pred<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>pred<span class="token punctuation">.</span>waitStatus <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u627E\u5230pred\u7ED3\u70B9\u524D\u9762\u6700\u8FD1\u7684\u4E00\u4E2A\u72B6\u6001\u4E0D\u4E3ACANCELLED\u7684\u7ED3\u70B9</span>
        <span class="token comment">// \u8D4B\u503Cpred\u7ED3\u70B9\u7684next\u57DF</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E3APROPAGATE -3 \u6216\u8005\u662F0 \u8868\u793A\u65E0\u72B6\u6001,(\u4E3ACONDITION -2\u65F6\uFF0C\u8868\u793A\u6B64\u8282\u70B9\u5728condition queue\u4E2D) </span>
        <span class="token comment">/*
            * waitStatus must be 0 or PROPAGATE.  Indicate that we
            * need a signal, but don&#39;t park yet.  Caller will need to
            * retry to make sure it cannot acquire before parking.
            */</span>
        <span class="token comment">// \u6BD4\u8F83\u5E76\u8BBE\u7F6E\u524D\u9A71\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ASIGNAL</span>
        <span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">SIGNAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0D\u80FD\u8FDB\u884Cpark\u64CD\u4F5C</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u6709\u5F53\u8BE5\u8282\u70B9\u7684\u524D\u9A71\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ASIGNAL\u65F6\uFF0C\u624D\u53EF\u4EE5\u5BF9\u8BE5\u7ED3\u70B9\u6240\u5C01\u88C5\u7684\u7EBF\u7A0B\u8FDB\u884Cpark\u64CD\u4F5C\u3002\u5426\u5219\uFF0C\u5C06\u4E0D\u80FD\u8FDB\u884Cpark\u64CD\u4F5C\u3002\u518D\u770BparkAndCheckInterrupt\u65B9\u6CD5\uFF0C\u6E90\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u8FDB\u884Cpark\u64CD\u4F5C\u5E76\u4E14\u8FD4\u56DE\u8BE5\u7EBF\u7A0B\u662F\u5426\u88AB\u4E2D\u65AD</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">parkAndCheckInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u8BB8\u53EF\u53EF\u7528\u4E4B\u524D\u7981\u7528\u5F53\u524D\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u8BBE\u7F6E\u4E86blocker</span>
    <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7EBF\u7A0B\u662F\u5426\u5DF2\u88AB\u4E2D\u65AD\uFF0C\u5E76\u6E05\u9664\u4E2D\u65AD\u6807\u8BB0\u4F4D</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>parkAndCheckInterrupt\u65B9\u6CD5\u91CC\u7684\u903B\u8F91\u662F\u9996\u5148\u6267\u884Cpark\u64CD\u4F5C\uFF0C\u5373\u7981\u7528\u5F53\u524D\u7EBF\u7A0B\uFF0C\u7136\u540E\u8FD4\u56DE\u8BE5\u7EBF\u7A0B\u662F\u5426\u5DF2\u7ECF\u88AB\u4E2D\u65AD\u3002\u518D\u770Bfinal\u5757\u4E2D\u7684cancelAcquire\u65B9\u6CD5\uFF0C\u5176\u6E90\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53D6\u6D88\u7EE7\u7EED\u83B7\u53D6(\u8D44\u6E90)</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">cancelAcquire</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Ignore if node doesn&#39;t exist</span>
    <span class="token comment">// node\u4E3A\u7A7A\uFF0C\u8FD4\u56DE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u7F6Enode\u7ED3\u70B9\u7684thread\u4E3A\u7A7A</span>
    node<span class="token punctuation">.</span>thread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token comment">// Skip cancelled predecessors</span>
    <span class="token comment">// \u4FDD\u5B58node\u7684\u524D\u9A71\u7ED3\u70B9</span>
    <span class="token class-name">Node</span> pred <span class="token operator">=</span> node<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>pred<span class="token punctuation">.</span>waitStatus <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u627E\u5230node\u524D\u9A71\u7ED3\u70B9\u4E2D\u7B2C\u4E00\u4E2A\u72B6\u6001\u5C0F\u4E8E0\u7684\u7ED3\u70B9\uFF0C\u5373\u4E0D\u4E3ACANCELLED\u72B6\u6001\u7684\u7ED3\u70B9</span>
        node<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred <span class="token operator">=</span> pred<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>

    <span class="token comment">// predNext is the apparent node to unsplice. CASes below will</span>
    <span class="token comment">// fail if not, in which case, we lost race vs another cancel</span>
    <span class="token comment">// or signal, so no further action is necessary.</span>
    <span class="token comment">// \u83B7\u53D6pred\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Node</span> predNext <span class="token operator">=</span> pred<span class="token punctuation">.</span>next<span class="token punctuation">;</span>

    <span class="token comment">// Can use unconditional write instead of CAS here.</span>
    <span class="token comment">// After this atomic step, other Nodes can skip past us.</span>
    <span class="token comment">// Before, we are free of interference from other threads.</span>
    <span class="token comment">// \u8BBE\u7F6Enode\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ACANCELLED</span>
    node<span class="token punctuation">.</span>waitStatus <span class="token operator">=</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CANCELLED</span><span class="token punctuation">;</span>

    <span class="token comment">// If we are the tail, remove ourselves.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> tail <span class="token operator">&amp;&amp;</span> <span class="token function">compareAndSetTail</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> pred<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// node\u7ED3\u70B9\u4E3A\u5C3E\u7ED3\u70B9\uFF0C\u5219\u8BBE\u7F6E\u5C3E\u7ED3\u70B9\u4E3Apred\u7ED3\u70B9</span>
        <span class="token comment">// \u6BD4\u8F83\u5E76\u8BBE\u7F6Epred\u7ED3\u70B9\u7684next\u8282\u70B9\u4E3Anull</span>
        <span class="token function">compareAndSetNext</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> predNext<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// node\u7ED3\u70B9\u4E0D\u4E3A\u5C3E\u7ED3\u70B9\uFF0C\u6216\u8005\u6BD4\u8F83\u8BBE\u7F6E\u4E0D\u6210\u529F</span>
        <span class="token comment">// If successor needs signal, try to set pred&#39;s next-link</span>
        <span class="token comment">// so it will get one. Otherwise wake it up to propagate.</span>
        <span class="token keyword">int</span> ws<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">!=</span> head <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>ws <span class="token operator">=</span> pred<span class="token punctuation">.</span>waitStatus<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">SIGNAL</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span>ws <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">SIGNAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            pred<span class="token punctuation">.</span>thread <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// (pred\u7ED3\u70B9\u4E0D\u4E3A\u5934\u8282\u70B9\uFF0C\u5E76\u4E14pred\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ASIGNAL)\u6216\u8005 </span>
                                <span class="token comment">// pred\u7ED3\u70B9\u72B6\u6001\u5C0F\u4E8E\u7B49\u4E8E0\uFF0C\u5E76\u4E14\u6BD4\u8F83\u5E76\u8BBE\u7F6E\u7B49\u5F85\u72B6\u6001\u4E3ASIGNAL\u6210\u529F\uFF0C\u5E76\u4E14pred\u7ED3\u70B9\u6240\u5C01\u88C5\u7684\u7EBF\u7A0B\u4E0D\u4E3A\u7A7A</span>
            <span class="token comment">// \u4FDD\u5B58\u7ED3\u70B9\u7684\u540E\u7EE7</span>
            <span class="token class-name">Node</span> next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> next<span class="token punctuation">.</span>waitStatus <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u540E\u7EE7\u4E0D\u4E3A\u7A7A\u5E76\u4E14\u540E\u7EE7\u7684\u72B6\u6001\u5C0F\u4E8E\u7B49\u4E8E0</span>
                <span class="token function">compareAndSetNext</span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> predNext<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6BD4\u8F83\u5E76\u8BBE\u7F6Epred.next = next;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u91CA\u653Enode\u7684\u524D\u4E00\u4E2A\u7ED3\u70B9</span>
        <span class="token punctuation">}</span>

        node<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span> <span class="token comment">// help GC</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u5B8C\u6210\u7684\u529F\u80FD\u5C31\u662F\u53D6\u6D88\u5F53\u524D\u7EBF\u7A0B\u5BF9\u8D44\u6E90\u7684\u83B7\u53D6\uFF0C\u5373\u8BBE\u7F6E\u8BE5\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ACANCELLED\uFF0C\u63A5\u7740\u6211\u4EEC\u518D\u770BunparkSuccessor\u65B9\u6CD5\uFF0C\u6E90\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u91CA\u653E\u540E\u7EE7\u7ED3\u70B9</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
        * If status is negative (i.e., possibly needing signal) try
        * to clear in anticipation of signalling.  It is OK if this
        * fails or if status is changed by waiting thread.
        */</span>
    <span class="token comment">// \u83B7\u53D6node\u7ED3\u70B9\u7684\u7B49\u5F85\u72B6\u6001</span>
    <span class="token keyword">int</span> ws <span class="token operator">=</span> node<span class="token punctuation">.</span>waitStatus<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u72B6\u6001\u503C\u5C0F\u4E8E0\uFF0C\u4E3ASIGNAL -1 \u6216 CONDITION -2 \u6216 PROPAGATE -3</span>
        <span class="token comment">// \u6BD4\u8F83\u5E76\u4E14\u8BBE\u7F6E\u7ED3\u70B9\u7B49\u5F85\u72B6\u6001\uFF0C\u8BBE\u7F6E\u4E3A0</span>
        <span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">/*
        * Thread to unpark is held in successor, which is normally
        * just the next node.  But if cancelled or apparently null,
        * traverse backwards from tail to find the actual
        * non-cancelled successor.
        */</span>
    <span class="token comment">// \u83B7\u53D6node\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    <span class="token class-name">Node</span> s <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> s<span class="token punctuation">.</span>waitStatus <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E0B\u4E00\u4E2A\u7ED3\u70B9\u4E3A\u7A7A\u6216\u8005\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u7B49\u5F85\u72B6\u6001\u5927\u4E8E0\uFF0C\u5373\u4E3ACANCELLED</span>
        <span class="token comment">// s\u8D4B\u503C\u4E3A\u7A7A</span>
        s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u4ECE\u5C3E\u7ED3\u70B9\u5F00\u59CB\u4ECE\u540E\u5F80\u524D\u5F00\u59CB\u904D\u5386</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> t <span class="token operator">=</span> tail<span class="token punctuation">;</span> t <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> t <span class="token operator">!=</span> node<span class="token punctuation">;</span> t <span class="token operator">=</span> t<span class="token punctuation">.</span>prev<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>waitStatus <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u627E\u5230\u7B49\u5F85\u72B6\u6001\u5C0F\u4E8E\u7B49\u4E8E0\u7684\u7ED3\u70B9\uFF0C\u627E\u5230\u6700\u524D\u7684\u72B6\u6001\u5C0F\u4E8E\u7B49\u4E8E0\u7684\u7ED3\u70B9</span>
                <span class="token comment">// \u4FDD\u5B58\u7ED3\u70B9</span>
                s <span class="token operator">=</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u8BE5\u7ED3\u70B9\u4E0D\u4E3A\u4E3A\u7A7A\uFF0C\u91CA\u653E\u8BB8\u53EF</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u5C31\u662F\u4E3A\u4E86\u91CA\u653Enode\u8282\u70B9\u7684\u540E\u7EE7\u7ED3\u70B9\u3002</p><p>\u5BF9\u4E8EcancelAcquire\u4E0EunparkSuccessor\u65B9\u6CD5\uFF0C\u5982\u4E0B\u793A\u610F\u56FE\u53EF\u4EE5\u6E05\u6670\u7684\u8868\u793A:</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220526205243052.png" alt="image-20220526205243052"></p><p>\u5176\u4E2Dnode\u4E3A\u53C2\u6570\uFF0C\u5728\u6267\u884C\u5B8CcancelAcquire\u65B9\u6CD5\u540E\u7684\u6548\u679C\u5C31\u662Funpark\u4E86s\u7ED3\u70B9\u6240\u5305\u542B\u7684t4\u7EBF\u7A0B\u3002</p><p>\u73B0\u5728\uFF0C\u518D\u6765\u770BacquireQueued\u65B9\u6CD5\u7684\u6574\u4E2A\u7684\u903B\u8F91\u3002\u903B\u8F91\u5982\u4E0B:</p><ul><li>\u5224\u65AD\u7ED3\u70B9\u7684\u524D\u9A71\u662F\u5426\u4E3Ahead\u5E76\u4E14\u662F\u5426\u6210\u529F\u83B7\u53D6(\u8D44\u6E90)\u3002</li><li>\u82E5\u6B65\u9AA41\u5747\u6EE1\u8DB3\uFF0C\u5219\u8BBE\u7F6E\u7ED3\u70B9\u4E3Ahead\uFF0C\u4E4B\u540E\u4F1A\u5224\u65AD\u662F\u5426finally\u6A21\u5757\uFF0C\u7136\u540E\u8FD4\u56DE\u3002</li><li>\u82E5\u6B65\u9AA42\u4E0D\u6EE1\u8DB3\uFF0C\u5219\u5224\u65AD\u662F\u5426\u9700\u8981park\u5F53\u524D\u7EBF\u7A0B\uFF0C\u662F\u5426\u9700\u8981park\u5F53\u524D\u7EBF\u7A0B\u7684\u903B\u8F91\u662F\u5224\u65AD\u7ED3\u70B9\u7684\u524D\u9A71\u7ED3\u70B9\u7684\u72B6\u6001\u662F\u5426\u4E3ASIGNAL\uFF0C\u82E5\u662F\uFF0C\u5219park\u5F53\u524D\u7ED3\u70B9\uFF0C\u5426\u5219\uFF0C\u4E0D\u8FDB\u884Cpark\u64CD\u4F5C\u3002</li><li>\u82E5park\u4E86\u5F53\u524D\u7EBF\u7A0B\uFF0C\u4E4B\u540E\u67D0\u4E2A\u7EBF\u7A0B\u5BF9\u672C\u7EBF\u7A0Bunpark\u540E\uFF0C\u5E76\u4E14\u672C\u7EBF\u7A0B\u4E5F\u83B7\u5F97\u673A\u4F1A\u8FD0\u884C\u3002\u90A3\u4E48\uFF0C\u5C06\u4F1A\u7EE7\u7EED\u8FDB\u884C\u6B65\u9AA4\u2460\u7684\u5224\u65AD\u3002</li></ul><h3 id="_6-7-\u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5-release\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6-7-\u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5-release\u65B9\u6CD5" aria-hidden="true">#</a> 6.7 \u7C7B\u7684\u6838\u5FC3\u65B9\u6CD5 - release\u65B9\u6CD5</h3><p>\u4EE5\u72EC\u5360\u6A21\u5F0F\u91CA\u653E\u5BF9\u8C61\uFF0C\u5176\u6E90\u7801\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token keyword">int</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">tryRelease</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u91CA\u653E\u6210\u529F</span>
        <span class="token comment">// \u4FDD\u5B58\u5934\u8282\u70B9</span>
        <span class="token class-name">Node</span> h <span class="token operator">=</span> head<span class="token punctuation">;</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> h<span class="token punctuation">.</span>waitStatus <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// \u5934\u8282\u70B9\u4E0D\u4E3A\u7A7A\u5E76\u4E14\u5934\u8282\u70B9\u72B6\u6001\u4E0D\u4E3A0</span>
            <span class="token function">unparkSuccessor</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u91CA\u653E\u5934\u8282\u70B9\u7684\u540E\u7EE7\u7ED3\u70B9</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0CtryRelease\u7684\u9ED8\u8BA4\u5B9E\u73B0\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u9700\u8981\u5177\u4F53\u7684\u5B50\u7C7B\u5B9E\u73B0\uFF0C\u5982\u679CtryRelease\u6210\u529F\uFF0C\u90A3\u4E48\u5982\u679C\u5934\u8282\u70B9\u4E0D\u4E3A\u7A7A\u5E76\u4E14\u5934\u8282\u70B9\u7684\u72B6\u6001\u4E0D\u4E3A0\uFF0C\u5219\u91CA\u653E\u5934\u8282\u70B9\u7684\u540E\u7EE7\u7ED3\u70B9\uFF0CunparkSuccessor\u65B9\u6CD5\u5DF2\u7ECF\u5206\u6790\u8FC7\uFF0C\u4E0D\u518D\u7D2F\u8D58\u3002</p><p>\u5BF9\u4E8E\u5176\u4ED6\u65B9\u6CD5\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5206\u6790\uFF0C\u4E0E\u524D\u9762\u5206\u6790\u7684\u65B9\u6CD5\u5927\u540C\u5C0F\u5F02\uFF0C\u6240\u4EE5\uFF0C\u4E0D\u518D\u7D2F\u8D58</p><h2 id="_7-abstractqueuedsynchronizer\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_7-abstractqueuedsynchronizer\u603B\u7ED3" aria-hidden="true">#</a> 7. AbstractQueuedSynchronizer\u603B\u7ED3</h2><p>\u5BF9\u4E8EAbstractQueuedSynchronizer\u7684\u5206\u6790\uFF0C\u6700\u6838\u5FC3\u7684\u5C31\u662Fsync queue\u7684\u5206\u6790\u3002</p><ul><li>\u6BCF\u4E00\u4E2A\u7ED3\u70B9\u90FD\u662F\u7531\u524D\u4E00\u4E2A\u7ED3\u70B9\u5524\u9192</li><li>\u5F53\u7ED3\u70B9\u53D1\u73B0\u524D\u9A71\u7ED3\u70B9\u662Fhead\u5E76\u4E14\u5C1D\u8BD5\u83B7\u53D6\u6210\u529F\uFF0C\u5219\u4F1A\u8F6E\u5230\u8BE5\u7EBF\u7A0B\u8FD0\u884C\u3002</li><li>condition queue\u4E2D\u7684\u7ED3\u70B9\u5411sync queue\u4E2D\u8F6C\u79FB\u662F\u901A\u8FC7signal\u64CD\u4F5C\u5B8C\u6210\u7684\u3002</li><li>\u5F53\u7ED3\u70B9\u7684\u72B6\u6001\u4E3ASIGNAL\u65F6\uFF0C\u8868\u793A\u540E\u9762\u7684\u7ED3\u70B9\u9700\u8981\u8FD0\u884C\u3002</li></ul><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,88),k={href:"https://pdai.tech/md/java/thread/java-thread-x-lock-AbstractQueuedSynchronizer.html",target:"_blank",rel:"noopener noreferrer"};function r(d,v){const s=l("ExternalLinkIcon");return e(),t("div",null,[u,n("p",null,[n("a",k,[p("JUC\u9501: \u9501\u6838\u5FC3\u7C7BAQS\u8BE6\u89E3"),o(s)])])])}const w=a(i,[["render",r],["__file","java-thread-x-lock-AbstractQueuedSynchronizer.html.vue"]]);export{w as default};
