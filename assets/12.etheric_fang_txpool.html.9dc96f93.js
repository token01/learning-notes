import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as e,a as n,b as a,d as t,e as c,r as l}from"./app.8c636bb6.js";const i={},u=c(`<blockquote><p>浅谈以太坊源码分析之txpool</p></blockquote><h2 id="交易池概念原理" tabindex="-1"><a class="header-anchor" href="#交易池概念原理" aria-hidden="true">#</a> 交易池概念原理</h2><p>交易池工作概况：</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glzwre4v4ej31120tcgpa.jpg" alt="image-20201225104748102" loading="lazy"></p><ol><li>交易池的数据来源主要来自： <ul><li>本地提交，也就是第三方应用通过调用本地以太坊节点的<code>RPC</code>服务所提交的交易；</li><li>远程同步，是指通过广播同步的形式，将其他以太坊节点的交易数据同步至本地节点;</li></ul></li><li>交易池中交易去向：被Miner模块获取并验证，用于挖矿；挖矿成功后写进区块并被广播</li><li><code>Miner</code>取走交易是复制，交易池中的交易并不减少。直到交易被写进规范链后才从交易池删除；</li><li>交易如果被写进分叉，交易池中的交易也不减少，等待重新打包。</li></ol><h2 id="关键数据结构" tabindex="-1"><a class="header-anchor" href="#关键数据结构" aria-hidden="true">#</a> 关键数据结构</h2><h3 id="txpoolconfig" tabindex="-1"><a class="header-anchor" href="#txpoolconfig" aria-hidden="true">#</a> TxPoolConfig</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> TxPoolConfig <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Locals    <span class="token punctuation">[</span><span class="token punctuation">]</span>common<span class="token punctuation">.</span>Address <span class="token comment">// 本地账户地址存放</span>
	NoLocals  <span class="token builtin">bool</span>             <span class="token comment">// 是否开启本地交易机制</span>
	Journal   <span class="token builtin">string</span>           <span class="token comment">// 本地交易存放路径</span>
	Rejournal time<span class="token punctuation">.</span>Duration    <span class="token comment">// 持久化本地交易的间隔</span>
	PriceLimit <span class="token builtin">uint64</span>         <span class="token comment">// 价格超出比例，若想覆盖一笔交易的时候，若价格上涨比例达不到要求，那么不能覆盖</span>
	PriceBump  <span class="token builtin">uint64</span> <span class="token comment">// 替换现有交易的最低价格涨幅百分比（一次）</span>
	AccountSlots <span class="token builtin">uint64</span> <span class="token comment">// 每个账户的可执行交易限制</span>
	GlobalSlots  <span class="token builtin">uint64</span> <span class="token comment">// 全部账户最大可执行交易</span>
	AccountQueue <span class="token builtin">uint64</span> <span class="token comment">// 单个账户不可执行的交易限制</span>
	GlobalQueue  <span class="token builtin">uint64</span> <span class="token comment">// 全部账户最大非执行交易限制</span>
	Lifetime time<span class="token punctuation">.</span>Duration <span class="token comment">// 一个账户在queue中的交易可以存活的时间</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认配置：</p><blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>Journal<span class="token punctuation">:</span>   <span class="token string">&quot;transactions.rlp&quot;</span><span class="token punctuation">,</span>
Rejournal<span class="token punctuation">:</span> time<span class="token punctuation">.</span>Hour<span class="token punctuation">,</span>

PriceLimit<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
PriceBump<span class="token punctuation">:</span>  <span class="token number">10</span><span class="token punctuation">,</span>

AccountSlots<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
GlobalSlots<span class="token punctuation">:</span>  <span class="token number">4096</span><span class="token punctuation">,</span>
AccountQueue<span class="token punctuation">:</span> <span class="token number">64</span><span class="token punctuation">,</span>
GlobalQueue<span class="token punctuation">:</span>  <span class="token number">1024</span><span class="token punctuation">,</span>

Lifetime<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Hour
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="txpool" tabindex="-1"><a class="header-anchor" href="#txpool" aria-hidden="true">#</a> TxPool</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> TxPool <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	config      TxPoolConfig <span class="token comment">// 交易池配置</span>
	chainconfig <span class="token operator">*</span>params<span class="token punctuation">.</span>ChainConfig <span class="token comment">// 区块链配置</span>
	chain       blockChain <span class="token comment">// 定义blockchain接口</span>
	gasPrice    <span class="token operator">*</span>big<span class="token punctuation">.</span>Int
	txFeed      event<span class="token punctuation">.</span>Feed <span class="token comment">//时间流</span>
	scope       event<span class="token punctuation">.</span>SubscriptionScope <span class="token comment">// 订阅范围</span>
	signer      types<span class="token punctuation">.</span>Signer <span class="token comment">//签名</span>
	mu          sync<span class="token punctuation">.</span>RWMutex

	istanbul <span class="token builtin">bool</span> <span class="token comment">// Fork indicator whether we are in the istanbul stage.</span>

	currentState  <span class="token operator">*</span>state<span class="token punctuation">.</span>StateDB <span class="token comment">// 当前头区块对应的状态</span>
	pendingNonces <span class="token operator">*</span>txNoncer      <span class="token comment">// Pending state tracking virtual nonces</span>
	currentMaxGas <span class="token builtin">uint64</span>         <span class="token comment">// Current gas limit for transaction caps</span>

	locals  <span class="token operator">*</span>accountSet <span class="token comment">// Set of local transaction to exempt from eviction rules</span>
	journal <span class="token operator">*</span>txJournal  <span class="token comment">// Journal of local transaction to back up to disk</span>

	pending <span class="token keyword">map</span><span class="token punctuation">[</span>common<span class="token punctuation">.</span>Address<span class="token punctuation">]</span><span class="token operator">*</span>txList   <span class="token comment">// All currently processable transactions</span>
	queue   <span class="token keyword">map</span><span class="token punctuation">[</span>common<span class="token punctuation">.</span>Address<span class="token punctuation">]</span><span class="token operator">*</span>txList   <span class="token comment">// Queued but non-processable transactions</span>
	beats   <span class="token keyword">map</span><span class="token punctuation">[</span>common<span class="token punctuation">.</span>Address<span class="token punctuation">]</span>time<span class="token punctuation">.</span>Time <span class="token comment">// Last heartbeat from each known account</span>
	all     <span class="token operator">*</span>txLookup                    <span class="token comment">// All transactions to allow lookups</span>
	priced  <span class="token operator">*</span>txPricedList                <span class="token comment">// All transactions sorted by price</span>

	chainHeadCh     <span class="token keyword">chan</span> ChainHeadEvent
	chainHeadSub    event<span class="token punctuation">.</span>Subscription
	reqResetCh      <span class="token keyword">chan</span> <span class="token operator">*</span>txpoolResetRequest
	reqPromoteCh    <span class="token keyword">chan</span> <span class="token operator">*</span>accountSet
	queueTxEventCh  <span class="token keyword">chan</span> <span class="token operator">*</span>types<span class="token punctuation">.</span>Transaction
	reorgDoneCh     <span class="token keyword">chan</span> <span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	reorgShutdownCh <span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">// requests shutdown of scheduleReorgLoop</span>
	wg              sync<span class="token punctuation">.</span>WaitGroup <span class="token comment">// tracks loop, scheduleReorgLoop</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="txpool初始化" tabindex="-1"><a class="header-anchor" href="#txpool初始化" aria-hidden="true">#</a> txpool初始化</h2><p><code>Txpool</code>初始化主要做了以下几件事：</p><p>①：检查配置 配置有问题则用默认值填充</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   config <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sanitize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于这部分的检查查看<code>TxPoolConfig</code>的字段。</p><p>②：初始化本地账户</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   pool<span class="token punctuation">.</span>locals <span class="token operator">=</span> <span class="token function">newAccountSet</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>signer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>③：将配置的本地账户地址加到交易池</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   pool<span class="token punctuation">.</span>locals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们在安装以太坊客户端可以指定一个数据存储目录，此目录便会存储着所有我们导入的或者通过本地客户端创建的帐户<code>keystore</code>文件。而这个加载过程便是从该目录加载帐户数据</p><p>④：更新交易池</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   pool<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">,</span> chain<span class="token punctuation">.</span><span class="token function">CurrentBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>⑤：创建所有交易存储的列表，所有交易的价格用最小堆存放</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   pool<span class="token punctuation">.</span>priced <span class="token operator">=</span> <span class="token function">newTxPricedList</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>all<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过排序，优先处理<code>gasprice</code>越高的交易。</p><p>⑥：如果本地交易开启 那么从本地磁盘加载本地交易</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   <span class="token keyword">if</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>NoLocals <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>Journal <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
   		pool<span class="token punctuation">.</span>journal <span class="token operator">=</span> <span class="token function">newTxJournal</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Journal<span class="token punctuation">)</span>
   
   		<span class="token keyword">if</span> err <span class="token operator">:=</span> pool<span class="token punctuation">.</span>journal<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>AddLocals<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   			log<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to load transaction journal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
   		<span class="token punctuation">}</span>
   		<span class="token keyword">if</span> err <span class="token operator">:=</span> pool<span class="token punctuation">.</span>journal<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span><span class="token function">local</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   			log<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to rotate transaction journal&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
   		<span class="token punctuation">}</span>
   	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑦：订阅链上事件消息</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   pool<span class="token punctuation">.</span>chainHeadSub <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">SubscribeChainHeadEvent</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>chainHeadCh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>⑧：开启主循环</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   <span class="token keyword">go</span> pool<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>注意：local交易比remote交易具有更高的权限，一是不轻易被替换；二是持久化，即通过一个本地的journal文件保存尚未打包的local交易。所以在节点启动的时候，优先从本地加载local交易。</p><p>本地地址会被加入白名单，凡由此地址发送的交易均被认为是local交易，不论是从本地递交还是从远端发送来的。</p></blockquote><p>到此为止交易池加载过程结束。</p><h2 id="添加交易到txpool" tabindex="-1"><a class="header-anchor" href="#添加交易到txpool" aria-hidden="true">#</a> 添加交易到txpool</h2><p>之前我们说过交易池中交易的来源一方面是其他节点广播过来的，一方面是本地提交的，追根到源代码一个是<code>AddLocal</code>，一个是<code>AddRemote</code>,不管哪个都会调用<code>addTxs</code>。我们对添加交易的讨论就会从这个函数开始，它主要做了以下几件事,先用一张简图说明一下：</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glzxhi23euj31ak0u0h34.jpg" alt="image-20201225104721173" loading="lazy"></p><ol><li><p>过滤池中已经存在的交易</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  errs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;known transaction: %x&quot;</span><span class="token punctuation">,</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			knownTxMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将交易添加到队列中</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>newErrs<span class="token punctuation">,</span> dirtyAddrs <span class="token operator">:=</span> pool<span class="token punctuation">.</span><span class="token function">addTxsLocked</span><span class="token punctuation">(</span>news<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>进入到addTxsLocked函数中：
replaced<span class="token punctuation">,</span> err <span class="token operator">:=</span> pool<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> local<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>进入到 <code>pool.add</code>函数中，这个<code>add</code>函数相当重要，它是将交易添加到<code>queue</code>中，等待后面的promote，到<code>pending</code>中去。如果在<code>queue</code>或者<code>pending</code>中已经存在，并且它的gas price更高时，将覆盖之前的交易。下面来拆开的分析一下add 这个函数。</p><p>①：看交易是否收到过，如果已经收到过就丢弃</p><div class="language-GO line-numbers-mode" data-ext="GO"><pre class="language-GO"><code>if pool.all.Get(hash) != nil {
		log.Trace(&quot;Discarding already known transaction&quot;, &quot;hash&quot;, hash)
		knownTxMeter.Mark(1)
		return false, fmt.Errorf(&quot;known transaction: %x&quot;, hash)
	}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②：如果交易没通过验证也要丢弃，这里的重点是验证函数：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>validateTx<span class="token punctuation">:</span> 主要做了以下几件事
<span class="token operator">-</span> 交易大小不能超过32kb
<span class="token operator">-</span> 交易金额不能为负
<span class="token operator">-</span> 交易gas值不能超出当前交易池设定的gaslimit
<span class="token operator">-</span> 交易签名必须正确
<span class="token operator">-</span> 如果交易为远程交易，则需验证其gasprice是否小于交易池gasprice最小值，如果是本地，优先打包，不管gasprice
<span class="token operator">-</span> 判断当前交易nonce值是否过低
<span class="token operator">-</span> 交易所需花费的转帐手续费是否大于帐户余额  cost <span class="token operator">==</span> V <span class="token operator">+</span> GP <span class="token operator">*</span> GL
<span class="token operator">-</span> 判断交易花费gas是否小于其预估花费gas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③：如果交易池已满，丢弃价格过低的交易</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token function">uint64</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>GlobalSlots<span class="token operator">+</span>pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>GlobalQueue <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token operator">!</span>local <span class="token operator">&amp;&amp;</span> pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Underpriced</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> pool<span class="token punctuation">.</span>locals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token operator">...</span>
		<span class="token punctuation">}</span>
		drop <span class="token operator">:=</span> pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Discard</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">int</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>GlobalSlots<span class="token operator">+</span>pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>GlobalQueue<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pool<span class="token punctuation">.</span>locals<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> drop <span class="token punctuation">{</span>
			<span class="token operator">...</span>
			pool<span class="token punctuation">.</span><span class="token function">removeTx</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这边的<code>GlobalSlots</code>和<code>GlobalQueue</code> ，就是我们说的<code>pending</code>和<code>queue</code>的最大容量，如果交易池的交易数超过两者之和，就要丢弃价格过低的交易。</p></li></ol><p>④：判断当前交易在pending队列中是否存在<code>nonce</code>值相同的交易。存在则判断当前交易所设置的<code>gasprice</code>是否超过设置的<code>PriceBump</code>百分比，超过则替换覆盖已存在的交易，否则报错返回<code>替换交易gasprice过低</code>，并且把它扔到<code>queue</code>队列中<code>(enqueueTx)</code>。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>   <span class="token keyword">if</span> list <span class="token operator">:=</span> pool<span class="token punctuation">.</span>pending<span class="token punctuation">[</span>from<span class="token punctuation">]</span><span class="token punctuation">;</span> list <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">Overlaps</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Nonce already pending, check if required price bump is met</span>
   		inserted<span class="token punctuation">,</span> old <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>PriceBump<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token operator">!</span>inserted <span class="token punctuation">{</span>
   			pendingDiscardMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
   			<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">,</span> ErrReplaceUnderpriced
   		<span class="token punctuation">}</span>
   		<span class="token comment">// New transaction is better, replace old one</span>
   		<span class="token keyword">if</span> old <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
   			pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   			pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Removed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
   			pendingReplaceMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
   		<span class="token punctuation">}</span>
   		pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
   		pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
   		pool<span class="token punctuation">.</span><span class="token function">journalTx</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
   		pool<span class="token punctuation">.</span><span class="token function">queueTxEvent</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
   		log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Pooled new executable transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&quot;from&quot;</span><span class="token punctuation">,</span> from<span class="token punctuation">,</span> <span class="token string">&quot;to&quot;</span><span class="token punctuation">,</span> tx<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   		<span class="token keyword">return</span> old <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
   	<span class="token punctuation">}</span>
   	<span class="token comment">// New transaction isn&#39;t replacing a pending one, push into queue</span>
   	replaced<span class="token punctuation">,</span> err <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token function">enqueueTx</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加交易的流程就到此为止了。接下来就是如何把<code>queue</code>（暂时不可执行）中添加的交易扔到<code>pending</code>（可执行交易）中，速成<code>promote</code>。</p><ol start="3"><li><p>提升交易</p><p>提升交易主要把交易从<code>queue</code>扔到<code>pending</code>中，我们在接下来的里面重点讲</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>done <span class="token operator">:=</span> pool<span class="token punctuation">.</span><span class="token function">requestPromoteExecutables</span><span class="token punctuation">(</span>dirtyAddrs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="交易升级" tabindex="-1"><a class="header-anchor" href="#交易升级" aria-hidden="true">#</a> 交易升级</h2><p><code>promoteExecutables</code>将<code>future queue</code>中的交易移动到<code>pending</code>中，同时也会删除很多无效交易比如<code>nonce</code>低或者余额低等等，主要分以下步骤：先看张图：</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glzxix54vaj313m0si4d2.jpg" alt="image-20201225104612253" loading="lazy"></p><p>①：将所有<code>queue</code>中<code>nonce</code>低于账户当前<code>nonce</code>的交易从<code>all</code>里面删除</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>forwards <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Forward</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>currentState<span class="token punctuation">.</span><span class="token function">GetNonce</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> forwards <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Removed old queued transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②：将所有<code>queue</code>中花费大于账户余额 或者<code>gas</code>大于限制的交易从all里面删除</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>drops<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>currentState<span class="token punctuation">.</span><span class="token function">GetBalance</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">,</span> pool<span class="token punctuation">.</span>currentMaxGas<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> drops <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Removed unpayable queued transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③：将所有可执行的交易从<code>queue</code>里面移到<code>pending</code>里面（<code>proteTx</code>）</p><p>注：可执行交易：将<code>pending</code>里面<code>nonce</code>值大于等于账户当前状态<code>nonce</code>的，且<code>nonce</code>连续的几笔交易作为准备好的交易</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>readies <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Ready</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>pendingNonces<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> readies <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> pool<span class="token punctuation">.</span><span class="token function">promoteTx</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> tx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Promoting queued transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
				promoted <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>promoted<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点就是 <strong>promoteTx</strong>的处理，这个方法与add的不同之处在于，<code>addTx</code>是获得到的<strong>新交易插入pending</strong>，而<code>promoteTx</code>是将<strong>queue列表中的Txs放入pending</strong>接下来我们先看看里面是如何来处理的：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>inserted<span class="token punctuation">,</span> old <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> pool<span class="token punctuation">.</span>config<span class="token punctuation">.</span>PriceBump<span class="token punctuation">)</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>inserted <span class="token punctuation">{</span>
		<span class="token comment">// An older transaction was better, discard this</span>
		<span class="token comment">// 老的交易更好，删除这个交易</span>
		pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
		pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Removed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

		pendingDiscardMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// Otherwise discard any previous transaction and mark this</span>
	<span class="token comment">// 现在这个交易更好，删除旧的交易</span>
	<span class="token keyword">if</span> old <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Removed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

		pendingReplaceMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主要就做了这几件事：</p><ol><li>将交易插入<code>pending</code>中，如果待插入的交易<code>nonce</code>在<code>pending</code>列表中存在，那么待插入的交易<code>gas price</code>大于或等于原交易价值的<code>110%（</code>跟<code>pricebump</code>设定有关）时，替换原交易</li><li>如果新交易替换了某个交易，从<code>all</code>列表中删除老交易</li><li>最后更新一下<code>all</code>列表</li></ol><p>经过<code>proteTx</code>之后，要扔到<code>pending</code>的交易都放在了<code>promoted []*types.Transaction</code>中，再回到<code>promoteExecutables</code>中，继续下面步骤：</p><p>④：如果非本地账户<code>queue</code>大于限制（<code>AccountQueue</code>），从最后取出<code>nonce</code>较大的交易进行<code>remove</code></p><div class="language-GO line-numbers-mode" data-ext="GO"><pre class="language-GO"><code>if !pool.locals.contains(addr) {
			caps = list.Cap(int(pool.config.AccountQueue))
			for _, tx := range caps {
				hash := tx.Hash()
				pool.all.Remove(hash)
			...
		}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑤：最后如果队列中此账户的交易为空则删除此账户</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> list<span class="token punctuation">.</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">delete</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>queue<span class="token punctuation">,</span> addr<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此我们的升级交易要做的事情就完毕了。</p><hr><h2 id="交易降级" tabindex="-1"><a class="header-anchor" href="#交易降级" aria-hidden="true">#</a> 交易降级</h2><p>交易降级的几个场景：</p><ol><li>出现了新的区块，将会从<code>pending</code>中移除出现在区块中的交易到<code>queue</code>中</li><li>或者是另外一笔交易（<code>gas price</code> 更高）,则会从<code>pending</code>中移除到<code>queue</code>中</li></ol><p>关键函数：demoteUnexecutables，主要做的事情如下：</p><p>①：遍历<code>pending</code>中所有地址对应的交易列表</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> addr<span class="token punctuation">,</span> list <span class="token operator">:=</span> <span class="token keyword">range</span> pool<span class="token punctuation">.</span>pending <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>②：删除所有认为过旧的交易（<code>low nonce</code>）</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>olds <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Forward</span><span class="token punctuation">(</span>nonce<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> olds <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Removed old pending transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③：删除所有费用过高的交易（余额低或用尽），并将所有无效者送到<code>queue</code>中以备后用</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>drops<span class="token punctuation">,</span> invalids <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Filter</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>currentState<span class="token punctuation">.</span><span class="token function">GetBalance</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">,</span> pool<span class="token punctuation">.</span>currentMaxGas<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> drops <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Removed unpayable pending transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
			pool<span class="token punctuation">.</span>all<span class="token punctuation">.</span><span class="token function">Remove</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		pool<span class="token punctuation">.</span>priced<span class="token punctuation">.</span><span class="token function">Removed</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>olds<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">len</span><span class="token punctuation">(</span>drops<span class="token punctuation">)</span><span class="token punctuation">)</span>
		pendingNofundsMeter<span class="token punctuation">.</span><span class="token function">Mark</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>drops<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> invalids <span class="token punctuation">{</span>
			hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Trace</span><span class="token punctuation">(</span><span class="token string">&quot;Demoting pending transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
			pool<span class="token punctuation">.</span><span class="token function">enqueueTx</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④：如果交易前面有间隙，将后面的交易移到<code>queue</code>中</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> list<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span>txs<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>nonce<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			gapped <span class="token operator">:=</span> list<span class="token punctuation">.</span><span class="token function">Cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> gapped <span class="token punctuation">{</span>
				hash <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Demoting invalidated transaction&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span>
				pool<span class="token punctuation">.</span><span class="token function">enqueueTx</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> tx<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			pendingGauge<span class="token punctuation">.</span><span class="token function">Dec</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>gapped<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：间隙的出现通常是因为交易余额问题导致的。假如原规范链 A 上交易m花费10，分叉后该账户又在分叉链B发出一个交易m花费20，这就导致该账户余额本来可以支付A链上的某笔交易，但在B链上可能就不够了。这个余额不足的交易在B如果是n+3，那么在A链上n+2，n+4号交易之间就出现了空隙，这就导致从n+3开始往后所有的交易都要降级；</p><p>到此为止交易降级结束。</p><hr><h2 id="重置交易池" tabindex="-1"><a class="header-anchor" href="#重置交易池" aria-hidden="true">#</a> 重置交易池</h2><hr><p><strong>重置交易池</strong>将检索区块链的当前状态（主要由于更新导致链状态变化），并确保交易池的内容对于链状态而言是有效的。</p><p><code>reset</code>的调用时机如下：</p><ol><li><code>TxPool</code>初始化的过程：<code>NewTxPool</code>；</li><li><code>TxPool</code>事件监听<code>go</code>程收到规范链更新事件</li></ol><p>流程图如下：</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjq7vc6bz8j31260sodlq.jpg" alt="image-20201015185551752" loading="lazy"></p><p>根据上面流程图，主要功能是由于规范链的更新，重新整理交易池：</p><p>①：<em>如果老区块头不为空 且老区块头不是新区块的父区块，说明新老区块不在一条链上</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> oldHead <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> oldHead<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> newHead<span class="token punctuation">.</span>ParentHash <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②：<em>如果新头区块和旧头区块相差大于64，则所有交易不必回退到交易池</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> depth <span class="token operator">:=</span> <span class="token function">uint64</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">Abs</span><span class="token punctuation">(</span><span class="token function">float64</span><span class="token punctuation">(</span>oldNum<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">float64</span><span class="token punctuation">(</span>newNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> depth <span class="token operator">&gt;</span> <span class="token number">64</span> <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token string">&quot;Skipping deep transaction reorg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;depth&quot;</span><span class="token punctuation">,</span> depth<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③：<em>如果旧链的头区块大于新链的头区块高度，旧链向后退并回收所有回退的交易</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> rem<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> add<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				discarded <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>discarded<span class="token punctuation">,</span> rem<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> rem <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">GetBlock</span><span class="token punctuation">(</span>rem<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rem<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> rem <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unrooted old chain seen by tx pool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> oldHead<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> oldHead<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④：<em>如果新链的头区块大于旧链的头区块，新链后退并回收交易</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> add<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> rem<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				included <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>included<span class="token punctuation">,</span> add<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> add <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">GetBlock</span><span class="token punctuation">(</span>add<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> add<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> add <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unrooted new chain seen by tx pool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> newHead<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> newHead<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑤：<em>当新旧链到达同一高度的时候同时回退，知道找到共同的父节点</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> rem<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> add<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				discarded <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>discarded<span class="token punctuation">,</span> rem<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> rem <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">GetBlock</span><span class="token punctuation">(</span>rem<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rem<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> rem <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unrooted old chain seen by tx pool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> oldHead<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> oldHead<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>
				included <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>included<span class="token punctuation">,</span> add<span class="token punctuation">.</span><span class="token function">Transactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span> add <span class="token operator">=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">GetBlock</span><span class="token punctuation">(</span>add<span class="token punctuation">.</span><span class="token function">ParentHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> add<span class="token punctuation">.</span><span class="token function">NumberU64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> add <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
					log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Unrooted new chain seen by tx pool&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> newHead<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> newHead<span class="token punctuation">.</span><span class="token function">Hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token keyword">return</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑥：<em>给交易池设置最新的世界状态</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>statedb<span class="token punctuation">,</span> err <span class="token operator">:=</span> pool<span class="token punctuation">.</span>chain<span class="token punctuation">.</span><span class="token function">StateAt</span><span class="token punctuation">(</span>newHead<span class="token punctuation">.</span>Root<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to reset txpool state&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	pool<span class="token punctuation">.</span>currentState <span class="token operator">=</span> statedb
	pool<span class="token punctuation">.</span>pendingNonces <span class="token operator">=</span> <span class="token function">newTxNoncer</span><span class="token punctuation">(</span>statedb<span class="token punctuation">)</span>
	pool<span class="token punctuation">.</span>currentMaxGas <span class="token operator">=</span> newHead<span class="token punctuation">.</span>GasLimit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⑦：<em>把旧链回退的交易放入交易池</em></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>senderCacher<span class="token punctuation">.</span><span class="token function">recover</span><span class="token punctuation">(</span>pool<span class="token punctuation">.</span>signer<span class="token punctuation">,</span> reinject<span class="token punctuation">)</span>
pool<span class="token punctuation">.</span><span class="token function">addTxsLocked</span><span class="token punctuation">(</span>reinject<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>到此整个<code>reset</code>的流程就结束了。</p><hr>`,103),d=n("p",null,"参考：",-1),r={href:"https://mindcarver.cn/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/mindcarver/blockchain_guide",target:"_blank",rel:"noopener noreferrer"},v={href:"https://learnblockchain.cn/2019/06/03/eth-txpool/#%E6%B8%85%E7%90%86%E4%BA%A4%E6%98%93%E6%B1%A0",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/lj900911/article/details/84825739",target:"_blank",rel:"noopener noreferrer"};function b(g,h){const s=l("ExternalLinkIcon");return o(),e("div",null,[u,n("blockquote",null,[d,n("p",null,[n("a",r,[a("https://mindcarver.cn/"),t(s)])]),n("p",null,[n("a",k,[a("https://github.com/mindcarver/blockchain_guide"),t(s)])]),n("p",null,[n("a",v,[a("https://learnblockchain.cn/2019/06/03/eth-txpool/#清理交易池"),t(s)])]),n("p",null,[n("a",m,[a("https://blog.csdn.net/lj900911/article/details/84825739"),t(s)])])])])}const q=p(i,[["render",b],["__file","12.etheric_fang_txpool.html.vue"]]);export{q as default};
