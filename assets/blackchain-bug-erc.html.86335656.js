import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as r,a as n,b as a,d as s,w as i,e as t,r as o}from"./app.d3a29ae6.js";const u={},d={id:"atn-抵御合约攻击的报告",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#atn-抵御合约攻击的报告","aria-hidden":"true"},"#",-1),b={href:"https://atn.io/",target:"_blank",rel:"noopener noreferrer"},f=n("h3",{id:"基于erc223与ds-auth的混合漏洞",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基于erc223与ds-auth的混合漏洞","aria-hidden":"true"},"#"),a(" 基于ERC223与DS-AUTH的混合漏洞")],-1),h=n("p",null,"2018年5月11日中午，ATN技术人员收到异常监控报告，显示ATN Token供应量出现异常，迅速介入后发现Token合约由于存在漏洞受到攻击。本报告描述黑客的攻击操作、利用的合约漏洞以及ATN的应对追踪方法。",-1),v=n("h4",{id:"攻击",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#攻击","aria-hidden":"true"},"#"),a(" 攻击：")],-1),_=n("p",null,"黑客利用ERC223方法漏洞，获得提权，将自己的地址设为owner",-1),m={href:"https://etherscan.io/tx/0x3b7bd618c49e693c92b2d6bfb3a5adeae498d9d170c15fcc79dd374166d28b7b",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"黑客在获得owner权限后，发行1100w ATN到自己的攻击主地址",-1),x={href:"https://etherscan.io/tx/0x9b559ffae76d4b75d2f21bd643d44d1b96ee013c79918511e3127664f8f7a910",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,"黑客将owner设置恢复，企图隐藏踪迹",-1),w={href:"https://etherscan.io/tx/0xfd5c2180f002539cd636132f1baae0e318d8f1162fb62fb5e3493788a034545a",target:"_blank",rel:"noopener noreferrer"},A=n("li",null,[n("p",null,"黑客从主地址将偷来的黑币分散到14个地址中")],-1),N=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>    0x54868268e975f3989d77e0a67c943a5e65ed4a73 3411558.258
    0x62892fd48fd4b2bbf86b75fc4def0a37b224fcc1 946828.3
    0x57be7b4d3e1c6684dac6de664b7809185c8fc356 929,995.9
    0x3b361e253c41897d78902ce5f7e1677fd01083da 838,991
    0x7279e64d3ae20745b150e330fc080050deebeb4d 784,409.41
    0xb729eac33217c0b28251261194d79edd89d18292 762,518.6
    0xe67dc4b47e0ac9b649e52cdb883370d348871d64 682,026.9
    0x44660bae953555ccfdcc5a38c78a5a568b672daa 564,288
    0xf7e915e7ec24818f15c11ec74f7b8d4a604d7538 551,018.8
    0xa4b45e8cca78e862d3729f10f4998da4200f10ef 438,277.6
    0xc98e179f2909b1d0bce5b5d22c92bf803fc0d559 350,597.35
    0xd5f898c7914e05ec7eaa3bf67aafd544a5bb5f24 325,291.1
    0x3dd815af5d728903367a3036bc6dbe291de6f0ee 282,069.29
    0x6d8750f28fffb8e9920490edb4ed1817a4736998 110,261.2948\`&lt;/pre&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用的合约漏洞：</p>`,2),y={href:"https://github.com/ethereum/EIPs/issues/223",title:"ERC223",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/dapphub/ds-auth",title:"dapphub/ds-auth",target:"_blank",rel:"noopener noreferrer"},j=n("ul",null,[n("li",null,"天然支持Token互换协议，即ERC20Token与ERC20Token之间的直接互换。本质上是发送ATN时，通过回调函数执行额外指令，比如发回其他Token。"),n("li",null,"可扩展的、结构化的权限控制能力。"),n("li",null,"Token合约可升级，在出现意外状况时可进行治理。")],-1),E=n("p",null,"单独使用 ERC223 或者 ds-auth 库时，并没有什么问题，但是两者结合时，黑客利用了回调函数回调了setOwner方法，从而获得高级权限。",-1),R={href:"https://github.com/ATNIO/atn-contracts/blob/7203781ad8d106ec6d1f9ca8305e76dd1274b181/src/ATN.sol#L100",title:"ERC223转账",target:"_blank",rel:"noopener noreferrer"},G=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span> address _to<span class="token punctuation">,</span> uint256 _amount<span class="token punctuation">,</span>
  bytes _data<span class="token punctuation">,</span> string _custom_fallback</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool success</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  ERC223ReceivingContract receiver <span class="token operator">=</span>
  <span class="token function">ERC223ReceivingContract</span><span class="token punctuation">(</span>_to<span class="token punctuation">)</span><span class="token punctuation">;</span>
  receiving<span class="token punctuation">.</span>call<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">byte4</span><span class="token punctuation">(</span><span class="token function">keccak256</span><span class="token punctuation">(</span>_custom_fallback<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _from<span class="token punctuation">,</span> amout<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),O={href:"https://etherscan.io/tx/0x3b7bd618c49e693c92b2d6bfb3a5adeae498d9d170c15fcc79dd374166d28b7b",title:"转账",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">transferFrom</span><span class="token punctuation">(</span> hacker_address<span class="token punctuation">,</span> atn_contract_address<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string">&quot;setOwner(address)&quot;</span><span class="token punctuation">)</span>

    <span class="token literal-property property">_from</span><span class="token operator">:</span> <span class="token number">0x2eca25e9e19b31633db106341a1ba78accba7d0f</span> <span class="token operator">--</span> 黑客地址
    <span class="token literal-property property">_to</span><span class="token operator">:</span> <span class="token number">0x461733c17b0755ca5649b6db08b3e213fcf22546</span> <span class="token operator">--</span> <span class="token constant">ATN</span>合约地址
    <span class="token literal-property property">_amount</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token literal-property property">_data</span><span class="token operator">:</span> <span class="token number">0x0</span>
    <span class="token literal-property property">_custom_fallback</span><span class="token operator">:</span> <span class="token function">setOwner</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该交易执行的时候 receiver 会被 <code>_to(ATN合约地址)</code> 赋值， ATN 合约会调用 <code>_custom_fallback</code> 即 DSAuth 中的 setOwner(adddress) 方法，而此时的 msg.sender 变为 ATN 合约地址，<code>owner_</code>参数为<code>_from(黑客地址)</code></p>`,2),F={href:"https://github.com/dapphub/ds-auth/blob/c0050bbb6807027c623b1a1ee7afd86515cdb004/src/auth.sol#L36",title:"代码",target:"_blank",rel:"noopener noreferrer"},z=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>functuin <span class="token function">setOwner</span><span class="token punctuation">(</span>address owner_<span class="token punctuation">)</span> <span class="token keyword">public</span> auth
    <span class="token punctuation">{</span>
    own <span class="token operator">=</span> owner_<span class="token punctuation">;</span>
    <span class="token function">LogSetOwner</span><span class="token punctuation">(</span>owner<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B={href:"https://github.com/dapphub/ds-auth/blob/c0050bbb6807027c623b1a1ee7afd86515cdb004/src/auth.sol#L52",title:"auth",target:"_blank",rel:"noopener noreferrer"},L=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>modifier auth <span class="token punctuation">{</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token function">isAuthorized</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sig<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isAuthorized</span><span class="token punctuation">(</span><span class="token parameter">address src<span class="token punctuation">,</span> bytes4 sig</span><span class="token punctuation">)</span> internal view <span class="token function">returns</span>
<span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>src <span class="token operator">==</span> <span class="token function">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//此处的src与ATN合约地址一致返回true</span>
<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> … <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I={href:"https://etherscan.io/tx/0x9b559ffae76d4b75d2f21bd643d44d1b96ee013c79918511e3127664f8f7a910",title:"另外一笔交易",target:"_blank",rel:"noopener noreferrer"},q={href:"https://etherscan.io/tx/0xfd5c2180f002539cd636132f1baae0e318d8f1162fb62fb5e3493788a034545a",title:"权限复原",target:"_blank",rel:"noopener noreferrer"},H=t('<h4 id="漏洞评估" tabindex="-1"><a class="header-anchor" href="#漏洞评估" aria-hidden="true">#</a> 漏洞评估：</h4><p>漏洞等级：严重</p><p>产品影响：atn-contracts</p><p>可能损失：导致Token总供应量发生变化</p><p>发现了基于ERC223标准与dapphub/ds-auth库相结合的合约漏洞，更准确的说是在ERC223回调函数发起时，调用本身合约时可能造成内部权限控制失效。</p><h4 id="应对措施" tabindex="-1"><a class="header-anchor" href="#应对措施" aria-hidden="true">#</a> 应对措施：</h4><p>经过上面的追踪，发现黑客将黑币分散在14个不同的新地址中，而这些地址中并没有ETH，暂时不存在立即的转账到交易所销赃的风险。我方有能力立即冻结黑客的黑币，恢复供应量的变化，所以，重点在如何追踪到黑客，应对思路如下：</p><ol><li>准备修复措施，增加Guard合约禁止回调函数向ATN合约本身回调；增加黑名单合约，随时冻结黑客地址</li><li>等待黑客向交易所发送充值交易，以便获得进一步证据</li><li>获得证据后，立即启动修复流程，将黑客相关地址加入黑名单，禁止其转移ATN Token</li><li>基金会销毁等量ATN Token以恢复供给总量，并在ATN主链上线时予以修正。</li></ol><p>产品修复：新增Guard合约，禁止对ATN合约发送转账交易，进而防止回调函数对ATN合约进行方法调用。</p><p><img src="https://images.seebug.org/content/images/2018/06/d8ea9310-e97f-4b77-9016-ad637f072b46.png-w331s" alt="" loading="lazy"></p>',10),V=n("p",null,"由于 ATN 合约的灵活性和治理扩展性，创建并添加了两个 Guard 合约。",-1),D={href:"https://etherscan.io/tx/0xb486decc811ef9744af223222004adbe3869706eb3f0f8e8736ae306a4ec7d88",title:"FrozenGuard",target:"_blank",rel:"noopener noreferrer"},U={href:"https://etherscan.io/tx/0xf1cbbbd0ecd0098ce49b25644885870fe704465373ffb20f6a3117ad44531eae",title:"StopTransferGuard",target:"_blank",rel:"noopener noreferrer"},P={href:"https://etherscan.io/tx/0xd8bfe8948259a0de2d28d14c6e45bda41ea09dc557ef38765964d6816c6bea8a",title:"销毁",target:"_blank",rel:"noopener noreferrer"},J=n("p",null,"ATN Gurad 会在发生转账交易时，对交易的合法性进行处理。",-1),K=n("p",null,"ATN 转账代码如下：",-1),M=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span> address _to<span class="token punctuation">,</span> uint256 _amount<span class="token punctuation">,</span>
    bytes _data<span class="token punctuation">,</span> string _custom_fallback</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool success</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isContract</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">TokenController</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onTransfer</span><span class="token punctuation">(</span>_from<span class="token punctuation">,</span> _to<span class="token punctuation">,</span> _amount<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
     <span class="token operator">...</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Q=n("code",null,"TokenController",-1),W=n("code",null,"onTranser(_from, _to, amount)",-1),X={href:"https://github.com/ATNIO/atn-contracts/blob/7203781ad8d106ec6d1f9ca8305e76dd1274b181/src/SwapController.sol#L29",title:"实现",target:"_blank",rel:"noopener noreferrer"},Y=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onTransfer</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span>address _to<span class="token punctuation">,</span> uint _amount</span><span class="token punctuation">)</span> <span class="token keyword">public</span>
    <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>uint i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&amp;</span>lt<span class="token punctuation">;</span>guards<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gruards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">onTokenTransfer</span><span class="token punctuation">(</span>_from<span class="token punctuation">,</span> _to<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SwapController 中维护了 TokenTransferGuard 的合约列表，可以添加多个 Guard 合约对交易的合法性进行验证。</p>`,2),Z={href:"https://gist.github.com/HackFisher/ad2567bda8a082dd2e70ea86b427ee4d",title:"FrozenGuard.sol",target:"_blank",rel:"noopener noreferrer"},$=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onTokenTransfer</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span> addres _to<span class="token punctuation">,</span> uint _amount</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>_to <span class="token operator">==</span> tokenAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tokenAddress为 ATN 合约地址，禁止对 ATN 地址发送转账交易。</p><p>StopTransferGurad.sol 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onTokenTransfer</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span> addres _to<span class="token punctuation">,</span> uint _amount</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span><span class="token parameter">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>stopped <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span> isBlack<span class="token punctuation">[</span>_from<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>isBlack 存储所有黑客非法发行 ATN 的账户地址，支持动态更新。所有转账到这些的 ATN 也将无法转账。</p><p>stopped 该Guard的开关。</p><p>安全审计结果：</p><p>模拟冻结黑名单地址转账结果：</p>`,8),nn={href:"https://kovan.etherscan.io/tx/0x68755305fee0d995f4ee79f6ab9d14e1aaf5d4b1c2d5838acbbaff464b6579d5",target:"_blank",rel:"noopener noreferrer"},an=n("p",null,"模拟向ATN合约转账结果：",-1),sn={href:"https://kovan.etherscan.io/tx/0x78738ab30a507ac209fb4aaf80be7e92c558bff8767887d3e1f4e0a445f16444",target:"_blank",rel:"noopener noreferrer"},en=n("p",null,"模拟黑客攻击结果：",-1),tn={href:"https://kovan.etherscan.io/tx/0x7c72613fca4440b7775d08fde6beeba0e428a975cdf58a912ee76cb0e1ea87af",target:"_blank",rel:"noopener noreferrer"},on=n("p",null,"转账都失败，判定漏洞已修复。",-1),pn=n("p",null,"最终，黑客向交易所进行充值，获得证据",-1),cn={href:"https://etherscan.io/tx/0x18bd80b810f6a6b6d397901d677657d39f8471069bcb7cfbf490c1946dfd617d",target:"_blank",rel:"noopener noreferrer"},ln=n("p",null,"Guard安全修复合约即刻部署，黑客相关地址予以禁止转账处理。",-1),rn={href:"https://etherscan.io/tx/0xd8bfe8948259a0de2d28d14c6e45bda41ea09dc557ef38765964d6816c6bea8a",title:"销毁",target:"_blank",rel:"noopener noreferrer"},un=t('<h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><p>“合约无小事”</p><p>由于 ATN 合约设计增加多项功能及治理机制，增加了审计的难度和复杂度，在发布到链上之前进行的几次内部和外部审计均未发现该漏洞。</p><p>攻击发生后，ATN技术团队及时察觉极速反应并部署了ATN Token合约的防御措施并迅速修复了此未知漏洞；在实时监测到黑客将资金转入交易所地址基本可断定为黑客攻击（而非白帽行为）后，跟相关交易所协商追踪黑客信息并保留追责权利。</p><p>合约的安全审计，仅依靠开发者的经验和能力总有隐患，过去业内的几次合约漏洞事件也说明了这个问题。将来我们需要有更多的类似形式化验证的工具来帮助开发者发现潜在问题，从而编写更加健壮的合约。</p><h4 id="对其他以太坊token合约的预警" tabindex="-1"><a class="header-anchor" href="#对其他以太坊token合约的预警" aria-hidden="true">#</a> 对其他以太坊Token合约的预警:</h4><p>所有同时用到类似ERC223推荐实现的custom_fallback和ds-auth的合约，或者说内置有其他权限控制得合约，很可能也存在这个漏洞，需要检查确认。</p><p>ERC223的这个custom_fallback 的call处理，可以让public获取Token合约的this作为msg.sender调用其他方法(虽然参数限定，但是也可以通过编码的方式hack)，另外ds-auth默认是this可以获得授权，这边有一些争议，是否ds-auth默认授权范围太大。</p>',8),dn={href:"https://paper.seebug.org",target:"_blank",rel:"noopener noreferrer"};function kn(bn,fn){const e=o("ExternalLinkIcon"),p=o("center");return l(),r("div",null,[n("h2",d,[k,a(),n("a",b,[a("ATN"),s(e)]),a(" 抵御合约攻击的报告")]),f,h,v,n("ol",null,[n("li",null,[_,n("p",null,[n("a",m,[a("https://etherscan.io/tx/0x3b7bd618c49e693c92b2d6bfb3a5adeae498d9d170c15fcc79dd374166d28b7b"),s(e)])])]),n("li",null,[g,n("p",null,[n("a",x,[a("https://etherscan.io/tx/0x9b559ffae76d4b75d2f21bd643d44d1b96ee013c79918511e3127664f8f7a910"),s(e)])])]),n("li",null,[T,n("p",null,[n("a",w,[a("https://etherscan.io/tx/0xfd5c2180f002539cd636132f1baae0e318d8f1162fb62fb5e3493788a034545a"),s(e)])])]),A]),N,n("p",null,[a("ATN Token合约采用的是在传统ERC20Token合约基础上的扩展版本"),n("a",y,[a("ERC223"),s(e)]),a("，并在其中使用了 "),n("a",C,[a("dapphub/ds-auth"),s(e)]),a(" 库。采用这样的设计是为了实现以下几个能力：")]),j,E,n("p",null,[n("a",R,[a("ERC223转账"),s(e)]),a("代码如下：")]),G,n("p",null,[a("当黑客"),n("a",O,[a("转账"),s(e)]),a("时在方法中输入以下参数：")]),S,n("p",null,[a("ds-auth库中setOwner "),n("a",F,[a("代码"),s(e)]),a("如下：")]),z,n("p",null,[a("此时 setOwner 会先验证 auth 合法性的，而 msg.sender 就是ATN的合约地址。setOwner 的 modifier "),n("a",B,[a("auth"),s(e)]),a(" 代码如下：")]),L,n("p",null,[a("通过利用这个ERC223方法与DS-AUTH库的混合漏洞，黑客将 ATN Token合约的 owner 变更为自己控制的地址。获取 owner 权限后，黑客发起"),n("a",I,[a("另外一笔交易"),s(e)]),a("对 ATN 合约进行攻击，调用 mint 方法给另外一个地址发行 1100wATN。")]),n("p",null,[a("最后，黑客调用 setOwner 方法将"),n("a",q,[a("权限复原"),s(e)]),a("。")]),H,s(p,null,{default:i(()=>[a("ATN整体关系图")]),_:1}),V,n("ol",null,[n("li",null,[n("p",null,[a("创建添加 "),n("a",D,[a("FrozenGuard"),s(e)]),a(" 合约，禁止对 ATN 合约发送转账交易。")])]),n("li",null,[n("p",null,[a("创建添加 "),n("a",U,[a("StopTransferGuard"),s(e)]),a(" 合约，冻结黑客账户地址，禁止其 ATN进行转账。")])]),n("li",null,[n("p",null,[a("基金会"),n("a",P,[a("销毁"),s(e)]),a(" 1100w ATN，恢复 ATN 总量。")]),J,K])]),M,n("p",null,[a("ATN 的 "),Q,a(" 接管了 "),W,a(" 处理方法，实现对交易的合法性验证。具体方法在 SwapController 中"),n("a",X,[a("实现"),s(e)]),a("：")]),Y,n("p",null,[n("a",Z,[a("FrozenGuard.sol"),s(e)]),a(" 代码如下：")]),$,n("p",null,[n("a",nn,[a("https://kovan.etherscan.io/tx/0x68755305fee0d995f4ee79f6ab9d14e1aaf5d4b1c2d5838acbbaff464b6579d5"),s(e)])]),an,n("p",null,[n("a",sn,[a("https://kovan.etherscan.io/tx/0x78738ab30a507ac209fb4aaf80be7e92c558bff8767887d3e1f4e0a445f16444"),s(e)])]),en,n("p",null,[n("a",tn,[a("https://kovan.etherscan.io/tx/0x7c72613fca4440b7775d08fde6beeba0e428a975cdf58a912ee76cb0e1ea87af"),s(e)])]),on,pn,n("p",null,[n("a",cn,[a("https://etherscan.io/tx/0x18bd80b810f6a6b6d397901d677657d39f8471069bcb7cfbf490c1946dfd617d"),s(e)])]),ln,n("p",null,[a("ATN将在交易所配合的情况下向黑客进行追踪，并保留向执法机构报案的权利。基金会"),n("a",rn,[a("销毁"),s(e)]),a(" 1100w ATN，恢复 ATN 总量，并将在主链上线时对黑客地址内的资产予以剔除。")]),un,n("blockquote",null,[n("p",null,[a("BUG记录于 "),n("a",dn,[a("https://paper.seebug.org"),s(e)])])])])}const _n=c(u,[["render",kn],["__file","blackchain-bug-erc.html.vue"]]);export{_n as default};
