import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,d as a,b as o,f as c,r as l}from"./app.283e29d5.js";const u={},i=c(`<h1 id="java8-\u51FD\u6570\u7F16\u7A0B-lambda\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#java8-\u51FD\u6570\u7F16\u7A0B-lambda\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> Java8-\u51FD\u6570\u7F16\u7A0B(lambda\u8868\u8FBE\u5F0F)</h1><blockquote><p>\u6211\u4EEC\u5173\u5FC3\u7684\u662F\u5982\u4F55\u5199\u51FA\u597D\u4EE3\u7801\uFF0C\u800C\u4E0D\u662F\u7B26\u5408\u51FD\u6570\u7F16\u7A0B\u98CE\u683C\u7684\u4EE3\u7801\u3002</p></blockquote><h2 id="_1-\u51FD\u6570\u7F16\u7A0B\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u51FD\u6570\u7F16\u7A0B\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u51FD\u6570\u7F16\u7A0B\u7B80\u4ECB</h2><blockquote><p>\u5728Java\u4E16\u754C\u91CC\u9762\uFF0C\u9762\u5411\u5BF9\u8C61\u8FD8\u662F\u4E3B\u6D41\u601D\u60F3\uFF0C\u5BF9\u4E8E\u4E60\u60EF\u4E86\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u5F00\u53D1\u8005\u6765\u8BF4\uFF0C\u62BD\u8C61\u7684\u6982\u5FF5\u5E76\u4E0D\u964C\u751F\u3002<strong>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u662F\u5BF9\u6570\u636E\u8FDB\u884C\u62BD\u8C61\uFF0C\u800C\u51FD\u6570\u5F0F\u7F16\u7A0B\u662F\u5BF9\u884C\u4E3A\u8FDB\u884C\u62BD\u8C61</strong>\u3002\u73B0\u5B9E\u4E16\u754C\u4E2D\uFF0C\u6570\u636E\u548C\u884C\u4E3A\u5E76\u5B58\uFF0C\u7A0B\u5E8F\u4E5F\u662F\u5982\u6B64\uFF0C\u56E0\u6B64\u8FD9\u4E24\u79CD\u7F16\u7A0B\u65B9\u5F0F\u6211\u4EEC\u90FD\u5F97\u5B66\u3002</p></blockquote><blockquote><p>\u8FD9\u79CD\u65B0\u7684\u62BD\u8C61\u65B9\u5F0F\u8FD8\u6709\u5176\u4ED6\u597D\u5904\u3002\u5F88\u591A\u4EBA<strong>\u4E0D\u603B\u662F\u5728\u7F16\u5199\u6027\u80FD\u4F18\u5148\u7684\u4EE3\u7801</strong>\uFF0C\u5BF9\u4E8E\u8FD9\u4E9B\u4EBA\u6765\u8BF4\uFF0C\u51FD\u6570\u5F0F\u7F16\u7A0B\u5E26\u6765\u7684\u597D\u5904\u5C24\u4E3A\u660E\u663E\u3002\u7A0B\u5E8F\u5458<strong>\u80FD\u7F16\u5199\u51FA\u66F4\u5BB9\u6613\u9605\u8BFB\u7684\u4EE3\u7801</strong>\u2014\u2014\u8FD9\u79CD\u4EE3\u7801\u66F4\u591A\u5730\u8868\u8FBE\u4E86\u4E1A\u52A1\u903B\u8F91\uFF0C\u800C\u4E0D\u662F\u4ECE\u673A\u5236\u4E0A\u5982\u4F55\u5B9E\u73B0\u3002<strong>\u6613\u8BFB\u7684\u4EE3\u7801\u4E5F\u6613\u4E8E\u7EF4\u62A4\u3001\u66F4\u53EF\u9760\u3001\u66F4\u4E0D\u5BB9\u6613\u51FA\u9519</strong>\u3002</p></blockquote><blockquote><p>\u5728\u5199\u56DE\u8C03\u51FD\u6570\u548C\u4E8B\u4EF6\u5904\u7406\u5668\u65F6\uFF0C\u7A0B\u5E8F\u5458\u4E0D\u5FC5\u518D\u7EA0\u7F20\u4E8E\u533F\u540D\u5185\u90E8\u7C7B\u7684\u5197\u7E41\u548C\u53EF\u8BFB\u6027\uFF0C\u51FD\u6570\u5F0F\u7F16\u7A0B\u8BA9\u4E8B\u4EF6\u5904\u7406\u7CFB\u7EDF\u53D8\u5F97\u66F4\u52A0\u7B80\u5355\u3002\u80FD\u5C06\u51FD\u6570\u65B9\u4FBF\u5730\u4F20\u9012\u4E5F\u8BA9\u7F16\u5199\u60F0\u6027\u4EE3\u7801\u53D8\u5F97\u5BB9\u6613\uFF0C\u53EA\u6709\u5728\u771F\u6B63\u9700\u8981\u7684\u65F6\u5019\uFF0C\u624D\u521D\u59CB\u5316\u53D8\u91CF\u7684\u503C\u3002</p></blockquote><p><strong>\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u662F\u5BF9\u6570\u636E\u8FDB\u884C\u62BD\u8C61\uFF1B\u51FD\u6570\u5F0F\u7F16\u7A0B\u662F\u5BF9\u884C\u4E3A\u8FDB\u884C\u62BD\u8C61\u3002</strong></p><p>\u6838\u5FC3\u601D\u60F3: \u4F7F\u7528\u4E0D\u53EF\u53D8\u503C\u548C\u51FD\u6570\uFF0C\u51FD\u6570\u5BF9\u4E00\u4E2A\u503C\u8FDB\u884C\u5904\u7406\uFF0C\u6620\u5C04\u6210\u53E6\u4E00\u4E2A\u503C\u3002</p><p>\u5BF9\u6838\u5FC3\u7C7B\u5E93\u7684\u6539\u8FDB\u4E3B\u8981\u5305\u62EC\u96C6\u5408\u7C7B\u7684API\u548C\u65B0\u5F15\u5165\u7684\u6D41Stream\u3002\u6D41\u4F7F\u7A0B\u5E8F\u5458\u53EF\u4EE5\u7AD9\u5728\u66F4\u9AD8\u7684\u62BD\u8C61\u5C42\u6B21\u4E0A\u5BF9\u96C6\u5408\u8FDB\u884C\u64CD\u4F5C\u3002</p><h2 id="_2-lambda\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-lambda\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 2. lambda\u8868\u8FBE\u5F0F</h2><p>Lambda\u8868\u8FBE\u5F0F\uFF08\u4E5F\u79F0\u95ED\u5305\uFF09\uFF0C\u662FJava8\u4E2D\u6700\u53D7\u671F\u5F85\u548C\u6B22\u8FCE\u7684\u65B0\u7279\u6027\u4E4B\u4E00\u3002<strong>Lambda\u8868\u8FBE\u5F0F\u672C\u8D28\u662F\u4E00\u4E2A\u533F\u540D\u51FD\u6570</strong>\uFF0C\u4F46\u662F\u5B83\u5E76\u4E0D\u662F\u533F\u540D\u7C7B\u7684\u8BED\u6CD5\u7CD6\uFF0C\u5B83\u8BA9 Java \u5F00\u59CB\u8D70\u5411\u51FD\u6570\u5F0F\u7F16\u7A0B\uFF0C\u5176\u5B9E\u73B0\u539F\u7406\u533A\u522B\u4E8E\u4E00\u822C\u7684\u533F\u540D\u7C7B\u4E2D\u7684\u533F\u540D\u51FD\u6570\u3002<strong>\u5728Java\u8BED\u6CD5\u5C42\u9762Lambda\u8868\u8FBE\u5F0F\u5141\u8BB8\u51FD\u6570\u4F5C\u4E3A\u4E00\u4E2A\u65B9\u6CD5\u7684\u53C2\u6570\uFF08\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u5230\u65B9\u6CD5\u4E2D\uFF09\uFF0C\u6216\u8005\u628A\u4EE3\u7801\u770B\u6210\u6570\u636E</strong>\u3002Lambda\u8868\u8FBE\u5F0F\u53EF\u4EE5\u7B80\u5316\u51FD\u6570\u5F0F\u63A5\u53E3\u7684\u4F7F\u7528\u3002<strong>\u51FD\u6570\u5F0F\u63A5\u53E3\u5C31\u662F\u4E00\u4E2A\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u666E\u901A\u63A5\u53E3</strong>\uFF0C\u50CF\u8FD9\u6837\u7684\u63A5\u53E3\u5C31\u53EF\u4EE5\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\u6765\u7B80\u5316\u4EE3\u7801\u7684\u7F16\u5199\u3002</p><h3 id="_2-1-\u5F15\u5165lambda\u8868\u8FBE\u5F0F\u7684\u521D\u8877" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5F15\u5165lambda\u8868\u8FBE\u5F0F\u7684\u521D\u8877" aria-hidden="true">#</a> 2.1 \u5F15\u5165Lambda\u8868\u8FBE\u5F0F\u7684\u521D\u8877</h3><p>\u5F15\u5165Lambda\u8868\u8FBE\u5F0F\u7684\u521D\u8877\uFF1A\u5982\u679C\u4E00\u4E2A\u63A5\u53E3\u53EA\u5305\u542B\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u90A3\u4E48\u533F\u540D\u7C7B\u7684\u8BED\u6CD5\u4F1A\u53D8\u5F97\u5341\u5206\u7B28\u62D9\u548C\u4E0D\u6E05\u695A\uFF0C\u4EA7\u751F\u5927\u91CF\u7684\u6A21\u677F\u4EE3\u7801\uFF0C\u5F52\u7ED3\u4E00\u4E0B\u5C31\u662F\uFF1A\u4EE3\u7801\u5197\u4F59\u662F\u533F\u540D\u7C7B\u7684\u6700\u5927\u5F0A\u7AEF\u3002\u5728\u7F16\u7A0B\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u5F88\u591A\u65F6\u5019\u5E0C\u671B\u628A\u529F\u80FD\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u5230\u53E6\u4E00\u4E2A\u65B9\u6CD5\uFF0CLambda\u8868\u8FBE\u5F0F\u5C31\u662F\u4E3A\u6B64\u800C\u751F\u3002</p><h3 id="_2-2-\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-2-\u4F18\u70B9" aria-hidden="true">#</a> 2.2 \u4F18\u70B9</h3><p>\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\u53EF\u4EE5\u7B80\u5316\u63A5\u53E3\u533F\u540D\u5185\u90E8\u7C7B\u7684\u4EE3\u7801\uFF0C\u53EF\u4EE5\u51CF\u5C11\u7C7B\u6587\u4EF6\u7684\u751F\u6210\uFF0C\u540C\u65F6\u5F15\u5165\u4E86\u5F3A\u5927\u7684\u7C7B\u578B\u63A8\u65AD\u548C\u65B9\u6CD5\u5F15\u7528\u7279\u6027\uFF0C\u7B80\u5355\u7684\u529F\u80FD\u751A\u81F3\u53EF\u4EE5\u4E00\u884C\u4EE3\u7801\u89E3\u51B3\uFF0C\u89E3\u653E\u533F\u540D\u7C7B\u7684\u675F\u7F1A\u3002</p><p>\u628A\u529F\u80FD\u4F5C\u4E3A\u53C2\u6570\u5411\u4E0B\u4F20\u9012\uFF0C\u4E3A\u51FD\u6570\u5F0F\u7F16\u7A0B\u63D0\u4F9B\u4E86\u652F\u6301\uFF0C\u8BA9 Java \u5F00\u59CB\u8D70\u5411\u51FD\u6570\u5F0F\u7F16\u7A0B\u3002</p><h3 id="_2-3-\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-3-\u7F3A\u70B9" aria-hidden="true">#</a> 2.3 \u7F3A\u70B9</h3><p>\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\u4F1A\u51CF\u5F31\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\uFF0C\u800C\u4E14Lambda\u8868\u8FBE\u5F0F\u7684\u4F7F\u7528\u5C40\u9650\u6027\u6BD4\u8F83\u5F3A\uFF0C\u53EA\u80FD\u9002\u7528\u4E8E\u63A5\u53E3\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u65F6\u4F7F\u7528\uFF0C\u4E0D\u65B9\u4FBF\u8C03\u8BD5\u3002</p><h3 id="_2-4-\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#_2-4-\u5176\u4ED6" aria-hidden="true">#</a> 2.4 \u5176\u4ED6</h3><ul><li><p>lambda\u8868\u8FBE\u5F0F\u4EC5\u80FD\u653E\u5165\u5982\u4E0B\u4EE3\u7801: \u9884\u5B9A\u4E49\u4F7F\u7528\u4E86 @Functional \u6CE8\u91CA\u7684\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u81EA\u5E26\u4E00\u4E2A\u62BD\u8C61\u51FD\u6570\u7684\u65B9\u6CD5\uFF0C\u6216\u8005SAM(Single Abstract Method \u5355\u4E2A\u62BD\u8C61\u65B9\u6CD5)\u7C7B\u578B\u3002\u8FD9\u4E9B\u79F0\u4E3Alambda\u8868\u8FBE\u5F0F\u7684\u76EE\u6807\u7C7B\u578B\uFF0C\u53EF\u4EE5\u7528\u4F5C\u8FD4\u56DE\u7C7B\u578B\uFF0C\u6216lambda\u76EE\u6807\u4EE3\u7801\u7684\u53C2\u6570\u3002\u4F8B\u5982\uFF0C\u82E5\u4E00\u4E2A\u65B9\u6CD5\u63A5\u6536Runnable\u3001Comparable\u6216\u8005 Callable \u63A5\u53E3\uFF0C\u90FD\u6709\u5355\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u4F20\u5165lambda\u8868\u8FBE\u5F0F\u3002\u7C7B\u4F3C\u7684\uFF0C\u5982\u679C\u4E00\u4E2A\u65B9\u6CD5\u63A5\u53D7\u58F0\u660E\u4E8E java.util.function \u5305\u5185\u7684\u63A5\u53E3\uFF0C\u4F8B\u5982 Predicate\u3001Function\u3001Consumer \u6216 Supplier\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5411\u5176\u4F20lambda\u8868\u8FBE\u5F0F\u3002</p></li><li><p>lambda\u8868\u8FBE\u5F0F\u5185\u53EF\u4EE5\u4F7F\u7528<code>\u65B9\u6CD5\u5F15\u7528</code>\uFF0C\u4EC5\u5F53\u8BE5\u65B9\u6CD5\u4E0D\u4FEE\u6539lambda\u8868\u8FBE\u5F0F\u63D0\u4F9B\u7684\u53C2\u6570\u3002\u672C\u4F8B\u4E2D\u7684lambda\u8868\u8FBE\u5F0F\u53EF\u4EE5\u6362\u4E3A\u65B9\u6CD5\u5F15\u7528\uFF0C\u56E0\u4E3A\u8FD9\u4EC5\u662F\u4E00\u4E2A\u53C2\u6570\u76F8\u540C\u7684\u7B80\u5355\u65B9\u6CD5\u8C03\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F7F\u7528\u65B9\u6CD5\u5F15\u7528  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u800C\uFF0C\u82E5\u5BF9\u53C2\u6570\u6709\u4EFB\u4F55\u4FEE\u6539\uFF0C\u5219\u4E0D\u80FD\u4F7F\u7528\u65B9\u6CD5\u5F15\u7528\uFF0C\u800C\u9700\u952E\u5165\u5B8C\u6574\u5730lambda\u8868\u8FBE\u5F0F\uFF0C\u5982\u4E0B\u6240\u793A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E8B\u5B9E\u4E0A\uFF0C\u53EF\u4EE5\u7701\u7565\u8FD9\u91CC\u7684lambda\u53C2\u6570\u7684\u7C7B\u578B\u58F0\u660E\uFF0C\u7F16\u8BD1\u5668\u53EF\u4EE5\u4ECE\u5217\u8868\u7684\u7C7B\u5C5E\u6027\u63A8\u6D4B\u51FA\u6765\u3002</p></li><li><p>lambda\u5185\u90E8\u53EF\u4EE5\u4F7F\u7528\u9759\u6001\u3001\u975E\u9759\u6001\u548C\u5C40\u90E8\u53D8\u91CF\uFF0C\u8FD9\u79F0\u4E3Alambda\u5185\u7684\u53D8\u91CF\u6355\u83B7\u3002</p></li><li><p>Lambda\u8868\u8FBE\u5F0F\u5728Java\u4E2D\u53C8\u79F0\u4E3A\u95ED\u5305\u6216\u533F\u540D\u51FD\u6570\uFF0C\u6240\u4EE5\u5982\u679C\u6709\u540C\u4E8B\u628A\u5B83\u53EB\u95ED\u5305\u7684\u65F6\u5019\uFF0C\u4E0D\u7528\u60CA\u8BB6\u3002</p></li><li><p>Lambda\u65B9\u6CD5\u5728\u7F16\u8BD1\u5668\u5185\u90E8\u88AB\u7FFB\u8BD1\u6210\u79C1\u6709\u65B9\u6CD5\uFF0C\u5E76\u6D3E\u53D1 invokedynamic \u5B57\u8282\u7801\u6307\u4EE4\u6765\u8FDB\u884C\u8C03\u7528\u3002\u53EF\u4EE5\u4F7F\u7528JDK\u4E2D\u7684 javap \u5DE5\u5177\u6765\u53CD\u7F16\u8BD1class\u6587\u4EF6\u3002\u4F7F\u7528 javap -p \u6216 javap -c -v \u547D\u4EE4\u6765\u770B\u4E00\u770Blambda\u8868\u8FBE\u5F0F\u751F\u6210\u7684\u5B57\u8282\u7801\u3002\u5927\u81F4\u5E94\u8BE5\u957F\u8FD9\u6837:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span> lambda$<span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>lambda\u8868\u8FBE\u5F0F\u6709\u4E2A\u9650\u5236\uFF0C\u90A3\u5C31\u662F\u53EA\u80FD\u5F15\u7528 final \u6216 final \u5C40\u90E8\u53D8\u91CF\uFF0C\u8FD9\u5C31\u662F\u8BF4\u4E0D\u80FD\u5728lambda\u5185\u90E8\u4FEE\u6539\u5B9A\u4E49\u5728\u57DF\u5916\u7684\u53D8\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> primes <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> factor <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
primes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>element <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> factor<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Compile time error : &quot;local variables referenced from a lambda expression must be final or effectively final&quot; \u53E6\u5916\uFF0C\u53EA\u662F\u8BBF\u95EE\u5B83\u800C\u4E0D\u4F5C\u4FEE\u6539\u662F\u53EF\u4EE5\u7684\uFF0C\u5982\u4E0B\u6240\u793A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> primes <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> factor <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
primes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>element <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>factor<span class="token operator">*</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_3-\u57FA\u672C\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#_3-\u57FA\u672C\u6982\u5FF5" aria-hidden="true">#</a> 3. \u57FA\u672C\u6982\u5FF5</h2><h3 id="_3-1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F\u7684\u524D\u63D0" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F\u7684\u524D\u63D0" aria-hidden="true">#</a> 3.1 \u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\u7684\u524D\u63D0</h3><p><strong>\u53EA\u9002\u7528\u4E8E\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u5373\u63A5\u53E3\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF01\uFF01\uFF01</strong></p><h3 id="_3-2-\u51FD\u6570\u5F0F\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_3-2-\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> 3.2 \u51FD\u6570\u5F0F\u63A5\u53E3</h3><ul><li><strong>\u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u63A5\u53E3\u88AB\u4E3A\u51FD\u6570\u5F0F\u63A5\u53E3</strong></li><li><strong>\u53EA\u6709\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u624D\u53EF\u4EE5\u8F6C\u6362\u4E3Alambda\u8868\u8FBE\u5F0F</strong></li><li><strong>\u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5\u5FC5\u987B\u4E88\u4EE5\u5B9E\u73B0\uFF0C\u5B83\u4EEC\u4E0D\u662F\u62BD\u8C61\u65B9\u6CD5</strong></li><li><strong>\u51FD\u6570\u5F0F\u63A5\u53E3\u53EF\u4EE5\u663E\u5F0F\u7684\u88AB@FunctionalInterface\u6240\u8868\u793A\uFF0C\u5F53\u88AB\u6807\u8BC6\u7684\u63A5\u53E3\u4E0D\u6EE1\u8DB3\u89C4\u5B9A\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u63D0\u793A\u62A5\u9519</strong></li></ul><h3 id="_3-2-\u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-\u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5" aria-hidden="true">#</a> 3.2 \u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5</h3><p>\u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5\u7684\u542B\u4E49\u53EF\u4EE5\u89C1Java\u5B98\u65B9\u6559\u7A0B\u4E2D\u5BF9\u5E94\u7684\u7AE0\u8282\uFF0C\u5728\u6587\u672B\u7684\u53C2\u8003\u8D44\u6599\u53EF\u4EE5\u67E5\u770B\u5177\u4F53\u7684\u94FE\u63A5\uFF1A</p><blockquote><p>Default methods enable you to add new functionality to the interfaces of your libraries and ensure binary compatibility with code written for older versions of those interfaces.</p></blockquote><p>\u7B80\u5355\u6765\u8BF4\u5C31\u662F\uFF1A\u9ED8\u8BA4\u65B9\u6CD5\u5141\u8BB8\u4F60\u5728\u4F60\u7684\u7C7B\u5E93\u4E2D\u5411\u63A5\u53E3\u6DFB\u52A0\u65B0\u7684\u529F\u80FD\uFF0C\u5E76\u786E\u4FDD\u65B0\u589E\u7684\u9ED8\u8BA4\u65B9\u6CD5\u4E0E\u8FD9\u4E9B\u63A5\u53E3\u7684\u8F83\u65E9\u7248\u672C\u7F16\u5199\u7684\u4EE3\u7801\u4E8C\u8FDB\u5236\u517C\u5BB9\u3002</p><p>\u63A5\u53E3\u9ED8\u8BA4\u65B9\u6CD5\uFF08\u4E0B\u79F0\u9ED8\u8BA4\u65B9\u6CD5\uFF09\u901A\u8FC7default\u5173\u952E\u5B57\u58F0\u660E\uFF0C\u53EF\u4EE5\u76F4\u63A5\u5728\u63A5\u53E3\u4E2D\u7F16\u5199\u65B9\u6CD5\u4F53\u3002\u4E5F\u5C31\u662F\u9ED8\u8BA4\u65B9\u6CD5\u65E2\u58F0\u660E\u4E86\u65B9\u6CD5\uFF0C\u4E5F\u5B9E\u73B0\u4E86\u65B9\u6CD5\u3002\u8FD9\u4E00\u70B9\u5F88\u91CD\u8981\uFF0C\u5728\u9ED8\u8BA4\u65B9\u6CD5\u7279\u6027\u51FA\u73B0\u4E4B\u524D\uFF0CJava\u7F16\u7A0B\u8BED\u8A00\u89C4\u8303\u4E2D\uFF0C\u63A5\u53E3\u7684\u672C\u8D28\u662F\u62BD\u8C61\u65B9\u6CD5\u7684\u96C6\u5408\uFF0C\u800C\u81EA\u9ED8\u8BA4\u65B9\u6CD5\u7279\u6027\u51FA\u73B0\u4E4B\u540E\uFF0C\u63A5\u53E3\u7684\u672C\u8D28\u4E5F\u6539\u53D8\u4E86\u3002\u9ED8\u8BA4\u65B9\u6CD5\u7684\u4E00\u4E2A\u4F8B\u5B50\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">DefaultMethod</span> <span class="token punctuation">{</span>

    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultVoidMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s say hello!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">class</span> <span class="token class-name">Impl</span> <span class="token keyword">implements</span> <span class="token class-name">DefaultMethod</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
        <span class="token class-name">DefaultMethod</span> defaultMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Impl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>defaultMethod<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">&quot;thinkwon&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7EE7\u627F\u4E00\u4E2A\u5B9A\u4E49\u4E86\u9ED8\u8BA4\u65B9\u6CD5\u7684\u63A5\u53E3\uFF0C\u90A3\u4E48\u53EF\u4EE5\u6709\u5982\u4E0B\u7684\u505A\u6CD5\uFF1A</p><ul><li><p>\u5B8C\u5168\u5FFD\u7565\u7236\u63A5\u53E3\u7684\u9ED8\u8BA4\u65B9\u6CD5\uFF0C\u90A3\u4E48\u76F8\u5F53\u4E8E\u76F4\u63A5\u7EE7\u627F\u7236\u63A5\u53E3\u7684\u9ED8\u8BA4\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF08<strong>\u65B9\u6CD5\u7EE7\u627F</strong>\uFF09\u3002</p></li><li><p>\u91CD\u65B0\u58F0\u660E\u9ED8\u8BA4\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u7279\u6307\u53BB\u6389default\u5173\u952E\u5B57\uFF0C\u7528public abstract\u5173\u952E\u5B57\u91CD\u65B0\u58F0\u660E\u5BF9\u5E94\u7684\u65B9\u6CD5\uFF0C\u76F8\u5F53\u4E8E\u8BA9\u9ED8\u8BA4\u65B9\u6CD5\u8F6C\u53D8\u4E3A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5B50\u7C7B\u9700\u8981\u8FDB\u884C\u5B9E\u73B0\uFF08<strong>\u65B9\u6CD5\u62BD\u8C61</strong>\uFF09\u3002</p></li><li><p>\u91CD\u65B0\u5B9A\u4E49\u9ED8\u8BA4\u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u76F4\u63A5\u8986\u76D6\u7236\u63A5\u53E3\u4E2D\u7684\u5B9E\u73B0\uFF08<strong>\u65B9\u6CD5\u8986\u76D6</strong>\uFF09\u3002</p></li></ul><p>\u7ED3\u5408\u524D\u9762\u4E00\u8282\u63D0\u5230\u7684\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u7EFC\u5408\u5F97\u51FA\u4E00\u4E2A\u7ED3\u8BBA\uFF1A<strong>\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u4E5F\u5C31\u662F\u6709\u4E14\u4EC5\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u63A5\u53E3\uFF0C\u53EF\u4EE5\u5B9A\u4E490\u4E2A\u6216\u8005N\uFF08N &gt;= 1\uFF09\u4E2A\u9ED8\u8BA4\u65B9\u6CD5\u3002</strong></p><p>\u8FD9\u4E00\u70B9\u6B63\u662FStream\u7279\u6027\u5F15\u5165\u7684\u7406\u8BBA\u57FA\u7840\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CustomFunctionalInterface</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">defaultVoidMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s say hello!&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-lambda\u8868\u8FBE\u5F0F\u7684\u91CD\u8981\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#_4-lambda\u8868\u8FBE\u5F0F\u7684\u91CD\u8981\u7279\u5F81" aria-hidden="true">#</a> 4. Lambda\u8868\u8FBE\u5F0F\u7684\u91CD\u8981\u7279\u5F81</h2><h3 id="_4-1-lambda-\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-1-lambda-\u8BED\u6CD5" aria-hidden="true">#</a> 4.1 lambda \u8BED\u6CD5</h3><ul><li><p><strong>\u53EF\u9009\u53C2\u6570\u7C7B\u578B\u58F0\u660E</strong>\uFF1A \u4E0D\u9700\u8981\u58F0\u660E\u53C2\u6570\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u53EF\u4EE5\u7EDF\u4E00\u8BC6\u522B\u53C2\u6570\u503C\u3002</p><blockquote><p>\u4E5F\u5C31\u8BF4(s) -&gt; System.out.println(s)\u548C (String s) -&gt; System.out.println(s)\u662F\u4E00\u6837\u7684\u7F16\u8BD1\u5668\u4F1A\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u6DFB\u52A0\u53C2\u6570\u7C7B\u578B\u3002</p></blockquote></li><li><p><strong>\u53EF\u9009\u7684\u53C2\u6570\u5706\u62EC\u53F7</strong>\uFF1A \u4E00\u4E2A\u53C2\u6570\u65E0\u9700\u5B9A\u4E49\u5706\u62EC\u53F7\uFF0C\u4F46\u591A\u4E2A\u53C2\u6570\u9700\u8981\u5B9A\u4E49\u5706\u62EC\u53F7\u3002\u4F8B\u5982\uFF1A</p><blockquote><p>s -&gt; System.out.println(s) \u4E00\u4E2A\u53C2\u6570\u4E0D\u9700\u8981\u6DFB\u52A0\u5706\u62EC\u53F7\u3002 (x, y) -&gt; Integer.compare(y, x) \u4E24\u4E2A\u53C2\u6570\u6DFB\u52A0\u4E86\u5706\u62EC\u53F7\uFF0C\u5426\u5219\u7F16\u8BD1\u5668\u62A5\u9519\u3002</p></blockquote></li><li><p><code>\u53EF\u9009\u7684Lambda\u4F53\u5927\u62EC\u53F7</code>\uFF1A\u5982\u679C\u4E3B\u4F53\u5305\u542B\u4E86\u4E00\u4E2A\u8BED\u53E5\uFF0C\u5C31\u4E0D\u9700\u8981\u4F7F\u7528\u5927\u62EC\u53F7\u3002</p><blockquote><ol><li>s -&gt; System.out.println(s) , \u4E0D\u9700\u8981\u5927\u62EC\u53F7.</li><li>(s) -&gt; { if (s.equals(\u201Cs\u201D)){ System.out.println(s); } }; \u9700\u8981\u5927\u62EC\u53F7</li></ol></blockquote></li><li><p>\u53EF\u9009\u7684\u8FD4\u56DE\u5173\u952E\u5B57\uFF1A \u5982\u679CLambda\u4F53\u4E0D\u52A0{ }\u5C31\u4E0D\u7528\u5199return\uFF0CLambda\u4F53\u52A0\u4E0A{ }\u5C31\u9700\u8981\u6DFB\u52A0return\u3002</p><blockquote><p>Lambda\u4F53\u4E0D\u52A0{ }\u5C31\u4E0D\u7528\u5199return\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> com <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Lambda\u4F53\u52A0\u4E0A{ }\u5C31\u9700\u8981\u6DFB\u52A0return\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> com <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">int</span> compare <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token keyword">return</span> compare<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="_4-2-\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_4-2-\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> 4.2 \u65B9\u6CD5\u5F15\u7528</h3><p>\u65B9\u6CD5\u5F15\u7528\uFF08Method Reference\uFF09\u662F\u7528\u6765\u76F4\u63A5\u8BBF\u95EE\u7C7B\u6216\u8005\u5B9E\u4F8B\u5DF2\u7ECF\u5B58\u5728\u7684\u65B9\u6CD5\u6216\u8005\u6784\u9020\u65B9\u6CD5\u3002\u65B9\u6CD5\u5F15\u7528\u63D0\u4F9B\u4E86\u4E00\u79CD\u5F15\u7528\u800C\u4E0D\u6267\u884C\u65B9\u6CD5\u7684\u65B9\u5F0F\uFF0C\u5B83\u9700\u8981\u7531\u517C\u5BB9\u7684\u51FD\u6570\u5F0F\u63A5\u53E3\u6784\u6210\u7684\u76EE\u6807\u7C7B\u578B\u4E0A\u4E0B\u6587\u3002\u8BA1\u7B97\u65F6\uFF0C\u65B9\u6CD5\u5F15\u7528\u4F1A\u521B\u5EFA\u51FD\u6570\u5F0F\u63A5\u53E3\u7684\u4E00\u4E2A\u5B9E\u4F8B\u3002</p><p>\u5F53Lambda\u8868\u8FBE\u5F0F\u4E2D\u53EA\u662F\u6267\u884C\u4E00\u4E2A\u65B9\u6CD5\u8C03\u7528\u65F6\uFF0C\u4E0D\u7528Lambda\u8868\u8FBE\u5F0F\uFF0C\u76F4\u63A5\u901A\u8FC7\u65B9\u6CD5\u5F15\u7528\u7684\u5F62\u5F0F\u53EF\u8BFB\u6027\u66F4\u9AD8\u4E00\u4E9B\u3002</p><p>\u4F5C\u7528</p><ul><li><p>\u65B9\u6CD5\u5F15\u7528\u7684\u552F\u4E00\u7528\u9014\u662F\u652F\u6301Lambda\u7684\u7B80\u5199\u3002</p></li><li><p>\u65B9\u6CD5\u5F15\u7528\u63D0\u9AD8\u4E86\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\uFF0C\u4E5F\u4F7F\u903B\u8F91\u66F4\u52A0\u6E05\u6670\u3002</p></li></ul><p>\u7EC4\u6210</p><ul><li>\u4F7F\u7528::\u64CD\u4F5C\u7B26\u5C06\u65B9\u6CD5\u540D\u548C\u5BF9\u8C61\u6216\u7C7B\u7684\u540D\u5B57\u5206\u9694\u5F00\u3002::\u662F\u57DF\u64CD\u4F5C\u7B26\uFF08\u4E5F\u53EF\u4EE5\u79F0\u4F5C\u5B9A\u754C\u7B26\u3001\u5206\u9694\u7B26\uFF09\u3002</li></ul><p>\u5E38\u89C1\u7684\u65B9\u6CD5\u5F15\u7528</p><table><thead><tr><th>\u65B9\u6CD5\u5F15\u7528</th><th>\u7B49\u4EF7\u7684Lambda\u8868\u8FBE\u5F0F</th></tr></thead><tbody><tr><td>String::valueOf</td><td>x -&gt; String.valueOf(x)</td></tr><tr><td>Object::toString</td><td>x -&gt; x.toString()</td></tr><tr><td>x::toString</td><td>() -&gt; x.toString()</td></tr><tr><td>ArrayList::new</td><td>() -&gt; new ArrayList&lt;&gt;()</td></tr></tbody></table><p>\u65B9\u6CD5\u5F15\u7528\u7684\u7C7B\u578B\u5F52\u7ED3\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u7C7B\u578B</th><th>\u4F8B\u5B50</th></tr></thead><tbody><tr><td>\u9759\u6001\u65B9\u6CD5\u5F15\u7528</td><td>ClassName::methodName</td></tr><tr><td>\u6307\u5B9A\u5BF9\u8C61\u5B9E\u4F8B\u65B9\u6CD5\u5F15\u7528</td><td>instanceRef::methodName</td></tr><tr><td>\u7279\u5B9A\u7C7B\u578B\u4EFB\u610F\u5BF9\u8C61\u65B9\u6CD5\u5F15\u7528</td><td>ContainingType::methodName</td></tr><tr><td>\u8D85\u7C7B\u65B9\u6CD5\u5F15\u7528</td><td>supper::methodName</td></tr><tr><td>\u6784\u9020\u5668\u65B9\u6CD5\u5F15\u7528</td><td>ClassName::new</td></tr><tr><td>\u6570\u7EC4\u6784\u9020\u5668\u65B9\u6CD5\u5F15\u7528</td><td>TypeName[]::new</td></tr></tbody></table><p>\u53EF\u89C1\u5176\u57FA\u672C\u5F62\u5F0F\u662F\uFF1A\u65B9\u6CD5\u5BB9\u5668::\u65B9\u6CD5\u540D\u79F0\u6216\u8005\u5173\u952E\u5B57\u3002</p><h2 id="_5-stream\u64CD\u4F5C\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#_5-stream\u64CD\u4F5C\u5206\u7C7B" aria-hidden="true">#</a> 5. Stream\u64CD\u4F5C\u5206\u7C7B</h2><h3 id="_3-1-\u60F0\u6027\u6C42\u503C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-1-\u60F0\u6027\u6C42\u503C\u65B9\u6CD5" aria-hidden="true">#</a> 3.1 \u60F0\u6027\u6C42\u503C\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>lists<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u4E0A\u793A\u4F8B\uFF0C\u8FD9\u884C\u4EE3\u7801\u5E76\u672A\u505A\u4EC0\u4E48\u5B9E\u9645\u6027\u7684\u5DE5\u4F5C\uFF0Cfilter\u53EA\u662F<strong>\u63CF\u8FF0</strong>\u4E86Stream\uFF0C<strong>\u6CA1\u6709\u4EA7\u751F\u65B0\u7684\u96C6\u5408</strong>\u3002</p><p>\u5982\u679C\u662F\u591A\u4E2A\u6761\u4EF6\u7EC4\u5408\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4EE3\u7801\u5757{}</p><h3 id="_3-2-\u53CA\u65E9\u6C42\u503C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-2-\u53CA\u65E9\u6C42\u503C\u65B9\u6CD5" aria-hidden="true">#</a> 3.2 \u53CA\u65E9\u6C42\u503C\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> lists<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u4E0A\u793A\u4F8B\uFF0Ccollect\u6700\u7EC8\u4F1A\u4ECEStream\u4EA7\u751F\u65B0\u503C\uFF0C\u62E5\u6709\u7EC8\u6B62\u64CD\u4F5C\u3002</p><blockquote><p><strong>\u7406\u60F3\u65B9\u5F0F\u662F\u5F62\u6210\u4E00\u4E2A\u60F0\u6027\u6C42\u503C\u7684\u94FE\uFF0C\u6700\u540E\u7528\u4E00\u4E2A\u53CA\u65E9\u6C42\u503C\u7684\u64CD\u4F5C\u8FD4\u56DE\u60F3\u8981\u7684\u7ED3\u679C\u3002\u4E0E\u5EFA\u9020\u8005\u6A21\u5F0F\u76F8\u4F3C\uFF0C\u5EFA\u9020\u8005\u6A21\u5F0F\u5148\u662F\u4F7F\u7528\u4E00\u7CFB\u5217\u64CD\u4F5C\u8BBE\u7F6E\u5C5E\u6027\u548C\u914D\u7F6E\uFF0C\u6700\u540E\u8C03\u7528build\u65B9\u6CD5\uFF0C\u521B\u5EFA\u5BF9\u8C61\u3002</strong></p></blockquote><h2 id="_6-stream-parallelstream" tabindex="-1"><a class="header-anchor" href="#_6-stream-parallelstream" aria-hidden="true">#</a> 6. stream &amp; parallelStream</h2><h3 id="_6-1-stream-parallelstream" tabindex="-1"><a class="header-anchor" href="#_6-1-stream-parallelstream" aria-hidden="true">#</a> 6.1 stream &amp; parallelStream</h3><p>\u6BCF\u4E2AStream\u90FD\u6709\u4E24\u79CD\u6A21\u5F0F: \u987A\u5E8F\u6267\u884C\u548C\u5E76\u884C\u6267\u884C\u3002</p><ul><li><p>\u987A\u5E8F\u6D41:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> people <span class="token operator">=</span> list<span class="token punctuation">.</span>getStream<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u5E76\u884C\u6D41:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> people <span class="token operator">=</span> list<span class="token punctuation">.</span>getStream<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u987E\u540D\u601D\u4E49\uFF0C\u5F53\u4F7F\u7528\u987A\u5E8F\u65B9\u5F0F\u53BB\u904D\u5386\u65F6\uFF0C\u6BCF\u4E2Aitem\u8BFB\u5B8C\u540E\u518D\u8BFB\u4E0B\u4E00\u4E2Aitem\u3002\u800C<strong>\u4F7F\u7528\u5E76\u884C\u53BB\u904D\u5386\u65F6\uFF0C\u6570\u7EC4\u4F1A\u88AB\u5206\u6210\u591A\u4E2A\u6BB5\uFF0C\u5176\u4E2D\u6BCF\u4E00\u4E2A\u90FD\u5728\u4E0D\u540C\u7684\u7EBF\u7A0B\u4E2D\u5904\u7406\uFF0C\u7136\u540E\u5C06\u7ED3\u679C\u4E00\u8D77\u8F93</strong>\u51FA\u3002</p><h3 id="_6-2-parallelstream\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_6-2-parallelstream\u539F\u7406" aria-hidden="true">#</a> 6.2 parallelStream\u539F\u7406:</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> originalList <span class="token operator">=</span> someData<span class="token punctuation">;</span>
split1 <span class="token operator">=</span> <span class="token function">originalList</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5C06\u6570\u636E\u5206\u5C0F\u90E8\u5206</span>
split2 <span class="token operator">=</span> <span class="token function">originalList</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span>split1<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u5C0F\u90E8\u5206\u6267\u884C\u64CD\u4F5C</span>
<span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span>split2<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span> revisedList <span class="token operator">=</span> split1 <span class="token operator">+</span> split2<span class="token punctuation">;</span><span class="token comment">//\u5C06\u7ED3\u679C\u5408\u5E76 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u5BB6\u5BF9hadoop\u6709\u7A0D\u5FAE\u4E86\u89E3\u5C31\u77E5\u9053\uFF0C\u91CC\u9762\u7684 MapReduce \u672C\u8EAB\u5C31\u662F\u7528\u4E8E\u5E76\u884C\u5904\u7406\u5927\u6570\u636E\u96C6\u7684\u8F6F\u4EF6\u6846\u67B6\uFF0C\u5176\u5904\u7406\u5927\u6570\u636E\u7684<strong>\u6838\u5FC3\u601D\u60F3\u5C31\u662F\u5927\u800C\u5316\u5C0F\uFF0C\u5206\u914D\u5230\u4E0D\u540C\u673A\u5668\u53BB\u8FD0\u884Cmap\uFF0C\u6700\u7EC8\u901A\u8FC7reduce\u5C06\u6240\u6709\u673A\u5668\u7684\u7ED3\u679C\u7ED3\u5408\u8D77\u6765\u5F97\u5230\u4E00\u4E2A\u6700\u7EC8\u7ED3\u679C</strong>\uFF0C\u4E0EMapReduce\u4E0D\u540C\uFF0CStream\u5219\u662F\u5229\u7528\u591A\u6838\u6280\u672F\u53EF\u5C06\u5927\u6570\u636E\u901A\u8FC7\u591A\u6838\u5E76\u884C\u5904\u7406\uFF0C\u800CMapReduce\u5219\u53EF\u4EE5\u5206\u5E03\u5F0F\u7684\u3002</p><h3 id="_6-3-stream\u4E0Eparallelstream\u6027\u80FD\u6D4B\u8BD5\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#_6-3-stream\u4E0Eparallelstream\u6027\u80FD\u6D4B\u8BD5\u5BF9\u6BD4" aria-hidden="true">#</a> 6.3 stream\u4E0EparallelStream\u6027\u80FD\u6D4B\u8BD5\u5BF9\u6BD4</h3><p>\u5982\u679C\u662F\u591A\u6838\u673A\u5668\uFF0C\u7406\u8BBA\u4E0A\u5E76\u884C\u6D41\u5219\u4F1A\u6BD4\u987A\u5E8F\u6D41\u5FEB\u4E0A\u4E00\u500D\uFF0C\u4E0B\u9762\u662F\u6D4B\u8BD5\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> t0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521D\u59CB\u5316\u4E00\u4E2A\u8303\u56F4100\u4E07\u6574\u6570\u6D41,\u6C42\u80FD\u88AB2\u6574\u9664\u7684\u6570\u5B57\uFF0CtoArray()\u662F\u7EC8\u70B9\u65B9\u6CD5</span>

<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1_000_000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p <span class="token operator">%</span> <span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">long</span> t1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u548C\u4E0A\u9762\u529F\u80FD\u4E00\u6837\uFF0C\u8FD9\u91CC\u662F\u7528\u5E76\u884C\u6D41\u6765\u8BA1\u7B97</span>

<span class="token keyword">int</span> b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1_000_000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p <span class="token operator">%</span> <span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">long</span> t2 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6211\u672C\u673A\u7684\u7ED3\u679C\u662Fserial: 0.06s, parallel 0.02s\uFF0C\u8BC1\u660E\u5E76\u884C\u6D41\u786E\u5B9E\u6BD4\u987A\u5E8F\u6D41\u5FEB</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;serial: %.2fs, parallel %.2fs%n&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t1 <span class="token operator">-</span> t0<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1e-9</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1e-9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-4-stream\u4E2D\u5E38\u7528\u65B9\u6CD5\u5982\u4E0B" tabindex="-1"><a class="header-anchor" href="#_6-4-stream\u4E2D\u5E38\u7528\u65B9\u6CD5\u5982\u4E0B" aria-hidden="true">#</a> 6.4 Stream\u4E2D\u5E38\u7528\u65B9\u6CD5\u5982\u4E0B:</h3><ul><li><code>stream()</code>, <code>parallelStream()</code></li><li><code>filter()</code></li><li><code>findAny()</code> <code>findFirst()</code></li><li><code>sort</code></li><li><code>forEach</code> void</li><li><code>map(), reduce()</code></li><li><code>flatMap()</code> - \u5C06\u591A\u4E2AStream\u8FDE\u63A5\u6210\u4E00\u4E2AStream</li><li><code>collect(Collectors.toList())</code></li><li><code>distinct</code>, <code>limit</code></li><li><code>count</code></li><li><code>min</code>, <code>max</code>, <code>summaryStatistics</code></li></ul><p>\u770B\u4E0B\u6240\u6709API:</p><p><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220710212311833.png" alt="image-20220710212311833"></p><h2 id="_7-\u5E38\u7528\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_7-\u5E38\u7528\u4F8B\u5B50" aria-hidden="true">#</a> 7. \u5E38\u7528\u4F8B\u5B50</h2><h3 id="_7-1-\u533F\u540D\u7C7B\u7B80\u5199" tabindex="-1"><a class="header-anchor" href="#_7-1-\u533F\u540D\u7C7B\u7B80\u5199" aria-hidden="true">#</a> 7.1 \u533F\u540D\u7C7B\u7B80\u5199</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;In Java8, Lambda expression rocks !!&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7528\u6CD5</span>
<span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> expression
<span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> statement
<span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> statements <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-foreach" tabindex="-1"><a class="header-anchor" href="#_7-2-foreach" aria-hidden="true">#</a> 7.2 forEach</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// forEach</span>
<span class="token class-name">List</span> features <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Lambdas&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Default Method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Stream API&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Date and Time API&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
features<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// \u4F7F\u7528Java 8\u7684\u65B9\u6CD5\u5F15\u7528\u66F4\u65B9\u4FBF\uFF0C\u65B9\u6CD5\u5F15\u7528\u7531::\u53CC\u5192\u53F7\u64CD\u4F5C\u7B26\u6807\u793A\uFF0C</span>
features<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_7-3-\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> 7.3 \u65B9\u6CD5\u5F15\u7528</h3><p><em>\u6784\u9020\u5F15\u7528</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Supplier&lt;Student&gt; s = () -&gt; new Student();</span>
<span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Student</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token class-name">Student</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u5BF9\u8C61::\u5B9E\u4F8B\u65B9\u6CD5</em> Lambda\u8868\u8FBE\u5F0F\u7684(\u5F62\u53C2\u5217\u8868)\u4E0E\u5B9E\u4F8B\u65B9\u6CD5\u7684(\u5B9E\u53C2\u5217\u8868)\u7C7B\u578B\uFF0C\u4E2A\u6570\u662F\u5BF9\u5E94</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// set.forEach(t -&gt; System.out.println(t));</span>
set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u7C7B\u540D::\u9759\u6001\u65B9\u6CD5</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Stream&lt;Double&gt; stream = Stream.generate(() -&gt; Math.random());</span>
<span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> stream <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token operator">::</span><span class="token function">random</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u7C7B\u540D::\u5B9E\u4F8B\u65B9\u6CD5</em></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//  TreeSet&lt;String&gt; set = new TreeSet&lt;&gt;((s1,s2) -&gt; s1.compareTo(s2));</span>
<span class="token comment">/*  \u8FD9\u91CC\u5982\u679C\u4F7F\u7528\u7B2C\u4E00\u53E5\u8BDD\uFF0C\u7F16\u8BD1\u5668\u4F1A\u6709\u63D0\u793A: Can be replaced with Comparator.naturalOrder\uFF0C\u8FD9\u53E5\u8BDD\u544A\u8BC9\u6211\u4EEC
  String\u5DF2\u7ECF\u91CD\u5199\u4E86compareTo()\u65B9\u6CD5\uFF0C\u5728\u8FD9\u91CC\u5199\u662F\u591A\u6B64\u4E00\u4E3E\uFF0C\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u8FD9\u4E48\u5199\uFF0C\u662F\u56E0\u4E3A\u4E3A\u4E86\u4F53\u73B0\u4E0B\u9762
  \u8FD9\u53E5\u7F16\u8BD1\u5668\u7684\u63D0\u793A: Lambda can be replaced with method reference\u3002\u597D\u4E86\uFF0C\u4E0B\u9762\u7684\u8FD9\u53E5\u5C31\u662F\u6539\u5199\u6210\u65B9\u6CD5\u5F15\u7528\u4E4B\u540E: 
*/</span>
<span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">compareTo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-filter-predicate" tabindex="-1"><a class="header-anchor" href="#_7-4-filter-predicate" aria-hidden="true">#</a> 7.4 Filter &amp; Predicate</h3><p>\u5E38\u89C4\u7528\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">List</span> languages <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Scala&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C++&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Haskell&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lisp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Languages which starts with J :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">filter</span><span class="token punctuation">(</span>languages<span class="token punctuation">,</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-&gt;</span>str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;J&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Languages which ends with a &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">filter</span><span class="token punctuation">(</span>languages<span class="token punctuation">,</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-&gt;</span>str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Print all languages :&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">filter</span><span class="token punctuation">(</span>languages<span class="token punctuation">,</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Print no language : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">filter</span><span class="token punctuation">(</span>languages<span class="token punctuation">,</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Print language whose length greater than 4:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">filter</span><span class="token punctuation">(</span>languages<span class="token punctuation">,</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">-&gt;</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">List</span> names<span class="token punctuation">,</span> <span class="token class-name">Predicate</span> condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    names<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>condition<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u591A\u4E2APredicate\u7EC4\u5408filter</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53EF\u4EE5\u7528and()\u3001or()\u548Cxor()\u903B\u8F91\u51FD\u6570\u6765\u5408\u5E76Predicate\uFF0C</span>
<span class="token comment">// \u4F8B\u5982\u8981\u627E\u5230\u6240\u6709\u4EE5J\u5F00\u59CB\uFF0C\u957F\u5EA6\u4E3A\u56DB\u4E2A\u5B57\u6BCD\u7684\u540D\u5B57\uFF0C\u4F60\u53EF\u4EE5\u5408\u5E76\u4E24\u4E2APredicate\u5E76\u4F20\u5165</span>
<span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> startsWithJ <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> n<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;J&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> fourLetterLong <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> n<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">;</span>
names<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>startsWithJ<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>fourLetterLong<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;nName, which starts with &#39;J&#39; and four letter long is : &quot;</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-map-reduce" tabindex="-1"><a class="header-anchor" href="#_7-5-map-reduce" aria-hidden="true">#</a> 7.5 Map&amp;Reduce</h3><p>map\u5C06\u96C6\u5408\u7C7B(\u4F8B\u5982\u5217\u8868)\u5143\u7D20\u8FDB\u884C\u8F6C\u6362\u7684\u3002\u8FD8\u6709\u4E00\u4E2A reduce() \u51FD\u6570\u53EF\u4EE5\u5C06\u6240\u6709\u503C\u5408\u5E76\u6210\u4E00\u4E2A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span> costBeforeTax <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> bill <span class="token operator">=</span> costBeforeTax<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>cost<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> cost <span class="token operator">+</span> <span class="token number">.12</span><span class="token operator">*</span>cost<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> cost<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> sum <span class="token operator">+</span> cost<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total : &quot;</span> <span class="token operator">+</span> bill<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-6-collectors" tabindex="-1"><a class="header-anchor" href="#_7-6-collectors" aria-hidden="true">#</a> 7.6 Collectors</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5C06\u5B57\u7B26\u4E32\u6362\u6210\u5927\u5199\u5E76\u7528\u9017\u53F7\u94FE\u63A5\u8D77\u6765</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token constant">G7</span> <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;USA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Japan&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;France&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Germany&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Italy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;U.K.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Canada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> <span class="token class-name">G7Countries</span> <span class="token operator">=</span> <span class="token constant">G7</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">G7Countries</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Collectors.joining(&quot;, &quot;)</li><li>Collectors.toList()</li><li>Collectors.toSet() \uFF0C\u751F\u6210set\u96C6\u5408</li><li>Collectors.toMap(MemberModel::getUid, Function.identity())</li><li>Collectors.toMap(ImageModel::getAid, o -&gt; IMAGE_ADDRESS_PREFIX + o.getUrl())</li></ul><h3 id="_7-7-flatmap" tabindex="-1"><a class="header-anchor" href="#_7-7-flatmap" aria-hidden="true">#</a> 7.7 flatMap</h3><p>\u5C06\u591A\u4E2AStream\u8FDE\u63A5\u6210\u4E00\u4E2AStream</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> result<span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>a<span class="token operator">-&gt;</span>a<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7ED3\u679C: [1, 3, 5, 6]</p><h3 id="_7-8-distinct" tabindex="-1"><a class="header-anchor" href="#_7-8-distinct" aria-hidden="true">#</a> 7.8 distinct</h3><p>\u53BB\u91CD</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LikeDO</span><span class="token punctuation">&gt;</span></span> likeDOs<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LikeDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> likeTidList <span class="token operator">=</span> likeDOs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LikeDO</span><span class="token operator">::</span><span class="token function">getTid</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-9-count" tabindex="-1"><a class="header-anchor" href="#_7-9-count" aria-hidden="true">#</a> 7.9 count</h3><p>\u8BA1\u603B\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> countOfAdult<span class="token operator">=</span>persons<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>person <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Adult</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-10-match" tabindex="-1"><a class="header-anchor" href="#_7-10-match" aria-hidden="true">#</a> 7.10 Match</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> anyStartsWithA <span class="token operator">=</span>
    stringCollection
        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">anyMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>anyStartsWithA<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// true</span>

<span class="token keyword">boolean</span> allStartsWithA <span class="token operator">=</span>
    stringCollection
        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">allMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>allStartsWithA<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// false</span>

<span class="token keyword">boolean</span> noneStartsWithZ <span class="token operator">=</span>
    stringCollection
        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">noneMatch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>noneStartsWithZ<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// true</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-11-min-max-summarystatistics" tabindex="-1"><a class="header-anchor" href="#_7-11-min-max-summarystatistics" aria-hidden="true">#</a> 7.11 min,max,summaryStatistics</h3><p>\u6700\u5C0F\u503C\uFF0C\u6700\u5927\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> lists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> <span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">,</span> <span class="token string">&quot;p2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">,</span> <span class="token string">&quot;p3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">4L</span><span class="token punctuation">,</span> <span class="token string">&quot;p4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span> a <span class="token operator">=</span> lists<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6BD4\u8F83\u5668\u6D89\u53CA\u591A\u4E2A\u6761\u4EF6\uFF0C\u6BD4\u8F83\u590D\u6742\uFF0C\u53EF\u4EE5\u5B9A\u5236</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token class-name">Person</span> a <span class="token operator">=</span> lists<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Person</span> o1<span class="token punctuation">,</span> <span class="token class-name">Person</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> o2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> o2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>summaryStatistics</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u83B7\u53D6\u6570\u5B57\u7684\u4E2A\u6570\u3001\u6700\u5C0F\u503C\u3001\u6700\u5927\u503C\u3001\u603B\u548C\u4EE5\u53CA\u5E73\u5747\u503C</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> primes <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IntSummaryStatistics</span> stats <span class="token operator">=</span> primes<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">summaryStatistics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Highest prime number in List : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lowest prime number in List : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Sum of all prime numbers : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Average of all prime numbers : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-12-peek" tabindex="-1"><a class="header-anchor" href="#_7-12-peek" aria-hidden="true">#</a> 7.12 peek</h3><p>\u53EF\u4EE5\u4F7F\u7528peek\u65B9\u6CD5\uFF0Cpeek\u65B9\u6CD5\u53EF\u53EA\u5305\u542B\u4E00\u4E2A\u7A7A\u7684\u65B9\u6CD5\u4F53\uFF0C\u53EA\u8981\u80FD\u8BBE\u7F6E\u65AD\u70B9\u5373\u53EF\uFF0C\u4F46\u6709\u4E9BIDE\u4E0D\u5141\u8BB8\u7A7A\uFF0C\u53EF\u4EE5\u5982\u4E0B\u6587\u793A\u4F8B\uFF0C\u7B80\u5355\u5199\u4E00\u4E2A\u6253\u5370\u903B\u8F91\u3002</p><p>\u6CE8\u610F\uFF0C\u8C03\u8BD5\u5B8C\u540E\u8981\u5220\u6389\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> lists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> <span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">,</span> <span class="token string">&quot;p2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">3L</span><span class="token punctuation">,</span> <span class="token string">&quot;p3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">4L</span><span class="token punctuation">,</span> <span class="token string">&quot;p4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lists<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> lists<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				 <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-\u4E00\u4E9B\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_8-\u4E00\u4E9B\u4F8B\u5B50" aria-hidden="true">#</a> 8. \u4E00\u4E9B\u4F8B\u5B50</h2><ul><li>\u8F93\u51FA \u5E74\u9F84&gt;25\u7684\u5973\u7A0B\u5E8F\u5458\u4E2D\u540D\u5B57\u6392\u540D\u524D3\u4F4D\u7684\u59D3\u540D</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>javaProgrammers<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token string">&quot;female&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
          <span class="token comment">//.forEach(e -&gt; e.setSalary(e.getSalary() / 100 * 5 + e.getSalary()))//\u6DA8\u5DE5\u8D44</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s %s; &quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5DE5\u8D44\u6700\u9AD8\u7684 Java programmer</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Person</span> person <span class="token operator">=</span> javaProgrammers
          <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> p2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5C06 Java programmers \u7684 first name \u5B58\u653E\u5230 TreeSet</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> javaDevLastName <span class="token operator">=</span> javaProgrammers
          <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getLastName</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token function">toCollection</span><span class="token punctuation">(</span><span class="token class-name">TreeSet</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8BA1\u7B97\u4ED8\u7ED9 Java programmers \u7684\u6240\u6709money</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> totalSalary <span class="token operator">=</span> javaProgrammers
          <span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Comparator\u591A\u5C5E\u6027\u6392\u5E8F: \u5148\u6309\u540D\u5B57\u4E0D\u5206\u5927\u5C0F\u5199\u6392\uFF0C\u518D\u6309GID\u5012\u5E8F\u6392\uFF0C\u6700\u540E\u6309\u5E74\u9F84\u6B63\u5E8F\u6392</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> personList <span class="token operator">=</span> <span class="token function">getTestList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	personList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token constant">CASE_INSENSITIVE_ORDER</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">thenComparing</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getGid</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> b<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">thenComparingInt</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	personList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTestList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;301&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;303&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;303&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;303&quot;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;303&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;dai&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;302&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;zhang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;302&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;zhang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;301&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Li&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;301&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment">// Person [name=dai, gid=303, age=6]</span>
<span class="token comment">// Person [name=dai, gid=303, age=8]</span>
<span class="token comment">// Person [name=dai, gid=303, age=10]</span>
<span class="token comment">// Person [name=dai, gid=303, age=11]</span>
<span class="token comment">// Person [name=dai, gid=302, age=9]</span>
<span class="token comment">// Person [name=dai, gid=301, age=10]</span>
<span class="token comment">// Person [name=Li, gid=301, age=8]</span>
<span class="token comment">// Person [name=zhang, gid=302, age=9]</span>
<span class="token comment">// Person [name=zhang, gid=301, age=9]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5904\u7406\u5B57\u7B26\u4E32</li></ul><p>\u4E24\u4E2A\u65B0\u7684\u65B9\u6CD5\u53EF\u5728\u5B57\u7B26\u4E32\u7C7B\u4E0A\u4F7F\u7528: join\u548Cchars\u3002\u7B2C\u4E00\u4E2A\u65B9\u6CD5\u4F7F\u7528\u6307\u5B9A\u7684\u5206\u9694\u7B26\uFF0C\u5C06\u4EFB\u4F55\u6570\u91CF\u7684\u5B57\u7B26\u4E32\u8FDE\u63A5\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foobar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; foobar:foo:bar</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u4E2A\u65B9\u6CD5chars\u4ECE\u5B57\u7B26\u4E32\u6240\u6709\u5B57\u7B26\u521B\u5EFA\u6570\u636E\u6D41\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u5728\u8FD9\u4E9B\u5B57\u7B26\u4E0A\u4F7F\u7528\u6D41\u5F0F\u64CD\u4F5C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token string">&quot;foobar:foo:bar&quot;</span>
    <span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; :abfor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u4EC5\u4EC5\u662F\u5B57\u7B26\u4E32\uFF0C\u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\u4E32\u4E5F\u80FD\u53D7\u76CA\u4E8E\u6570\u636E\u6D41\u3002\u6211\u4EEC\u53EF\u4EE5\u5206\u5272\u4EFB\u4F55\u6A21\u5F0F\u4E32\uFF0C\u5E76\u521B\u5EFA\u6570\u636E\u6D41\u6765\u5904\u7406\u5B83\u4EEC\uFF0C\u800C\u4E0D\u662F\u5C06\u5B57\u7B26\u4E32\u5206\u5272\u4E3A\u5355\u4E2A\u5B57\u7B26\u7684\u6570\u636E\u6D41\uFF0C\u50CF\u4E0B\u9762\u8FD9\u6837:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">splitAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;foobar:foo:bar&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; bar:foobar</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5916\uFF0C\u6B63\u5219\u6A21\u5F0F\u4E32\u53EF\u4EE5\u8F6C\u6362\u4E3A\u8C13\u8BCD\u3002\u8FD9\u4E9B\u8C13\u8BCD\u53EF\u4EE5\u50CF\u4E0B\u9762\u90A3\u6837\u7528\u4E8E\u8FC7\u6EE4\u5B57\u7B26\u4E32\u6D41:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;.*@gmail\\\\.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;bob@gmail.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;alice@hotmail.com&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">asPredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u6A21\u5F0F\u4E32\u63A5\u53D7\u4EFB\u4F55\u4EE5@gmail.com\u7ED3\u5C3E\u7684\u5B57\u7B26\u4E32\uFF0C\u5E76\u4E14\u4E4B\u540E\u7528\u4F5CJava8\u7684Predicate\u6765\u8FC7\u6EE4\u7535\u5B50\u90AE\u4EF6\u5730\u5740\u6D41\u3002</p><ul><li>Local Cache\u5B9E\u73B0</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLocalCache</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> i<span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Slow calculation of &quot;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">return</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// warm up</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
	            <span class="token string">&quot;f(&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;) = &quot;</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">// read -&gt; cal</span>
		<span class="token keyword">long</span> current <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u96C6\u5408--\u300B\u53D6\u5143\u7D20\u7684\u4E00\u4E2A\u5C5E\u6027--\u300B\u53BB\u91CD---\u300B\u7EC4\u88C5\u6210List--\u300B\u8FD4\u56DE</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LikeDO</span><span class="token punctuation">&gt;</span></span> likeDOs<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LikeDO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> likeTidList <span class="token operator">=</span> likeDOs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">LikeDO</span><span class="token operator">::</span><span class="token function">getTid</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u96C6\u5408--\u300B\u6309\u8868\u8FBE\u5F0F\u8FC7\u6EE4--\u300B\u904D\u5386\u3001\u6BCF\u4E2A\u5143\u7CFB\u5904\u7406--\u300B\u653E\u5165\u9884\u5148\u5B9A\u4E49\u7684\u96C6\u5408\u4E2D</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">StkProduct</span><span class="token punctuation">&gt;</span></span> newStockName2Product <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newConcurrentMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stockProducts<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>stkProduct <span class="token operator">-&gt;</span> stkProduct<span class="token punctuation">.</span>enabled<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>stkProduct <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> newName <span class="token operator">=</span> <span class="token class-name">BCConvert</span><span class="token punctuation">.</span><span class="token function">bj2qj</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>stkProduct<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            newStockName2Product<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>newName<span class="token punctuation">,</span> stkProduct<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> qjStockNames<span class="token punctuation">;</span>
 qjStockNames<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>name <span class="token operator">-&gt;</span> <span class="token operator">!</span>acAutomaton<span class="token punctuation">.</span><span class="token function">getKey2link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>name <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">StkProduct</span> stkProduct <span class="token operator">=</span> stockNameQj2Product<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stkProduct <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                value <span class="token operator">=</span> stkProduct<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            acAutomaton<span class="token punctuation">.</span><span class="token function">getKey2link</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u96C6\u5408--\u300Bmap</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ImageModel</span><span class="token punctuation">&gt;</span></span> imageModelList <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> imagesMap <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
imagesMap <span class="token operator">=</span> imageModelList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">ImageModel</span><span class="token operator">::</span><span class="token function">getAid</span><span class="token punctuation">,</span> o <span class="token operator">-&gt;</span> <span class="token constant">IMAGE_ADDRESS_PREFIX</span> <span class="token operator">+</span> o<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              
             

<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> kvMap <span class="token operator">=</span> postDetailCacheList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>detailCache<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token function">getBbsSimplePostKey</span><span class="token punctuation">(</span>detailCache<span class="token punctuation">.</span><span class="token function">getTid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token operator">::</span><span class="token function">toJSONString</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> pidToTid\uFF1B
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> pidKeyList <span class="token operator">=</span> pidToTid<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">getKeyBbsReplyPid</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>DO\u6A21\u578B---\u300BModel\u6A21\u578B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AdDO</span><span class="token punctuation">&gt;</span></span> adDOList<span class="token punctuation">;</span>
adDOList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>adDo <span class="token operator">-&gt;</span> <span class="token function">convertAdModel</span><span class="token punctuation">(</span>adDo<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>phones</code> \u662F\u4E00\u4E2A<code>List&lt;String&gt;</code>\uFF0C\u5C06\u76F8\u540C\u7684\u5143\u7D20\u5206\u7EC4\u3001\u5F52\u7C7B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> phones<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phones<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> phoneClassify <span class="token operator">=</span> phones<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>phoneClassify<span class="token punctuation">)</span><span class="token punctuation">;</span>
\u8FD4\u56DE\u7ED3\u679C<span class="token operator">:</span> 
<span class="token punctuation">{</span>a<span class="token operator">=</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,158),k={href:"https://pdai.tech/md/java/java8/java8-stream.html",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"Java 8 - \u51FD\u6570\u7F16\u7A0B(lambda\u8868\u8FBE\u5F0F)",-1),d={href:"https://blog.csdn.net/ThinkWon/article/details/113764085",target:"_blank",rel:"noopener noreferrer"};function m(v,g){const s=l("ExternalLinkIcon");return p(),e("div",null,[i,n("p",null,[n("a",k,[r,a(s)])]),n("p",null,[n("a",d,[o("Java8\u65B0\u7279\u6027-Lambda\u8868\u8FBE\u5F0F"),a(s)])])])}const h=t(u,[["render",m],["__file","java8-lambda.html.vue"]]);export{h as default};
