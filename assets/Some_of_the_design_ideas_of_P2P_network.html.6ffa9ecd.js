import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as o,e}from"./app.7b6c8628.js";const n={},t=e('<ol><li><p>需要设置与本节点连接的数目，一般20-25</p></li><li><p>种子节点，一般是将所有已知网络地址配置为种子节点</p></li><li><p>节点连接淘汰策略（1 Random, 2 FIFO, 3 LIFO）</p></li><li><p>TLS 认证配置</p></li><li><p>黑名单和白名单的设置</p></li><li><p>消息发送的一个优先级设置，比如说共识消息优先（0-10级）</p></li><li><p>大消息体拆包，组包（将消息体拆解成256个小包，再组合）</p></li><li><p>支持的一般协议包括，TCP，QUIC</p></li><li><p>需要支持多连接复用并行发送（与每个节点建立多个连接，可以发送多个消息）</p></li><li><p>中继转发</p><p><img src="https://tva1.sinaimg.cn/large/008vxvgGgy1h7g67mdy8sj31cq0u0q55.jpg" alt="image-20221024103004301" loading="lazy"></p></li></ol><p>在这种场景下，如果不采用Relay或者NAT穿透功能的话，虽然node1和node2之间可以建立连接，但是node1与node3，node1与node4之间并不能打通进行直接通信。当我们启用中继功能，配置中继地址的话，就可以通过node2作为媒介，将<strong>node1&lt;—&gt;node3</strong>，<strong>node1&lt;—&gt;node4</strong>建立。具体配置如下</p><ol start="11"><li>nAT穿透</li><li>传输层之上运用加密协议noise</li><li>支持多路复用协议yamux</li><li>业务层协议 <ul><li>区块同步协议</li><li>gossip</li><li>交易协议</li></ul></li><li>mdns启用</li><li>kad协议</li><li></li></ol>',3),p=[t];function s(_,d){return i(),o("div",null,p)}const c=l(n,[["render",s],["__file","Some_of_the_design_ideas_of_P2P_network.html.vue"]]);export{c as default};
