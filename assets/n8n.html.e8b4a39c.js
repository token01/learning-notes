import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,a as n,b as a,d as o,e as i,r as c}from"./app.945d736a.js";const l="/assets/n8n-screenshot.4840711b.png",r="/assets/n8n_nodes.11e731af.png",u={},d=n("h1",{id:"使用开源工作流自动化工具-n8n-打造个人助理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用开源工作流自动化工具-n8n-打造个人助理","aria-hidden":"true"},"#"),a(" 使用开源工作流自动化工具 n8n 打造个人助理")],-1),h={href:"https://github.com/n8n-io/n8n",target:"_blank",rel:"noopener noreferrer"},k=i('<p><img src="'+l+`" alt="n8n" loading="lazy"></p><h2 id="安装使用" tabindex="-1"><a class="header-anchor" href="#安装使用" aria-hidden="true">#</a> 安装使用</h2><p>n8n 使用 TypeScript 编写，支持 npx 直接运行，安装 nodejs 运行以下命令即可运行，简直不要太简单。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx n8n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="发现可以自动化的工作流" tabindex="-1"><a class="header-anchor" href="#发现可以自动化的工作流" aria-hidden="true">#</a> 发现可以自动化的工作流</h2><p>运行 n8n 后我们可以直观到看到利用它可以连接许多服务，但是如何为我所用呢？哪些场景下可以用上它，这需要我们首先识别重复的工作流。</p><p>列举一些将重复工作流自动化的例子：</p><ul><li>每天都会逛某几个网站。 <ul><li>聚合网站信息，当有新内容时，通过聊天机器人自动通知。</li></ul></li><li>每天上班第一件事情需要先查看是否有未处理的代码合并请求。 <ul><li>可以让 n8n 连接 gitlab/github 检查是否有代码合并请求，有则使用聊天机器人自动通知审查团队。</li></ul></li><li>出于工作需要，经常需要从数据库导出数据到 excel 并邮件给其他人，这个任务不足以做到系统功能中。 <ul><li>使用 n8n 连接数据库、excel、邮件服务，将其自动化。</li></ul></li><li>redis 内存没有及时释放，需要定时扫描手动触发内存释放。 <ul><li>使用 n8n 连接 redis，当内存达到设定值时自动执行脚本触发内存释放。</li></ul></li><li>需要定期备份工作流配置。 <ul><li>自动将本地 n8n 配置备份到云端。</li></ul></li></ul><p>以上简单列举一些例子，这些重复工作看似不耗时间，好像不值得花费精力将其自动化，但当我们识别出越来越多这样的工作流并将其自动化后，我们就拥有了一个强大的个人助理。</p><h2 id="必备的几个常用工作流节点" tabindex="-1"><a class="header-anchor" href="#必备的几个常用工作流节点" aria-hidden="true">#</a> 必备的几个常用工作流节点</h2><p><img src="`+r+`" alt="n8n 节点" loading="lazy"></p><p>n8n 拥有上百个工作流节点，许多节点你并不一定用的上，下面是一些常用的节点，我将简单介绍一下它们的作用。</p><h3 id="cron" tabindex="-1"><a class="header-anchor" href="#cron" aria-hidden="true">#</a> Cron</h3><p>设置定时任务，Cron 触发器自然少不了。</p><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> IF</h3><p>根据输入数据设置 IF 条件决定下一步操作。</p><h3 id="function" tabindex="-1"><a class="header-anchor" href="#function" aria-hidden="true">#</a> Function</h3><p>Function 节点中可以编写 JS 代码，对于复杂的 IF 条件也可以先通过 Function 来输出 bool 值以简化 IF 的判断。</p><p>以下是 Function 的示例代码，注意必须按照 items 的数据模式返回数据。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> day <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> weekday <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Sunday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Monday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tuesday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Wednesday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Thursday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Friday&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Saturday&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>json<span class="token punctuation">.</span>date_today <span class="token operator">=</span> date<span class="token punctuation">;</span>
items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>json<span class="token punctuation">.</span>day_today <span class="token operator">=</span> weekday<span class="token punctuation">[</span>day<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">return</span> items<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="request" tabindex="-1"><a class="header-anchor" href="#request" aria-hidden="true">#</a> Request</h3><p>若没有内置的连接服务，可以自定义 HTTP 请求。</p><h3 id="telegram" tabindex="-1"><a class="header-anchor" href="#telegram" aria-hidden="true">#</a> Telegram</h3><p>用 Telegram 的工作流节点发送消息非常方便，我们可以创建一个 Telegram 机器人，通过 Request 获取数据，再使用机器人将消息发送给自己或他人。</p><h2 id="发现更多玩法" tabindex="-1"><a class="header-anchor" href="#发现更多玩法" aria-hidden="true">#</a> 发现更多玩法</h2><p>n8n 的工作流配置可以保存为 json 文件与他人分享，目前 n8n 的社区还在发展当中，相信未来会有许多人分享自己配置好的工作流，届时我们使用 n8n 的能力也将大幅提升。</p><p>当然现在也不妨去发现好玩的用法，探索下新奇的世界，尝试使用 n8n 连接你的 Telegram 试试吧。</p>`,27);function m(b,g){const s=c("ExternalLinkIcon");return t(),p("div",null,[d,n("p",null,[n("a",h,[a("n8n"),o(s)]),a(" 是一个开源的工作流自动化工具，类似于 IFTTT。它的优点是开源、可以自托管、下载安装方便、易于使用，可以互联的服务包括 Github、Google、RSS、Slack、Telegram、Gitlab、Redis、RabbitMq、数据库等等上百种服务。使用 n8n 可以方便地实现当 A 条件发生，触发 B 服务这样的自动工作流程。")]),k])}const f=e(u,[["render",m],["__file","n8n.html.vue"]]);export{f as default};
