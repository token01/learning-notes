import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as p,r as i}from"./app.c8d9b7d0.js";const l={},u=n("h1",{id:"\u8C03\u8BD5\u6392\u9519-java\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u539F\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8C03\u8BD5\u6392\u9519-java\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u539F\u7406","aria-hidden":"true"},"#"),s(" \u8C03\u8BD5\u6392\u9519 - Java\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u539F\u7406")],-1),r={href:"https://tech.meituan.com/2019/11/07/java-dynamic-debugging-technology.html",target:"_blank",rel:"noopener noreferrer"},k=p(`<h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>\u65AD\u70B9\u8C03\u8BD5\u662F\u6211\u4EEC\u6700\u5E38\u4F7F\u7528\u7684\u8C03\u8BD5\u624B\u6BB5\uFF0C\u5B83\u53EF\u4EE5\u83B7\u53D6\u5230\u65B9\u6CD5\u6267\u884C\u8FC7\u7A0B\u4E2D\u7684\u53D8\u91CF\u4FE1\u606F\uFF0C\u5E76\u53EF\u4EE5\u89C2\u5BDF\u5230\u65B9\u6CD5\u7684\u6267\u884C\u8DEF\u5F84\u3002\u4F46\u65AD\u70B9\u8C03\u8BD5\u4F1A\u5728\u65AD\u70B9\u4F4D\u7F6E\u505C\u987F\uFF0C\u4F7F\u5F97\u6574\u4E2A\u5E94\u7528\u505C\u6B62\u54CD\u5E94\u3002\u5728\u7EBF\u4E0A\u505C\u987F\u5E94\u7528\u662F\u81F4\u547D\u7684\uFF0C\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u7ED9\u4E86\u6211\u4EEC\u521B\u9020\u65B0\u7684\u8C03\u8BD5\u6A21\u5F0F\u7684\u60F3\u8C61\u7A7A\u95F4\u3002\u672C\u6587\u5C06\u7814\u7A76Java\u8BED\u8A00\u4E2D\u7684\u52A8\u6001\u8C03\u8BD5\u6280\u672F\uFF0C\u9996\u5148\u6982\u62ECJava\u52A8\u6001\u8C03\u8BD5\u6240\u6D89\u53CA\u7684\u6280\u672F\u57FA\u7840\uFF0C\u63A5\u7740\u4ECB\u7ECD\u6211\u4EEC\u5728Java\u52A8\u6001\u8C03\u8BD5\u9886\u57DF\u7684\u601D\u8003\u53CA\u5B9E\u8DF5\uFF0C\u901A\u8FC7\u7ED3\u5408\u5B9E\u9645\u4E1A\u52A1\u573A\u666F\uFF0C\u8BBE\u8BA1\u5E76\u5B9E\u73B0\u4E86\u4E00\u79CD\u5177\u5907\u52A8\u6001\u6027\u7684\u65AD\u70B9\u8C03\u8BD5\u5DE5\u5177Java-debug-tool\uFF0C\u663E\u8457\u63D0\u9AD8\u4E86\u6545\u969C\u6392\u67E5\u6548\u7387\u3002</p><p>JVMTI (JVM Tool Interface)\u662FJava\u865A\u62DF\u673A\u5BF9\u5916\u63D0\u4F9B\u7684Native\u7F16\u7A0B\u63A5\u53E3\uFF0C\u901A\u8FC7JVMTI\uFF0C\u5916\u90E8\u8FDB\u7A0B\u53EF\u4EE5\u83B7\u53D6\u5230\u8FD0\u884C\u65F6JVM\u7684\u8BF8\u591A\u4FE1\u606F\uFF0C\u6BD4\u5982\u7EBF\u7A0B\u3001GC\u7B49\u3002Agent\u662F\u4E00\u4E2A\u8FD0\u884C\u5728\u76EE\u6807JVM\u7684\u7279\u5B9A\u7A0B\u5E8F\uFF0C\u5B83\u7684\u804C\u8D23\u662F\u8D1F\u8D23\u4ECE\u76EE\u6807JVM\u4E2D\u83B7\u53D6\u6570\u636E\uFF0C\u7136\u540E\u5C06\u6570\u636E\u4F20\u9012\u7ED9\u5916\u90E8\u8FDB\u7A0B\u3002\u52A0\u8F7DAgent\u7684\u65F6\u673A\u53EF\u4EE5\u662F\u76EE\u6807JVM\u542F\u52A8\u4E4B\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5728\u76EE\u6807JVM\u8FD0\u884C\u65F6\u8FDB\u884C\u52A0\u8F7D\uFF0C\u800C\u5728\u76EE\u6807JVM\u8FD0\u884C\u65F6\u8FDB\u884CAgent\u52A0\u8F7D\u5177\u5907\u52A8\u6001\u6027\uFF0C\u5BF9\u4E8E\u65F6\u673A\u672A\u77E5\u7684Debug\u573A\u666F\u6765\u8BF4\u975E\u5E38\u5B9E\u7528\u3002\u4E0B\u9762\u5C06\u8BE6\u7EC6\u5206\u6790Java Agent\u6280\u672F\u7684\u5B9E\u73B0\u7EC6\u8282\u3002</p><h2 id="_2-agent\u7684\u5B9E\u73B0\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-agent\u7684\u5B9E\u73B0\u6A21\u5F0F" aria-hidden="true">#</a> 2. Agent\u7684\u5B9E\u73B0\u6A21\u5F0F</h2><p>JVMTI\u662F\u4E00\u5957Native\u63A5\u53E3\uFF0C\u5728Java SE 5\u4E4B\u524D\uFF0C\u8981\u5B9E\u73B0\u4E00\u4E2AAgent\u53EA\u80FD\u901A\u8FC7\u7F16\u5199Native\u4EE3\u7801\u6765\u5B9E\u73B0\u3002\u4ECEJava SE 5\u5F00\u59CB\uFF0C\u53EF\u4EE5\u4F7F\u7528Java\u7684Instrumentation\u63A5\u53E3(java.lang.instrument)\u6765\u7F16\u5199Agent\u3002\u65E0\u8BBA\u662F\u901A\u8FC7Native\u7684\u65B9\u5F0F\u8FD8\u662F\u901A\u8FC7Java Instrumentation\u63A5\u53E3\u7684\u65B9\u5F0F\u6765\u7F16\u5199Agent\uFF0C\u5B83\u4EEC\u7684\u5DE5\u4F5C\u90FD\u662F\u501F\u52A9JVMTI\u6765\u8FDB\u884C\u5B8C\u6210\uFF0C\u4E0B\u9762\u4ECB\u7ECD\u901A\u8FC7Java Instrumentation\u63A5\u53E3\u7F16\u5199Agent\u7684\u65B9\u6CD5\u3002</p><h3 id="_2-1-\u901A\u8FC7java-instrumentation-api" tabindex="-1"><a class="header-anchor" href="#_2-1-\u901A\u8FC7java-instrumentation-api" aria-hidden="true">#</a> 2.1 \u901A\u8FC7Java Instrumentation API</h3><ul><li>\u5B9E\u73B0Agent\u542F\u52A8\u65B9\u6CD5</li></ul><p>Java Agent\u652F\u6301\u76EE\u6807JVM\u542F\u52A8\u65F6\u52A0\u8F7D\uFF0C\u4E5F\u652F\u6301\u5728\u76EE\u6807JVM\u8FD0\u884C\u65F6\u52A0\u8F7D\uFF0C\u8FD9\u4E24\u79CD\u4E0D\u540C\u7684\u52A0\u8F7D\u6A21\u5F0F\u4F1A\u4F7F\u7528\u4E0D\u540C\u7684\u5165\u53E3\u51FD\u6570\uFF0C\u5982\u679C\u9700\u8981\u5728\u76EE\u6807JVM\u542F\u52A8\u7684\u540C\u65F6\u52A0\u8F7DAgent\uFF0C\u90A3\u4E48\u53EF\u4EE5\u9009\u62E9\u5B9E\u73B0\u4E0B\u9762\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">premain</span><span class="token punctuation">(</span><span class="token class-name">String</span> agentArgs<span class="token punctuation">,</span> <span class="token class-name">Instrumentation</span> inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">premain</span><span class="token punctuation">(</span><span class="token class-name">String</span> agentArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>JVM\u5C06\u9996\u5148\u5BFB\u627E[1]\uFF0C\u5982\u679C\u6CA1\u6709\u53D1\u73B0[1]\uFF0C\u518D\u5BFB\u627E[2]\u3002\u5982\u679C\u5E0C\u671B\u5728\u76EE\u6807JVM\u8FD0\u884C\u65F6\u52A0\u8F7DAgent\uFF0C\u5219\u9700\u8981\u5B9E\u73B0\u4E0B\u9762\u7684\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">agentmain</span><span class="token punctuation">(</span><span class="token class-name">String</span> agentArgs<span class="token punctuation">,</span> <span class="token class-name">Instrumentation</span> inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">agentmain</span><span class="token punctuation">(</span><span class="token class-name">String</span> agentArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u7EC4\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570AgentArgs\u662F\u968F\u540C \u201C\u2013 javaagent\u201D\u4E00\u8D77\u4F20\u5165\u7684\u7A0B\u5E8F\u53C2\u6570\uFF0C\u5982\u679C\u8FD9\u4E2A\u5B57\u7B26\u4E32\u4EE3\u8868\u4E86\u591A\u4E2A\u53C2\u6570\uFF0C\u5C31\u9700\u8981\u81EA\u5DF1\u89E3\u6790\u8FD9\u4E9B\u53C2\u6570\u3002inst\u662FInstrumentation\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u662FJVM\u81EA\u52A8\u4F20\u5165\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u62FF\u8FD9\u4E2A\u53C2\u6570\u8FDB\u884C\u7C7B\u589E\u5F3A\u7B49\u64CD\u4F5C\u3002</p><ul><li>\u6307\u5B9AMain-Class</li></ul><p>Agent\u9700\u8981\u6253\u5305\u6210\u4E00\u4E2Ajar\u5305\uFF0C\u5728ManiFest\u5C5E\u6027\u4E2D\u6307\u5B9A\u201CPremain-Class\u201D\u6216\u8005\u201CAgent-Class\u201D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Premain</span><span class="token operator">-</span><span class="token class-name">Class</span><span class="token operator">:</span> <span class="token keyword">class</span>
<span class="token class-name">Agent</span><span class="token operator">-</span><span class="token class-name">Class</span><span class="token operator">:</span> <span class="token keyword">class</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6302\u8F7D\u5230\u76EE\u6807JVM</li></ul><p>\u5C06\u7F16\u5199\u7684Agent\u6253\u6210jar\u5305\u540E\uFF0C\u5C31\u53EF\u4EE5\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\u53BB\u4E86\u3002\u5982\u679C\u9009\u62E9\u5728\u76EE\u6807JVM\u542F\u52A8\u65F6\u52A0\u8F7DAgent\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528 \u201C-javaagent:[=]\u201C\uFF0C\u5177\u4F53\u7684\u4F7F\u7528\u65B9\u6CD5\u53EF\u4EE5\u4F7F\u7528\u201CJava -Help\u201D\u6765\u67E5\u770B\u3002\u5982\u679C\u60F3\u8981\u5728\u8FD0\u884C\u65F6\u6302\u8F7DAgent\u5230\u76EE\u6807JVM\uFF0C\u5C31\u9700\u8981\u505A\u4E00\u4E9B\u989D\u5916\u7684\u5F00\u53D1\u4E86\u3002</p><p>com.sun.tools.attach.VirtualMachine \u8FD9\u4E2A\u7C7B\u4EE3\u8868\u4E00\u4E2AJVM\u62BD\u8C61\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u7C7B\u627E\u5230\u76EE\u6807JVM\uFF0C\u5E76\u4E14\u5C06Agent\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\u3002\u4E0B\u9762\u662F\u4F7F\u7528com.sun.tools.attach.VirtualMachine\u8FDB\u884C\u52A8\u6001\u6302\u8F7DAgent\u7684\u4E00\u822C\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">attachAgentToTargetJVM</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualMachineDescriptor</span><span class="token punctuation">&gt;</span></span> virtualMachineDescriptors <span class="token operator">=</span> <span class="token class-name">VirtualMachine</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualMachineDescriptor</span> targetVM <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">VirtualMachineDescriptor</span> descriptor <span class="token operator">:</span> virtualMachineDescriptors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>configure<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                targetVM <span class="token operator">=</span> descriptor<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetVM <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;could not find the target jvm by process id:&quot;</span> <span class="token operator">+</span> configure<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">VirtualMachine</span> virtualMachine <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            virtualMachine <span class="token operator">=</span> <span class="token class-name">VirtualMachine</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>targetVM<span class="token punctuation">)</span><span class="token punctuation">;</span>
            virtualMachine<span class="token punctuation">.</span><span class="token function">loadAgent</span><span class="token punctuation">(</span><span class="token string">&quot;{agent}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;{params}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>virtualMachine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                virtualMachine<span class="token punctuation">.</span><span class="token function">detach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u901A\u8FC7\u6307\u5B9A\u7684\u8FDB\u7A0BID\u627E\u5230\u76EE\u6807JVM\uFF0C\u7136\u540E\u901A\u8FC7Attach\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\uFF0C\u6267\u884C\u52A0\u8F7DAgent\u64CD\u4F5C\u3002VirtualMachine\u7684Attach\u65B9\u6CD5\u5C31\u662F\u7528\u6765\u5C06Agent\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\u53BB\u7684\uFF0C\u800CDetach\u5219\u662F\u5C06Agent\u4ECE\u76EE\u6807JVM\u5378\u8F7D\u3002\u5173\u4E8EAgent\u662F\u5982\u4F55\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\u7684\u5177\u4F53\u6280\u672F\u7EC6\u8282\uFF0C\u5C06\u5728\u4E0B\u6587\u4E2D\u8FDB\u884C\u5206\u6790\u3002</p><h2 id="_3-\u542F\u52A8\u65F6\u52A0\u8F7Dagent" tabindex="-1"><a class="header-anchor" href="#_3-\u542F\u52A8\u65F6\u52A0\u8F7Dagent" aria-hidden="true">#</a> 3. \u542F\u52A8\u65F6\u52A0\u8F7DAgent</h2><h3 id="_3-1-\u53C2\u6570\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_3-1-\u53C2\u6570\u89E3\u6790" aria-hidden="true">#</a> 3.1 \u53C2\u6570\u89E3\u6790</h3><p>\u521B\u5EFAJVM\u65F6\uFF0CJVM\u4F1A\u8FDB\u884C\u53C2\u6570\u89E3\u6790\uFF0C\u5373\u89E3\u6790\u90A3\u4E9B\u7528\u6765\u914D\u7F6EJVM\u542F\u52A8\u7684\u53C2\u6570\uFF0C\u6BD4\u5982\u5806\u5927\u5C0F\u3001GC\u7B49\uFF1B\u672C\u6587\u4E3B\u8981\u5173\u6CE8\u89E3\u6790\u7684\u53C2\u6570\u4E3A-agentlib\u3001 -agentpath\u3001 -javaagent\uFF0C\u8FD9\u51E0\u4E2A\u53C2\u6570\u7528\u6765\u6307\u5B9AAgent\uFF0CJVM\u4F1A\u6839\u636E\u8FD9\u51E0\u4E2A\u53C2\u6570\u52A0\u8F7DAgent\u3002\u4E0B\u9762\u6765\u5206\u6790\u4E00\u4E0BJVM\u662F\u5982\u4F55\u89E3\u6790\u8FD9\u51E0\u4E2A\u53C2\u6570\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// -agentlib and -agentpath</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">match_option</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">&quot;-agentlib:&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>tail<span class="token punctuation">)</span> <span class="token operator">||</span>
          <span class="token punctuation">(</span>is_absolute_path <span class="token operator">=</span> <span class="token function">match_option</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">&quot;-agentpath:&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>tail<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>tail <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> pos <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>tail<span class="token punctuation">,</span> <span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        size_t len <span class="token operator">=</span> <span class="token punctuation">(</span>pos <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">strlen</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span> <span class="token operator">:</span> pos <span class="token operator">-</span> tail<span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token operator">*</span> name <span class="token operator">=</span> <span class="token function">strncpy</span><span class="token punctuation">(</span><span class="token function">NEW_C_HEAP_ARRAY</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> mtArguments<span class="token punctuation">)</span><span class="token punctuation">,</span> tail<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        name<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;\\0&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> <span class="token operator">*</span>options <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>pos <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          options <span class="token operator">=</span> os<span class="token operator">::</span><span class="token function">strdup_check_oom</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> mtArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
#<span class="token keyword">if</span> <span class="token operator">!</span><span class="token class-name">INCLUDE_JVMTI</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">valid_jdwp_agent</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> is_absolute_path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">jio_fprintf</span><span class="token punctuation">(</span>defaultStream<span class="token operator">::</span><span class="token function">error_stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Debugging agents are not supported in this VM\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token constant">JNI_ERR</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
#endif <span class="token comment">// !INCLUDE_JVMTI</span>
        <span class="token function">add_init_agent</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> is_absolute_path<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token comment">// -javaagent</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">match_option</span><span class="token punctuation">(</span>option<span class="token punctuation">,</span> <span class="token string">&quot;-javaagent:&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>tail<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
#<span class="token keyword">if</span> <span class="token operator">!</span><span class="token class-name">INCLUDE_JVMTI</span>
      <span class="token function">jio_fprintf</span><span class="token punctuation">(</span>defaultStream<span class="token operator">::</span><span class="token function">error_stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Instrumentation agents are not supported in this VM\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token constant">JNI_ERR</span><span class="token punctuation">;</span>
#<span class="token keyword">else</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tail <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        size_t length <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>tail<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> <span class="token operator">*</span>options <span class="token operator">=</span> <span class="token function">NEW_C_HEAP_ARRAY</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">,</span> length<span class="token punctuation">,</span> mtArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">jio_snprintf</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> length<span class="token punctuation">,</span> <span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> tail<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">add_init_agent</span><span class="token punctuation">(</span><span class="token string">&quot;instrument&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// java agents need module java.instrument</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">create_numbered_property</span><span class="token punctuation">(</span><span class="token string">&quot;jdk.module.addmods&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;java.instrument&quot;</span><span class="token punctuation">,</span> addmods_count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token constant">JNI_ENOMEM</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
#endif <span class="token comment">// !INCLUDE_JVMTI</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7247\u6BB5\u622A\u53D6\u81EAhotspot/src/share/vm/runtime/arguments.cpp\u4E2D\u7684 Arguments::parse_each_vm_init_arg(const JavaVMInitArgs* args, bool* patch_mod_javabase, Flag::Flags origin) \u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u7528\u6765\u89E3\u6790\u4E00\u4E2A\u5177\u4F53\u7684JVM\u53C2\u6570\u3002\u8FD9\u6BB5\u4EE3\u7801\u7684\u4E3B\u8981\u529F\u80FD\u662F\u89E3\u6790\u51FA\u9700\u8981\u52A0\u8F7D\u7684Agent\u8DEF\u5F84\uFF0C\u7136\u540E\u8C03\u7528add_init_agent\u51FD\u6570\u8FDB\u884C\u89E3\u6790\u7ED3\u679C\u7684\u5B58\u50A8\u3002\u4E0B\u9762\u5148\u770B\u4E00\u4E0Badd_init_agent\u51FD\u6570\u7684\u5177\u4F53\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// -agentlib and -agentpath arguments</span>
  <span class="token keyword">static</span> <span class="token class-name">AgentLibraryList</span> _agentList<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">add_init_agent</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> name<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> options<span class="token punctuation">,</span> bool absolute_path<span class="token punctuation">)</span>
    <span class="token punctuation">{</span> _agentList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AgentLibrary</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> options<span class="token punctuation">,</span> absolute_path<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AgentLibraryList\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u94FE\u8868\u7ED3\u6784\uFF0Cadd_init_agent\u51FD\u6570\u5C06\u89E3\u6790\u597D\u7684\u3001\u9700\u8981\u52A0\u8F7D\u7684Agent\u6DFB\u52A0\u5230\u8FD9\u4E2A\u94FE\u8868\u4E2D\uFF0C\u7B49\u5F85\u540E\u7EED\u7684\u5904\u7406\u3002</p><p>\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\uFF0C\u89E3\u6790-javaagent\u53C2\u6570\u6709\u4E00\u4E9B\u7279\u522B\u4E4B\u5904\uFF0C\u8FD9\u4E2A\u53C2\u6570\u7528\u6765\u6307\u5B9A\u4E00\u4E2A\u6211\u4EEC\u901A\u8FC7Java Instrumentation API\u6765\u7F16\u5199\u7684Agent\uFF0CJava Instrumentation API\u5E95\u5C42\u4F9D\u8D56\u7684\u662FJVMTI\uFF0C\u5BF9-JavaAgent\u7684\u5904\u7406\u4E5F\u8BF4\u660E\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5728\u8C03\u7528add_init_agent\u51FD\u6570\u65F6\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u201Cinstrument\u201D\uFF0C\u5173\u4E8E\u52A0\u8F7DAgent\u8FD9\u4E2A\u95EE\u9898\u5728\u4E0B\u4E00\u5C0F\u8282\u8FDB\u884C\u5C55\u5F00\u3002\u5230\u6B64\uFF0C\u6211\u4EEC\u77E5\u9053\u5728\u542F\u52A8JVM\u65F6\u6307\u5B9A\u7684Agent\u5DF2\u7ECF\u88ABJVM\u89E3\u6790\u5B8C\u5B58\u653E\u5728\u4E86\u4E00\u4E2A\u94FE\u8868\u7ED3\u6784\u4E2D\u3002\u4E0B\u9762\u6765\u5206\u6790\u4E00\u4E0BJVM\u662F\u5982\u4F55\u52A0\u8F7D\u8FD9\u4E9BAgent\u7684\u3002</p><h3 id="_3-2-\u6267\u884C\u52A0\u8F7D\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-2-\u6267\u884C\u52A0\u8F7D\u64CD\u4F5C" aria-hidden="true">#</a> 3.2 \u6267\u884C\u52A0\u8F7D\u64CD\u4F5C</h3><p>\u5728\u521B\u5EFAJVM\u8FDB\u7A0B\u7684\u51FD\u6570\u4E2D\uFF0C\u89E3\u6790\u5B8CJVM\u53C2\u6570\u4E4B\u540E\uFF0C\u4E0B\u9762\u7684\u8FD9\u6BB5\u4EE3\u7801\u548C\u52A0\u8F7DAgent\u76F8\u5173\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Launch -agentlib/-agentpath and converted -Xrun agents</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Arguments</span><span class="token operator">::</span><span class="token function">init_agents_at_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">create_vm_init_agents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> bool <span class="token function">init_agents_at_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">!</span>_agentList<span class="token punctuation">.</span><span class="token function">is_empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53JVM\u5224\u65AD\u51FA\u4E0A\u4E00\u5C0F\u8282\u4E2D\u89E3\u6790\u51FA\u6765\u7684Agent\u4E0D\u4E3A\u7A7A\u7684\u65F6\u5019\uFF0C\u5C31\u8981\u53BB\u8C03\u7528\u51FD\u6570create_vm_init_agents\u6765\u52A0\u8F7DAgent\uFF0C\u4E0B\u9762\u6765\u5206\u6790\u4E00\u4E0Bcreate_vm_init_agents\u51FD\u6570\u662F\u5982\u4F55\u52A0\u8F7DAgent\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token class-name">Threads</span><span class="token operator">::</span><span class="token function">create_vm_init_agents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">AgentLibrary</span><span class="token operator">*</span> agent<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>agent <span class="token operator">=</span> <span class="token class-name">Arguments</span><span class="token operator">::</span><span class="token function">agents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> agent <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> agent <span class="token operator">=</span> agent<span class="token operator">-&gt;</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">OnLoadEntry_t</span>  on_load_entry <span class="token operator">=</span> <span class="token function">lookup_agent_on_load</span><span class="token punctuation">(</span>agent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>on_load_entry <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Invoke the Agent_OnLoad function</span>
      jint err <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>on_load_entry<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>main_vm<span class="token punctuation">,</span> agent<span class="token operator">-&gt;</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),d={href:"http://xn--libinstrument-2h1us8wmmp987bfm3n.so",target:"_blank",rel:"noopener noreferrer"},v=p(`<h3 id="_3-3-instrument\u52A8\u6001\u94FE\u63A5\u5E93" tabindex="-1"><a class="header-anchor" href="#_3-3-instrument\u52A8\u6001\u94FE\u63A5\u5E93" aria-hidden="true">#</a> 3.3 instrument\u52A8\u6001\u94FE\u63A5\u5E93</h3><p>libinstrument\u7528\u6765\u652F\u6301\u4F7F\u7528Java Instrumentation API\u6765\u7F16\u5199Agent\uFF0C\u5728libinstrument\u4E2D\u6709\u4E00\u4E2A\u975E\u5E38\u91CD\u8981\u7684\u7C7B\u79F0\u4E3A\uFF1AJPLISAgent(Java Programming Language Instrumentation Services Agent)\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u521D\u59CB\u5316\u6240\u6709\u901A\u8FC7Java Instrumentation API\u7F16\u5199\u7684Agent\uFF0C\u5E76\u4E14\u4E5F\u627F\u62C5\u7740\u901A\u8FC7JVMTI\u5B9E\u73B0Java Instrumentation\u4E2D\u66B4\u9732API\u7684\u8D23\u4EFB\u3002</p><p>\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\uFF0C\u5728JVM\u542F\u52A8\u7684\u65F6\u5019\uFF0CJVM\u4F1A\u901A\u8FC7-javaagent\u53C2\u6570\u52A0\u8F7DAgent\u3002\u6700\u5F00\u59CB\u52A0\u8F7D\u7684\u662Flibinstrument\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u7136\u540E\u5728\u52A8\u6001\u94FE\u63A5\u5E93\u91CC\u9762\u627E\u5230JVMTI\u7684\u5165\u53E3\u65B9\u6CD5\uFF1AAgent_OnLoad\u3002\u4E0B\u9762\u5C31\u6765\u5206\u6790\u4E00\u4E0B\u5728libinstrument\u52A8\u6001\u94FE\u63A5\u5E93\u4E2D\uFF0CAgent_OnLoad\u51FD\u6570\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token constant">JNIEXPORT</span> jint <span class="token constant">JNICALL</span>
<span class="token class-name">DEF_Agent_OnLoad</span><span class="token punctuation">(</span><span class="token class-name">JavaVM</span> <span class="token operator">*</span>vm<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>tail<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span> reserved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    initerror <span class="token operator">=</span> <span class="token function">createNewJPLISAgent</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token operator">&amp;</span>agent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> initerror <span class="token operator">==</span> <span class="token constant">JPLIS_INIT_ERROR_NONE</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseArgumentTail</span><span class="token punctuation">(</span>tail<span class="token punctuation">,</span> <span class="token operator">&amp;</span>jarfile<span class="token punctuation">,</span> <span class="token operator">&amp;</span>options<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">fprintf</span><span class="token punctuation">(</span>stderr<span class="token punctuation">,</span> <span class="token string">&quot;-javaagent: memory allocation failure.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token constant">JNI_ERR</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        attributes <span class="token operator">=</span> <span class="token function">readAttributes</span><span class="token punctuation">(</span>jarfile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        premainClass <span class="token operator">=</span> <span class="token function">getAttribute</span><span class="token punctuation">(</span>attributes<span class="token punctuation">,</span> <span class="token string">&quot;Premain-Class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/* Save the jarfile name */</span>
        agent<span class="token operator">-&gt;</span>mJarfile <span class="token operator">=</span> jarfile<span class="token punctuation">;</span>
        <span class="token comment">/*
         * Convert JAR attributes into agent capabilities
         */</span>
        <span class="token function">convertCapabilityAttributes</span><span class="token punctuation">(</span>attributes<span class="token punctuation">,</span> agent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
         * Track (record) the agent class name and options data
         */</span>
        initerror <span class="token operator">=</span> <span class="token function">recordCommandLineData</span><span class="token punctuation">(</span>agent<span class="token punctuation">,</span> premainClass<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u7247\u6BB5\u662F\u7ECF\u8FC7\u7CBE\u7B80\u7684libinstrument\u4E2DAgent_OnLoad\u5B9E\u73B0\u7684\uFF0C\u5927\u6982\u7684\u6D41\u7A0B\u5C31\u662F\uFF1A\u5148\u521B\u5EFA\u4E00\u4E2AJPLISAgent\uFF0C\u7136\u540E\u5C06ManiFest\u4E2D\u8BBE\u5B9A\u7684\u4E00\u4E9B\u53C2\u6570\u89E3\u6790\u51FA\u6765\uFF0C \u6BD4\u5982(Premain-Class)\u7B49\u3002\u521B\u5EFA\u4E86JPLISAgent\u4E4B\u540E\uFF0C\u8C03\u7528initializeJPLISAgent\u5BF9\u8FD9\u4E2AAgent\u8FDB\u884C\u521D\u59CB\u5316\u64CD\u4F5C\u3002\u8DDF\u8FDBinitializeJPLISAgent\u770B\u4E00\u4E0B\u662F\u5982\u4F55\u521D\u59CB\u5316\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">JPLISInitializationError</span> <span class="token function">initializeJPLISAgent</span><span class="token punctuation">(</span><span class="token class-name">JPLISAgent</span> <span class="token operator">*</span>agent<span class="token punctuation">,</span> <span class="token class-name">JavaVM</span> <span class="token operator">*</span>vm<span class="token punctuation">,</span> jvmtiEnv <span class="token operator">*</span>jvmtienv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* check what capabilities are available */</span>
    <span class="token function">checkCapabilities</span><span class="token punctuation">(</span>agent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* check phase - if live phase then we don&#39;t need the VMInit event */</span>
    jvmtierror <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>jvmtienv<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token class-name">GetPhase</span><span class="token punctuation">(</span>jvmtienv<span class="token punctuation">,</span> <span class="token operator">&amp;</span>phase<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* now turn on the VMInit event */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> jvmtierror <span class="token operator">==</span> <span class="token constant">JVMTI_ERROR_NONE</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        jvmtiEventCallbacks callbacks<span class="token punctuation">;</span>
        <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">callbacks<span class="token punctuation">.</span></span>VMInit</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>eventHandlerVMInit<span class="token punctuation">;</span>
        jvmtierror <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>jvmtienv<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token class-name">SetEventCallbacks</span><span class="token punctuation">(</span>jvmtienv<span class="token punctuation">,</span><span class="token operator">&amp;</span>callbacks<span class="token punctuation">,</span><span class="token function">sizeof</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> jvmtierror <span class="token operator">==</span> <span class="token constant">JVMTI_ERROR_NONE</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        jvmtierror <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>jvmtienv<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token class-name">SetEventNotificationMode</span><span class="token punctuation">(</span>jvmtienv<span class="token punctuation">,</span><span class="token constant">JVMTI_ENABLE</span><span class="token punctuation">,</span><span class="token constant">JVMTI_EVENT_VM_INIT</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>jvmtierror <span class="token operator">==</span> <span class="token constant">JVMTI_ERROR_NONE</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token constant">JPLIS_INIT_ERROR_NONE</span> <span class="token operator">:</span> <span class="token constant">JPLIS_INIT_ERROR_FAILURE</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5173\u6CE8callbacks.VMInit = &amp;eventHandlerVMInit;\u8FD9\u884C\u4EE3\u7801\uFF0C\u8FD9\u91CC\u8BBE\u7F6E\u4E86\u4E00\u4E2AVMInit\u4E8B\u4EF6\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8868\u793A\u5728JVM\u521D\u59CB\u5316\u7684\u65F6\u5019\u4F1A\u56DE\u8C03eventHandlerVMInit\u51FD\u6570\u3002\u4E0B\u9762\u6765\u770B\u4E00\u4E0B\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u7EC6\u8282\uFF0C\u731C\u6D4B\u5C31\u662F\u5728\u8FD9\u91CC\u8C03\u7528\u4E86Premain\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token class-name">JNICALL</span>  <span class="token function">eventHandlerVMInit</span><span class="token punctuation">(</span> jvmtiEnv <span class="token operator">*</span>jvmtienv<span class="token punctuation">,</span><span class="token class-name">JNIEnv</span> <span class="token operator">*</span>jnienv<span class="token punctuation">,</span>jthread thread<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// ...</span>
   success <span class="token operator">=</span> <span class="token function">processJavaStart</span><span class="token punctuation">(</span> environment<span class="token operator">-&gt;</span>mAgent<span class="token punctuation">,</span> jnienv<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
jboolean  <span class="token function">processJavaStart</span><span class="token punctuation">(</span><span class="token class-name">JPLISAgent</span> <span class="token operator">*</span>agent<span class="token punctuation">,</span><span class="token class-name">JNIEnv</span> <span class="token operator">*</span>jnienv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> <span class="token function">createInstrumentationImpl</span><span class="token punctuation">(</span>jnienv<span class="token punctuation">,</span> agent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/*
     *  Load the Java agent, and call the premain.
     */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token function">startJavaAgent</span><span class="token punctuation">(</span>agent<span class="token punctuation">,</span> jnienv<span class="token punctuation">,</span> agent<span class="token operator">-&gt;</span>mAgentClassName<span class="token punctuation">,</span> agent<span class="token operator">-&gt;</span>mOptionsString<span class="token punctuation">,</span> agent<span class="token operator">-&gt;</span>mPremainCaller<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
jboolean <span class="token function">startJavaAgent</span><span class="token punctuation">(</span> <span class="token class-name">JPLISAgent</span> <span class="token operator">*</span>agent<span class="token punctuation">,</span><span class="token class-name">JNIEnv</span> <span class="token operator">*</span>jnienv<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>classname<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>optionsString<span class="token punctuation">,</span>jmethodID agentMainMethod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...  </span>
  <span class="token function">invokeJavaAgentMainMethod</span><span class="token punctuation">(</span>jnienv<span class="token punctuation">,</span>agent<span class="token operator">-&gt;</span>mInstrumentationImpl<span class="token punctuation">,</span>agentMainMethod<span class="token punctuation">,</span> classNameObject<span class="token punctuation">,</span>optionsStringObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5230\u8FD9\u91CC\uFF0CInstrument\u5DF2\u7ECF\u5B9E\u4F8B\u5316\uFF0CinvokeJavaAgentMainMethod\u8FD9\u4E2A\u65B9\u6CD5\u5C06\u6211\u4EEC\u7684premain\u65B9\u6CD5\u6267\u884C\u8D77\u6765\u4E86\u3002\u63A5\u7740\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u6839\u636EInstrument\u5B9E\u4F8B\u6765\u505A\u6211\u4EEC\u60F3\u8981\u505A\u7684\u4E8B\u60C5\u4E86\u3002</p><h2 id="_4-\u8FD0\u884C\u65F6\u52A0\u8F7Dagent" tabindex="-1"><a class="header-anchor" href="#_4-\u8FD0\u884C\u65F6\u52A0\u8F7Dagent" aria-hidden="true">#</a> 4. \u8FD0\u884C\u65F6\u52A0\u8F7DAgent</h2><p>\u6BD4\u8D77JVM\u542F\u52A8\u65F6\u52A0\u8F7DAgent\uFF0C\u8FD0\u884C\u65F6\u52A0\u8F7DAgent\u5C31\u6BD4\u8F83\u6709\u8BF1\u60D1\u529B\u4E86\uFF0C\u56E0\u4E3A\u8FD0\u884C\u65F6\u52A0\u8F7DAgent\u7684\u80FD\u529B\u7ED9\u6211\u4EEC\u63D0\u4F9B\u4E86\u5F88\u5F3A\u7684\u52A8\u6001\u6027\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u9700\u8981\u7684\u65F6\u5019\u52A0\u8F7DAgent\u6765\u8FDB\u884C\u4E00\u4E9B\u5DE5\u4F5C\u3002\u56E0\u4E3A\u662F\u52A8\u6001\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6309\u7167\u9700\u6C42\u6765\u52A0\u8F7D\u6240\u9700\u8981\u7684Agent\uFF0C\u4E0B\u9762\u6765\u5206\u6790\u4E00\u4E0B\u52A8\u6001\u52A0\u8F7DAgent\u7684\u76F8\u5173\u6280\u672F\u7EC6\u8282\u3002</p><h3 id="_4-1-attachlistener" tabindex="-1"><a class="header-anchor" href="#_4-1-attachlistener" aria-hidden="true">#</a> 4.1 AttachListener</h3><p>Attach\u673A\u5236\u901A\u8FC7Attach Listener\u7EBF\u7A0B\u6765\u8FDB\u884C\u76F8\u5173\u4E8B\u52A1\u7684\u5904\u7406\uFF0C\u4E0B\u9762\u6765\u770B\u4E00\u4E0BAttach Listener\u7EBF\u7A0B\u662F\u5982\u4F55\u521D\u59CB\u5316\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Starts the Attach Listener thread</span>
<span class="token keyword">void</span> <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u7EBF\u7A0B\u76F8\u5173\u90E8\u5206\u4EE3\u7801\u88AB\u53BB\u6389\u4E86</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span> thread_name<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Attach Listener&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">Handle</span> string <span class="token operator">=</span> java_lang_String<span class="token operator">::</span><span class="token function">create_from_str</span><span class="token punctuation">(</span>thread_name<span class="token punctuation">,</span> <span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">{</span> <span class="token class-name">MutexLocker</span> <span class="token function">mu</span><span class="token punctuation">(</span><span class="token class-name">Threads_lock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaThread</span><span class="token operator">*</span> listener_thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaThread</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attach_listener_thread_entry<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u77E5\u9053\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u542F\u52A8\u4E4B\u540E\u90FD\u9700\u8981\u6307\u5B9A\u4E00\u4E2A\u5165\u53E3\u6765\u6267\u884C\u4EE3\u7801\uFF0CAttach Listener\u7EBF\u7A0B\u7684\u5165\u53E3\u662Fattach_listener_thread_entry\uFF0C\u4E0B\u9762\u770B\u4E00\u4E0B\u8FD9\u4E2A\u51FD\u6570\u7684\u5177\u4F53\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">attach_listener_thread_entry</span><span class="token punctuation">(</span><span class="token class-name">JavaThread</span><span class="token operator">*</span> thread<span class="token punctuation">,</span> <span class="token constant">TRAPS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">set_initialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">AttachOperation</span><span class="token operator">*</span> op <span class="token operator">=</span> <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// find the function to dispatch too</span>
      <span class="token class-name">AttachOperationFunctionInfo</span><span class="token operator">*</span> info <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> name <span class="token operator">=</span> funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>op<span class="token operator">-&gt;</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          info <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>funcs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
       <span class="token comment">// dispatch to the function that implements this operation</span>
        res <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token operator">-&gt;</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span>op<span class="token punctuation">,</span> <span class="token operator">&amp;</span>st<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u4E2A\u51FD\u6570\u6267\u884C\u903B\u8F91\uFF0C\u5927\u6982\u662F\u8FD9\u6837\u7684\uFF1A</p><ul><li>\u62C9\u53D6\u4E00\u4E2A\u9700\u8981\u6267\u884C\u7684\u4EFB\u52A1\uFF1AAttachListener::dequeue\u3002</li><li>\u67E5\u8BE2\u5339\u914D\u7684\u547D\u4EE4\u5904\u7406\u51FD\u6570\u3002</li><li>\u6267\u884C\u5339\u914D\u5230\u7684\u547D\u4EE4\u6267\u884C\u51FD\u6570\u3002</li></ul><p>\u5176\u4E2D\u7B2C\u4E8C\u6B65\u91CC\u9762\u5B58\u5728\u4E00\u4E2A\u547D\u4EE4\u51FD\u6570\u8868\uFF0C\u6574\u4E2A\u8868\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">AttachOperationFunctionInfo</span> funcs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;agentProperties&quot;</span><span class="token punctuation">,</span>  get_agent_properties <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;datadump&quot;</span><span class="token punctuation">,</span>         data_dump <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;dumpheap&quot;</span><span class="token punctuation">,</span>         dump_heap <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;load&quot;</span><span class="token punctuation">,</span>             load_agent <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;properties&quot;</span><span class="token punctuation">,</span>       get_system_properties <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;threaddump&quot;</span><span class="token punctuation">,</span>       thread_dump <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;inspectheap&quot;</span><span class="token punctuation">,</span>      heap_inspection <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;setflag&quot;</span><span class="token punctuation">,</span>          set_flag <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;printflag&quot;</span><span class="token punctuation">,</span>        print_flag <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token string">&quot;jcmd&quot;</span><span class="token punctuation">,</span>             jcmd <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>               <span class="token constant">NULL</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u52A0\u8F7DAgent\u6765\u8BF4\uFF0C\u547D\u4EE4\u5C31\u662F\u201Cload\u201D\u3002\u73B0\u5728\uFF0C\u6211\u4EEC\u77E5\u9053\u4E86Attach Listener\u5927\u6982\u7684\u5DE5\u4F5C\u6A21\u5F0F\uFF0C\u4F46\u662F\u8FD8\u662F\u4E0D\u592A\u6E05\u695A\u4EFB\u52A1\u4ECE\u54EA\u6765\uFF0C\u8FD9\u4E2A\u79D8\u5BC6\u5C31\u85CF\u5728AttachListener::dequeue\u8FD9\u884C\u4EE3\u7801\u91CC\u9762\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0Bdequeue\u8FD9\u4E2A\u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">LinuxAttachOperation</span><span class="token operator">*</span> <span class="token class-name">LinuxAttachListener</span><span class="token operator">::</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// wait for client to connect</span>
    struct sockaddr addr<span class="token punctuation">;</span>
    socklen_t len <span class="token operator">=</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">RESTARTABLE</span><span class="token punctuation">(</span><span class="token operator">::</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>addr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>len<span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// get the credentials of the peer and check the effective uid/guid</span>
    <span class="token comment">// - check with jeff on this.</span>
    struct ucred cred_info<span class="token punctuation">;</span>
    socklen_t optlen <span class="token operator">=</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>cred_info<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">::</span><span class="token function">getsockopt</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token constant">SOL_SOCKET</span><span class="token punctuation">,</span> <span class="token constant">SO_PEERCRED</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>cred_info<span class="token punctuation">,</span> <span class="token operator">&amp;</span>optlen<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token operator">::</span><span class="token function">close</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// peer credential look okay so we read the request</span>
    <span class="token class-name">LinuxAttachOperation</span><span class="token operator">*</span> op <span class="token operator">=</span> <span class="token function">read_request</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> op<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662FLinux\u4E0A\u7684\u5B9E\u73B0\uFF0C\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u5B9E\u73B0\u65B9\u5F0F\u4E0D\u592A\u4E00\u6837\u3002\u4E0A\u9762\u7684\u4EE3\u7801\u8868\u9762\uFF0CAttach Listener\u5728\u67D0\u4E2A\u7AEF\u53E3\u76D1\u542C\u7740\uFF0C\u901A\u8FC7accept\u6765\u63A5\u6536\u4E00\u4E2A\u8FDE\u63A5\uFF0C\u7136\u540E\u4ECE\u8FD9\u4E2A\u8FDE\u63A5\u91CC\u9762\u5C06\u8BF7\u6C42\u8BFB\u53D6\u51FA\u6765\uFF0C\u7136\u540E\u5C06\u8BF7\u6C42\u5305\u88C5\u6210\u4E00\u4E2AAttachOperation\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u4E4B\u540E\u5C31\u4F1A\u4ECE\u8868\u91CC\u67E5\u8BE2\u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\uFF0C\u7136\u540E\u8FDB\u884C\u5904\u7406\u3002</p><p>Attach Listener\u4F7F\u7528\u4E00\u79CD\u88AB\u79F0\u4E3A\u201C\u61D2\u52A0\u8F7D\u201D\u7684\u7B56\u7565\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0CJVM\u542F\u52A8\u7684\u65F6\u5019Attach Listener\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u542F\u52A8\u8D77\u6765\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0B\u8FD9\u79CD\u201C\u61D2\u52A0\u8F7D\u201D\u7B56\u7565\u7684\u5177\u4F53\u5B9E\u73B0\u65B9\u6848\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Start Attach Listener if +StartAttachListener or it can&#39;t be started lazily</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">DisableAttachMechanism</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">vm_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StartAttachListener</span> <span class="token operator">||</span> <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">init_at_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token comment">// Attach Listener is started lazily except in the case when</span>
<span class="token comment">// +ReduseSignalUsage is used</span>
bool <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">init_at_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ReduceSignalUsage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u622A\u53D6\u81EAcreate_vm\u51FD\u6570\uFF0CDisableAttachMechanism\u3001StartAttachListener\u548CReduceSignalUsage\u8FD9\u4E09\u4E2A\u53D8\u91CF\u9ED8\u8BA4\u90FD\u662Ffalse\uFF0C\u6240\u4EE5AttachListener::init();\u8FD9\u884C\u4EE3\u7801\u4E0D\u4F1A\u5728create_vm\u7684\u65F6\u5019\u6267\u884C\uFF0C\u800Cvm_start\u4F1A\u6267\u884C\u3002\u4E0B\u9762\u6765\u770B\u4E00\u4E0B\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u7EC6\u8282\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">vm_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">char</span> fn<span class="token punctuation">[</span><span class="token constant">UNIX_PATH_MAX</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  struct stat64 st<span class="token punctuation">;</span>
  <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
  <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token function">snprintf</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token constant">UNIX_PATH_MAX</span><span class="token punctuation">,</span> <span class="token string">&quot;%s/.java_pid%d&quot;</span><span class="token punctuation">,</span>
           os<span class="token operator">::</span><span class="token function">get_temp_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">current_process_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">assert</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token constant">UNIX_PATH_MAX</span><span class="token punctuation">,</span> <span class="token string">&quot;java_pid file name buffer overflow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">RESTARTABLE</span><span class="token punctuation">(</span><span class="token operator">::</span><span class="token function">stat64</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token operator">&amp;</span>st<span class="token punctuation">)</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ret <span class="token operator">=</span> <span class="token operator">::</span><span class="token function">unlink</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">log_debug</span><span class="token punctuation">(</span>attach<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to remove stale attach pid file at %s&quot;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u5728Linux\u4E0A\u7684\u5B9E\u73B0\uFF0C\u662F\u5C06/tmp/\u76EE\u5F55\u4E0B\u7684.java_pid{pid}\u6587\u4EF6\u5220\u9664\uFF0C\u540E\u9762\u5728\u521B\u5EFAAttach Listener\u7EBF\u7A0B\u7684\u65F6\u5019\u4F1A\u521B\u5EFA\u51FA\u6765\u8FD9\u4E2A\u6587\u4EF6\u3002\u4E0A\u9762\u8BF4\u5230\uFF0CAttachListener::init()\u8FD9\u884C\u4EE3\u7801\u4E0D\u4F1A\u5728create_vm\u7684\u65F6\u5019\u6267\u884C\uFF0C\u8FD9\u884C\u4EE3\u7801\u7684\u5B9E\u73B0\u5DF2\u7ECF\u5728\u4E0A\u6587\u4E2D\u5206\u6790\u4E86\uFF0C\u5C31\u662F\u521B\u5EFAAttach Listener\u7EBF\u7A0B\uFF0C\u5E76\u76D1\u542C\u5176\u4ED6JVM\u7684\u547D\u4EE4\u8BF7\u6C42\u3002\u73B0\u5728\u6765\u5206\u6790\u4E00\u4E0B\u8FD9\u884C\u4EE3\u7801\u662F\u4EC0\u4E48\u65F6\u5019\u88AB\u8C03\u7528\u7684\uFF0C\u4E5F\u5C31\u662F\u201C\u61D2\u52A0\u8F7D\u201D\u5230\u5E95\u662F\u600E\u4E48\u52A0\u8F7D\u8D77\u6765\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Signal Dispatcher needs to be started before VMInit event is posted</span>
  os<span class="token operator">::</span><span class="token function">signal_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662Fcreate_vm\u4E2D\u7684\u4E00\u6BB5\u4EE3\u7801\uFF0C\u770B\u8D77\u6765\u8DDF\u4FE1\u53F7\u76F8\u5173\uFF0C\u5176\u5B9EAttach\u673A\u5236\u5C31\u662F\u4F7F\u7528\u4FE1\u53F7\u6765\u5B9E\u73B0\u201C\u61D2\u52A0\u8F7D\u201C\u7684\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u4ED4\u7EC6\u5730\u5206\u6790\u4E00\u4E0B\u8FD9\u4E2A\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> os<span class="token operator">::</span><span class="token function">signal_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ReduceSignalUsage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Setup JavaThread for processing signals</span>
    <span class="token constant">EXCEPTION_MARK</span><span class="token punctuation">;</span>
    <span class="token class-name">Klass</span><span class="token operator">*</span> k <span class="token operator">=</span> <span class="token class-name">SystemDictionary</span><span class="token operator">::</span><span class="token function">resolve_or_fail</span><span class="token punctuation">(</span>vmSymbols<span class="token operator">::</span><span class="token function">java_lang_Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token constant">CHECK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    instanceKlassHandle klass <span class="token punctuation">(</span><span class="token constant">THREAD</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
    instanceHandle thread_oop <span class="token operator">=</span> klass<span class="token operator">-&gt;</span><span class="token function">allocate_instance_handle</span><span class="token punctuation">(</span><span class="token constant">CHECK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> thread_name<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Signal Dispatcher&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Handle</span> string <span class="token operator">=</span> java_lang_String<span class="token operator">::</span><span class="token function">create_from_str</span><span class="token punctuation">(</span>thread_name<span class="token punctuation">,</span> <span class="token constant">CHECK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Initialize thread_oop to put it into the system threadGroup</span>
    <span class="token class-name">Handle</span> thread_group <span class="token punctuation">(</span><span class="token constant">THREAD</span><span class="token punctuation">,</span> <span class="token class-name">Universe</span><span class="token operator">::</span><span class="token function">system_thread_group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaValue</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token constant">T_VOID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaCalls</span><span class="token operator">::</span><span class="token function">call_special</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">,</span> thread_oop<span class="token punctuation">,</span>klass<span class="token punctuation">,</span>vmSymbols<span class="token operator">::</span><span class="token function">object_initializer_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>vmSymbols<span class="token operator">::</span><span class="token function">threadgroup_string_void_signature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           thread_group<span class="token punctuation">,</span>string<span class="token punctuation">,</span><span class="token constant">CHECK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">KlassHandle</span> <span class="token function">group</span><span class="token punctuation">(</span><span class="token constant">THREAD</span><span class="token punctuation">,</span> <span class="token class-name">SystemDictionary</span><span class="token operator">::</span><span class="token class-name">ThreadGroup_klass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaCalls</span><span class="token operator">::</span><span class="token function">call_special</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">,</span>thread_group<span class="token punctuation">,</span>group<span class="token punctuation">,</span>vmSymbols<span class="token operator">::</span><span class="token function">add_method_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>vmSymbols<span class="token operator">::</span><span class="token function">thread_void_signature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thread_oop<span class="token punctuation">,</span><span class="token constant">CHECK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    os<span class="token operator">::</span><span class="token function">signal_init_pd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">{</span> <span class="token class-name">MutexLocker</span> <span class="token function">mu</span><span class="token punctuation">(</span><span class="token class-name">Threads_lock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">JavaThread</span><span class="token operator">*</span> signal_thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JavaThread</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>signal_thread_entry<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Handle ^BREAK</span>
    os<span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGBREAK</span><span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">user_handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JVM\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u8FDB\u7A0B\u6765\u5B9E\u73B0\u4FE1\u53F7\u5904\u7406\uFF0C\u8FD9\u4E2A\u7EBF\u7A0B\u53EB\u201CSignal Dispatcher\u201D\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u521B\u5EFA\u4E4B\u540E\u9700\u8981\u6709\u4E00\u4E2A\u5165\u53E3\uFF0C\u201CSignal Dispatcher\u201D\u7684\u5165\u53E3\u662Fsignal_thread_entry\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827213507409.png" alt="image-20220827213507409"></p><p>\u8FD9\u6BB5\u4EE3\u7801\u622A\u53D6\u81EAsignal_thread_entry\u51FD\u6570\uFF0C\u622A\u53D6\u4E2D\u7684\u5185\u5BB9\u662F\u548CAttach\u673A\u5236\u4FE1\u53F7\u5904\u7406\u76F8\u5173\u7684\u4EE3\u7801\u3002\u8FD9\u6BB5\u4EE3\u7801\u7684\u610F\u601D\u662F\uFF0C\u5F53\u63A5\u6536\u5230\u201CSIGBREAK\u201D\u4FE1\u53F7\uFF0C\u5C31\u6267\u884C\u63A5\u4E0B\u6765\u7684\u4EE3\u7801\uFF0C\u8FD9\u4E2A\u4FE1\u53F7\u662F\u9700\u8981Attach\u5230JVM\u4E0A\u7684\u4FE1\u53F7\u53D1\u51FA\u6765\uFF0C\u8FD9\u4E2A\u540E\u9762\u4F1A\u518D\u5206\u6790\u3002\u6211\u4EEC\u5148\u6765\u770B\u4E00\u53E5\u5173\u952E\u7684\u4EE3\u7801\uFF1AAttachListener::is_init_trigger()\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>bool <span class="token class-name">AttachListener</span><span class="token operator">::</span><span class="token function">is_init_trigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">init_at_startup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">is_initialized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>               <span class="token comment">// initialized at startup or already initialized</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">char</span> fn<span class="token punctuation">[</span><span class="token constant">PATH_MAX</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">sprintf</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token string">&quot;.attach_pid%d&quot;</span><span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">current_process_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
  struct stat64 st<span class="token punctuation">;</span>
  <span class="token function">RESTARTABLE</span><span class="token punctuation">(</span><span class="token operator">::</span><span class="token function">stat64</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token operator">&amp;</span>st<span class="token punctuation">)</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log_trace</span><span class="token punctuation">(</span>attach<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to find attach file: %s, trying alternate&quot;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">snprintf</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token function">sizeof</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%s/.attach_pid%d&quot;</span><span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">get_temp_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">current_process_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">RESTARTABLE</span><span class="token punctuation">(</span><span class="token operator">::</span><span class="token function">stat64</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token operator">&amp;</span>st<span class="token punctuation">)</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// simple check to avoid starting the attach mechanism when</span>
    <span class="token comment">// a bogus user creates the file</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>st<span class="token punctuation">.</span>st_uid <span class="token operator">==</span> <span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u68C0\u67E5\u4E86\u4E00\u4E0B\u662F\u5426\u5728JVM\u542F\u52A8\u65F6\u542F\u52A8\u4E86Attach Listener\uFF0C\u6216\u8005\u662F\u5426\u5DF2\u7ECF\u542F\u52A8\u8FC7\u3002\u5982\u679C\u6CA1\u6709\uFF0C\u624D\u7EE7\u7EED\u6267\u884C\uFF0C\u5728/tmp\u76EE\u5F55\u4E0B\u521B\u5EFA\u4E00\u4E2A\u53EB\u505A.attach_pid%d\u7684\u6587\u4EF6\uFF0C\u7136\u540E\u6267\u884CAttachListener\u7684init\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5C31\u662F\u7528\u6765\u521B\u5EFAAttach Listener\u7EBF\u7A0B\u7684\u51FD\u6570\uFF0C\u4E0A\u9762\u5DF2\u7ECF\u63D0\u5230\u591A\u6B21\u5E76\u8FDB\u884C\u4E86\u5206\u6790\u3002\u5230\u6B64\uFF0C\u6211\u4EEC\u77E5\u9053Attach\u673A\u5236\u7684\u5965\u79D8\u6240\u5728\uFF0C\u4E5F\u5C31\u662FAttach Listener\u7EBF\u7A0B\u7684\u521B\u5EFA\u4F9D\u9760Signal Dispatcher\u7EBF\u7A0B\uFF0CSignal Dispatcher\u662F\u7528\u6765\u5904\u7406\u4FE1\u53F7\u7684\u7EBF\u7A0B\uFF0C\u5F53Signal Dispatcher\u7EBF\u7A0B\u63A5\u6536\u5230\u201CSIGBREAK\u201D\u4FE1\u53F7\u4E4B\u540E\uFF0C\u5C31\u4F1A\u6267\u884C\u521D\u59CB\u5316Attach Listener\u7684\u5DE5\u4F5C\u3002</p><h3 id="_4-2-\u8FD0\u884C\u65F6\u52A0\u8F7Dagent\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-2-\u8FD0\u884C\u65F6\u52A0\u8F7Dagent\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 4.2 \u8FD0\u884C\u65F6\u52A0\u8F7DAgent\u7684\u5B9E\u73B0</h3><p>\u6211\u4EEC\u7EE7\u7EED\u5206\u6790\uFF0C\u5230\u5E95\u662F\u5982\u4F55\u5C06\u4E00\u4E2AAgent\u6302\u8F7D\u5230\u8FD0\u884C\u7740\u7684\u76EE\u6807JVM\u4E0A\uFF0C\u5728\u4E0A\u6587\u4E2D\u63D0\u5230\u4E86\u4E00\u6BB5\u4EE3\u7801\uFF0C\u7528\u6765\u8FDB\u884C\u8FD0\u884C\u65F6\u6302\u8F7DAgent\uFF0C\u53EF\u4EE5\u53C2\u8003\u4E0A\u6587\u4E2D\u5C55\u793A\u7684\u5173\u4E8E\u201CattachAgentToTargetJvm\u201D\u65B9\u6CD5\u7684\u4EE3\u7801\u3002\u8FD9\u4E2A\u65B9\u6CD5\u91CC\u9762\u7684\u5173\u952E\u662F\u8C03\u7528VirtualMachine\u7684attach\u65B9\u6CD5\u8FDB\u884CAgent\u6302\u8F7D\u7684\u529F\u80FD\u3002\u4E0B\u9762\u6211\u4EEC\u5C31\u6765\u5206\u6790\u4E00\u4E0BVirtualMachine\u7684attach\u65B9\u6CD5\u5177\u4F53\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">VirtualMachine</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token class-name">String</span> var0<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AttachNotSupportedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>var0 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;id cannot be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span> var1 <span class="token operator">=</span> <span class="token class-name">AttachProvider</span><span class="token punctuation">.</span><span class="token function">providers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AttachNotSupportedException</span><span class="token punctuation">(</span><span class="token string">&quot;no providers installed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">AttachNotSupportedException</span> var2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">Iterator</span> var3 <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>var3<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">AttachProvider</span> var4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AttachProvider</span><span class="token punctuation">)</span>var3<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> var4<span class="token punctuation">.</span><span class="token function">attachVirtualMachine</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">AttachNotSupportedException</span> var6<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    var2 <span class="token operator">=</span> var6<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u901A\u8FC7attachVirtualMachine\u65B9\u6CD5\u8FDB\u884Cattach\u64CD\u4F5C\uFF0C\u5728MacOS\u7CFB\u7EDF\u4E2D\uFF0CAttachProvider\u7684\u5B9E\u73B0\u7C7B\u662FBsdAttachProvider\u3002\u6211\u4EEC\u6765\u770B\u4E00\u4E0BBsdAttachProvider\u7684attachVirtualMachine\u65B9\u6CD5\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">VirtualMachine</span> <span class="token function">attachVirtualMachine</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AttachNotSupportedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">checkAttachPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">testAttachable</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BsdVirtualMachine</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">BsdVirtualMachine</span><span class="token punctuation">(</span><span class="token class-name">AttachProvider</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AttachNotSupportedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> var3 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findSocketFile</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">File</span> var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tmpdir<span class="token punctuation">,</span> <span class="token string">&quot;.attach_pid&quot;</span> <span class="token operator">+</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">createAttachFile</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">sendQuitTo</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> var5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> var6 <span class="token operator">=</span> <span class="token number">200L</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> var8 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> var21<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findSocketFile</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token operator">++</span>var5<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span><span class="token punctuation">(</span>var5 <span class="token operator">&lt;=</span> var8 <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            var4<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> var24 <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>var24<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">findSocketFile</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> var2 <span class="token operator">=</span> <span class="token string">&quot;.java_pid&quot;</span> <span class="token operator">+</span> var1<span class="token punctuation">;</span>
    <span class="token class-name">File</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tmpdir<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> var3<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> var3<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>findSocketFile\u65B9\u6CD5\u7528\u6765\u67E5\u8BE2\u76EE\u6807JVM\u4E0A\u662F\u5426\u5DF2\u7ECF\u542F\u52A8\u4E86Attach Listener\uFF0C\u5B83\u901A\u8FC7\u68C0\u67E5\u201Dtmp/\u201C\u76EE\u5F55\u4E0B\u662F\u5426\u5B58\u5728java_pid{pid}\u6765\u8FDB\u884C\u5B9E\u73B0\u3002\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E86\uFF0C\u5219\u8BF4\u660EAttach\u673A\u5236\u5DF2\u7ECF\u51C6\u5907\u5C31\u7EEA\uFF0C\u53EF\u4EE5\u63A5\u53D7\u5BA2\u6237\u7AEF\u7684\u547D\u4EE4\u4E86\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5BA2\u6237\u7AEF\u5C31\u53EF\u4EE5\u901A\u8FC7connect\u8FDE\u63A5\u5230\u76EE\u6807JVM\u8FDB\u884C\u547D\u4EE4\u7684\u53D1\u9001\uFF0C\u6BD4\u5982\u53EF\u4EE5\u53D1\u9001\u201Cload\u201D\u547D\u4EE4\u6765\u52A0\u8F7DAgent\u3002\u5982\u679Cjava_pid{pid}\u6587\u4EF6\u8FD8\u4E0D\u5B58\u5728\uFF0C\u5219\u9700\u8981\u901A\u8FC7sendQuitTo\u65B9\u6CD5\u5411\u76EE\u6807JVM\u53D1\u9001\u4E00\u4E2A\u201CSIGBREAK\u201D\u4FE1\u53F7\uFF0C\u8BA9\u5B83\u521D\u59CB\u5316Attach Listener\u7EBF\u7A0B\u5E76\u51C6\u5907\u63A5\u53D7\u5BA2\u6237\u7AEF\u8FDE\u63A5\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u53D1\u9001\u4E86\u4FE1\u53F7\u4E4B\u540E\u5BA2\u6237\u7AEF\u4F1A\u5FAA\u73AF\u7B49\u5F85java_pid{pid}\u8FD9\u4E2A\u6587\u4EF6\uFF0C\u4E4B\u540E\u518D\u901A\u8FC7connect\u8FDE\u63A5\u5230\u76EE\u6807JVM\u4E0A\u3002</p><h3 id="_4-3-load\u547D\u4EE4\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-3-load\u547D\u4EE4\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 4.3 load\u547D\u4EE4\u7684\u5B9E\u73B0</h3><p>\u4E0B\u9762\u6765\u5206\u6790\u4E00\u4E0B\uFF0C\u201Cload\u201D\u547D\u4EE4\u5728JVM\u5C42\u9762\u7684\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> jint <span class="token function">load_agent</span><span class="token punctuation">(</span><span class="token class-name">AttachOperation</span><span class="token operator">*</span> op<span class="token punctuation">,</span> outputStream<span class="token operator">*</span> out<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// get agent name and options</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> agent <span class="token operator">=</span> op<span class="token operator">-&gt;</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> absParam <span class="token operator">=</span> op<span class="token operator">-&gt;</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> options <span class="token operator">=</span> op<span class="token operator">-&gt;</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// If loading a java agent then need to ensure that the java.instrument module is loaded</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>agent<span class="token punctuation">,</span> <span class="token string">&quot;instrument&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span><span class="token operator">*</span> <span class="token constant">THREAD</span> <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token operator">::</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ResourceMark</span> <span class="token function">rm</span><span class="token punctuation">(</span><span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HandleMark</span> <span class="token function">hm</span><span class="token punctuation">(</span><span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaValue</span> <span class="token function">result</span><span class="token punctuation">(</span><span class="token constant">T_OBJECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Handle</span> h_module_name <span class="token operator">=</span> java_lang_String<span class="token operator">::</span><span class="token function">create_from_str</span><span class="token punctuation">(</span><span class="token string">&quot;java.instrument&quot;</span><span class="token punctuation">,</span> <span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JavaCalls</span><span class="token operator">::</span><span class="token function">call_static</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">,</span><span class="token class-name">SystemDictionary</span><span class="token operator">::</span><span class="token function">module_Modules_klass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>vmSymbols<span class="token operator">::</span><span class="token function">loadModule_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                           vmSymbols<span class="token operator">::</span><span class="token function">loadModule_signature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>h_module_name<span class="token punctuation">,</span><span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token class-name">JvmtiExport</span><span class="token operator">::</span><span class="token function">load_agent_library</span><span class="token punctuation">(</span>agent<span class="token punctuation">,</span> absParam<span class="token punctuation">,</span> options<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u5148\u786E\u4FDD\u52A0\u8F7D\u4E86java.instrument\u6A21\u5757\uFF0C\u4E4B\u540E\u771F\u6B63\u6267\u884CAgent\u52A0\u8F7D\u7684\u51FD\u6570\u662F load_agent_library ,\u8FD9\u4E2A\u51FD\u6570\u7684\u5957\u8DEF\u5C31\u662F\u52A0\u8F7DAgent\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u5982\u679C\u662F\u901A\u8FC7Java instrument API\u5B9E\u73B0\u7684Agent\uFF0C\u5219\u52A0\u8F7D\u7684\u662Flibinstrument\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u7136\u540E\u901A\u8FC7libinstrument\u91CC\u9762\u7684\u4EE3\u7801\u5B9E\u73B0\u8FD0\u884Cagentmain\u65B9\u6CD5\u7684\u903B\u8F91\uFF0C\u8FD9\u4E00\u90E8\u5206\u5185\u5BB9\u548Clibinstrument\u5B9E\u73B0premain\u65B9\u6CD5\u8FD0\u884C\u7684\u903B\u8F91\u5176\u5B9E\u5DEE\u4E0D\u591A\uFF0C\u8FD9\u91CC\u4E0D\u518D\u505A\u5206\u6790\u3002\u81F3\u6B64\uFF0C\u6211\u4EEC\u5BF9Java Agent\u6280\u672F\u5DF2\u7ECF\u6709\u4E86\u4E00\u4E2A\u5168\u9762\u800C\u7EC6\u81F4\u7684\u4E86\u89E3\u3002</p><h2 id="_5-\u52A8\u6001\u5B57\u8282\u7801\u4FEE\u6539\u7684\u9650\u5236" tabindex="-1"><a class="header-anchor" href="#_5-\u52A8\u6001\u5B57\u8282\u7801\u4FEE\u6539\u7684\u9650\u5236" aria-hidden="true">#</a> 5. \u52A8\u6001\u5B57\u8282\u7801\u4FEE\u6539\u7684\u9650\u5236</h2><p>\u4E0A\u6587\u4E2D\u5DF2\u7ECF\u8BE6\u7EC6\u5206\u6790\u4E86Agent\u6280\u672F\u7684\u5B9E\u73B0\uFF0C\u6211\u4EEC\u4F7F\u7528Java Instrumentation API\u6765\u5B8C\u6210\u52A8\u6001\u7C7B\u4FEE\u6539\u7684\u529F\u80FD\uFF0C\u5728Instrumentation\u63A5\u53E3\u4E2D\uFF0C\u901A\u8FC7addTransformer\u65B9\u6CD5\u6765\u589E\u52A0\u4E00\u4E2A\u7C7B\u8F6C\u6362\u5668\uFF0C\u7C7B\u8F6C\u6362\u5668\u7531\u7C7BClassFileTransformer\u63A5\u53E3\u5B9E\u73B0\u3002ClassFileTransformer\u63A5\u53E3\u4E2D\u552F\u4E00\u7684\u65B9\u6CD5transform\u7528\u4E8E\u5B9E\u73B0\u7C7B\u8F6C\u6362\uFF0C\u5F53\u7C7B\u88AB\u52A0\u8F7D\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u8C03\u7528transform\u65B9\u6CD5\uFF0C\u8FDB\u884C\u7C7B\u8F6C\u6362\u3002\u5728\u8FD0\u884C\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7Instrumentation\u7684redefineClasses\u65B9\u6CD5\u8FDB\u884C\u7C7B\u91CD\u5B9A\u4E49\uFF0C\u5728\u65B9\u6CD5\u4E0A\u6709\u4E00\u6BB5\u6CE8\u91CA\u9700\u8981\u7279\u522B\u6CE8\u610F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>     <span class="token operator">*</span> <span class="token class-name">The</span> redefinition may change method bodies<span class="token punctuation">,</span> the constant pool and attributes<span class="token punctuation">.</span>
     <span class="token operator">*</span> <span class="token class-name">The</span> redefinition must not add<span class="token punctuation">,</span> remove or rename fields or methods<span class="token punctuation">,</span> change the
     <span class="token operator">*</span> signatures of methods<span class="token punctuation">,</span> or change <span class="token class-name"><span class="token namespace">inheritance<span class="token punctuation">.</span></span>  These</span> restrictions maybe be
     <span class="token operator">*</span> lifted in future <span class="token class-name"><span class="token namespace">versions<span class="token punctuation">.</span></span>  The</span> <span class="token keyword">class</span> file bytes are not checked<span class="token punctuation">,</span> verified and installed
     <span class="token operator">*</span> until after the transformations have been applied<span class="token punctuation">,</span> <span class="token keyword">if</span> the resultant bytes are in
     <span class="token operator">*</span> error <span class="token keyword">this</span> method will <span class="token keyword">throw</span> an exception<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u9762\u63D0\u5230\uFF0C\u6211\u4EEC\u4E0D\u53EF\u4EE5\u589E\u52A0\u3001\u5220\u9664\u6216\u8005\u91CD\u547D\u540D\u5B57\u6BB5\u548C\u65B9\u6CD5\uFF0C\u6539\u53D8\u65B9\u6CD5\u7684\u7B7E\u540D\u6216\u8005\u7C7B\u7684\u7EE7\u627F\u5173\u7CFB\u3002\u8BA4\u8BC6\u5230\u8FD9\u4E00\u70B9\u5F88\u91CD\u8981\uFF0C\u5F53\u6211\u4EEC\u901A\u8FC7ASM\u83B7\u53D6\u5230\u589E\u5F3A\u7684\u5B57\u8282\u7801\u4E4B\u540E\uFF0C\u5982\u679C\u589E\u5F3A\u540E\u7684\u5B57\u8282\u7801\u6CA1\u6709\u9075\u5B88\u8FD9\u4E9B\u89C4\u5219\uFF0C\u90A3\u4E48\u8C03\u7528redefineClasses\u65B9\u6CD5\u6765\u8FDB\u884C\u7C7B\u7684\u91CD\u5B9A\u4E49\u5C31\u4F1A\u5931\u8D25\u3002\u90A3redefineClasses\u65B9\u6CD5\u5177\u4F53\u662F\u600E\u4E48\u5B9E\u73B0\u7C7B\u7684\u91CD\u5B9A\u4E49\u7684\u5462? \u5B83\u5BF9\u8FD0\u884C\u65F6\u7684JVM\u4F1A\u9020\u6210\u4EC0\u4E48\u6837\u7684\u5F71\u54CD\u5462? \u4E0B\u9762\u6765\u5206\u6790redefineClasses\u7684\u5B9E\u73B0\u7EC6\u8282\u3002</p><h2 id="_6-\u91CD\u5B9A\u4E49\u7C7B\u5B57\u8282\u7801\u7684\u5B9E\u73B0\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#_6-\u91CD\u5B9A\u4E49\u7C7B\u5B57\u8282\u7801\u7684\u5B9E\u73B0\u7EC6\u8282" aria-hidden="true">#</a> 6. \u91CD\u5B9A\u4E49\u7C7B\u5B57\u8282\u7801\u7684\u5B9E\u73B0\u7EC6\u8282</h2><p>\u4E0A\u6587\u4E2D\u6211\u4EEC\u63D0\u5230\uFF0Clibinstrument\u52A8\u6001\u94FE\u63A5\u5E93\u4E2D\uFF0CJPLISAgent\u4E0D\u4EC5\u5B9E\u73B0\u4E86Agent\u5165\u53E3\u4EE3\u7801\u6267\u884C\u7684\u8DEF\u7531\uFF0C\u800C\u4E14\u8FD8\u662FJava\u4EE3\u7801\u4E0EJVMTI\u4E4B\u95F4\u7684\u4E00\u9053\u6865\u6881\u3002\u6211\u4EEC\u5728Java\u4EE3\u7801\u4E2D\u8C03\u7528Java Instrumentation API\u7684redefineClasses\uFF0C\u5176\u5B9E\u4F1A\u8C03\u7528libinstrument\u4E2D\u7684\u76F8\u5173\u4EE3\u7801\uFF0C\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0B\u8FD9\u6761\u8DEF\u5F84\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">redefineClasses</span><span class="token punctuation">(</span><span class="token class-name">ClassDefinition</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isRedefineClassesSupported</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;redefineClasses is not supported in this environment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;null passed as &#39;definitions&#39; in redefineClasses&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var2 <span class="token operator">&lt;</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">[</span>var2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;element of &#39;definitions&#39; is null in redefineClasses&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">redefineClasses0</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mNativeAgent<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">redefineClasses0</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">,</span> <span class="token class-name">ClassDefinition</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662FInstrumentationImpl\u4E2D\u7684redefineClasses\u5B9E\u73B0\uFF0C\u8BE5\u65B9\u6CD5\u7684\u5177\u4F53\u5B9E\u73B0\u4F9D\u8D56\u4E00\u4E2ANative\u65B9\u6CD5redefineClasses()\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728libinstrument\u4E2D\u627E\u5230\u8FD9\u4E2ANative\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token constant">JNIEXPORT</span> <span class="token keyword">void</span> <span class="token constant">JNICALL</span> <span class="token class-name">Java_sun_instrument_InstrumentationImpl_redefineClasses0</span>
  <span class="token punctuation">(</span><span class="token class-name">JNIEnv</span> <span class="token operator">*</span> jnienv<span class="token punctuation">,</span> jobject implThis<span class="token punctuation">,</span> jlong agent<span class="token punctuation">,</span> jobjectArray classDefinitions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">redefineClasses</span><span class="token punctuation">(</span>jnienv<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">JPLISAgent</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>intptr_t<span class="token punctuation">)</span>agent<span class="token punctuation">,</span> classDefinitions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>redefineClasses\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u6BD4\u8F83\u590D\u6742\uFF0C\u4EE3\u7801\u5F88\u957F\u3002\u4E0B\u9762\u662F\u4E00\u6BB5\u5173\u952E\u7684\u4EE3\u7801\u7247\u6BB5\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827214120788.png" alt="image-20220827214120788"></p><p>\u91CD\u5B9A\u4E49\u7C7B\u7684\u8BF7\u6C42\u4F1A\u88ABJVM\u5305\u88C5\u6210\u4E00\u4E2AVM_RedefineClasses\u7C7B\u578B\u7684VM_Operation\uFF0CVM_Operation\u662FJVM\u5185\u90E8\u7684\u4E00\u4E9B\u64CD\u4F5C\u7684\u57FA\u7C7B\uFF0C\u5305\u62ECGC\u64CD\u4F5C\u7B49\u3002VM_Operation\u7531VMThread\u6765\u6267\u884C\uFF0C\u65B0\u7684VM_Operation\u64CD\u4F5C\u4F1A\u88AB\u6DFB\u52A0\u5230VMThread\u7684\u8FD0\u884C\u961F\u5217\u4E2D\u53BB\uFF0CVMThread\u4F1A\u4E0D\u65AD\u4ECE\u961F\u5217\u91CC\u9762\u62C9\u53D6VM_Operation\u5E76\u8C03\u7528\u5176doit\u7B49\u51FD\u6570\u6267\u884C\u5177\u4F53\u7684\u64CD\u4F5C\u3002VM_RedefineClasses\u51FD\u6570\u7684\u6D41\u7A0B\u8F83\u4E3A\u590D\u6742\uFF0C\u4E0B\u9762\u662FVM_RedefineClasses\u7684\u5927\u81F4\u6D41\u7A0B\uFF1A</p><ul><li>\u52A0\u8F7D\u65B0\u7684\u5B57\u8282\u7801\uFF0C\u5408\u5E76\u5E38\u91CF\u6C60\uFF0C\u5E76\u4E14\u5BF9\u65B0\u7684\u5B57\u8282\u7801\u8FDB\u884C\u6821\u9A8C\u5DE5\u4F5C</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Load the caller&#39;s new class definition(s) into _scratch_classes.</span>
  <span class="token comment">// Constant pool merging work is done here as needed. Also calls</span>
  <span class="token comment">// compare_and_normalize_class_versions() to verify the class</span>
  <span class="token comment">// definition(s).</span>
  jvmtiError <span class="token function">load_new_class_versions</span><span class="token punctuation">(</span><span class="token constant">TRAPS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6E05\u9664\u65B9\u6CD5\u4E0A\u7684\u65AD\u70B9</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Remove all breakpoints in methods of this class</span>
  <span class="token class-name">JvmtiBreakpoints</span><span class="token operator">&amp;</span> jvmti_breakpoints <span class="token operator">=</span> <span class="token class-name">JvmtiCurrentBreakpoints</span><span class="token operator">::</span><span class="token function">get_jvmti_breakpoints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  jvmti_breakpoints<span class="token punctuation">.</span><span class="token function">clearall_in_class_at_safepoint</span><span class="token punctuation">(</span><span class="token function">the_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>JIT\u9006\u4F18\u5316</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token comment">// Deoptimize all compiled code that depends on this class</span>
  <span class="token function">flush_dependent_code</span><span class="token punctuation">(</span>the_class<span class="token punctuation">,</span> <span class="token constant">THREAD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FDB\u884C\u5B57\u8282\u7801\u66FF\u6362\u5DE5\u4F5C\uFF0C\u9700\u8981\u8FDB\u884C\u66F4\u65B0\u7C7Bitable/vtable\u7B49\u64CD\u4F5C</li><li>\u8FDB\u884C\u7C7B\u91CD\u5B9A\u4E49\u901A\u77E5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token class-name">SystemDictionary</span><span class="token operator">::</span><span class="token function">notice_modification</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,66),m={href:"https://github.com/pandening/openjdk/blob/0301fc792ffd3c7b506ef78887af250e0e3ae09e/src/hotspot/share/prims/jvmtiEnv.cpp#L456",target:"_blank",rel:"noopener noreferrer"},b=p('<h2 id="_7-java-debug-tool" tabindex="-1"><a class="header-anchor" href="#_7-java-debug-tool" aria-hidden="true">#</a> 7. Java-debug-tool</h2><p>Java-debug-tool\u662F\u4E00\u4E2A\u4F7F\u7528Java Instrument API\u6765\u5B9E\u73B0\u7684\u52A8\u6001\u8C03\u8BD5\u5DE5\u5177\uFF0C\u5B83\u901A\u8FC7\u5728\u76EE\u6807JVM\u4E0A\u542F\u52A8\u4E00\u4E2ATcpServer\u6765\u548C\u8C03\u8BD5\u5BA2\u6237\u7AEF\u901A\u4FE1\u3002\u8C03\u8BD5\u5BA2\u6237\u7AEF\u901A\u8FC7\u547D\u4EE4\u884C\u6765\u53D1\u9001\u8C03\u8BD5\u547D\u4EE4\u7ED9TcpServer\uFF0CTcpServer\u4E2D\u6709\u4E13\u95E8\u7528\u6765\u5904\u7406\u547D\u4EE4\u7684handler\uFF0Chandler\u5904\u7406\u5B8C\u547D\u4EE4\u4E4B\u540E\u4F1A\u5C06\u7ED3\u679C\u53D1\u9001\u56DE\u5BA2\u6237\u7AEF\uFF0C\u5BA2\u6237\u7AEF\u901A\u8FC7\u5904\u7406\u5C06\u8C03\u8BD5\u7ED3\u679C\u5C55\u793A\u51FA\u6765\u3002\u4E0B\u9762\u5C06\u8BE6\u7EC6\u4ECB\u7ECDJava-debug-tool\u7684\u6574\u4F53\u8BBE\u8BA1\u548C\u5B9E\u73B0\u3002</p><h3 id="_7-1-java-debug-tool\u6574\u4F53\u67B6\u6784" tabindex="-1"><a class="header-anchor" href="#_7-1-java-debug-tool\u6574\u4F53\u67B6\u6784" aria-hidden="true">#</a> 7.1 Java-debug-tool\u6574\u4F53\u67B6\u6784</h3><p>Java-debug-tool\u5305\u62EC\u4E00\u4E2AJava Agent\u548C\u4E00\u4E2A\u7528\u4E8E\u5904\u7406\u8C03\u8BD5\u547D\u4EE4\u7684\u6838\u5FC3API\uFF0C\u6838\u5FC3API\u901A\u8FC7\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u7C7B\u52A0\u8F7D\u5668\u52A0\u8F7D\u8FDB\u6765\uFF0C\u4EE5\u4FDD\u8BC1\u76EE\u6807JVM\u7684\u7C7B\u4E0D\u4F1A\u88AB\u6C61\u67D3\u3002\u6574\u4F53\u4E0AJava-debug-tool\u7684\u8BBE\u8BA1\u662F\u4E00\u4E2AClient-Server\u7684\u67B6\u6784\uFF0C\u547D\u4EE4\u5BA2\u6237\u7AEF\u9700\u8981\u5B8C\u6574\u7684\u5B8C\u6210\u4E00\u4E2A\u547D\u4EE4\u4E4B\u540E\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u4E0B\u4E00\u4E2A\u8C03\u8BD5\u547D\u4EE4\u3002Java-debug-tool\u652F\u6301\u591A\u4EBA\u540C\u65F6\u8FDB\u884C\u8C03\u8BD5\uFF0C\u4E0B\u9762\u662F\u6574\u4F53\u67B6\u6784\u56FE\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827215704590.png" alt="image-20220827215704590"></p><p>\u4E0B\u9762\u5BF9\u6BCF\u4E00\u5C42\u505A\u7B80\u5355\u4ECB\u7ECD\uFF1A</p><ul><li>\u4EA4\u4E92\u5C42\uFF1A\u8D1F\u8D23\u5C06\u7A0B\u5E8F\u5458\u7684\u8F93\u5165\u8F6C\u6362\u6210\u8C03\u8BD5\u4EA4\u4E92\u534F\u8BAE\uFF0C\u5E76\u4E14\u5C06\u8C03\u8BD5\u4FE1\u606F\u5448\u73B0\u51FA\u6765\u3002</li><li>\u8FDE\u63A5\u7BA1\u7406\u5C42\uFF1A\u8D1F\u8D23\u7BA1\u7406\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u4ECE\u8FDE\u63A5\u4E2D\u8BFB\u8C03\u8BD5\u534F\u8BAE\u6570\u636E\u5E76\u89E3\u7801\uFF0C\u5BF9\u8C03\u8BD5\u7ED3\u679C\u7F16\u7801\u5E76\u5C06\u5176\u5199\u5230\u8FDE\u63A5\u4E2D\u53BB\uFF1B\u540C\u65F6\u5C06\u90A3\u4E9B\u8D85\u65F6\u672A\u6D3B\u52A8\u7684\u8FDE\u63A5\u5173\u95ED\u3002</li><li>\u4E1A\u52A1\u903B\u8F91\u5C42\uFF1A\u5B9E\u73B0\u8C03\u8BD5\u547D\u4EE4\u5904\u7406\uFF0C\u5305\u62EC\u547D\u4EE4\u5206\u53D1\u3001\u6570\u636E\u6536\u96C6\u3001\u6570\u636E\u5904\u7406\u7B49\u8FC7\u7A0B\u3002</li><li>\u57FA\u7840\u5B9E\u73B0\u5C42\uFF1AJava-debug-tool\u5B9E\u73B0\u7684\u5E95\u5C42\u4F9D\u8D56\uFF0C\u901A\u8FC7Java Instrumentation\u63D0\u4F9B\u7684API\u8FDB\u884C\u7C7B\u67E5\u627E\u3001\u7C7B\u91CD\u5B9A\u4E49\u7B49\u80FD\u529B\uFF0CJava Instrumentation\u5E95\u5C42\u4F9D\u8D56JVMTI\u6765\u5B8C\u6210\u5177\u4F53\u7684\u529F\u80FD\u3002</li></ul><p>\u5728Agent\u88AB\u6302\u8F7D\u5230\u76EE\u6807JVM\u4E0A\u4E4B\u540E\uFF0CJava-debug-tool\u4F1A\u5B89\u6392\u4E00\u4E2ASpy\u5728\u76EE\u6807JVM\u5185\u6D3B\u52A8\uFF0C\u8FD9\u4E2ASpy\u8D1F\u8D23\u5C06\u76EE\u6807JVM\u5185\u90E8\u7684\u76F8\u5173\u8C03\u8BD5\u6570\u636E\u8F6C\u79FB\u5230\u547D\u4EE4\u5904\u7406\u6A21\u5757\uFF0C\u547D\u4EE4\u5904\u7406\u6A21\u5757\u4F1A\u5904\u7406\u8FD9\u4E9B\u6570\u636E\uFF0C\u7136\u540E\u7ED9\u5BA2\u6237\u7AEF\u8FD4\u56DE\u8C03\u8BD5\u7ED3\u679C\u3002\u547D\u4EE4\u5904\u7406\u6A21\u5757\u4F1A\u589E\u5F3A\u76EE\u6807\u7C7B\u7684\u5B57\u8282\u7801\u6765\u8FBE\u5230\u6570\u636E\u83B7\u53D6\u7684\u76EE\u7684\uFF0C\u591A\u4E2A\u5BA2\u6237\u7AEF\u53EF\u4EE5\u5171\u4EAB\u4E00\u4EFD\u589E\u5F3A\u8FC7\u7684\u5B57\u8282\u7801\uFF0C\u65E0\u9700\u91CD\u590D\u589E\u5F3A\u3002\u4E0B\u9762\u4ECEJava-debug-tool\u7684\u5B57\u8282\u7801\u589E\u5F3A\u65B9\u6848\u3001\u547D\u4EE4\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u7B49\u89D2\u5EA6\u8BE6\u7EC6\u8BF4\u660E\u3002</p><h3 id="_7-2-java-debug-tool\u7684\u5B57\u8282\u7801\u589E\u5F3A\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#_7-2-java-debug-tool\u7684\u5B57\u8282\u7801\u589E\u5F3A\u65B9\u6848" aria-hidden="true">#</a> 7.2 Java-debug-tool\u7684\u5B57\u8282\u7801\u589E\u5F3A\u65B9\u6848</h3><p>Java-debug-tool\u4F7F\u7528\u5B57\u8282\u7801\u589E\u5F3A\u6765\u83B7\u53D6\u5230\u65B9\u6CD5\u8FD0\u884C\u65F6\u7684\u4FE1\u606F\uFF0C\u6BD4\u5982\u65B9\u6CD5\u5165\u53C2\u3001\u51FA\u53C2\u7B49\uFF0C\u53EF\u4EE5\u5728\u4E0D\u540C\u7684\u5B57\u8282\u7801\u4F4D\u7F6E\u8FDB\u884C\u589E\u5F3A\uFF0C\u8FD9\u79CD\u884C\u4E3A\u53EF\u4EE5\u79F0\u4E3A\u201C\u63D2\u6869\u201D\uFF0C\u6BCF\u4E2A\u201C\u6869\u201D\u7528\u4E8E\u83B7\u53D6\u6570\u636E\u5E76\u5C06\u4ED6\u8F6C\u50A8\u51FA\u53BB\u3002Java-debug-tool\u5177\u5907\u5F3A\u5927\u7684\u63D2\u6869\u80FD\u529B\uFF0C\u4E0D\u540C\u7684\u6869\u8D1F\u8D23\u83B7\u53D6\u4E0D\u540C\u7C7B\u522B\u7684\u6570\u636E\uFF0C\u4E0B\u9762\u662FJava-debug-tool\u76EE\u524D\u6240\u652F\u6301\u7684\u201C\u6869\u201D\uFF1A</p><ul><li>\u65B9\u6CD5\u8FDB\u5165\u70B9\uFF1A\u7528\u4E8E\u83B7\u53D6\u65B9\u6CD5\u5165\u53C2\u4FE1\u606F\u3002</li><li>Fields\u83B7\u53D6\u70B91\uFF1A\u5728\u65B9\u6CD5\u6267\u884C\u524D\u83B7\u53D6\u5230\u5BF9\u8C61\u7684\u5B57\u6BB5\u4FE1\u606F\u3002</li><li>\u53D8\u91CF\u5B58\u50A8\u70B9\uFF1A\u83B7\u53D6\u5C40\u90E8\u53D8\u91CF\u4FE1\u606F\u3002</li><li>Fields\u83B7\u53D6\u70B92\uFF1A\u5728\u65B9\u6CD5\u9000\u51FA\u524D\u83B7\u53D6\u5230\u5BF9\u8C61\u7684\u5B57\u6BB5\u4FE1\u606F\u3002</li><li>\u65B9\u6CD5\u9000\u51FA\u70B9\uFF1A\u7528\u4E8E\u83B7\u53D6\u65B9\u6CD5\u8FD4\u56DE\u503C\u3002</li><li>\u629B\u51FA\u5F02\u5E38\u70B9\uFF1A\u7528\u4E8E\u83B7\u53D6\u65B9\u6CD5\u629B\u51FA\u7684\u5F02\u5E38\u4FE1\u606F\u3002</li><li>\u901A\u8FC7\u4E0A\u9762\u8FD9\u4E9B\u4EE3\u7801\u6869\uFF0CJava-debug-tool\u53EF\u4EE5\u6536\u96C6\u5230\u4E30\u5BCC\u7684\u65B9\u6CD5\u6267\u884C\u4FE1\u606F\uFF0C\u7ECF\u8FC7\u5904\u7406\u53EF\u4EE5\u8FD4\u56DE\u66F4\u52A0\u53EF\u89C6\u5316\u7684\u8C03\u8BD5\u7ED3\u679C\u3002</li></ul><h4 id="_7-2-1-\u5B57\u8282\u7801\u589E\u5F3A" tabindex="-1"><a class="header-anchor" href="#_7-2-1-\u5B57\u8282\u7801\u589E\u5F3A" aria-hidden="true">#</a> 7.2.1 \u5B57\u8282\u7801\u589E\u5F3A</h4><p>Java-debug-tool\u5728\u5B9E\u73B0\u4E0A\u4F7F\u7528\u4E86ASM\u5DE5\u5177\u6765\u8FDB\u884C\u5B57\u8282\u7801\u589E\u5F3A\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u63D2\u6869\u70B9\u90FD\u53EF\u4EE5\u8FDB\u884C\u914D\u7F6E\uFF0C\u5982\u679C\u4E0D\u60F3\u8981\u4EC0\u4E48\u4FE1\u606F\uFF0C\u5219\u6CA1\u5FC5\u8981\u8FDB\u884C\u5BF9\u5E94\u7684\u63D2\u6869\u64CD\u4F5C\u3002\u8FD9\u79CD\u53EF\u914D\u7F6E\u7684\u8BBE\u8BA1\u662F\u975E\u5E38\u6709\u5FC5\u8981\u7684\uFF0C\u56E0\u4E3A\u6709\u65F6\u5019\u6211\u4EEC\u4EC5\u4EC5\u662F\u60F3\u8981\u77E5\u9053\u65B9\u6CD5\u7684\u5165\u53C2\u548C\u51FA\u53C2\uFF0C\u4F46Java-debug-tool\u5374\u7ED9\u6211\u4EEC\u8FD4\u56DE\u4E86\u6240\u6709\u7684\u8C03\u8BD5\u4FE1\u606F\uFF0C\u8FD9\u6837\u6211\u4EEC\u5C31\u5F97\u5728\u4F17\u591A\u7684\u8F93\u51FA\u4E2D\u627E\u5230\u6211\u4EEC\u6240\u5173\u6CE8\u7684\u5185\u5BB9\u3002\u5982\u679C\u53EF\u4EE5\u8FDB\u884C\u914D\u7F6E\uFF0C\u5219\u9664\u4E86\u5165\u53C2\u70B9\u548C\u51FA\u53C2\u70B9\u5916\u5176\u4ED6\u7684\u6869\u90FD\u4E0D\u63D2\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5FEB\u901F\u770B\u5230\u6211\u4EEC\u60F3\u8981\u7684\u8C03\u8BD5\u6570\u636E\uFF0C\u8FD9\u79CD\u8BBE\u8BA1\u7684\u672C\u8D28\u662F\u4E3A\u4E86\u8BA9\u8C03\u8BD5\u8005\u66F4\u52A0\u4E13\u6CE8\u3002\u4E0B\u9762\u662FJava-debug-tool\u7684\u5B57\u8282\u7801\u589E\u5F3A\u5DE5\u4F5C\u65B9\u5F0F\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827214841150.png" alt="image-20220827214841150"></p><p>\u5982\u56FE\u6240\u793A\uFF0C\u5F53\u8C03\u8BD5\u8005\u53D1\u51FA\u8C03\u8BD5\u547D\u4EE4\u4E4B\u540E\uFF0CJava-debug-tool\u4F1A\u8BC6\u522B\u547D\u4EE4\u5E76\u5224\u65AD\u662F\u5426\u9700\u8981\u8FDB\u884C\u5B57\u8282\u7801\u589E\u5F3A\uFF0C\u5982\u679C\u547D\u4EE4\u9700\u8981\u589E\u5F3A\u5B57\u8282\u7801\uFF0C\u5219\u5224\u65AD\u5F53\u524D\u7C7B+\u5F53\u524D\u65B9\u6CD5\u662F\u5426\u5DF2\u7ECF\u88AB\u589E\u5F3A\u8FC7\u3002\u4E0A\u6587\u5DF2\u7ECF\u63D0\u5230\uFF0C\u5B57\u8282\u7801\u66FF\u6362\u662F\u6709\u4E00\u5B9A\u635F\u8017\u7684\uFF0C\u8FD9\u79CD\u5177\u6709\u635F\u8017\u7684\u64CD\u4F5C\u53D1\u751F\u7684\u6B21\u6570\u8D8A\u5C11\u8D8A\u597D\uFF0C\u6240\u4EE5\u5B57\u8282\u7801\u66FF\u6362\u64CD\u4F5C\u4F1A\u88AB\u8BB0\u5F55\u8D77\u6765\uFF0C\u540E\u7EED\u547D\u4EE4\u76F4\u63A5\u4F7F\u7528\u5373\u53EF\uFF0C\u4E0D\u9700\u8981\u91CD\u590D\u8FDB\u884C\u5B57\u8282\u7801\u589E\u5F3A\uFF0C\u5B57\u8282\u7801\u589E\u5F3A\u8FD8\u6D89\u53CA\u591A\u4E2A\u8C03\u8BD5\u5BA2\u6237\u7AEF\u7684\u534F\u540C\u5DE5\u4F5C\u95EE\u9898\uFF0C\u5F53\u4E00\u4E2A\u5BA2\u6237\u7AEF\u589E\u5F3A\u4E86\u4E00\u4E2A\u7C7B\u7684\u5B57\u8282\u7801\u4E4B\u540E\uFF0C\u8FD9\u4E2A\u5BA2\u6237\u7AEF\u5C31\u9501\u5B9A\u4E86\u8BE5\u5B57\u8282\u7801\uFF0C\u5176\u4ED6\u5BA2\u6237\u7AEF\u53D8\u6210\u53EA\u8BFB\uFF0C\u65E0\u6CD5\u5BF9\u8BE5\u7C7B\u8FDB\u884C\u5B57\u8282\u7801\u589E\u5F3A\uFF0C\u53EA\u6709\u5F53\u6301\u6709\u9501\u7684\u5BA2\u6237\u7AEF\u4E3B\u52A8\u91CA\u653E\u9501\u6216\u8005\u65AD\u5F00\u8FDE\u63A5\u4E4B\u540E\uFF0C\u5176\u4ED6\u5BA2\u6237\u7AEF\u624D\u80FD\u7EE7\u7EED\u589E\u5F3A\u8BE5\u7C7B\u7684\u5B57\u8282\u7801\u3002</p><p>\u5B57\u8282\u7801\u589E\u5F3A\u6A21\u5757\u6536\u5230\u5B57\u8282\u7801\u589E\u5F3A\u8BF7\u6C42\u4E4B\u540E\uFF0C\u4F1A\u5224\u65AD\u6BCF\u4E2A\u589E\u5F3A\u70B9\u662F\u5426\u9700\u8981\u63D2\u6869\uFF0C\u8FD9\u4E2A\u5224\u65AD\u7684\u6839\u636E\u5C31\u662F\u4E0A\u6587\u63D0\u5230\u7684\u63D2\u6869\u914D\u7F6E\uFF0C\u4E4B\u540E\u5B57\u8282\u7801\u589E\u5F3A\u6A21\u5757\u4F1A\u751F\u6210\u65B0\u7684\u5B57\u8282\u7801\uFF0CJava-debug-tool\u5C06\u6267\u884C\u5B57\u8282\u7801\u66FF\u6362\u64CD\u4F5C\uFF0C\u4E4B\u540E\u5C31\u53EF\u4EE5\u8FDB\u884C\u8C03\u8BD5\u6570\u636E\u6536\u96C6\u4E86\u3002</p><p>\u7ECF\u8FC7\u5B57\u8282\u7801\u589E\u5F3A\u4E4B\u540E\uFF0C\u539F\u6765\u7684\u65B9\u6CD5\u4E2D\u4F1A\u63D2\u5165\u6536\u96C6\u8FD0\u884C\u65F6\u6570\u636E\u7684\u4EE3\u7801\uFF0C\u8FD9\u4E9B\u4EE3\u7801\u5728\u65B9\u6CD5\u88AB\u8C03\u7528\u7684\u65F6\u5019\u6267\u884C\uFF0C\u83B7\u53D6\u5230\u8BF8\u5982\u65B9\u6CD5\u5165\u53C2\u3001\u5C40\u90E8\u53D8\u91CF\u7B49\u4FE1\u606F\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5C06\u4F20\u9012\u7ED9\u6570\u636E\u6536\u96C6\u88C5\u7F6E\u8FDB\u884C\u5904\u7406\u3002\u6570\u636E\u6536\u96C6\u7684\u5DE5\u4F5C\u901A\u8FC7Advice\u5B8C\u6210\uFF0C\u6BCF\u4E2A\u5BA2\u6237\u7AEF\u540C\u4E00\u65F6\u95F4\u53EA\u80FD\u6CE8\u518C\u4E00\u4E2AAdvice\u5230Java-debug-tool\u8C03\u8BD5\u6A21\u5757\u4E0A\uFF0C\u591A\u4E2A\u5BA2\u6237\u7AEF\u53EF\u4EE5\u540C\u65F6\u6CE8\u518C\u81EA\u5DF1\u7684Advice\u5230\u8C03\u8BD5\u6A21\u5757\u4E0A\u3002Advice\u8D1F\u8D23\u6536\u96C6\u6570\u636E\u5E76\u8FDB\u884C\u5224\u65AD\uFF0C\u5982\u679C\u5F53\u524D\u6570\u636E\u7B26\u5408\u8C03\u8BD5\u547D\u4EE4\u7684\u8981\u6C42\uFF0CJava-debug-tool\u5C31\u4F1A\u5378\u8F7D\u8FD9\u4E2AAdvice\uFF0CAdvice\u7684\u6570\u636E\u5C31\u4F1A\u88AB\u8F6C\u79FB\u5230Java-debug-tool\u7684\u547D\u4EE4\u7ED3\u679C\u5904\u7406\u6A21\u5757\u8FDB\u884C\u5904\u7406\uFF0C\u5E76\u5C06\u7ED3\u679C\u53D1\u9001\u5230\u5BA2\u6237\u7AEF\u3002</p><h4 id="_7-2-2-advice\u7684\u5DE5\u4F5C\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#_7-2-2-advice\u7684\u5DE5\u4F5C\u65B9\u5F0F" aria-hidden="true">#</a> 7.2.2 Advice\u7684\u5DE5\u4F5C\u65B9\u5F0F</h4><p>Advice\u662F\u8C03\u8BD5\u6570\u636E\u6536\u96C6\u5668\uFF0C\u4E0D\u540C\u7684\u8C03\u8BD5\u7B56\u7565\u4F1A\u5BF9\u5E94\u4E0D\u540C\u7684Advice\u3002Advice\u662F\u5DE5\u4F5C\u5728\u76EE\u6807JVM\u7684\u7EBF\u7A0B\u5185\u90E8\u7684\uFF0C\u5B83\u9700\u8981\u8F7B\u91CF\u7EA7\u548C\u9AD8\u6548\uFF0C\u610F\u5473\u7740Advice\u4E0D\u80FD\u505A\u592A\u8FC7\u4E8E\u590D\u6742\u7684\u4E8B\u60C5\uFF0C\u5B83\u7684\u6838\u5FC3\u63A5\u53E3\u201Cmatch\u201D\u7528\u6765\u5224\u65AD\u672C\u6B21\u6536\u96C6\u5230\u7684\u8C03\u8BD5\u6570\u636E\u662F\u5426\u6EE1\u8DB3\u8C03\u8BD5\u9700\u6C42\u3002\u5982\u679C\u6EE1\u8DB3\uFF0C\u90A3\u4E48Java-debug-tool\u5C31\u4F1A\u5C06\u5176\u5378\u8F7D\uFF0C\u5426\u5219\u4F1A\u7EE7\u7EED\u8BA9\u4ED6\u6536\u96C6\u8C03\u8BD5\u6570\u636E\uFF0C\u8FD9\u79CD\u201C\u52A0\u8F7DAdvice\u201D -&gt; \u201C\u5378\u8F7DAdvice\u201D\u7684\u5DE5\u4F5C\u6A21\u5F0F\u5177\u5907\u5F88\u597D\u7684\u7075\u6D3B\u6027\u3002</p><p>\u5173\u4E8EAdvice\uFF0C\u9700\u8981\u8BF4\u660E\u7684\u53E6\u5916\u4E00\u70B9\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\uFF0C\u56E0\u4E3A\u5B83\u52A0\u8F7D\u4E4B\u540E\u4F1A\u8FD0\u884C\u5728\u76EE\u6807JVM\u7684\u7EBF\u7A0B\u4E2D\uFF0C\u76EE\u6807JVM\u7684\u65B9\u6CD5\u6781\u6709\u53EF\u80FD\u662F\u591A\u7EBF\u7A0B\u8BBF\u95EE\u7684\uFF0C\u8FD9\u4E5F\u5C31\u662F\u8BF4\uFF0CAdvice\u9700\u8981\u6709\u80FD\u529B\u5904\u7406\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8BBF\u95EE\u65B9\u6CD5\u7684\u80FD\u529B\uFF0C\u5982\u679CAdvice\u5904\u7406\u4E0D\u5F53\uFF0C\u5219\u53EF\u80FD\u4F1A\u6536\u96C6\u5230\u6742\u4E71\u65E0\u7AE0\u7684\u8C03\u8BD5\u6570\u636E\u3002\u4E0B\u9762\u7684\u56FE\u7247\u5C55\u793A\u4E86Advice\u548CJava-debug-tool\u8C03\u8BD5\u5206\u6790\u6A21\u5757\u3001\u76EE\u6807\u65B9\u6CD5\u6267\u884C\u4EE5\u53CA\u8C03\u8BD5\u5BA2\u6237\u7AEF\u7B49\u6A21\u5757\u7684\u5173\u7CFB\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827215219210.png" alt="image-20220827215219210"></p><p>Advice\u7684\u9996\u6B21\u6302\u8F7D\u7531Java-debug-tool\u7684\u547D\u4EE4\u5904\u7406\u5668\u5B8C\u6210\uFF0C\u5F53\u4E00\u6B21\u8C03\u8BD5\u6570\u636E\u6536\u96C6\u5B8C\u6210\u4E4B\u540E\uFF0C\u8C03\u8BD5\u6570\u636E\u5904\u7406\u6A21\u5757\u4F1A\u81EA\u52A8\u5378\u8F7DAdvice\uFF0C\u7136\u540E\u8FDB\u884C\u5224\u65AD\uFF0C\u5982\u679C\u8C03\u8BD5\u6570\u636E\u7B26\u5408Advice\u7684\u7B56\u7565\uFF0C\u5219\u76F4\u63A5\u5C06\u6570\u636E\u4EA4\u7531\u6570\u636E\u5904\u7406\u6A21\u5757\u8FDB\u884C\u5904\u7406\uFF0C\u5426\u5219\u4F1A\u6E05\u7A7A\u8C03\u8BD5\u6570\u636E\uFF0C\u5E76\u518D\u6B21\u5C06Advice\u6302\u8F7D\u5230\u76EE\u6807\u65B9\u6CD5\u4E0A\u53BB\uFF0C\u7B49\u5F85\u4E0B\u4E00\u6B21\u8C03\u8BD5\u6570\u636E\u3002\u975E\u9996\u6B21\u6302\u8F7D\u7531\u8C03\u8BD5\u6570\u636E\u5904\u7406\u6A21\u5757\u8FDB\u884C\uFF0C\u5B83\u501F\u52A9Advice\u6309\u9700\u53D6\u6570\u636E\uFF0C\u5982\u679C\u4E0D\u7B26\u5408\u9700\u6C42\uFF0C\u5219\u7EE7\u7EED\u6302\u8F7DAdvice\u6765\u83B7\u53D6\u6570\u636E\uFF0C\u5426\u5219\u5BF9\u8C03\u8BD5\u6570\u636E\u8FDB\u884C\u5904\u7406\u5E76\u8FD4\u56DE\u7ED9\u5BA2\u6237\u7AEF\u3002</p><h3 id="_7-3-java-debug-tool\u7684\u547D\u4EE4\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_7-3-java-debug-tool\u7684\u547D\u4EE4\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> 7.3 Java-debug-tool\u7684\u547D\u4EE4\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h3><h4 id="_7-3-1-\u547D\u4EE4\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_7-3-1-\u547D\u4EE4\u6267\u884C" aria-hidden="true">#</a> 7.3.1 \u547D\u4EE4\u6267\u884C</h4><p>\u4E0A\u6587\u5DF2\u7ECF\u5B8C\u6574\u7684\u63CF\u8FF0\u4E86Java-debug-tool\u7684\u8BBE\u8BA1\u4EE5\u53CA\u6838\u5FC3\u6280\u672F\u65B9\u6848\uFF0C\u672C\u5C0F\u8282\u5C06\u8BE6\u7EC6\u4ECB\u7ECDJava-debug-tool\u7684\u547D\u4EE4\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u3002\u9996\u5148\u9700\u8981\u5C06\u4E00\u4E2A\u8C03\u8BD5\u547D\u4EE4\u7684\u6267\u884C\u6D41\u7A0B\u63CF\u8FF0\u6E05\u695A\uFF0C\u4E0B\u9762\u662F\u4E00\u5F20\u7528\u6765\u8868\u793A\u547D\u4EE4\u8BF7\u6C42\u5904\u7406\u6D41\u7A0B\u7684\u56FE\u7247\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827215332611.png" alt="image-20220827215332611"></p><p>\u4E0A\u56FE\u7B80\u5355\u7684\u63CF\u8FF0\u4E86Java-debug-tool\u7684\u547D\u4EE4\u5904\u7406\u65B9\u5F0F\uFF0C\u5BA2\u6237\u7AEF\u8FDE\u63A5\u5230\u670D\u52A1\u7AEF\u4E4B\u540E\uFF0C\u4F1A\u8FDB\u884C\u4E00\u4E9B\u534F\u8BAE\u89E3\u6790\u3001\u534F\u8BAE\u8BA4\u8BC1\u3001\u534F\u8BAE\u586B\u5145\u7B49\u5DE5\u4F5C\uFF0C\u4E4B\u540E\u5C06\u8FDB\u884C\u547D\u4EE4\u5206\u53D1\u3002\u670D\u52A1\u7AEF\u5982\u679C\u53D1\u73B0\u5BA2\u6237\u7AEF\u7684\u547D\u4EE4\u4E0D\u5408\u6CD5\uFF0C\u5219\u4F1A\u7ACB\u5373\u8FD4\u56DE\u9519\u8BEF\u4FE1\u606F\uFF0C\u5426\u5219\u518D\u8FDB\u884C\u547D\u4EE4\u5904\u7406\u3002\u547D\u4EE4\u5904\u7406\u5C5E\u4E8E\u5178\u578B\u7684\u4E09\u6BB5\u5F0F\u5904\u7406\uFF0C\u524D\u7F6E\u547D\u4EE4\u5904\u7406\u3001\u547D\u4EE4\u5904\u7406\u4EE5\u53CA\u540E\u7F6E\u547D\u4EE4\u5904\u7406\uFF0C\u540C\u65F6\u4F1A\u5BF9\u547D\u4EE4\u5904\u7406\u8FC7\u7A0B\u4E2D\u7684\u5F02\u5E38\u4FE1\u606F\u8FDB\u884C\u6355\u83B7\u5904\u7406\uFF0C\u4E09\u6BB5\u5F0F\u5904\u7406\u7684\u597D\u5904\u662F\u547D\u4EE4\u5904\u7406\u88AB\u62C6\u6210\u4E86\u591A\u4E2A\u9636\u6BB5\uFF0C\u591A\u4E2A\u9636\u6BB5\u8D1F\u8D23\u4E0D\u540C\u7684\u804C\u8D23\u3002\u524D\u7F6E\u547D\u4EE4\u5904\u7406\u7528\u6765\u505A\u4E00\u4E9B\u547D\u4EE4\u6743\u9650\u63A7\u5236\u7684\u5DE5\u4F5C\uFF0C\u5E76\u586B\u5145\u4E00\u4E9B\u7C7B\u4F3C\u547D\u4EE4\u5904\u7406\u5F00\u59CB\u65F6\u95F4\u6233\u7B49\u4FE1\u606F\uFF0C\u547D\u4EE4\u5904\u7406\u5C31\u662F\u901A\u8FC7\u5B57\u8282\u7801\u589E\u5F3A\uFF0C\u6302\u8F7DAdvice\u8FDB\u884C\u6570\u636E\u6536\u96C6\uFF0C\u518D\u7ECF\u8FC7\u6570\u636E\u5904\u7406\u6765\u4EA7\u751F\u547D\u4EE4\u7ED3\u679C\u7684\u8FC7\u7A0B\uFF0C\u540E\u7F6E\u5904\u7406\u5219\u7528\u6765\u5904\u7406\u4E00\u4E9B\u8FDE\u63A5\u5173\u95ED\u3001\u5B57\u8282\u7801\u89E3\u9501\u7B49\u4E8B\u9879\u3002</p><p>Java-debug-tool\u5141\u8BB8\u5BA2\u6237\u7AEF\u8BBE\u7F6E\u4E00\u4E2A\u547D\u4EE4\u6267\u884C\u8D85\u65F6\u65F6\u95F4\uFF0C\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4\u5219\u8BA4\u4E3A\u547D\u4EE4\u6CA1\u6709\u7ED3\u679C\uFF0C\u5982\u679C\u5BA2\u6237\u7AEF\u6CA1\u6709\u8BBE\u7F6E\u81EA\u5DF1\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u5C31\u4F7F\u7528\u9ED8\u8BA4\u7684\u8D85\u65F6\u65F6\u95F4\u8FDB\u884C\u8D85\u65F6\u63A7\u5236\u3002Java-debug-tool\u901A\u8FC7\u8BBE\u8BA1\u4E86\u4E24\u9636\u6BB5\u7684\u8D85\u65F6\u68C0\u6D4B\u673A\u5236\u6765\u5B9E\u73B0\u547D\u4EE4\u6267\u884C\u8D85\u65F6\u529F\u80FD\uFF1A\u9996\u5148\uFF0C\u7B2C\u4E00\u9636\u6BB5\u8D85\u65F6\u89E6\u53D1\uFF0C\u5219Java-debug-tool\u4F1A\u53CB\u597D\u7684\u8B66\u544A\u547D\u4EE4\u5904\u7406\u6A21\u5757\u5904\u7406\u65F6\u95F4\u5DF2\u7ECF\u8D85\u65F6\uFF0C\u9700\u8981\u7ACB\u5373\u505C\u6B62\u547D\u4EE4\u6267\u884C\uFF0C\u8FD9\u5141\u8BB8\u547D\u4EE4\u81EA\u5DF1\u505A\u4E00\u4E9B\u73B0\u573A\u6E05\u7406\u5DE5\u4F5C\uFF0C\u5F53\u7136\u9700\u8981\u547D\u4EE4\u6267\u884C\u7EBF\u7A0B\u81EA\u5DF1\u611F\u77E5\u5230\u8FD9\u79CD\u8D85\u65F6\u8B66\u544A\uFF1B\u5F53\u7B2C\u4E8C\u9636\u6BB5\u8D85\u65F6\u89E6\u53D1\uFF0C\u5219Java-debug-tool\u8BA4\u4E3A\u547D\u4EE4\u5FC5\u987B\u7ED3\u675F\u6267\u884C\uFF0C\u4F1A\u5F3A\u884C\u6253\u65AD\u547D\u4EE4\u6267\u884C\u7EBF\u7A0B\u3002\u8D85\u65F6\u673A\u5236\u7684\u76EE\u7684\u662F\u4E3A\u4E86\u4E0D\u8BA9\u547D\u4EE4\u6267\u884C\u592A\u957F\u65F6\u95F4\uFF0C\u547D\u4EE4\u5982\u679C\u957F\u65F6\u95F4\u6CA1\u6709\u6536\u96C6\u5230\u8C03\u8BD5\u6570\u636E\uFF0C\u5219\u5E94\u8BE5\u505C\u6B62\u6267\u884C\uFF0C\u5E76\u601D\u8003\u662F\u5426\u8C03\u8BD5\u4E86\u4E00\u4E2A\u9519\u8BEF\u7684\u65B9\u6CD5\u3002\u5F53\u7136\uFF0C\u8D85\u65F6\u673A\u5236\u8FD8\u53EF\u4EE5\u5B9A\u671F\u6E05\u7406\u90A3\u4E9B\u56E0\u4E3A\u672A\u77E5\u539F\u56E0\u65AD\u5F00\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\u6301\u6709\u7684\u8C03\u8BD5\u8D44\u6E90\uFF0C\u6BD4\u5982\u5B57\u8282\u7801\u9501\u3002</p><h4 id="_7-3-2-\u83B7\u53D6\u65B9\u6CD5\u6267\u884C\u89C6\u56FE" tabindex="-1"><a class="header-anchor" href="#_7-3-2-\u83B7\u53D6\u65B9\u6CD5\u6267\u884C\u89C6\u56FE" aria-hidden="true">#</a> 7.3.2 \u83B7\u53D6\u65B9\u6CD5\u6267\u884C\u89C6\u56FE</h4><p>Java-debug-tool\u901A\u8FC7\u4E0B\u9762\u7684\u4FE1\u606F\u6765\u5411\u8C03\u8BD5\u8005\u5448\u73B0\u51FA\u4E00\u6B21\u65B9\u6CD5\u6267\u884C\u7684\u89C6\u56FE\uFF1A</p><ul><li>\u6B63\u5728\u8C03\u8BD5\u7684\u65B9\u6CD5\u4FE1\u606F\u3002</li><li>\u65B9\u6CD5\u8C03\u7528\u5806\u6808\u3002</li><li>\u8C03\u8BD5\u8017\u65F6\uFF0C\u5305\u62EC\u5BF9\u76EE\u6807JVM\u9020\u6210\u7684STW\u65F6\u95F4\u3002</li><li>\u65B9\u6CD5\u5165\u53C2\uFF0C\u5305\u62EC\u5165\u53C2\u7684\u7C7B\u578B\u53CA\u53C2\u6570\u503C\u3002</li><li>\u65B9\u6CD5\u7684\u6267\u884C\u8DEF\u5F84\u3002</li><li>\u4EE3\u7801\u6267\u884C\u8017\u65F6\u3002</li><li>\u5C40\u90E8\u53D8\u91CF\u4FE1\u606F\u3002</li><li>\u65B9\u6CD5\u8FD4\u56DE\u7ED3\u679C\u3002</li><li>\u65B9\u6CD5\u629B\u51FA\u7684\u5F02\u5E38\u3002</li><li>\u5BF9\u8C61\u5B57\u6BB5\u503C\u5FEB\u7167\u3002</li></ul><p>\u4E0B\u56FE\u5C55\u793A\u4E86Java-debug-tool\u83B7\u53D6\u5230\u6B63\u5728\u8FD0\u884C\u7684\u65B9\u6CD5\u7684\u6267\u884C\u89C6\u56FE\u7684\u4FE1\u606F</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827215451243.png" alt="image-20220827215451243"></p><h3 id="_7-4-java-debug-tool\u4E0E\u540C\u7C7B\u4EA7\u54C1\u5BF9\u6BD4\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_7-4-java-debug-tool\u4E0E\u540C\u7C7B\u4EA7\u54C1\u5BF9\u6BD4\u5206\u6790" aria-hidden="true">#</a> 7.4 Java-debug-tool\u4E0E\u540C\u7C7B\u4EA7\u54C1\u5BF9\u6BD4\u5206\u6790</h3><p>Java-debug-tool\u7684\u540C\u7C7B\u4EA7\u54C1\u4E3B\u8981\u662Fgreys\uFF0C\u5176\u4ED6\u7C7B\u4F3C\u7684\u5DE5\u5177\u5927\u90E8\u5206\u90FD\u662F\u57FA\u4E8Egreys\u8FDB\u884C\u7684\u4E8C\u6B21\u5F00\u53D1\uFF0C\u6240\u4EE5\u76F4\u63A5\u9009\u62E9greys\u6765\u548CJava-debug-tool\u8FDB\u884C\u5BF9\u6BD4\u3002</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220827215923102.png" alt="image-20220827215923102"></p><p>\u672C\u6587\u8BE6\u7EC6\u5256\u6790\u4E86Java\u52A8\u6001\u8C03\u8BD5\u5173\u952E\u6280\u672F\u7684\u5B9E\u73B0\u7EC6\u8282\uFF0C\u5E76\u4ECB\u7ECD\u4E86\u6211\u4EEC\u57FA\u4E8EJava\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u7ED3\u5408\u5B9E\u9645\u6545\u969C\u6392\u67E5\u573A\u666F\u8FDB\u884C\u7684\u4E00\u70B9\u63A2\u7D22\u5B9E\u8DF5\uFF1B\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u4E3A\u7814\u53D1\u4EBA\u5458\u8FDB\u884C\u7EBF\u4E0A\u95EE\u9898\u6392\u67E5\u63D0\u4F9B\u4E86\u4E00\u79CD\u65B0\u7684\u601D\u8DEF\uFF0C\u6211\u4EEC\u57FA\u4E8E\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u89E3\u51B3\u4E86\u4F20\u7EDF\u65AD\u70B9\u8C03\u8BD5\u5B58\u5728\u7684\u95EE\u9898\uFF0C\u4F7F\u5F97\u53EF\u4EE5\u5C06\u65AD\u70B9\u8C03\u8BD5\u8FD9\u79CD\u6280\u672F\u5E94\u7528\u5728\u7EBF\u4E0A\uFF0C\u4EE5\u7EBF\u4E0B\u8C03\u8BD5\u7684\u601D\u7EF4\u6765\u8FDB\u884C\u7EBF\u4E0A\u8C03\u8BD5\uFF0C\u63D0\u9AD8\u95EE\u9898\u6392\u67E5\u6548\u7387\u3002</p><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>',38),g={href:"https://pdai.tech/md/java/jvm/java-jvm-agent-usage.html",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"\u8C03\u8BD5\u6392\u9519 - Java\u52A8\u6001\u8C03\u8BD5\u6280\u672F\u539F\u7406",-1);function f(_,y){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("\u672C\u6587\u8F6C\u8F7D\u81EA \u7F8E\u56E2\u6280\u672F\u56E2\u961F\u80E1\u5065\u7684"),n("a",r,[s("Java \u52A8\u6001\u8C03\u8BD5\u6280\u672F\u539F\u7406\u53CA\u5B9E\u8DF5"),t(a)]),s(", \u901A\u8FC7\u5B66\u4E60java agent\u65B9\u5F0F\u8FDB\u884C\u52A8\u6001\u8C03\u8BD5\u4E86\u89E3\u76EE\u524D\u5F88\u591A\u5927\u5382\u5F00\u6E90\u7684\u4E00\u4E9B\u57FA\u4E8E\u6B64\u7684\u8C03\u8BD5\u5DE5\u5177\u3002")])]),k,n("p",null,[s("create_vm_init_agents\u8FD9\u4E2A\u51FD\u6570\u901A\u8FC7\u904D\u5386Agent\u94FE\u8868\u6765\u9010\u4E2A\u52A0\u8F7DAgent\u3002\u901A\u8FC7\u8FD9\u6BB5\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u9996\u5148\u901A\u8FC7lookup_agent_on_load\u6765\u52A0\u8F7DAgent\u5E76\u4E14\u627E\u5230Agent_OnLoad\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662FAgent\u7684\u5165\u53E3\u51FD\u6570\u3002\u5982\u679C\u6CA1\u627E\u5230\u8FD9\u4E2A\u51FD\u6570\uFF0C\u5219\u8BA4\u4E3A\u662F\u52A0\u8F7D\u4E86\u4E00\u4E2A\u4E0D\u5408\u6CD5\u7684Agent\uFF0C\u5219\u4EC0\u4E48\u4E5F\u4E0D\u505A\uFF0C\u5426\u5219\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\uFF0C\u8FD9\u6837Agent\u7684\u4EE3\u7801\u5C31\u5F00\u59CB\u6267\u884C\u8D77\u6765\u4E86\u3002\u5BF9\u4E8E\u4F7F\u7528Java Instrumentation API\u6765\u7F16\u5199Agent\u7684\u65B9\u5F0F\u6765\u8BF4\uFF0C\u5728\u89E3\u6790\u9636\u6BB5\u89C2\u5BDF\u5230\u5728add_init_agent\u51FD\u6570\u91CC\u9762\u4F20\u9012\u8FDB\u53BB\u7684\u662F\u4E00\u4E2A\u53EB\u505A\u201Dinstrument\u201D\u7684\u5B57\u7B26\u4E32\uFF0C\u5176\u5B9E\u8FD9\u662F\u4E00\u4E2A\u52A8\u6001\u94FE\u63A5\u5E93\u3002\u5728Linux\u91CC\u9762\uFF0C"),n("a",d,[s("\u8FD9\u4E2A\u5E93\u53EB\u505Alibinstrument.so"),t(a)]),s("\uFF0C\u5728BSD\u7CFB\u7EDF\u4E2D\u53EB\u505Alibinstrument.dylib\uFF0C\u8BE5\u52A8\u6001\u94FE\u63A5\u5E93\u5728{JAVA_HOME}/jre/lib/\u76EE\u5F55\u4E0B\u3002")]),v,n("p",null,[s("VM_RedefineClasses\u5B9E\u73B0\u6BD4\u8F83\u590D\u6742\u7684\uFF0C\u8BE6\u7EC6\u5B9E\u73B0\u53EF\u4EE5\u53C2\u8003 "),n("a",m,[s("RedefineClasses "),t(a)]),s("\u7684\u5B9E\u73B0\u3002")]),b,n("p",null,[n("a",g,[h,t(a)])])])}const J=e(l,[["render",f],["__file","java-jvm-agent-usage.html.vue"]]);export{J as default};
