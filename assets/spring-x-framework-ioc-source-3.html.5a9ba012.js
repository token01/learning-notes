import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as e,a as n,d as p,f as o,r as c}from"./app.31f1281d.js";const l={},i=o(`<h1 id="spring\u8FDB\u9636-spring-ioc\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bbean\u5B9E\u4F8B\u5316-\u751F\u547D\u5468\u671F-\u5FAA\u73AF\u4F9D\u8D56\u7B49" tabindex="-1"><a class="header-anchor" href="#spring\u8FDB\u9636-spring-ioc\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bbean\u5B9E\u4F8B\u5316-\u751F\u547D\u5468\u671F-\u5FAA\u73AF\u4F9D\u8D56\u7B49" aria-hidden="true">#</a> Spring\u8FDB\u9636 - Spring IOC\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BBean\u5B9E\u4F8B\u5316(\u751F\u547D\u5468\u671F,\u5FAA\u73AF\u4F9D\u8D56\u7B49)</h1><blockquote><p>\u4E0A\u6587\uFF0C\u6211\u4EEC\u770B\u4E86IOC\u8BBE\u8BA1\u8981\u70B9\u548C\u8BBE\u8BA1\u7ED3\u6784\uFF1B\u4EE5\u53CASpring\u5982\u4F55\u5B9E\u73B0\u5C06\u8D44\u6E90\u914D\u7F6E\uFF08\u4EE5xml\u914D\u7F6E\u4E3A\u4F8B\uFF09\u901A\u8FC7\u52A0\u8F7D\uFF0C\u89E3\u6790\uFF0C\u751F\u6210BeanDefination\u5E76\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\u7684\uFF1B\u5BB9\u5668\u4E2D\u5B58\u653E\u7684\u662FBean\u7684\u5B9A\u4E49\u5373BeanDefinition\u653E\u5230beanDefinitionMap\u4E2D\uFF0C\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A<code>ConcurrentHashMap&lt;String, Object&gt;</code>\uFF1B\u5E76\u4E14BeanDefinition\u63A5\u53E3\u4E2D\u5305\u542B\u4E86\u8FD9\u4E2A\u7C7B\u7684Class\u4FE1\u606F\u4EE5\u53CA\u662F\u5426\u662F\u5355\u4F8B\u7B49\u3002\u90A3\u4E48\u5982\u4F55\u4ECEBeanDefinition\u4E2D\u5B9E\u4F8B\u5316Bean\u5BF9\u8C61\u5462\uFF0C\u8FD9\u662F\u672C\u6587\u4E3B\u8981\u7814\u7A76\u7684\u5185\u5BB9\uFF1F</p></blockquote><h2 id="_1-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165" aria-hidden="true">#</a> 1. \u5F15\u5165</h2><blockquote><p>\u4E0A\u6587\uFF0C\u6211\u4EEC\u770B\u4E86IOC\u8BBE\u8BA1\u8981\u70B9\u548C\u8BBE\u8BA1\u7ED3\u6784\uFF1B\u4EE5\u53CASpring\u5982\u4F55\u5B9E\u73B0\u5C06\u8D44\u6E90\u914D\u7F6E\uFF08\u4EE5xml\u914D\u7F6E\u4E3A\u4F8B\uFF09\u901A\u8FC7\u52A0\u8F7D\uFF0C\u89E3\u6790\uFF0C\u751F\u6210BeanDefination\u5E76\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\u7684\uFF1B\u5BB9\u5668\u4E2D\u5B58\u653E\u7684\u662FBean\u7684\u5B9A\u4E49\u5373BeanDefinition\u653E\u5230beanDefinitionMap\u4E2D\uFF0C\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A<code>ConcurrentHashMap&lt;String, Object&gt;</code>\uFF1B\u5E76\u4E14BeanDefinition\u63A5\u53E3\u4E2D\u5305\u542B\u4E86\u8FD9\u4E2A\u7C7B\u7684Class\u4FE1\u606F\u4EE5\u53CA\u662F\u5426\u662F\u5355\u4F8B\u7B49\u3002\u90A3\u4E48\u5982\u4F55\u4ECEBeanDefinition\u4E2D\u5B9E\u4F8B\u5316Bean\u5BF9\u8C61\u5462\uFF1F</p></blockquote><p>\u672C\u6587\u4E3B\u8981\u7814\u7A76\u5982\u4F55\u4ECEIOC\u5BB9\u5668\u5DF2\u6709\u7684BeanDefinition\u4FE1\u606F\uFF0C\u5B9E\u4F8B\u5316\u51FABean\u5BF9\u8C61\uFF1B\u8FD9\u91CC\u8FD8\u4F1A\u5305\u62EC\u4E09\u5757\u91CD\u70B9\u5185\u5BB9\uFF1A</p><ul><li>BeanFactory\u4E2DgetBean\u7684\u4E3B\u4F53\u601D\u8DEF</li><li>Spring\u5982\u4F55\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898</li><li>Spring\u4E2DBean\u7684\u751F\u547D\u5468\u671F</li></ul><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220711222356102.png" alt="image-20220711222356102"></p><h2 id="_2-beanfactory\u4E2Dgetbean\u7684\u4E3B\u4F53\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-beanfactory\u4E2Dgetbean\u7684\u4E3B\u4F53\u601D\u8DEF" aria-hidden="true">#</a> 2. BeanFactory\u4E2DgetBean\u7684\u4E3B\u4F53\u601D\u8DEF</h2><blockquote><p>\u4E0A\u6587\u4E2D\u6211\u4EEC\u77E5\u9053BeanFactory\u5B9A\u4E49\u4E86Bean\u5BB9\u5668\u7684\u89C4\u8303\uFF0C\u5176\u4E2D\u5305\u542B\u6839\u636Ebean\u7684\u540D\u5B57, Class\u7C7B\u578B\u548C\u53C2\u6570\u7B49\u6765\u5F97\u5230bean\u5B9E\u4F8B\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6839\u636Ebean\u7684\u540D\u5B57\u548CClass\u7C7B\u578B\u7B49\u6765\u5F97\u5230bean\u5B9E\u4F8B    </span>
<span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>    
<span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Class</span> requiredType<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>    
<span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-\u521D\u6B65\u7684\u601D\u8003" tabindex="-1"><a class="header-anchor" href="#_2-1-\u521D\u6B65\u7684\u601D\u8003" aria-hidden="true">#</a> 2.1 \u521D\u6B65\u7684\u601D\u8003</h3><p>\u4E0A\u6587\u6211\u4EEC\u5DF2\u7ECF\u5206\u6790\u4E86IoC\u521D\u59CB\u5316\u7684\u6D41\u7A0B\uFF0C\u6700\u7EC8\u7684\u5C06Bean\u7684\u5B9A\u4E49\u5373BeanDefinition\u653E\u5230beanDefinitionMap\u4E2D\uFF0C\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A<code>ConcurrentHashMap&lt;String, Object&gt;</code>\uFF1B\u5E76\u4E14BeanDefinition\u63A5\u53E3\u4E2D\u5305\u542B\u4E86\u8FD9\u4E2A\u7C7B\u7684Class\u4FE1\u606F\u4EE5\u53CA\u662F\u5426\u662F\u5355\u4F8B\u7B49\uFF1B</p><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220711222540967.png" alt="image-20220711222540967"><p>\u8FD9\u6837\u6211\u4EEC\u521D\u6B65\u6709\u4E86\u5B9E\u73B0<code>Object getBean(String name)</code>\u8FD9\u4E2A\u65B9\u6CD5\u7684\u601D\u8DEF\uFF1A</p><ul><li>\u4ECEbeanDefinitionMap\u901A\u8FC7beanName\u83B7\u5F97BeanDefinition</li><li>\u4ECEBeanDefinition\u4E2D\u83B7\u5F97beanClassName</li><li>\u901A\u8FC7\u53CD\u5C04\u521D\u59CB\u5316beanClassName\u7684\u5B9E\u4F8Binstance <ul><li>\u6784\u9020\u51FD\u6570\u4ECEBeanDefinition\u7684getConstructorArgumentValues()\u65B9\u6CD5\u83B7\u53D6</li><li>\u5C5E\u6027\u503C\u4ECEBeanDefinition\u7684getPropertyValues()\u65B9\u6CD5\u83B7\u53D6</li></ul></li><li>\u8FD4\u56DEbeanName\u7684\u5B9E\u4F8Binstance</li></ul><p>\u7531\u4E8EBeanDefinition\u8FD8\u6709\u5355\u4F8B\u7684\u4FE1\u606F\uFF0C\u5982\u679C\u662F\u65E0\u53C2\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\u8FD8\u53EF\u4EE5\u653E\u5728\u4E00\u4E2A\u7F13\u5B58\u4E2D\uFF0C\u8FD9\u6837\u4E0B\u6B21\u83B7\u53D6\u8FD9\u4E2A\u5355\u4F8B\u7684\u5B9E\u4F8B\u65F6\u53EA\u9700\u8981\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\uFF0C\u5982\u679C\u83B7\u53D6\u4E0D\u5230\u518D\u901A\u8FC7\u4E0A\u8FF0\u6B65\u9AA4\u83B7\u53D6\u3002</p><p>\uFF08PS\uFF1A\u5982\u4E0A\u53EA\u662F\u6211\u4EEC\u521D\u6B65\u7684\u601D\u8DEF\uFF0C\u800CSpring\u8FD8\u9700\u8981\u8003\u8651\u5404\u79CD\u8BBE\u8BA1\u4E0A\u7684\u95EE\u9898\uFF0C\u6BD4\u5982beanDefinition\u4E2D\u5176\u5B83\u5B9A\u4E49\uFF0C\u5FAA\u73AF\u4F9D\u8D56\u7B49\uFF1B\u6240\u4EE5\u6211\u4EEC\u6765\u770B\u4E0BSpring\u662F\u5982\u4F55\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF09</p><h3 id="_2-2-spring\u4E2Dgetbean\u7684\u4E3B\u4F53\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-2-spring\u4E2Dgetbean\u7684\u4E3B\u4F53\u601D\u8DEF" aria-hidden="true">#</a> 2.2 Spring\u4E2DgetBean\u7684\u4E3B\u4F53\u601D\u8DEF</h3><p>BeanFactory\u5B9E\u73B0getBean\u65B9\u6CD5\u5728AbstractBeanFactory\u4E2D\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u91CD\u8F7D\u90FD\u662F\u8C03\u7528doGetBean\u65B9\u6CD5\u8FDB\u884C\u5B9E\u73B0\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> args<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6765\u770B\u4E0BdoGetBean\u65B9\u6CD5(\u8FD9\u4E2A\u65B9\u6CD5\u5F88\u957F\uFF0C\u6211\u4EEC\u4E3B\u8981\u770B\u5B83\u7684\u6574\u4F53\u601D\u8DEF\u548C\u8BBE\u8BA1\u8981\u70B9\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u53C2\u6570typeCheckOnly\uFF1Abean\u5B9E\u4F8B\u662F\u5426\u5305\u542B\u4E00\u4E2A\u7C7B\u578B\u68C0\u67E5</span>
<span class="token keyword">protected</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">doGetBean</span><span class="token punctuation">(</span>
			<span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> requiredType<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token keyword">boolean</span> typeCheckOnly<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u89E3\u6790bean\u7684\u771F\u6B63name\uFF0C\u5982\u679Cbean\u662F\u5DE5\u5382\u7C7B\uFF0Cname\u524D\u7F00\u4F1A\u52A0&amp;\uFF0C\u9700\u8981\u53BB\u6389</span>
  <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token function">transformedBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Object</span> beanInstance<span class="token punctuation">;</span>

  <span class="token comment">// Eagerly check singleton cache for manually registered singletons.</span>
  <span class="token class-name">Object</span> sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedInstance <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> args <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65E0\u53C2\u5355\u4F8B\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6</span>
    beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679Cbean\u5B9E\u4F8B\u8FD8\u5728\u521B\u5EFA\u4E2D\uFF0C\u5219\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPrototypeCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCurrentlyInCreationException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5982\u679C bean definition \u5B58\u5728\u4E8E\u7236\u7684bean\u5DE5\u5382\u4E2D\uFF0C\u59D4\u6D3E\u7ED9\u7236Bean\u5DE5\u5382\u83B7\u53D6</span>
    <span class="token class-name">BeanFactory</span> parentBeanFactory <span class="token operator">=</span> <span class="token function">getParentBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">containsBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Not found -&gt; check parent.</span>
      <span class="token class-name">String</span> nameToLookup <span class="token operator">=</span> <span class="token function">originalBeanName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parentBeanFactory <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanFactory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanFactory</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doGetBean</span><span class="token punctuation">(</span>
            nameToLookup<span class="token punctuation">,</span> requiredType<span class="token punctuation">,</span> args<span class="token punctuation">,</span> typeCheckOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Delegation to parent with explicit args.</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// No args -&gt; delegate to standard getBean method.</span>
        <span class="token keyword">return</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> parentBeanFactory<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>nameToLookup<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>typeCheckOnly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C06\u5F53\u524Dbean\u5B9E\u4F8B\u653E\u5165alreadyCreated\u96C6\u5408\u91CC\uFF0C\u6807\u8BC6\u8FD9\u4E2Abean\u51C6\u5907\u521B\u5EFA\u4E86</span>
      <span class="token function">markBeanAsCreated</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">StartupStep</span> beanCreation <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.beans.instantiate&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;beanName&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>requiredType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;beanType&quot;</span><span class="token punctuation">,</span> requiredType<span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">RootBeanDefinition</span> mbd <span class="token operator">=</span> <span class="token function">getMergedLocalBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">checkMergedBeanDefinition</span><span class="token punctuation">(</span>mbd<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u786E\u4FDD\u5B83\u7684\u4F9D\u8D56\u4E5F\u88AB\u521D\u59CB\u5316\u4E86.</span>
      <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dependsOn <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getDependsOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dependsOn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> dep <span class="token operator">:</span> dependsOn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDependent</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> dep<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                <span class="token string">&quot;Circular depends-on relationship between &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; and &#39;&quot;</span> <span class="token operator">+</span> dep <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token function">registerDependentBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">getBean</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u5B83\u4F9D\u8D56\u7684Bean</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchBeanDefinitionException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanCreationException</span><span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                <span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39; depends on missing bean &#39;&quot;</span> <span class="token operator">+</span> dep <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u521B\u5EFABean\u5B9E\u4F8B\uFF1A\u5355\u4F8B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sharedInstance <span class="token operator">=</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u771F\u6B63\u521B\u5EFAbean\u7684\u65B9\u6CD5</span>
            <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Explicitly remove instance from singleton cache: It might have been put there</span>
            <span class="token comment">// eagerly by the creation process, to allow for circular reference resolution.</span>
            <span class="token comment">// Also remove any beans that received a temporary reference to the bean.</span>
            <span class="token function">destroySingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>sharedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u521B\u5EFABean\u5B9E\u4F8B\uFF1A\u539F\u578B</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mbd<span class="token punctuation">.</span><span class="token function">isPrototype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// It&#39;s a prototype -&gt; create a new instance.</span>
        <span class="token class-name">Object</span> prototypeInstance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          prototypeInstance <span class="token operator">=</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span> <span class="token punctuation">{</span>
          <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>prototypeInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u521B\u5EFABean\u5B9E\u4F8B\uFF1A\u6839\u636Ebean\u7684scope\u521B\u5EFA</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> scopeName <span class="token operator">=</span> mbd<span class="token punctuation">.</span><span class="token function">getScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>scopeName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No scope name defined for bean \xB4&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Scope</span> scope <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scopes<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>scopeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scope <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No Scope registered for scope name &#39;&quot;</span> <span class="token operator">+</span> scopeName <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token class-name">Object</span> scopedInstance <span class="token operator">=</span> scope<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">beforePrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">createBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">finally</span> <span class="token punctuation">{</span>
              <span class="token function">afterPrototypeCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          beanInstance <span class="token operator">=</span> <span class="token function">getObjectForBeanInstance</span><span class="token punctuation">(</span>scopedInstance<span class="token punctuation">,</span> name<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ScopeNotActiveException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> scopeName<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;exception&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      beanCreation<span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">cleanupAfterBeanCreationFailure</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      beanCreation<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">adaptBeanInstance</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> beanInstance<span class="token punctuation">,</span> requiredType<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u5F88\u957F\uFF0C\u4E3B\u8981\u770B\u6211\u52A0\u4E2D\u6587\u6CE8\u91CA\u7684\u65B9\u6CD5\u5373\u53EF\u3002</p><ul><li>\u89E3\u6790bean\u7684\u771F\u6B63name\uFF0C\u5982\u679Cbean\u662F\u5DE5\u5382\u7C7B\uFF0Cname\u524D\u7F00\u4F1A\u52A0&amp;\uFF0C\u9700\u8981\u53BB\u6389</li><li>\u65E0\u53C2\u5355\u4F8B\u5148\u4ECE\u7F13\u5B58\u4E2D\u5C1D\u8BD5\u83B7\u53D6</li><li>\u5982\u679Cbean\u5B9E\u4F8B\u8FD8\u5728\u521B\u5EFA\u4E2D\uFF0C\u5219\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</li><li>\u5982\u679Cbean definition \u5B58\u5728\u4E8E\u7236\u7684bean\u5DE5\u5382\u4E2D\uFF0C\u59D4\u6D3E\u7ED9\u7236Bean\u5DE5\u5382\u83B7\u53D6</li><li>\u6807\u8BB0\u8FD9\u4E2AbeanName\u7684\u5B9E\u4F8B\u6B63\u5728\u521B\u5EFA</li><li>\u786E\u4FDD\u5B83\u7684\u4F9D\u8D56\u4E5F\u88AB\u521D\u59CB\u5316</li><li>\u771F\u6B63\u521B\u5EFA <ul><li>\u5355\u4F8B\u65F6</li><li>\u539F\u578B\u65F6</li><li>\u6839\u636Ebean\u7684scope\u521B\u5EFA</li></ul></li></ul><h2 id="_3-\u91CD\u70B9-spring\u5982\u4F55\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_3-\u91CD\u70B9-spring\u5982\u4F55\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898" aria-hidden="true">#</a> 3. \u91CD\u70B9\uFF1ASpring\u5982\u4F55\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898</h2><blockquote><p>\u9996\u5148\u6211\u4EEC\u9700\u8981\u8BF4\u660E\uFF0CSpring\u53EA\u662F\u89E3\u51B3\u4E86\u5355\u4F8B\u6A21\u5F0F\u4E0B\u5C5E\u6027\u4F9D\u8D56\u7684\u5FAA\u73AF\u95EE\u9898\uFF1BSpring\u4E3A\u4E86\u89E3\u51B3\u5355\u4F8B\u7684\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\uFF0C\u4F7F\u7528\u4E86\u4E09\u7EA7\u7F13\u5B58\u3002</p></blockquote><h3 id="_3-1-spring\u5355\u4F8B\u6A21\u5F0F\u4E0B\u7684\u5C5E\u6027\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-1-spring\u5355\u4F8B\u6A21\u5F0F\u4E0B\u7684\u5C5E\u6027\u4F9D\u8D56" aria-hidden="true">#</a> 3.1 Spring\u5355\u4F8B\u6A21\u5F0F\u4E0B\u7684\u5C5E\u6027\u4F9D\u8D56</h3><p>\u5148\u6765\u770B\u4E0B\u8FD9\u4E09\u7EA7\u7F13\u5B58</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** Cache of singleton objects: bean name --&gt; bean instance */</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> singletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/** Cache of early singleton objects: bean name --&gt; bean instance */</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> earlySingletonObjects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** Cache of singleton factories: bean name --&gt; ObjectFactory */</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> singletonFactories <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">ObjectFactory</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>\u7B2C\u4E00\u5C42\u7F13\u5B58\uFF08singletonObjects\uFF09</strong>\uFF1A\u5355\u4F8B\u5BF9\u8C61\u7F13\u5B58\u6C60\uFF0C\u5DF2\u7ECF\u5B9E\u4F8B\u5316\u5E76\u4E14\u5C5E\u6027\u8D4B\u503C\uFF0C\u8FD9\u91CC\u7684\u5BF9\u8C61\u662F<strong>\u6210\u719F\u5BF9\u8C61</strong>\uFF1B</li><li><strong>\u7B2C\u4E8C\u5C42\u7F13\u5B58\uFF08earlySingletonObjects\uFF09</strong>\uFF1A\u5355\u4F8B\u5BF9\u8C61\u7F13\u5B58\u6C60\uFF0C\u5DF2\u7ECF\u5B9E\u4F8B\u5316\u4F46\u5C1A\u672A\u5C5E\u6027\u8D4B\u503C\uFF0C\u8FD9\u91CC\u7684\u5BF9\u8C61\u662F<strong>\u534A\u6210\u54C1\u5BF9\u8C61</strong>\uFF1B</li><li><strong>\u7B2C\u4E09\u5C42\u7F13\u5B58\uFF08singletonFactories\uFF09</strong>: \u5355\u4F8B\u5DE5\u5382\u7684\u7F13\u5B58</li></ul><p>\u5982\u4E0B\u662F\u83B7\u53D6\u5355\u4F8B\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getSingleton</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token keyword">boolean</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Spring\u9996\u5148\u4ECEsingletonObjects\uFF08\u4E00\u7EA7\u7F13\u5B58\uFF09\u4E2D\u5C1D\u8BD5\u83B7\u53D6</span>
  <span class="token class-name">Object</span> singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u82E5\u662F\u83B7\u53D6\u4E0D\u5230\u800C\u4E14\u5BF9\u8C61\u5728\u5EFA\u7ACB\u4E2D\uFF0C\u5219\u5C1D\u8BD5\u4ECEearlySingletonObjects(\u4E8C\u7EA7\u7F13\u5B58)\u4E2D\u83B7\u53D6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isSingletonCurrentlyInCreation</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>singletonObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        singletonObject <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> allowEarlyReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> singletonFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>singletonFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u82E5\u662F\u4ECD\u662F\u83B7\u53D6\u4E0D\u5230\u800C\u4E14\u5BB9\u8BB8\u4ECEsingletonFactories\u7ECF\u8FC7getObject\u83B7\u53D6\uFF0C\u5219\u7ECF\u8FC7singletonFactory.getObject()(\u4E09\u7EA7\u7F13\u5B58)\u83B7\u53D6</span>
              singletonObject <span class="token operator">=</span> singletonFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">//\u82E5\u662F\u83B7\u53D6\u5230\u4E86\u5219\u5C06singletonObject\u653E\u5165\u5230earlySingletonObjects,\u4E5F\u5C31\u662F\u5C06\u4E09\u7EA7\u7F13\u5B58\u63D0\u9AD8\u5230\u4E8C\u7EA7\u7F13\u5B58\u4E2D</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>earlySingletonObjects<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> singletonObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>singletonFactories<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>singletonObject <span class="token operator">!=</span> <span class="token constant">NULL_OBJECT</span> <span class="token operator">?</span> singletonObject <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8865\u5145\u4E00\u4E9B\u65B9\u6CD5\u548C\u53C2\u6570</p><ul><li><code>isSingletonCurrentlyInCreation()</code>\uFF1A\u5224\u65AD\u5F53\u524D\u5355\u4F8Bbean\u662F\u5426\u6B63\u5728\u5EFA\u7ACB\u4E2D\uFF0C\u4E5F\u5C31\u662F\u6CA1\u6709\u521D\u59CB\u5316\u5B8C\u6210(\u597D\u6BD4A\u7684\u6784\u9020\u5668\u4F9D\u8D56\u4E86B\u5BF9\u8C61\u56E0\u6B64\u5F97\u5148\u53BB\u5EFA\u7ACBB\u5BF9\u8C61\uFF0C \u6216\u5219\u5728A\u7684populateBean\u8FC7\u7A0B\u5F53\u4E2D\u4F9D\u8D56\u4E86B\u5BF9\u8C61\uFF0C\u5F97\u5148\u53BB\u5EFA\u7ACBB\u5BF9\u8C61\uFF0C\u8FD9\u65F6\u7684A\u5C31\u662F\u5904\u4E8E\u5EFA\u7ACB\u4E2D\u7684\u72B6\u6001\u3002)</li><li><code>allowEarlyReference</code> \uFF1A\u662F\u5426\u5BB9\u8BB8\u4ECEsingletonFactories\u4E2D\u7ECF\u8FC7getObject\u62FF\u5230\u5BF9\u8C61</li></ul><p>\u5206\u6790getSingleton()\u7684\u6574\u4E2A\u8FC7\u7A0B\uFF0CSpring\u9996\u5148\u4ECE\u4E00\u7EA7\u7F13\u5B58singletonObjects\u4E2D\u83B7\u53D6\u3002\u82E5\u662F\u83B7\u53D6\u4E0D\u5230\uFF0C\u800C\u4E14\u5BF9\u8C61\u6B63\u5728\u5EFA\u7ACB\u4E2D\uFF0C\u5C31\u518D\u4ECE\u4E8C\u7EA7\u7F13\u5B58earlySingletonObjects\u4E2D\u83B7\u53D6\u3002\u82E5\u662F\u4ECD\u662F\u83B7\u53D6\u4E0D\u5230\u4E14\u5BB9\u8BB8singletonFactories\u7ECF\u8FC7getObject()\u83B7\u53D6\uFF0C\u5C31\u4ECE\u4E09\u7EA7\u7F13\u5B58singletonFactory.getObject()(\u4E09\u7EA7\u7F13\u5B58)\u83B7\u53D6\uFF0C\u82E5\u662F\u83B7\u53D6\u5230\u4E86\u5219\u4ECE\u4E09\u7EA7\u7F13\u5B58\u79FB\u52A8\u5230\u4E86\u4E8C\u7EA7\u7F13\u5B58\u3002</p><p>\u4ECE\u4E0A\u9762\u4E09\u7EA7\u7F13\u5B58\u7684\u5206\u6790\uFF0C\u54B1\u4EEC\u80FD\u591F\u77E5\u9053\uFF0C<strong>Spring\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u8BC0\u7A8D\u5C31\u5728\u4E8EsingletonFactories\u8FD9\u4E2A\u4E09\u7EA7cache</strong>\u3002\u8FD9\u4E2Acache\u7684\u7C7B\u578B\u662FObjectFactory\uFF0C\u5B9A\u4E49\u4EE5\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728bean\u5EFA\u7ACB\u8FC7\u7A0B\u5F53\u4E2D\uFF0C\u6709\u4E24\u5904\u6BD4\u8F83\u91CD\u8981\u7684\u533F\u540D\u5185\u90E8\u7C7B\u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\u3002\u4E00\u5904\u662FSpring\u5229\u7528\u5176\u5EFA\u7ACBbean\u7684\u65F6\u5019\uFF0C\u53E6\u5916\u4E00\u5904\u5C31\u662F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">addSingletonFactory</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">getEarlyBeanReference</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> mbd<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5904\u5C31\u662F\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u5173\u952E\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u53D1\u751F\u5728createBeanInstance\u4EE5\u540E\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5355\u4F8B\u5BF9\u8C61\u6B64\u65F6\u5DF2\u7ECF\u88AB\u5EFA\u7ACB\u51FA\u6765\u7684\u3002\u8FD9\u4E2A\u5BF9\u8C61\u5DF2\u7ECF\u88AB\u751F\u4EA7\u51FA\u6765\u4E86\uFF0C\u867D\u7136\u8FD8\u4E0D\u5B8C\u7F8E\uFF08\u5C1A\u672A\u8FDB\u884C\u521D\u59CB\u5316\u7684\u7B2C\u4E8C\u6B65\u548C\u7B2C\u4E09\u6B65\uFF09\uFF0C\u53EF\u662F\u5DF2\u7ECF\u80FD\u88AB\u4EBA\u8BA4\u51FA\u6765\u4E86\uFF08\u6839\u636E\u5BF9\u8C61\u5F15\u7528\u80FD\u5B9A\u4F4D\u5230\u5806\u4E2D\u7684\u5BF9\u8C61\uFF09\uFF0C\u56E0\u6B64Spring\u6B64\u65F6\u5C06\u8FD9\u4E2A\u5BF9\u8C61\u63D0\u65E9\u66DD\u5149\u51FA\u6765\u8BA9\u4F60\u4EEC\u8BA4\u8BC6\uFF0C\u8BA9\u4F60\u4EEC\u4F7F\u7528\u3002</p><blockquote><p>\u597D\u6BD4: A\u5BF9\u8C61setter\u4F9D\u8D56B\u5BF9\u8C61\uFF0CB\u5BF9\u8C61setter\u4F9D\u8D56A\u5BF9\u8C61\u201D\uFF0C</p><ol><li>A\u9996\u5148\u5B8C\u6210\u4E86\u521D\u59CB\u5316\u7684\u7B2C\u4E00\u6B65\uFF0C\u800C\u4E14\u5C06\u672C\u8EAB\u63D0\u65E9\u66DD\u5149\u5230singletonFactories\u4E2D</li><li>\u6B64\u65F6\u8FDB\u884C\u521D\u59CB\u5316\u7684\u7B2C\u4E8C\u6B65\uFF0C\u53D1\u73B0\u672C\u8EAB\u4F9D\u8D56\u5BF9\u8C61B</li><li>\u6B64\u65F6\u5C31\u5C1D\u8BD5\u53BBget(B)\uFF0C\u53D1\u73B0B\u5C1A\u672A\u88ABcreate\uFF0C\u56E0\u6B64\u8D70create\u6D41\u7A0B <ol><li>B\u5728\u521D\u59CB\u5316\u7B2C\u4E00\u6B65\u7684\u65F6\u5019\u53D1\u73B0\u672C\u8EAB\u4F9D\u8D56\u4E86\u5BF9\u8C61A\uFF0C\u56E0\u800C\u5C1D\u8BD5get(A)\uFF0C</li><li>\u5C1D\u8BD5\u4E00\u7EA7\u7F13\u5B58singletonObjects(\u786E\u5B9A\u6CA1\u6709\uFF0C\u7531\u4E8EA\u8FD8\u6CA1\u521D\u59CB\u5316\u5F7B\u5E95)\uFF0C</li><li>\u5C1D\u8BD5\u4E8C\u7EA7\u7F13\u5B58earlySingletonObjects\uFF08\u4E5F\u6CA1\u6709\uFF09\uFF0C</li><li><strong>\u5C1D\u8BD5\u4E09\u7EA7\u7F13\u5B58singletonFactories\uFF0C\u56E0\u4E3AA\u7ECF\u8FC7ObjectFactory\u5C06\u672C\u8EAB\u63D0\u65E9\u66DD\u5149\u4E86\uFF0C\u56E0\u6B64B\u53EF\u4EE5\u7ECF\u8FC7ObjectFactory.getObject\u62FF\u5230A\u5BF9\u8C61(\u534A\u6210\u54C1)</strong>\uFF0C</li><li>B\u62FF\u5230A\u5BF9\u8C61\u540E\u987A\u5229\u5B8C\u6210\u4E86\u521D\u59CB\u5316\u9636\u6BB5\u4E00\u3001\u4E8C\u3001\u4E09\uFF0C\u5F7B\u5E95\u521D\u59CB\u5316\u4EE5\u540E\u5C06\u672C\u8EAB\u653E\u5165\u5230\u4E00\u7EA7\u7F13\u5B58singletonObjects\u4E2D\u3002</li></ol></li><li>\u6B64\u65F6\u8FD4\u56DEA\u4E2D\uFF0CA\u6B64\u65F6\u80FD\u62FF\u5230B\u7684\u5BF9\u8C61\u987A\u5229\u5B8C\u6210\u672C\u8EAB\u7684\u521D\u59CB\u5316\u9636\u6BB5\u4E8C\u3001\u4E09</li><li>\u6700\u7EC8A\u4E5F\u5B8C\u6210\u4E86\u521D\u59CB\u5316\uFF0C\u8FDB\u53BB\u4E86\u4E00\u7EA7\u7F13\u5B58singletonObjects\u4E2D\uFF0C</li><li>\u5E76\u4E14\u66F4\u52A0\u5E78\u8FD0\u7684\u662F\uFF0C\u56E0\u4E3AB\u62FF\u5230\u4E86A\u7684\u5BF9\u8C61\u5F15\u7528\uFF0C\u56E0\u6B64B\u5982\u4ECAhold\u4F4F\u7684A\u5BF9\u8C61\u5B8C\u6210\u4E86\u521D\u59CB\u5316\u3002</li></ol></blockquote><h3 id="_3-2-spring\u4E3A\u4F55\u4E0D\u80FD\u89E3\u51B3\u975E\u5355\u4F8B\u5C5E\u6027\u4E4B\u5916\u7684\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-2-spring\u4E3A\u4F55\u4E0D\u80FD\u89E3\u51B3\u975E\u5355\u4F8B\u5C5E\u6027\u4E4B\u5916\u7684\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> 3.2 Spring\u4E3A\u4F55\u4E0D\u80FD\u89E3\u51B3\u975E\u5355\u4F8B\u5C5E\u6027\u4E4B\u5916\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1F</h3><blockquote><p>\u901A\u8FC7\u4EE5\u4E0B\u51E0\u4E2A\u95EE\u9898\uFF0C\u8F85\u52A9\u6211\u4EEC\u8FDB\u4E00\u6B65\u7406\u89E3\u3002</p></blockquote><h4 id="_3-2-1-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-2-1-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> 3.2.1 Spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1F</h4><p>\u6784\u9020\u5668\u6CE8\u5165\u5F62\u6210\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1A \u4E5F\u5C31\u662FbeanB\u9700\u8981\u5728beanA\u7684\u6784\u9020\u51FD\u6570\u4E2D\u5B8C\u6210\u521D\u59CB\u5316\uFF0CbeanA\u4E5F\u9700\u8981\u5728beanB\u7684\u6784\u9020\u51FD\u6570\u4E2D\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u8FD9\u79CD\u60C5\u51B5\u7684\u7ED3\u679C\u5C31\u662F\u4E24\u4E2Abean\u90FD\u4E0D\u80FD\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u5FAA\u73AF\u4F9D\u8D56\u96BE\u4EE5\u89E3\u51B3\u3002</p><p>Spring\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u4E3B\u8981\u662F\u4F9D\u8D56\u4E09\u7EA7\u7F13\u5B58\uFF0C\u4F46\u662F\u7684<strong>\u5728\u8C03\u7528\u6784\u9020\u65B9\u6CD5\u4E4B\u524D\u8FD8\u672A\u5C06\u5176\u653E\u5165\u4E09\u7EA7\u7F13\u5B58\u4E4B\u4E2D</strong>\uFF0C\u56E0\u6B64\u540E\u7EED\u7684\u4F9D\u8D56\u8C03\u7528\u6784\u9020\u65B9\u6CD5\u7684\u65F6\u5019\u5E76\u4E0D\u80FD\u4ECE\u4E09\u7EA7\u7F13\u5B58\u4E2D\u83B7\u53D6\u5230\u4F9D\u8D56\u7684Bean\uFF0C\u56E0\u6B64\u4E0D\u80FD\u89E3\u51B3\u3002</p><h4 id="_3-2-2-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3prototype\u4F5C\u7528\u57DF\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-2-2-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3prototype\u4F5C\u7528\u57DF\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> 3.2.2 Spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3prototype\u4F5C\u7528\u57DF\u5FAA\u73AF\u4F9D\u8D56\uFF1F</h4><p>\u8FD9\u79CD\u5FAA\u73AF\u4F9D\u8D56\u540C\u6837\u65E0\u6CD5\u89E3\u51B3\uFF0C\u56E0\u4E3Aspring\u4E0D\u4F1A\u7F13\u5B58<code>prototype</code>\u4F5C\u7528\u57DF\u7684bean\uFF0C\u800Cspring\u4E2D\u5FAA\u73AF\u4F9D\u8D56\u7684\u89E3\u51B3\u6B63\u662F\u901A\u8FC7\u7F13\u5B58\u6765\u5B9E\u73B0\u7684\u3002</p><blockquote><p><strong>\u56DB\u79CD\u5E38\u89C1\u7684 Spring Bean \u7684\u4F5C\u7528\u57DF\uFF1A</strong></p><ul><li>singleton : \u552F\u4E00 bean \u5B9E\u4F8B\uFF0CSpring \u4E2D\u7684 bean \u9ED8\u8BA4\u90FD\u662F\u5355\u4F8B\u7684\u3002</li><li>prototype : \u6BCF\u6B21\u8BF7\u6C42\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 bean \u5B9E\u4F8B\u3002</li><li>request : \u6BCF\u4E00\u6B21 HTTP \u8BF7\u6C42\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 bean\uFF0C\u8BE5 bean \u4EC5\u5728\u5F53\u524D HTTP request \u5185\u6709\u6548\u3002</li><li>session : \u6BCF\u4E00\u4E2A HTTP Session \u4F1A\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684 bean\uFF0C\u8BE5 bean \u4EC5\u5728\u5F53\u524D HTTP session \u5185\u6709\u6548\u3002</li></ul></blockquote><h4 id="_3-2-3-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u591A\u4F8B\u7684\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-2-3-spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u591A\u4F8B\u7684\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a> 3.2.3 Spring\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u89E3\u51B3\u591A\u4F8B\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF1F</h4><p>\u591A\u5B9E\u4F8BBean\u662F\u6BCF\u6B21\u8C03\u7528\u4E00\u6B21getBean\u90FD\u4F1A\u6267\u884C\u4E00\u6B21\u6784\u9020\u65B9\u6CD5\u5E76\u4E14\u7ED9\u5C5E\u6027\u8D4B\u503C\uFF0C<strong>\u6839\u672C\u6CA1\u6709\u4E09\u7EA7\u7F13\u5B58\uFF0C\u56E0\u6B64\u4E0D\u80FD\u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56</strong>\u3002</p><h3 id="_3-3-\u90A3\u4E48\u5176\u5B83\u5FAA\u73AF\u4F9D\u8D56\u5982\u4F55\u89E3\u51B3" tabindex="-1"><a class="header-anchor" href="#_3-3-\u90A3\u4E48\u5176\u5B83\u5FAA\u73AF\u4F9D\u8D56\u5982\u4F55\u89E3\u51B3" aria-hidden="true">#</a> 3.3 \u90A3\u4E48\u5176\u5B83\u5FAA\u73AF\u4F9D\u8D56\u5982\u4F55\u89E3\u51B3\uFF1F</h3><blockquote><p>\u90A3\u4E48\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u7C7B\u4F3C\u7684\u4F9D\u8D56\u662F\u5982\u4F55\u89E3\u51B3\uFF1F</p></blockquote><ul><li><strong>\u751F\u6210\u4EE3\u7406\u5BF9\u8C61\u4EA7\u751F\u7684\u5FAA\u73AF\u4F9D\u8D56</strong></li></ul><p>\u8FD9\u7C7B\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\u89E3\u51B3\u65B9\u6CD5\u5F88\u591A\uFF0C\u4E3B\u8981\u6709\uFF1A</p><ol><li>\u4F7F\u7528@Lazy\u6CE8\u89E3\uFF0C\u5EF6\u8FDF\u52A0\u8F7D</li><li>\u4F7F\u7528@DependsOn\u6CE8\u89E3\uFF0C\u6307\u5B9A\u52A0\u8F7D\u5148\u540E\u5173\u7CFB</li><li>\u4FEE\u6539\u6587\u4EF6\u540D\u79F0\uFF0C\u6539\u53D8\u5FAA\u73AF\u4F9D\u8D56\u7C7B\u7684\u52A0\u8F7D\u987A\u5E8F</li></ol><ul><li><strong>\u4F7F\u7528@DependsOn\u4EA7\u751F\u7684\u5FAA\u73AF\u4F9D\u8D56</strong></li></ul><p>\u8FD9\u7C7B\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\u8981\u627E\u5230@DependsOn\u6CE8\u89E3\u5FAA\u73AF\u4F9D\u8D56\u7684\u5730\u65B9\uFF0C\u8FEB\u4F7F\u5B83\u4E0D\u5FAA\u73AF\u4F9D\u8D56\u5C31\u53EF\u4EE5\u89E3\u51B3\u95EE\u9898\u3002</p><ul><li><strong>\u591A\u4F8B\u5FAA\u73AF\u4F9D\u8D56</strong></li></ul><p>\u8FD9\u7C7B\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\u53EF\u4EE5\u901A\u8FC7\u628Abean\u6539\u6210\u5355\u4F8B\u7684\u89E3\u51B3\u3002</p><ul><li><strong>\u6784\u9020\u5668\u5FAA\u73AF\u4F9D\u8D56</strong></li></ul><p>\u8FD9\u7C7B\u5FAA\u73AF\u4F9D\u8D56\u95EE\u9898\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528@Lazy\u6CE8\u89E3\u89E3\u51B3\u3002</p><h2 id="_4-\u91CD\u70B9-spring\u4E2Dbean\u7684\u751F\u547D\u5468\u671F" tabindex="-1"><a class="header-anchor" href="#_4-\u91CD\u70B9-spring\u4E2Dbean\u7684\u751F\u547D\u5468\u671F" aria-hidden="true">#</a> 4. \u91CD\u70B9\uFF1ASpring\u4E2DBean\u7684\u751F\u547D\u5468\u671F</h2><blockquote><p>Spring \u53EA\u5E2E\u6211\u4EEC\u7BA1\u7406\u5355\u4F8B\u6A21\u5F0F Bean \u7684<strong>\u5B8C\u6574</strong>\u751F\u547D\u5468\u671F\uFF0C\u5BF9\u4E8E prototype \u7684 bean \uFF0CSpring \u5728\u521B\u5EFA\u597D\u4EA4\u7ED9\u4F7F\u7528\u8005\u4E4B\u540E\u5219\u4E0D\u4F1A\u518D\u7BA1\u7406\u540E\u7EED\u7684\u751F\u547D\u5468\u671F\u3002</p></blockquote><p>Spring \u5BB9\u5668\u53EF\u4EE5\u7BA1\u7406 singleton \u4F5C\u7528\u57DF Bean \u7684\u751F\u547D\u5468\u671F\uFF0C\u5728\u6B64\u4F5C\u7528\u57DF\u4E0B\uFF0CSpring \u80FD\u591F\u7CBE\u786E\u5730\u77E5\u9053\u8BE5 Bean \u4F55\u65F6\u88AB\u521B\u5EFA\uFF0C\u4F55\u65F6\u521D\u59CB\u5316\u5B8C\u6210\uFF0C\u4EE5\u53CA\u4F55\u65F6\u88AB\u9500\u6BC1\u3002</p><p>\u800C\u5BF9\u4E8E prototype \u4F5C\u7528\u57DF\u7684 Bean\uFF0CSpring \u53EA\u8D1F\u8D23\u521B\u5EFA\uFF0C\u5F53\u5BB9\u5668\u521B\u5EFA\u4E86 Bean \u7684\u5B9E\u4F8B\u540E\uFF0CBean \u7684\u5B9E\u4F8B\u5C31\u4EA4\u7ED9\u5BA2\u6237\u7AEF\u4EE3\u7801\u7BA1\u7406\uFF0CSpring \u5BB9\u5668\u5C06\u4E0D\u518D\u8DDF\u8E2A\u5176\u751F\u547D\u5468\u671F\u3002\u6BCF\u6B21\u5BA2\u6237\u7AEF\u8BF7\u6C42 prototype \u4F5C\u7528\u57DF\u7684 Bean \u65F6\uFF0CSpring \u5BB9\u5668\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5B9E\u4F8B\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u7BA1\u90A3\u4E9B\u88AB\u914D\u7F6E\u6210 prototype \u4F5C\u7528\u57DF\u7684 Bean \u7684\u751F\u547D\u5468\u671F\u3002</p><p>\u4E86\u89E3 Spring \u751F\u547D\u5468\u671F\u7684\u610F\u4E49\u5C31\u5728\u4E8E\uFF0C<strong>\u53EF\u4EE5\u5229\u7528 Bean \u5728\u5176\u5B58\u6D3B\u671F\u95F4\u7684\u6307\u5B9A\u65F6\u523B\u5B8C\u6210\u4E00\u4E9B\u76F8\u5173\u64CD\u4F5C</strong>\u3002\u8FD9\u79CD\u65F6\u523B\u53EF\u80FD\u6709\u5F88\u591A\uFF0C\u4F46\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u5728 Bean \u88AB\u521D\u59CB\u5316\u540E\u548C\u88AB\u9500\u6BC1\u524D\u6267\u884C\u4E00\u4E9B\u76F8\u5173\u64CD\u4F5C\u3002</p><h3 id="_4-1-spring-bean\u751F\u547D\u5468\u671F\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_4-1-spring-bean\u751F\u547D\u5468\u671F\u6D41\u7A0B" aria-hidden="true">#</a> 4.1 Spring Bean\u751F\u547D\u5468\u671F\u6D41\u7A0B</h3><blockquote><p>\u5728 Spring \u4E2D\uFF0CBean \u7684\u751F\u547D\u5468\u671F\u662F\u4E00\u4E2A\u5F88\u590D\u6742\u7684\u6267\u884C\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5229\u7528 Spring \u63D0\u4F9B\u7684\u65B9\u6CD5\u5B9A\u5236 Bean \u7684\u521B\u5EFA\u8FC7\u7A0B\u3002</p></blockquote><p><strong>Spring \u5BB9\u5668\u4E2D Bean \u7684\u751F\u547D\u5468\u671F\u6D41\u7A0B</strong></p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220711224531547.png" alt="image-20220711224531547"></p><ul><li><p>\u5982\u679C BeanFactoryPostProcessor \u548C Bean \u5173\u8054, \u5219\u8C03\u7528postProcessBeanFactory\u65B9\u6CD5.(\u5373\u9996<strong>\u5148\u5C1D\u8BD5\u4ECEBean\u5DE5\u5382\u4E2D\u83B7\u53D6Bean</strong>)</p></li><li><p>\u5982\u679C InstantiationAwareBeanPostProcessor \u548C Bean \u5173\u8054\uFF0C\u5219\u8C03\u7528postProcessBeforeInstantiation\u65B9\u6CD5</p></li><li><p>\u6839\u636E\u914D\u7F6E\u60C5\u51B5\u8C03\u7528 Bean \u6784\u9020\u65B9\u6CD5<strong>\u5B9E\u4F8B\u5316 Bean</strong>\u3002</p></li><li><p>\u5229\u7528\u4F9D\u8D56\u6CE8\u5165\u5B8C\u6210 Bean \u4E2D\u6240\u6709<strong>\u5C5E\u6027\u503C\u7684\u914D\u7F6E\u6CE8\u5165</strong>\u3002</p></li><li><p>\u5982\u679C InstantiationAwareBeanPostProcessor \u548C Bean \u5173\u8054\uFF0C\u5219\u8C03\u7528postProcessAfterInstantiation\u65B9\u6CD5\u548CpostProcessProperties</p></li><li><p>\u8C03\u7528xxxAware\u63A5\u53E3</p><p>(\u4E0A\u56FE\u53EA\u662F\u7ED9\u4E86\u51E0\u4E2A\u4F8B\u5B50)</p><ul><li>\u7B2C\u4E00\u7C7BAware\u63A5\u53E3 <ul><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 BeanNameAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 Bean \u7684 setBeanName() \u65B9\u6CD5\u4F20\u5165\u5F53\u524D Bean \u7684 id \u503C\u3002</li><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 BeanClassLoaderAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 setBeanClassLoader() \u65B9\u6CD5\u4F20\u5165classLoader\u7684\u5F15\u7528\u3002</li><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 BeanFactoryAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 setBeanFactory() \u65B9\u6CD5\u4F20\u5165\u5F53\u524D\u5DE5\u5382\u5B9E\u4F8B\u7684\u5F15\u7528\u3002</li></ul></li><li>\u7B2C\u4E8C\u7C7BAware\u63A5\u53E3 <ul><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 EnvironmentAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 setEnvironment() \u65B9\u6CD5\u4F20\u5165\u5F53\u524D Environment \u5B9E\u4F8B\u7684\u5F15\u7528\u3002</li><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 EmbeddedValueResolverAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 setEmbeddedValueResolver() \u65B9\u6CD5\u4F20\u5165\u5F53\u524D StringValueResolver \u5B9E\u4F8B\u7684\u5F15\u7528\u3002</li><li>\u5982\u679C Bean \u5B9E\u73B0\u4E86 ApplicationContextAware \u63A5\u53E3\uFF0C\u5219 Spring \u8C03\u7528 setApplicationContext() \u65B9\u6CD5\u4F20\u5165\u5F53\u524D ApplicationContext \u5B9E\u4F8B\u7684\u5F15\u7528\u3002</li><li>...</li></ul></li></ul></li><li><p>\u5982\u679C BeanPostProcessor \u548C Bean \u5173\u8054\uFF0C\u5219 Spring \u5C06\u8C03\u7528\u8BE5\u63A5\u53E3\u7684\u9884\u521D\u59CB\u5316\u65B9\u6CD5 postProcessBeforeInitialzation() \u5BF9 Bean \u8FDB\u884C\u52A0\u5DE5\u64CD\u4F5C\uFF0C\u6B64\u5904\u975E\u5E38\u91CD\u8981\uFF0CSpring \u7684 AOP \u5C31\u662F\u5229\u7528\u5B83\u5B9E\u73B0\u7684\u3002</p></li><li><p>\u5982\u679C Bean \u5B9E\u73B0\u4E86 InitializingBean \u63A5\u53E3\uFF0C\u5219 Spring \u5C06\u8C03\u7528 afterPropertiesSet() \u65B9\u6CD5\u3002(\u6216\u8005\u6709\u6267\u884C@PostConstruct\u6CE8\u89E3\u7684\u65B9\u6CD5)</p></li><li><p>\u5982\u679C\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u901A\u8FC7 <strong>init-method</strong> \u5C5E\u6027\u6307\u5B9A\u4E86\u521D\u59CB\u5316\u65B9\u6CD5\uFF0C\u5219\u8C03\u7528\u8BE5\u521D\u59CB\u5316\u65B9\u6CD5\u3002</p></li><li><p>\u5982\u679C BeanPostProcessor \u548C Bean \u5173\u8054\uFF0C\u5219 Spring \u5C06\u8C03\u7528\u8BE5\u63A5\u53E3\u7684\u521D\u59CB\u5316\u65B9\u6CD5 postProcessAfterInitialization()\u3002\u6B64\u65F6\uFF0CBean \u5DF2\u7ECF\u53EF\u4EE5\u88AB\u5E94\u7528\u7CFB\u7EDF\u4F7F\u7528\u4E86\u3002</p></li><li><p>\u5982\u679C\u5728 <code>&lt;bean&gt;</code> \u4E2D\u6307\u5B9A\u4E86\u8BE5 Bean \u7684\u4F5C\u7528\u8303\u56F4\u4E3A scope=&quot;singleton&quot;\uFF0C\u5219\u5C06\u8BE5 Bean \u653E\u5165 Spring IoC \u7684\u7F13\u5B58\u6C60\u4E2D\uFF0C\u5C06\u89E6\u53D1 Spring \u5BF9\u8BE5 Bean \u7684\u751F\u547D\u5468\u671F\u7BA1\u7406\uFF1B\u5982\u679C\u5728 <code>&lt;bean&gt;</code> \u4E2D\u6307\u5B9A\u4E86\u8BE5 Bean \u7684\u4F5C\u7528\u8303\u56F4\u4E3A scope=&quot;prototype&quot;\uFF0C\u5219\u5C06\u8BE5 Bean \u4EA4\u7ED9\u8C03\u7528\u8005\uFF0C\u8C03\u7528\u8005\u7BA1\u7406\u8BE5 Bean \u7684\u751F\u547D\u5468\u671F\uFF0CSpring \u4E0D\u518D\u7BA1\u7406\u8BE5 Bean\u3002</p></li><li><p>\u5982\u679C Bean \u5B9E\u73B0\u4E86 DisposableBean \u63A5\u53E3\uFF0C\u5219 Spring \u4F1A\u8C03\u7528 destory() \u65B9\u6CD5\u5C06 Spring \u4E2D\u7684 Bean \u9500\u6BC1\uFF1B(\u6216\u8005\u6709\u6267\u884C@PreDestroy\u6CE8\u89E3\u7684\u65B9\u6CD5)</p></li><li><p>\u5982\u679C\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u901A\u8FC7 <strong>destory-method</strong> \u5C5E\u6027\u6307\u5B9A\u4E86 Bean \u7684\u9500\u6BC1\u65B9\u6CD5\uFF0C\u5219 Spring \u5C06\u8C03\u7528\u8BE5\u65B9\u6CD5\u5BF9 Bean \u8FDB\u884C\u9500\u6BC1\u3002</p></li></ul><p><strong>Bean\u7684\u5B8C\u6574\u751F\u547D\u5468\u671F\u7ECF\u5386\u4E86\u5404\u79CD\u65B9\u6CD5\u8C03\u7528\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u5212\u5206\u4E3A\u4EE5\u4E0B\u51E0\u7C7B</strong>\uFF1A(\u7ED3\u5408\u4E0A\u56FE\uFF0C\u9700\u8981\u6709\u5982\u4E0B\u9876\u5C42\u601D\u7EF4)</p><ul><li><strong>Bean\u81EA\u8EAB\u7684\u65B9\u6CD5</strong>\uFF1A \u8FD9\u4E2A\u5305\u62EC\u4E86Bean\u672C\u8EAB\u8C03\u7528\u7684\u65B9\u6CD5\u548C\u901A\u8FC7\u914D\u7F6E\u6587\u4EF6\u4E2D<code>&lt;bean&gt;</code>\u7684init-method\u548Cdestroy-method\u6307\u5B9A\u7684\u65B9\u6CD5</li><li><strong>Bean\u7EA7\u751F\u547D\u5468\u671F\u63A5\u53E3\u65B9\u6CD5</strong>\uFF1A \u8FD9\u4E2A\u5305\u62EC\u4E86BeanNameAware\u3001BeanFactoryAware\u3001ApplicationContextAware\uFF1B\u5F53\u7136\u4E5F\u5305\u62ECInitializingBean\u548CDiposableBean\u8FD9\u4E9B\u63A5\u53E3\u7684\u65B9\u6CD5\uFF08\u53EF\u4EE5\u88AB@PostConstruct\u548C@PreDestroy\u6CE8\u89E3\u66FF\u4EE3)</li><li><strong>\u5BB9\u5668\u7EA7\u751F\u547D\u5468\u671F\u63A5\u53E3\u65B9\u6CD5</strong>\uFF1A \u8FD9\u4E2A\u5305\u62EC\u4E86InstantiationAwareBeanPostProcessor \u548C BeanPostProcessor \u8FD9\u4E24\u4E2A\u63A5\u53E3\u5B9E\u73B0\uFF0C\u4E00\u822C\u79F0\u5B83\u4EEC\u7684\u5B9E\u73B0\u7C7B\u4E3A\u201C\u540E\u5904\u7406\u5668\u201D\u3002</li><li><strong>\u5DE5\u5382\u540E\u5904\u7406\u5668\u63A5\u53E3\u65B9\u6CD5</strong>\uFF1A \u8FD9\u4E2A\u5305\u62EC\u4E86AspectJWeavingEnabler, ConfigurationClassPostProcessor, CustomAutowireConfigurer\u7B49\u7B49\u975E\u5E38\u6709\u7528\u7684\u5DE5\u5382\u540E\u5904\u7406\u5668\u63A5\u53E3\u7684\u65B9\u6CD5\u3002\u5DE5\u5382\u540E\u5904\u7406\u5668\u4E5F\u662F\u5BB9\u5668\u7EA7\u7684\u3002\u5728\u5E94\u7528\u4E0A\u4E0B\u6587\u88C5\u914D\u914D\u7F6E\u6587\u4EF6\u4E4B\u540E\u7ACB\u5373\u8C03\u7528\u3002</li></ul><h3 id="_4-2-spring-bean\u751F\u547D\u5468\u671F\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4-2-spring-bean\u751F\u547D\u5468\u671F\u6848\u4F8B" aria-hidden="true">#</a> 4.2 Spring Bean\u751F\u547D\u5468\u671F\u6848\u4F8B</h3><blockquote><p>\u6211\u4EEC\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u9A8C\u8BC1\u4E0A\u9762\u7684\u6574\u4E2A\u6D41\u7A0B</p></blockquote><p>\u5B9A\u4E49Bean\uFF08\u8FD9\u91CC\u662FUser\uFF09, \u5E76\u8BA9\u5B83\u5B9E\u73B0BeanNameAware,BeanFactoryAware,ApplicationContextAware\u63A5\u53E3\u548CInitializingBean,DisposableBean\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">ToString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">BeansException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">BeanFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">BeanFactoryAware</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">BeanNameAware</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">DisposableBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">InitializingBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContextAware</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">BeanFactoryAware</span><span class="token punctuation">,</span> <span class="token class-name">BeanNameAware</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationContextAware</span><span class="token punctuation">,</span>
        <span class="token class-name">InitializingBean</span><span class="token punctuation">,</span> <span class="token class-name">DisposableBean</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * user&#39;s name.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * user&#39;s age.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * bean factory.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BeanFactory</span> beanFactory<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * application context.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * bean name.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> beanName<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute User#new User()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute User#setName({})&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute User#setAge({})&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">BeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute BeanFactoryAware#setBeanFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBeanName</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute BeanNameAware#setBeanName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>beanName <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute ApplicationContextAware#setApplicationContext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute DisposableBean#destroy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute InitializingBean#afterPropertiesSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute User#doInit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute User#doDestroy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49BeanFactoryPostProcessor\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBeanFactoryPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanFactoryPostProcessor</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableListableBeanFactory</span> configurableListableBeanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute BeanFactoryPostProcessor#postProcessBeanFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49InstantiationAwareBeanPostProcessor\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyInstantiationAwareBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation for {}&quot;</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessBeforeInstantiation</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">postProcessAfterInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation for {}&quot;</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessAfterInstantiation</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">PropertyValues</span> <span class="token function">postProcessProperties</span><span class="token punctuation">(</span><span class="token class-name">PropertyValues</span> pvs<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute InstantiationAwareBeanPostProcessor#postProcessProperties for {}&quot;</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">InstantiationAwareBeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessProperties</span><span class="token punctuation">(</span>pvs<span class="token punctuation">,</span> bean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49BeanPostProcessor\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBeanPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">BeanPostProcessor</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute BeanPostProcessor#postProcessBeforeInitialization for {}&quot;</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">BeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessBeforeInitialization</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;execute BeanPostProcessor#postProcessAfterInitialization for {}&quot;</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">BeanPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7Java\u914D\u7F6E\u65B9\u5F0F\u521D\u59CB\u5316Bean</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeansConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> initMethod <span class="token operator">=</span> <span class="token string">&quot;doInit&quot;</span><span class="token punctuation">,</span> destroyMethod <span class="token operator">=</span> <span class="token string">&quot;doDestroy&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;pdai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> user<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7684\u4E3B\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Cglib proxy demo.
 *
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * main interface.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">args</span> args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Init application context&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// create and configure beans</span>
        <span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span>
                <span class="token string">&quot;tech.pdai.springframework&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// retrieve configured instance</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// print info from beans</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Shutdown application context&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">registerShutdownHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF08\u5254\u9664\u65E0\u5173\u8F93\u51FA\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">42.547</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span></span>App</span> <span class="token operator">-</span> <span class="token class-name">Init</span> application context
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.134</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyBeanFactoryPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">BeanFactoryPostProcessor</span>#postProcessBeanFactory
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.216</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">DEBUG</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>DefaultListableBeanFactory</span> <span class="token operator">-</span> <span class="token class-name">Creating</span> shared instance of singleton bean <span class="token char">&#39;user&#39;</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.216</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyInstantiationAwareBeanPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">InstantiationAwareBeanPostProcessor</span>#postProcessBeforeInstantiation <span class="token keyword">for</span> user
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.236</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">User</span>#<span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.237</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">User</span>#<span class="token function">setName</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.237</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">User</span>#<span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.237</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyInstantiationAwareBeanPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">InstantiationAwareBeanPostProcessor</span>#postProcessAfterInstantiation <span class="token keyword">for</span> user
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.237</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyInstantiationAwareBeanPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">InstantiationAwareBeanPostProcessor</span>#postProcessProperties <span class="token keyword">for</span> user
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.242</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">BeanNameAware</span>#setBeanName
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.242</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">BeanFactoryAware</span>#setBeanFactory
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.242</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">ApplicationContextAware</span>#setApplicationContext
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.242</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyBeanPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">BeanPostProcessor</span>#postProcessBeforeInitialization <span class="token keyword">for</span> user
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.242</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">InitializingBean</span>#afterPropertiesSet
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.243</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">User</span>#doInit
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.243</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>processor<span class="token punctuation">.</span></span>MyBeanPostProcessor</span> <span class="token operator">-</span> execute <span class="token class-name">BeanPostProcessor</span>#postProcessAfterInitialization <span class="token keyword">for</span> user
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.270</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span></span>App</span> <span class="token operator">-</span> <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>pdai<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.270</span> <span class="token punctuation">[</span>main<span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span></span>App</span> <span class="token operator">-</span> <span class="token class-name">Shutdown</span> application context
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.276</span> <span class="token punctuation">[</span><span class="token class-name">SpringContextShutdownHook</span><span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">DisposableBean</span>#destroy
<span class="token number">12</span><span class="token operator">:</span><span class="token number">44</span><span class="token operator">:</span><span class="token number">43.276</span> <span class="token punctuation">[</span><span class="token class-name">SpringContextShutdownHook</span><span class="token punctuation">]</span> <span class="token constant">INFO</span> <span class="token class-name"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span>User</span> <span class="token operator">-</span> execute <span class="token class-name">User</span>#doDestroy

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,91),u={href:"https://pdai.tech/md/spring/spring-x-framework-ioc-source-3.html",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"Spring\u8FDB\u9636- Spring IOC\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BBean\u5B9E\u4F8B\u5316(\u751F\u547D\u5468\u671F,\u5FAA\u73AF\u4F9D\u8D56\u7B49)",-1);function k(d,m){const s=c("ExternalLinkIcon");return t(),e("div",null,[i,n("p",null,[n("a",u,[r,p(s)])])])}const g=a(l,[["render",k],["__file","spring-x-framework-ioc-source-3.html.vue"]]);export{g as default};
