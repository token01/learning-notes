import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as p,r as l}from"./app.283e29d5.js";const i={},u=p('<h1 id="java\u5E38\u7528\u673A\u5236-spi\u673A\u5236\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#java\u5E38\u7528\u673A\u5236-spi\u673A\u5236\u8BE6\u89E3" aria-hidden="true">#</a> Java\u5E38\u7528\u673A\u5236 - SPI\u673A\u5236\u8BE6\u89E3</h1><blockquote><p>SPI\uFF08Service Provider Interface\uFF09\uFF0C\u662FJDK\u5185\u7F6E\u7684\u4E00\u79CD \u670D\u52A1\u63D0\u4F9B\u53D1\u73B0\u673A\u5236\uFF0C\u53EF\u4EE5\u7528\u6765\u542F\u7528\u6846\u67B6\u6269\u5C55\u548C\u66FF\u6362\u7EC4\u4EF6\uFF0C\u4E3B\u8981\u662F\u88AB\u6846\u67B6\u7684\u5F00\u53D1\u4EBA\u5458\u4F7F\u7528\u3002</p></blockquote><h2 id="_1-\u4EC0\u4E48\u662Fspi\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_1-\u4EC0\u4E48\u662Fspi\u673A\u5236" aria-hidden="true">#</a> 1. \u4EC0\u4E48\u662FSPI\u673A\u5236</h2><p>SPI\uFF08Service Provider Interface\uFF09\uFF0C\u662FJDK\u5185\u7F6E\u7684\u4E00\u79CD \u670D\u52A1\u63D0\u4F9B\u53D1\u73B0\u673A\u5236\uFF0C\u53EF\u4EE5\u7528\u6765\u542F\u7528\u6846\u67B6\u6269\u5C55\u548C\u66FF\u6362\u7EC4\u4EF6\uFF0C\u4E3B\u8981\u662F\u88AB\u6846\u67B6\u7684\u5F00\u53D1\u4EBA\u5458\u4F7F\u7528\uFF0C\u6BD4\u5982java.sql.Driver\u63A5\u53E3\uFF0C\u5176\u4ED6\u4E0D\u540C\u5382\u5546\u53EF\u4EE5\u9488\u5BF9\u540C\u4E00\u63A5\u53E3\u505A\u51FA\u4E0D\u540C\u7684\u5B9E\u73B0\uFF0CMySQL\u548CPostgreSQL\u90FD\u6709\u4E0D\u540C\u7684\u5B9E\u73B0\u63D0\u4F9B\u7ED9\u7528\u6237\uFF0C\u800CJava\u7684SPI\u673A\u5236\u53EF\u4EE5\u4E3A\u67D0\u4E2A\u63A5\u53E3\u5BFB\u627E\u670D\u52A1\u5B9E\u73B0\u3002Java\u4E2DSPI\u673A\u5236\u4E3B\u8981\u601D\u60F3\u662F\u5C06\u88C5\u914D\u7684\u63A7\u5236\u6743\u79FB\u5230\u7A0B\u5E8F\u4E4B\u5916\uFF0C\u5728\u6A21\u5757\u5316\u8BBE\u8BA1\u4E2D\u8FD9\u4E2A\u673A\u5236\u5C24\u5176\u91CD\u8981\uFF0C\u5176\u6838\u5FC3\u601D\u60F3\u5C31\u662F <strong>\u89E3\u8026</strong>\u3002</p><p>SPI\u6574\u4F53\u673A\u5236\u56FE\u5982\u4E0B\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20221024194443834.png" alt="image-20221024194443834"></p><p>\u5F53\u670D\u52A1\u7684\u63D0\u4F9B\u8005\u63D0\u4F9B\u4E86\u4E00\u79CD\u63A5\u53E3\u7684\u5B9E\u73B0\u4E4B\u540E\uFF0C\u9700\u8981\u5728classpath\u4E0B\u7684<code>META-INF/services/</code>\u76EE\u5F55\u91CC\u521B\u5EFA\u4E00\u4E2A\u4EE5\u670D\u52A1\u63A5\u53E3\u547D\u540D\u7684\u6587\u4EF6\uFF0C\u8FD9\u4E2A\u6587\u4EF6\u91CC\u7684\u5185\u5BB9\u5C31\u662F\u8FD9\u4E2A\u63A5\u53E3\u7684\u5177\u4F53\u7684\u5B9E\u73B0\u7C7B\u3002\u5F53\u5176\u4ED6\u7684\u7A0B\u5E8F\u9700\u8981\u8FD9\u4E2A\u670D\u52A1\u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u67E5\u627E\u8FD9\u4E2Ajar\u5305\uFF08\u4E00\u822C\u90FD\u662F\u4EE5jar\u5305\u505A\u4F9D\u8D56\uFF09\u7684<code>META-INF/services/</code>\u4E2D\u7684\u914D\u7F6E\u6587\u4EF6\uFF0C\u914D\u7F6E\u6587\u4EF6\u4E2D\u6709\u63A5\u53E3\u7684\u5177\u4F53\u5B9E\u73B0\u7C7B\u540D\uFF0C\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u7C7B\u540D\u8FDB\u884C\u52A0\u8F7D\u5B9E\u4F8B\u5316\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u8BE5\u670D\u52A1\u4E86\u3002JDK\u4E2D\u67E5\u627E\u670D\u52A1\u7684\u5B9E\u73B0\u7684\u5DE5\u5177\u7C7B\u662F\uFF1A<code>java.util.ServiceLoader</code>\u3002</p><h2 id="_2-spi\u673A\u5236\u7684\u7B80\u5355\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_2-spi\u673A\u5236\u7684\u7B80\u5355\u793A\u4F8B" aria-hidden="true">#</a> 2. SPI\u673A\u5236\u7684\u7B80\u5355\u793A\u4F8B</h2>',8),r={href:"https://zhuanlan.zhihu.com/p/28909673",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>\u6211\u4EEC\u73B0\u5728\u9700\u8981\u4F7F\u7528\u4E00\u4E2A\u5185\u5BB9\u641C\u7D22\u63A5\u53E3\uFF0C\u641C\u7D22\u7684\u5B9E\u73B0\u53EF\u80FD\u662F\u57FA\u4E8E\u6587\u4EF6\u7CFB\u7EDF\u7684\u641C\u7D22\uFF0C\u4E5F\u53EF\u80FD\u662F\u57FA\u4E8E\u6570\u636E\u5E93\u7684\u641C\u7D22\u3002</p><ul><li>\u5148\u5B9A\u4E49\u597D\u63A5\u53E3</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Search</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>   
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6587\u4EF6\u641C\u7D22\u5B9E\u73B0</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileSearch</span> <span class="token keyword">implements</span> <span class="token class-name">Search</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6587\u4EF6\u641C\u7D22 &quot;</span><span class="token operator">+</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6570\u636E\u5E93\u641C\u7D22\u5B9E\u73B0</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DatabaseSearch</span> <span class="token keyword">implements</span> <span class="token class-name">Search</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">searchDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u636E\u641C\u7D22 &quot;</span><span class="token operator">+</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>resources \u63A5\u4E0B\u6765\u53EF\u4EE5\u5728resources\u4E0B\u65B0\u5EFAMETA-INF/services/\u76EE\u5F55\uFF0C\u7136\u540E\u65B0\u5EFA\u63A5\u53E3\u5168\u9650\u5B9A\u540D\u7684\u6587\u4EF6\uFF1A<code>com.cainiao.ys.spi.learn.Search</code>\uFF0C\u91CC\u9762\u52A0\u4E0A\u6211\u4EEC\u9700\u8981\u7528\u5230\u7684\u5B9E\u73B0\u7C7B</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>com.cainiao.ys.spi.learn.FileSearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u6D4B\u8BD5\u65B9\u6CD5</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCase</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Search</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Search</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token class-name">Search</span> search <span class="token operator">=</span>  iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           search<span class="token punctuation">.</span><span class="token function">searchDoc</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u8F93\u51FA\u7ED3\u679C\uFF1A\u6587\u4EF6\u641C\u7D22 hello world</p><p>\u5982\u679C\u5728<code>com.cainiao.ys.spi.learn.Search</code>\u6587\u4EF6\u91CC\u5199\u4E0A\u4E24\u4E2A\u5B9E\u73B0\u7C7B\uFF0C\u90A3\u6700\u540E\u7684\u8F93\u51FA\u7ED3\u679C\u5C31\u662F\u4E24\u884C\u4E86\u3002</p><p>\u8FD9\u5C31\u662F\u56E0\u4E3A<code>ServiceLoader.load(Search.class)</code>\u5728\u52A0\u8F7D\u67D0\u63A5\u53E3\u65F6\uFF0C\u4F1A\u53BB<code>META-INF/services</code>\u4E0B\u627E\u63A5\u53E3\u7684\u5168\u9650\u5B9A\u540D\u6587\u4EF6\uFF0C\u518D\u6839\u636E\u91CC\u9762\u7684\u5185\u5BB9\u52A0\u8F7D\u76F8\u5E94\u7684\u5B9E\u73B0\u7C7B\u3002</p><p>\u8FD9\u5C31\u662Fspi\u7684\u601D\u60F3\uFF0C\u63A5\u53E3\u7684\u5B9E\u73B0\u7531provider\u5B9E\u73B0\uFF0Cprovider\u53EA\u7528\u5728\u63D0\u4EA4\u7684jar\u5305\u91CC\u7684<code>META-INF/services</code>\u4E0B\u6839\u636E\u5E73\u53F0\u5B9A\u4E49\u7684\u63A5\u53E3\u65B0\u5EFA\u6587\u4EF6\uFF0C\u5E76\u6DFB\u52A0\u8FDB\u76F8\u5E94\u7684\u5B9E\u73B0\u7C7B\u5185\u5BB9\u5C31\u597D\u3002</p><h2 id="_3-spi\u673A\u5236\u7684\u5E7F\u6CDB\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#_3-spi\u673A\u5236\u7684\u5E7F\u6CDB\u5E94\u7528" aria-hidden="true">#</a> 3. SPI\u673A\u5236\u7684\u5E7F\u6CDB\u5E94\u7528</h2><h3 id="_3-1-spi\u673A\u5236-jdbc-drivermanager" tabindex="-1"><a class="header-anchor" href="#_3-1-spi\u673A\u5236-jdbc-drivermanager" aria-hidden="true">#</a> 3.1 SPI\u673A\u5236 - JDBC DriverManager</h3><blockquote><p>\u5728JDBC4.0\u4E4B\u524D\uFF0C\u6211\u4EEC\u5F00\u53D1\u6709\u8FDE\u63A5\u6570\u636E\u5E93\u7684\u65F6\u5019\uFF0C\u901A\u5E38\u4F1A\u7528Class.forName(&quot;com.mysql.jdbc.Driver&quot;)\u8FD9\u53E5\u5148\u52A0\u8F7D\u6570\u636E\u5E93\u76F8\u5173\u7684\u9A71\u52A8\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u83B7\u53D6\u8FDE\u63A5\u7B49\u7684\u64CD\u4F5C\u3002<strong>\u800CJDBC4.0\u4E4B\u540E\u4E0D\u9700\u8981\u7528Class.forName(&quot;com.mysql.jdbc.Driver&quot;)\u6765\u52A0\u8F7D\u9A71\u52A8\uFF0C\u76F4\u63A5\u83B7\u53D6\u8FDE\u63A5\u5C31\u53EF\u4EE5\u4E86\uFF0C\u73B0\u5728\u8FD9\u79CD\u65B9\u5F0F\u5C31\u662F\u4F7F\u7528\u4E86Java\u7684SPI\u6269\u5C55\u673A\u5236\u6765\u5B9E\u73B0</strong>\u3002</p></blockquote><h4 id="_3-1-1-jdbc\u63A5\u53E3\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_3-1-1-jdbc\u63A5\u53E3\u5B9A\u4E49" aria-hidden="true">#</a> 3.1.1 JDBC\u63A5\u53E3\u5B9A\u4E49</h4><p>\u9996\u5148\u5728java\u4E2D\u5B9A\u4E49\u4E86\u63A5\u53E3<code>java.sql.Driver</code>\uFF0C\u5E76\u6CA1\u6709\u5177\u4F53\u7684\u5B9E\u73B0\uFF0C\u5177\u4F53\u7684\u5B9E\u73B0\u90FD\u662F\u7531\u4E0D\u540C\u5382\u5546\u6765\u63D0\u4F9B\u7684\u3002</p><h4 id="_3-1-2-mysql\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-1-2-mysql\u5B9E\u73B0" aria-hidden="true">#</a> 3.1.2 mysql\u5B9E\u73B0</h4><p>\u5728mysql\u7684jar\u5305<code>mysql-connector-java-6.0.6.jar</code>\u4E2D\uFF0C\u53EF\u4EE5\u627E\u5230<code>META-INF/services</code>\u76EE\u5F55\uFF0C\u8BE5\u76EE\u5F55\u4E0B\u4F1A\u6709\u4E00\u4E2A\u540D\u5B57\u4E3A<code>java.sql.Driver</code>\u7684\u6587\u4EF6\uFF0C\u6587\u4EF6\u5185\u5BB9\u662F<code>com.mysql.cj.jdbc.Driver</code>\uFF0C\u8FD9\u91CC\u9762\u7684\u5185\u5BB9\u5C31\u662F\u9488\u5BF9Java\u4E2D\u5B9A\u4E49\u7684\u63A5\u53E3\u7684\u5B9E\u73B0\u3002</p><h4 id="_3-1-3-postgresql\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-1-3-postgresql\u5B9E\u73B0" aria-hidden="true">#</a> 3.1.3 postgresql\u5B9E\u73B0</h4><p>\u540C\u6837\u5728postgresql\u7684jar\u5305<code>postgresql-42.0.0.jar</code>\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u627E\u5230\u540C\u6837\u7684\u914D\u7F6E\u6587\u4EF6\uFF0C\u6587\u4EF6\u5185\u5BB9\u662F<code>org.postgresql.Driver</code>\uFF0C\u8FD9\u662Fpostgresql\u5BF9Java\u7684<code>java.sql.Driver</code>\u7684\u5B9E\u73B0\u3002</p><h4 id="_3-1-4-\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-1-4-\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> 3.1.4 \u4F7F\u7528\u65B9\u6CD5</h4><p>\u4E0A\u9762\u8BF4\u4E86\uFF0C\u73B0\u5728\u4F7F\u7528SPI\u6269\u5C55\u6765\u52A0\u8F7D\u5177\u4F53\u7684\u9A71\u52A8\uFF0C\u6211\u4EEC\u5728Java\u4E2D\u5199\u8FDE\u63A5\u6570\u636E\u5E93\u7684\u4EE3\u7801\u7684\u65F6\u5019\uFF0C\u4E0D\u9700\u8981\u518D\u4F7F\u7528<code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;)</code>\u6765\u52A0\u8F7D\u9A71\u52A8\u4E86\uFF0C\u800C\u662F\u76F4\u63A5\u4F7F\u7528\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:xxxx://xxxx:xxxx/xxxx&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5E76\u6CA1\u6709\u6D89\u53CA\u5230spi\u7684\u4F7F\u7528\uFF0C\u63A5\u7740\u770B\u4E0B\u9762\u7684\u89E3\u6790\u3002</p><h4 id="_3-1-5-\u6E90\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_3-1-5-\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> 3.1.5 \u6E90\u7801\u5B9E\u73B0</h4><p>\u4E0A\u9762\u7684\u4F7F\u7528\u65B9\u6CD5\uFF0C\u5C31\u662F\u6211\u4EEC\u666E\u901A\u7684\u8FDE\u63A5\u6570\u636E\u5E93\u7684\u4EE3\u7801\uFF0C\u5E76\u6CA1\u6709\u6D89\u53CA\u5230SPI\u7684\u4E1C\u897F\uFF0C\u4F46\u662F\u6709\u4E00\u70B9\u6211\u4EEC\u53EF\u4EE5\u786E\u5B9A\u7684\u662F\uFF0C\u6211\u4EEC\u6CA1\u6709\u5199\u6709\u5173\u5177\u4F53\u9A71\u52A8\u7684\u786C\u7F16\u7801<code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;)</code>\uFF01</p><p>\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\u8FDB\u884C\u64CD\u4F5C\uFF0C\u4F46\u662F\u8DDFSPI\u6709\u5565\u5173\u7CFB\u5462\uFF1F\u4E0A\u9762\u4EE3\u7801\u6CA1\u6709\u4E86\u52A0\u8F7D\u9A71\u52A8\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u600E\u4E48\u53BB\u786E\u5B9A\u4F7F\u7528\u54EA\u4E2A\u6570\u636E\u5E93\u8FDE\u63A5\u7684\u9A71\u52A8\u5462\uFF1F\u8FD9\u91CC\u5C31\u6D89\u53CA\u5230\u4F7F\u7528Java\u7684SPI\u6269\u5C55\u673A\u5236\u6765\u67E5\u627E\u76F8\u5173\u9A71\u52A8\u7684\u4E1C\u897F\u4E86\uFF0C\u5173\u4E8E\u9A71\u52A8\u7684\u67E5\u627E\u5176\u5B9E\u90FD\u5728<code>DriverManager</code>\u4E2D\uFF0C<code>DriverManager</code>\u662FJava\u4E2D\u7684\u5B9E\u73B0\uFF0C\u7528\u6765\u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\uFF0C\u5728<code>DriverManager</code>\u4E2D\u6709\u4E00\u4E2A\u9759\u6001\u4EE3\u7801\u5757\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token function">loadInitialDrivers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;JDBC DriverManager initialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u662F\u52A0\u8F7D\u5B9E\u4F8B\u5316\u9A71\u52A8\u7684\uFF0C\u63A5\u7740\u770BloadInitialDrivers\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadInitialDrivers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> drivers<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        drivers <span class="token operator">=</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc.drivers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        drivers <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">//\u4F7F\u7528SPI\u7684ServiceLoader\u6765\u52A0\u8F7D\u63A5\u53E3\u7684\u5B9E\u73B0</span>
            <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> loadedDrivers <span class="token operator">=</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> driversIterator <span class="token operator">=</span> loadedDrivers<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span><span class="token punctuation">{</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span>driversIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    driversIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Do nothing</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DriverManager.initialize: jdbc.drivers = &quot;</span> <span class="token operator">+</span> drivers<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>drivers <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> drivers<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> driversList <span class="token operator">=</span> drivers<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;number of Drivers:&quot;</span> <span class="token operator">+</span> driversList<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> aDriver <span class="token operator">:</span> driversList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DriverManager.Initialize: loading &quot;</span> <span class="token operator">+</span> aDriver<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>aDriver<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                    <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DriverManager.Initialize: load failed: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E3B\u8981\u6B65\u9AA4\u662F\uFF1A</p><ul><li>\u4ECE\u7CFB\u7EDF\u53D8\u91CF\u4E2D\u83B7\u53D6\u6709\u5173\u9A71\u52A8\u7684\u5B9A\u4E49\u3002</li><li>\u4F7F\u7528SPI\u6765\u83B7\u53D6\u9A71\u52A8\u7684\u5B9E\u73B0\u3002</li><li>\u904D\u5386\u4F7F\u7528SPI\u83B7\u53D6\u5230\u7684\u5177\u4F53\u5B9E\u73B0\uFF0C\u5B9E\u4F8B\u5316\u5404\u4E2A\u5B9E\u73B0\u7C7B\u3002</li><li>\u6839\u636E\u7B2C\u4E00\u6B65\u83B7\u53D6\u5230\u7684\u9A71\u52A8\u5217\u8868\u6765\u5B9E\u4F8B\u5316\u5177\u4F53\u5B9E\u73B0\u7C7B\u3002</li></ul><p>\u6211\u4EEC\u4E3B\u8981\u5173\u6CE82,3\u6B65\uFF0C\u8FD9\u4E24\u6B65\u662FSPI\u7684\u7528\u6CD5\uFF0C\u9996\u5148\u770B\u7B2C\u4E8C\u6B65\uFF0C\u4F7F\u7528SPI\u6765\u83B7\u53D6\u9A71\u52A8\u7684\u5B9E\u73B0\uFF0C\u5BF9\u5E94\u7684\u4EE3\u7801\u662F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> loadedDrivers <span class="token operator">=</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6CA1\u6709\u53BB<code>META-INF/services</code>\u76EE\u5F55\u4E0B\u67E5\u627E\u914D\u7F6E\u6587\u4EF6\uFF0C\u4E5F\u6CA1\u6709\u52A0\u8F7D\u5177\u4F53\u5B9E\u73B0\u7C7B\uFF0C\u505A\u7684\u4E8B\u60C5\u5C31\u662F\u5C01\u88C5\u4E86\u6211\u4EEC\u7684\u63A5\u53E3\u7C7B\u578B\u548C\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5E76\u521D\u59CB\u5316\u4E86\u4E00\u4E2A\u8FED\u4EE3\u5668\u3002</p><p>\u63A5\u7740\u770B\u7B2C\u4E09\u6B65\uFF0C\u904D\u5386\u4F7F\u7528SPI\u83B7\u53D6\u5230\u7684\u5177\u4F53\u5B9E\u73B0\uFF0C\u5B9E\u4F8B\u5316\u5404\u4E2A\u5B9E\u73B0\u7C7B\uFF0C\u5BF9\u5E94\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u83B7\u53D6\u8FED\u4EE3\u5668</span>
<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> driversIterator <span class="token operator">=</span> loadedDrivers<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u904D\u5386\u6240\u6709\u7684\u9A71\u52A8\u5B9E\u73B0</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>driversIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    driversIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u904D\u5386\u7684\u65F6\u5019\uFF0C\u9996\u5148\u8C03\u7528<code>driversIterator.hasNext()</code>\u65B9\u6CD5\uFF0C\u8FD9\u91CC\u4F1A\u641C\u7D22classpath\u4E0B\u4EE5\u53CAjar\u5305\u4E2D\u6240\u6709\u7684<code>META-INF/services</code>\u76EE\u5F55\u4E0B\u7684<code>java.sql.Driver</code>\u6587\u4EF6\uFF0C\u5E76\u627E\u5230\u6587\u4EF6\u4E2D\u7684\u5B9E\u73B0\u7C7B\u7684\u540D\u5B57\uFF0C\u6B64\u65F6\u5E76\u6CA1\u6709\u5B9E\u4F8B\u5316\u5177\u4F53\u7684\u5B9E\u73B0\u7C7B\uFF08ServiceLoader\u5177\u4F53\u7684\u6E90\u7801\u5B9E\u73B0\u5728\u4E0B\u9762\uFF09\u3002</p><p>\u7136\u540E\u662F\u8C03\u7528<code>driversIterator.next();</code>\u65B9\u6CD5\uFF0C\u6B64\u65F6\u5C31\u4F1A\u6839\u636E\u9A71\u52A8\u540D\u5B57\u5177\u4F53\u5B9E\u4F8B\u5316\u5404\u4E2A\u5B9E\u73B0\u7C7B\u4E86\u3002\u73B0\u5728\u9A71\u52A8\u5C31\u88AB\u627E\u5230\u5E76\u5B9E\u4F8B\u5316\u4E86\u3002</p><p>\u53EF\u4EE5\u770B\u4E0B\u622A\u56FE\uFF0C\u6211\u5728\u6D4B\u8BD5\u9879\u76EE\u4E2D\u6DFB\u52A0\u4E86\u4E24\u4E2Ajar\u5305\uFF0C<code>mysql-connector-java-6.0.6.jar</code>\u548C<code>postgresql-42.0.0.0.jar</code>\uFF0C\u8DDF\u8E2A\u5230DriverManager\u4E2D\u4E4B\u540E\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20221024195818259.png" alt="image-20221024195818259"></p><p>\u53EF\u4EE5\u770B\u5230\u6B64\u65F6\u8FED\u4EE3\u5668\u4E2D\u6709\u4E24\u4E2A\u9A71\u52A8\uFF0Cmysql\u548Cpostgresql\u7684\u90FD\u88AB\u52A0\u8F7D\u4E86\u3002</p><h3 id="_3-2-spi\u673A\u5236-common-logging" tabindex="-1"><a class="header-anchor" href="#_3-2-spi\u673A\u5236-common-logging" aria-hidden="true">#</a> 3.2 SPI\u673A\u5236 - Common-Logging</h3><blockquote><p>common-logging\uFF08\u4E5F\u79F0Jakarta Commons Logging\uFF0C\u7F29\u5199 JCL\uFF09\u662F\u5E38\u7528\u7684\u65E5\u5FD7\u5E93\u95E8\u9762\uFF0C\u5177\u4F53<a href="">\u65E5\u5FD7\u5E93\u76F8\u5173\u53EF\u4EE5\u770B\u8FD9\u7BC7</a>\u3002\u6211\u4EEC\u770B\u4E0B\u5B83\u662F\u600E\u4E48\u89E3\u8026\u7684\u3002</p></blockquote><p>\u9996\u5148\uFF0C\u65E5\u5FD7\u5B9E\u4F8B\u662F\u901A\u8FC7LogFactory\u7684getLog(String)\u65B9\u6CD5\u521B\u5EFA\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">Class</span> clazz<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">LogConfigurationException</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LogFatory\u662F\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u5B83\u8D1F\u8D23\u52A0\u8F7D\u5177\u4F53\u7684\u65E5\u5FD7\u5B9E\u73B0\uFF0C\u5206\u6790\u5176Factory getFactory()\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span>LogFactory</span> <span class="token function">getFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">LogConfigurationException</span> <span class="token punctuation">{</span>
    <span class="token comment">// Identify the class loader we will be using</span>
    <span class="token class-name">ClassLoader</span> contextClassLoader <span class="token operator">=</span> <span class="token function">getContextClassLoaderInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>contextClassLoader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This is an odd enough situation to report about. This</span>
        <span class="token comment">// output will be a nuisance on JDK1.1, as the system</span>
        <span class="token comment">// classloader is null in that environment.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;Context classloader is null.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Return any previously registered factory for this class loader</span>
    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span>LogFactory</span> factory <span class="token operator">=</span> <span class="token function">getCachedFactory</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                <span class="token string">&quot;[LOOKUP] LogFactory implementation requested for the first time for context classloader &quot;</span> <span class="token operator">+</span>
                        <span class="token function">objectId</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">logHierarchy</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] &quot;</span><span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Load properties file.</span>
    <span class="token comment">//</span>
    <span class="token comment">// If the properties file exists, then its contents are used as</span>
    <span class="token comment">// &quot;attributes&quot; on the LogFactory implementation class. One particular</span>
    <span class="token comment">// property may also control which LogFactory concrete subclass is</span>
    <span class="token comment">// used, but only if other discovery mechanisms fail..</span>
    <span class="token comment">//</span>
    <span class="token comment">// As the properties file (if it exists) will be used one way or</span>
    <span class="token comment">// another in the end we may as well look for it first.</span>
    <span class="token comment">// classpath\u6839\u76EE\u5F55\u4E0B\u5BFB\u627Ecommons-logging.properties</span>
    <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token function">getConfigurationFile</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> <span class="token constant">FACTORY_PROPERTIES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Determine whether we will be using the thread context class loader to</span>
    <span class="token comment">// load logging classes or not by checking the loaded properties file (if any).</span>
    <span class="token comment">// classpath\u6839\u76EE\u5F55\u4E0Bcommons-logging.properties\u662F\u5426\u914D\u7F6Euse_tccl</span>
    <span class="token class-name">ClassLoader</span> baseClassLoader <span class="token operator">=</span> contextClassLoader<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> useTCCLStr <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">TCCL_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>useTCCLStr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The Boolean.valueOf(useTCCLStr).booleanValue() formulation</span>
            <span class="token comment">// is required for Java 1.2 compatibility.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>useTCCLStr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">booleanValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Don&#39;t use current context classloader when locating any</span>
                <span class="token comment">// LogFactory or Log classes, just use the class that loaded</span>
                <span class="token comment">// this abstract class. When this class is deployed in a shared</span>
                <span class="token comment">// classpath of a container, it means webapps cannot deploy their</span>
                <span class="token comment">// own logging implementations. It also means that it is up to the</span>
                <span class="token comment">// implementation whether to load library-specific config files</span>
                <span class="token comment">// from the TCCL or not.</span>
                baseClassLoader <span class="token operator">=</span> thisClassLoader<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8FD9\u91CC\u771F\u6B63\u5F00\u59CB\u51B3\u5B9A\u4F7F\u7528\u54EA\u4E2Afactory</span>
    <span class="token comment">// \u9996\u5148\uFF0C\u5C1D\u8BD5\u67E5\u627Evm\u7CFB\u7EDF\u5C5E\u6027org.apache.commons.logging.LogFactory\uFF0C\u5176\u662F\u5426\u6307\u5B9Afactory</span>
    <span class="token comment">// Determine which concrete LogFactory subclass to use.</span>
    <span class="token comment">// First, try a global system property</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Looking for system property [&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span>
                <span class="token string">&quot;] to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> factoryClass <span class="token operator">=</span> <span class="token function">getSystemProperty</span><span class="token punctuation">(</span><span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Creating an instance of LogFactory class &#39;&quot;</span> <span class="token operator">+</span> factoryClass <span class="token operator">+</span>
                        <span class="token string">&quot;&#39; as specified by system property &quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClass<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No system property [&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span> <span class="token string">&quot;] defined.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] A security exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span> <span class="token function">trim</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                    <span class="token string">&quot;]. Trying alternative implementations...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// ignore</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// This is not consistent with the behaviour when a bad LogFactory class is</span>
        <span class="token comment">// specified in a services file.</span>
        <span class="token comment">//</span>
        <span class="token comment">// One possible exception that can occur here is a ClassCastException when</span>
        <span class="token comment">// the specified class wasn&#39;t castable to this LogFactory type.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] An exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span>
                    <span class="token function">trim</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                    <span class="token string">&quot;] as specified by a system property.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7B2C\u4E8C\uFF0C\u5C1D\u8BD5\u4F7F\u7528java spi\u670D\u52A1\u53D1\u73B0\u673A\u5236\uFF0C\u8F7DMETA-INF/services\u4E0B\u5BFB\u627Eorg.apache.commons.logging.LogFactory\u5B9E\u73B0</span>
    <span class="token comment">// Second, try to find a service by using the JDK1.3 class</span>
    <span class="token comment">// discovery mechanism, which involves putting a file with the name</span>
    <span class="token comment">// of an interface class in the META-INF/services directory, where the</span>
    <span class="token comment">// contents of the file is a single line specifying a concrete class</span>
    <span class="token comment">// that implements the desired interface.</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Looking for a resource file of name [&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span>
                    <span class="token string">&quot;] to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// META-INF/services/org.apache.commons.logging.LogFactory, SERVICE_ID</span>
            <span class="token keyword">final</span> <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> <span class="token constant">SERVICE_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>is <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// This code is needed by EBCDIC and other strange systems.</span>
                <span class="token comment">// It&#39;s a fix for bugs reported in xerces</span>
                <span class="token class-name">BufferedReader</span> rd<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    rd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">String</span> factoryClassName <span class="token operator">=</span> rd<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                rd<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClassName <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>factoryClassName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP]  Creating an instance of LogFactory class &quot;</span> <span class="token operator">+</span>
                                factoryClassName <span class="token operator">+</span>
                                <span class="token string">&quot; as specified by file &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span>
                                <span class="token string">&quot;&#39; which was present in the path of the context classloader.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClassName<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// is == null</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No resource file with name &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">SERVICE_ID</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// note: if the specified LogFactory class wasn&#39;t compatible with LogFactory</span>
            <span class="token comment">// for some reason, a ClassCastException will be caught here, and attempts will</span>
            <span class="token comment">// continue to find a compatible class.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;[LOOKUP] A security exception occurred while trying to create an&quot;</span> <span class="token operator">+</span>
                                <span class="token string">&quot; instance of the custom factory class&quot;</span> <span class="token operator">+</span>
                                <span class="token string">&quot;: [&quot;</span> <span class="token operator">+</span> <span class="token function">trim</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                                <span class="token string">&quot;]. Trying alternative implementations...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// ignore</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7B2C\u4E09\uFF0C\u5C1D\u8BD5\u4ECEclasspath\u6839\u76EE\u5F55\u4E0B\u7684commons-logging.properties\u4E2D\u67E5\u627Eorg.apache.commons.logging.LogFactory\u5C5E\u6027\u6307\u5B9A\u7684factory</span>
    <span class="token comment">// Third try looking into the properties file read earlier (if found)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;[LOOKUP] Looking in properties file for entry with key &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_PROPERTY</span> <span class="token operator">+</span>
                                <span class="token string">&quot;&#39; to define the LogFactory subclass to use...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> factoryClass <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">FACTORY_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>factoryClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;[LOOKUP] Properties file specifies LogFactory subclass &#39;&quot;</span> <span class="token operator">+</span> factoryClass <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span>factoryClass<span class="token punctuation">,</span> baseClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// TODO: think about whether we need to handle exceptions from newFactory</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] Properties file has no entry specifying LogFactory subclass.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logDiagnostic</span><span class="token punctuation">(</span><span class="token string">&quot;[LOOKUP] No properties file available to determine&quot;</span> <span class="token operator">+</span> <span class="token string">&quot; LogFactory subclass from..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6700\u540E\uFF0C\u4F7F\u7528\u540E\u5907factory\u5B9E\u73B0\uFF0Corg.apache.commons.logging.impl.LogFactoryImpl</span>
    <span class="token comment">// Fourth, try the fallback implementation class</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDiagnosticsEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">logDiagnostic</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;[LOOKUP] Loading the default LogFactory implementation &#39;&quot;</span> <span class="token operator">+</span> <span class="token constant">FACTORY_DEFAULT</span> <span class="token operator">+</span>
                            <span class="token string">&quot;&#39; via the same classloader that loaded this LogFactory&quot;</span> <span class="token operator">+</span>
                            <span class="token string">&quot; class (ie not looking in the context classloader).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Note: unlike the above code which can try to load custom LogFactory</span>
        <span class="token comment">// implementations via the TCCL, we don&#39;t try to load the default LogFactory</span>
        <span class="token comment">// implementation via the context classloader because:</span>
        <span class="token comment">// * that can cause problems (see comments in newFactory method)</span>
        <span class="token comment">// * no-one should be customising the code of the default class</span>
        <span class="token comment">// Yes, we do give up the ability for the child to ship a newer</span>
        <span class="token comment">// version of the LogFactoryImpl class and have it used dynamically</span>
        <span class="token comment">// by an old LogFactory class in the parent, but that isn&#39;t</span>
        <span class="token comment">// necessarily a good idea anyway.</span>
        factory <span class="token operator">=</span> <span class="token function">newFactory</span><span class="token punctuation">(</span><span class="token constant">FACTORY_DEFAULT</span><span class="token punctuation">,</span> thisClassLoader<span class="token punctuation">,</span> contextClassLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>factory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
            * Always cache using context class loader.
            */</span>
        <span class="token function">cacheFactory</span><span class="token punctuation">(</span>contextClassLoader<span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Enumeration</span> names <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">propertyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>names<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> names<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> value <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                factory<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u62BD\u8C61\u7C7BLogFactory\u52A0\u8F7D\u5177\u4F53\u5B9E\u73B0\u7684\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><ul><li>\u4ECEvm\u7CFB\u7EDF\u5C5E\u6027org.apache.commons.logging.LogFactory</li><li>\u4F7F\u7528SPI\u670D\u52A1\u53D1\u73B0\u673A\u5236\uFF0C\u53D1\u73B0org.apache.commons.logging.LogFactory\u7684\u5B9E\u73B0</li><li>\u67E5\u627Eclasspath\u6839\u76EE\u5F55commons-logging.properties\u7684org.apache.commons.logging.LogFactory\u5C5E\u6027\u662F\u5426\u6307\u5B9Afactory\u5B9E\u73B0</li><li>\u4F7F\u7528\u9ED8\u8BA4factory\u5B9E\u73B0\uFF0Corg.apache.commons.logging.impl.LogFactoryImpl</li></ul><blockquote><p>LogFactory\u7684getLog()\u65B9\u6CD5\u8FD4\u56DE\u7C7B\u578B\u662Forg.apache.commons.logging.Log\u63A5\u53E3\uFF0C\u63D0\u4F9B\u4E86\u4ECEtrace\u5230fatal\u65B9\u6CD5\u3002\u53EF\u4EE5\u786E\u5B9A\uFF0C\u5982\u679C\u65E5\u5FD7\u5B9E\u73B0\u63D0\u4F9B\u8005\u53EA\u8981\u5B9E\u73B0\u8BE5\u63A5\u53E3\uFF0C\u5E76\u4E14\u4F7F\u7528\u7EE7\u627F\u81EAorg.apache.commons.logging.LogFactory\u7684\u5B50\u7C7B\u521B\u5EFALog\uFF0C\u5FC5\u7136\u53EF\u4EE5\u6784\u5EFA\u4E00\u4E2A\u677E\u8026\u5408\u7684\u65E5\u5FD7\u7CFB\u7EDF\u3002</p></blockquote><h3 id="_3-3-spi\u673A\u5236-\u63D2\u4EF6\u4F53\u7CFB" tabindex="-1"><a class="header-anchor" href="#_3-3-spi\u673A\u5236-\u63D2\u4EF6\u4F53\u7CFB" aria-hidden="true">#</a> 3.3 SPI\u673A\u5236 - \u63D2\u4EF6\u4F53\u7CFB</h3><blockquote><p>\u5176\u5B9E\u6700\u5177spi\u601D\u60F3\u7684\u5E94\u8BE5\u5C5E\u4E8E\u63D2\u4EF6\u5F00\u53D1\uFF0C\u6211\u4EEC\u9879\u76EE\u4E2D\u4E5F\u7528\u5230\u7684\u8FD9\u79CD\u601D\u60F3\uFF0C\u540E\u9762\u518D\u8BF4\uFF0C\u8FD9\u91CC\u5177\u4F53\u8BF4\u4E00\u4E0Beclipse\u7684\u63D2\u4EF6\u601D\u60F3\u3002</p></blockquote><p>Eclipse\u4F7F\u7528OSGi\u4F5C\u4E3A\u63D2\u4EF6\u7CFB\u7EDF\u7684\u57FA\u7840\uFF0C\u52A8\u6001\u6DFB\u52A0\u65B0\u63D2\u4EF6\u548C\u505C\u6B62\u73B0\u6709\u63D2\u4EF6\uFF0C\u4EE5\u52A8\u6001\u7684\u65B9\u5F0F\u7BA1\u7406\u7EC4\u4EF6\u751F\u547D\u5468\u671F\u3002</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u63D2\u4EF6\u7684\u6587\u4EF6\u7ED3\u6784\u5FC5\u987B\u5728\u6307\u5B9A\u76EE\u5F55\u4E0B\u5305\u542B\u4EE5\u4E0B\u4E09\u4E2A\u6587\u4EF6\uFF1A</p><ul><li><code>META-INF/MANIFEST.MF</code>: \u9879\u76EE\u57FA\u672C\u914D\u7F6E\u4FE1\u606F\uFF0C\u7248\u672C\u3001\u540D\u79F0\u3001\u542F\u52A8\u5668\u7B49</li><li><code>build.properties</code>: \u9879\u76EE\u7684\u7F16\u8BD1\u914D\u7F6E\u4FE1\u606F\uFF0C\u5305\u62EC\uFF0C\u6E90\u4EE3\u7801\u8DEF\u5F84\u3001\u8F93\u51FA\u8DEF\u5F84</li><li><code>plugin.xml</code>\uFF1A\u63D2\u4EF6\u7684\u64CD\u4F5C\u914D\u7F6E\u4FE1\u606F\uFF0C\u5305\u542B\u5F39\u51FA\u83DC\u5355\u53CA\u70B9\u51FB\u83DC\u5355\u540E\u5BF9\u5E94\u7684\u64CD\u4F5C\u6267\u884C\u7C7B\u7B49</li></ul><p>\u5F53eclipse\u542F\u52A8\u65F6\uFF0C\u4F1A\u904D\u5386plugins\u6587\u4EF6\u5939\u4E2D\u7684\u76EE\u5F55\uFF0C\u626B\u63CF\u6BCF\u4E2A\u63D2\u4EF6\u7684\u6E05\u5355\u6587\u4EF6<code>MANIFEST.MF</code>\uFF0C\u5E76\u5EFA\u7ACB\u4E00\u4E2A\u5185\u90E8\u6A21\u578B\u6765\u8BB0\u5F55\u5B83\u6240\u627E\u5230\u7684\u6BCF\u4E2A\u63D2\u4EF6\u7684\u4FE1\u606F\uFF0C\u5C31\u5B9E\u73B0\u4E86\u52A8\u6001\u6DFB\u52A0\u65B0\u7684\u63D2\u4EF6\u3002</p><p>\u8FD9\u4E5F\u610F\u5473\u7740\u662Feclipse\u5236\u5B9A\u4E86\u4E00\u7CFB\u5217\u7684\u89C4\u5219\uFF0C\u50CF\u662F\u6587\u4EF6\u7ED3\u6784\u3001\u7C7B\u578B\u3001\u53C2\u6570\u7B49\u3002\u63D2\u4EF6\u5F00\u53D1\u8005\u9075\u5FAA\u8FD9\u4E9B\u89C4\u5219\u53BB\u5F00\u53D1\u81EA\u5DF1\u7684\u63D2\u4EF6\uFF0Ceclipse\u5E76\u4E0D\u9700\u8981\u77E5\u9053\u63D2\u4EF6\u5177\u4F53\u662F\u600E\u6837\u5F00\u53D1\u7684\uFF0C\u53EA\u9700\u8981\u5728\u542F\u52A8\u7684\u65F6\u5019\u6839\u636E\u914D\u7F6E\u6587\u4EF6\u89E3\u6790\u3001\u52A0\u8F7D\u5230\u7CFB\u7EDF\u91CC\u5C31\u597D\u4E86\uFF0C\u662Fspi\u601D\u60F3\u7684\u4E00\u79CD\u4F53\u73B0\u3002</p><h3 id="_3-4-spi\u673A\u5236-spring\u4E2Dspi\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#_3-4-spi\u673A\u5236-spring\u4E2Dspi\u673A\u5236" aria-hidden="true">#</a> 3.4 SPI\u673A\u5236 - Spring\u4E2DSPI\u673A\u5236</h3><p>\u5728springboot\u7684\u81EA\u52A8\u88C5\u914D\u8FC7\u7A0B\u4E2D\uFF0C\u6700\u7EC8\u4F1A\u52A0\u8F7D<code>META-INF/spring.factories</code>\u6587\u4EF6\uFF0C\u800C\u52A0\u8F7D\u7684\u8FC7\u7A0B\u662F\u7531<code>SpringFactoriesLoader</code>\u52A0\u8F7D\u7684\u3002\u4ECECLASSPATH\u4E0B\u7684\u6BCF\u4E2AJar\u5305\u4E2D\u641C\u5BFB\u6240\u6709<code>META-INF/spring.factories</code>\u914D\u7F6E\u6587\u4EF6\uFF0C\u7136\u540E\u5C06\u89E3\u6790properties\u6587\u4EF6\uFF0C\u627E\u5230\u6307\u5B9A\u540D\u79F0\u7684\u914D\u7F6E\u540E\u8FD4\u56DE\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5176\u5B9E\u8FD9\u91CC\u4E0D\u4EC5\u4EC5\u662F\u4F1A\u53BBClassPath\u8DEF\u5F84\u4E0B\u67E5\u627E\uFF0C\u4F1A\u626B\u63CF\u6240\u6709\u8DEF\u5F84\u4E0B\u7684Jar\u5305\uFF0C\u53EA\u4E0D\u8FC7\u8FD9\u4E2A\u6587\u4EF6\u53EA\u4F1A\u5728Classpath\u4E0B\u7684jar\u5305\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">FACTORIES_RESOURCE_LOCATION</span> <span class="token operator">=</span> <span class="token string">&quot;META-INF/spring.factories&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// spring.factories\u6587\u4EF6\u7684\u683C\u5F0F\u4E3A\uFF1Akey=value1,value2,value3</span>
<span class="token comment">// \u4ECE\u6240\u6709\u7684jar\u5305\u4E2D\u627E\u5230META-INF/spring.factories\u6587\u4EF6</span>
<span class="token comment">// \u7136\u540E\u4ECE\u6587\u4EF6\u4E2D\u89E3\u6790\u51FAkey=factoryClass\u7C7B\u540D\u79F0\u7684\u6240\u6709value\u503C</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadFactoryNames</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> factoryClass<span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> factoryClassName <span class="token operator">=</span> factoryClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53D6\u5F97\u8D44\u6E90\u6587\u4EF6\u7684URL</span>
    <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span>URL<span class="token punctuation">&gt;</span></span> urls <span class="token operator">=</span> <span class="token punctuation">(</span>classLoader <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> classLoader<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token constant">FACTORIES_RESOURCE_LOCATION</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemResources</span><span class="token punctuation">(</span><span class="token constant">FACTORIES_RESOURCE_LOCATION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u6240\u6709\u7684URL</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>urls<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">URL</span> url <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u636E\u8D44\u6E90\u6587\u4EF6URL\u89E3\u6790properties\u6587\u4EF6\uFF0C\u5F97\u5230\u5BF9\u5E94\u7684\u4E00\u7EC4@Configuration\u7C7B</span>
        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token class-name">PropertiesLoaderUtils</span><span class="token punctuation">.</span><span class="token function">loadProperties</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UrlResource</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> factoryClassNames <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>factoryClassName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EC4\u88C5\u6570\u636E\uFF0C\u5E76\u8FD4\u56DE</span>
        result<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">commaDelimitedListToStringArray</span><span class="token punctuation">(</span>factoryClassNames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-spi\u673A\u5236\u6DF1\u5165\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_4-spi\u673A\u5236\u6DF1\u5165\u7406\u89E3" aria-hidden="true">#</a> 4. SPI\u673A\u5236\u6DF1\u5165\u7406\u89E3</h2><blockquote><p>TIP</p><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u6DF1\u5165\u7406\u89E3\u4E0BSPI\u76F8\u5173\u5185\u5BB9</p></blockquote><h3 id="_4-1-spi\u673A\u5236\u901A\u5E38\u600E\u4E48\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_4-1-spi\u673A\u5236\u901A\u5E38\u600E\u4E48\u4F7F\u7528" aria-hidden="true">#</a> 4.1 SPI\u673A\u5236\u901A\u5E38\u600E\u4E48\u4F7F\u7528</h3><p>\u770B\u5B8C\u4E0A\u9762\u7684\u51E0\u4E2A\u4F8B\u5B50\u89E3\u6790\uFF0C\u5E94\u8BE5\u90FD\u80FD\u77E5\u9053\u5927\u6982\u7684\u6D41\u7A0B\u4E86\uFF1A</p><ul><li>\u6709\u5173\u7EC4\u7EC7\u6216\u8005\u516C\u53F8\u5B9A\u4E49\u6807\u51C6\u3002</li><li>\u5177\u4F53\u5382\u5546\u6216\u8005\u6846\u67B6\u5F00\u53D1\u8005\u5B9E\u73B0\u3002</li><li>\u7A0B\u5E8F\u733F\u4F7F\u7528\u3002</li></ul><h4 id="_4-1-1-\u5B9A\u4E49\u6807\u51C6" tabindex="-1"><a class="header-anchor" href="#_4-1-1-\u5B9A\u4E49\u6807\u51C6" aria-hidden="true">#</a> 4.1.1 \u5B9A\u4E49\u6807\u51C6</h4><p>\u5B9A\u4E49\u6807\u51C6\uFF0C\u5C31\u662F\u5B9A\u4E49\u63A5\u53E3\u3002\u6BD4\u5982\u63A5\u53E3<code>java.sql.Driver</code></p><h4 id="_4-1-2-\u5177\u4F53\u5382\u5546\u6216\u8005\u6846\u67B6\u5F00\u53D1\u8005\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-1-2-\u5177\u4F53\u5382\u5546\u6216\u8005\u6846\u67B6\u5F00\u53D1\u8005\u5B9E\u73B0" aria-hidden="true">#</a> 4.1.2 \u5177\u4F53\u5382\u5546\u6216\u8005\u6846\u67B6\u5F00\u53D1\u8005\u5B9E\u73B0</h4><p>\u5382\u5546\u6216\u8005\u6846\u67B6\u5F00\u53D1\u8005\u5F00\u53D1\u5177\u4F53\u7684\u5B9E\u73B0\uFF1A</p><p>\u5728<code>META-INF/services</code>\u76EE\u5F55\u4E0B\u5B9A\u4E49\u4E00\u4E2A\u540D\u5B57\u4E3A\u63A5\u53E3\u5168\u9650\u5B9A\u540D\u7684\u6587\u4EF6\uFF0C\u6BD4\u5982<code>java.sql.Driver</code>\u6587\u4EF6\uFF0C\u6587\u4EF6\u5185\u5BB9\u662F\u5177\u4F53\u7684\u5B9E\u73B0\u540D\u5B57\uFF0C\u6BD4\u5982<code>me.cxis.sql.MyDriver</code>\u3002</p><p>\u5199\u5177\u4F53\u7684\u5B9E\u73B0<code>me.cxis.sql.MyDriver</code>\uFF0C\u90FD\u662F\u5BF9\u63A5\u53E3Driver\u7684\u5B9E\u73B0\u3002</p><h4 id="_4-1-3-\u7A0B\u5E8F\u733F\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_4-1-3-\u7A0B\u5E8F\u733F\u4F7F\u7528" aria-hidden="true">#</a> 4.1.3 \u7A0B\u5E8F\u733F\u4F7F\u7528</h4><p>\u6211\u4EEC\u4F1A\u5F15\u7528\u5177\u4F53\u5382\u5546\u7684jar\u5305\u6765\u5B9E\u73B0\u6211\u4EEC\u7684\u529F\u80FD\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> loadedDrivers <span class="token operator">=</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u83B7\u53D6\u8FED\u4EE3\u5668</span>
<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Driver</span><span class="token punctuation">&gt;</span></span> driversIterator <span class="token operator">=</span> loadedDrivers<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u904D\u5386</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>driversIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    driversIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u53EF\u4EE5\u505A\u5177\u4F53\u7684\u4E1A\u52A1\u903B\u8F91</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-4-\u4F7F\u7528\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#_4-1-4-\u4F7F\u7528\u89C4\u8303" aria-hidden="true">#</a> 4.1.4 \u4F7F\u7528\u89C4\u8303</h4><p>\u6700\u540E\u603B\u7ED3\u4E00\u4E0Bjdk spi\u9700\u8981\u9075\u5FAA\u7684\u89C4\u8303</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20221024201020273.png" alt="image-20221024201020273"></p><h3 id="_4-2-spi\u548Capi\u7684\u533A\u522B\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#_4-2-spi\u548Capi\u7684\u533A\u522B\u662F\u4EC0\u4E48" aria-hidden="true">#</a> 4.2 SPI\u548CAPI\u7684\u533A\u522B\u662F\u4EC0\u4E48</h3><blockquote><p>\u8FD9\u91CC\u5B9E\u9645\u5305\u542B\u4E24\u4E2A\u95EE\u9898\uFF0C\u7B2C\u4E00\u4E2ASPI\u548CAPI\u7684\u533A\u522B\uFF1F\u7B2C\u4E8C\u4E2A\u4EC0\u4E48\u65F6\u5019\u7528API\uFF0C\u4EC0\u4E48\u65F6\u5019\u7528SPI\uFF1F</p></blockquote><blockquote><p>SPI - \u201C\u63A5\u53E3\u201D\u4F4D\u4E8E\u201C\u8C03\u7528\u65B9\u201D\u6240\u5728\u7684\u201C\u5305\u201D\u4E2D</p></blockquote><ul><li>\u6982\u5FF5\u4E0A\u66F4\u4F9D\u8D56\u8C03\u7528\u65B9\u3002</li><li>\u7EC4\u7EC7\u4E0A\u4F4D\u4E8E\u8C03\u7528\u65B9\u6240\u5728\u7684\u5305\u4E2D\u3002</li><li>\u5B9E\u73B0\u4F4D\u4E8E\u72EC\u7ACB\u7684\u5305\u4E2D\u3002</li><li>\u5E38\u89C1\u7684\u4F8B\u5B50\u662F\uFF1A\u63D2\u4EF6\u6A21\u5F0F\u7684\u63D2\u4EF6\u3002</li></ul><blockquote><p>API - \u201C\u63A5\u53E3\u201D\u4F4D\u4E8E\u201C\u5B9E\u73B0\u65B9\u201D\u6240\u5728\u7684\u201C\u5305\u201D\u4E2D</p></blockquote><ul><li>\u6982\u5FF5\u4E0A\u66F4\u63A5\u8FD1\u5B9E\u73B0\u65B9\u3002</li><li>\u7EC4\u7EC7\u4E0A\u4F4D\u4E8E\u5B9E\u73B0\u65B9\u6240\u5728\u7684\u5305\u4E2D\u3002</li><li>\u5B9E\u73B0\u548C\u63A5\u53E3\u5728\u4E00\u4E2A\u5305\u4E2D\u3002</li></ul><p>\u53C2\u8003\uFF1A</p>`,89),d={href:"https://stackoverflow.com/questions/2954372/difference-between-spi-and-api?answertab=votes#tab-top",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/happyframework/archive/2013/09/17/3325560.html",target:"_blank",rel:"noopener noreferrer"},m=p(`<p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20221024201315431.png" alt="image-20221024201315431"></p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20221024201327221.png" alt="image-20221024201327221"></p><h3 id="_4-3-spi\u673A\u5236\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_4-3-spi\u673A\u5236\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 4.3 SPI\u673A\u5236\u5B9E\u73B0\u539F\u7406</h3><p>\u4E0D\u59A8\u770B\u4E0BJDK\u4E2D<code>ServiceLoader&lt;S&gt;</code>\u65B9\u6CD5\u7684\u5177\u4F53\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//ServiceLoader\u5B9E\u73B0\u4E86Iterable\u63A5\u53E3\uFF0C\u53EF\u4EE5\u904D\u5386\u6240\u6709\u7684\u670D\u52A1\u5B9E\u73B0\u8005</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span>

    <span class="token comment">//\u67E5\u627E\u914D\u7F6E\u6587\u4EF6\u7684\u76EE\u5F55</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PREFIX</span> <span class="token operator">=</span> <span class="token string">&quot;META-INF/services/&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//\u8868\u793A\u8981\u88AB\u52A0\u8F7D\u7684\u670D\u52A1\u7684\u7C7B\u6216\u63A5\u53E3</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">;</span>

    <span class="token comment">//\u8FD9\u4E2AClassLoader\u7528\u6765\u5B9A\u4F4D\uFF0C\u52A0\u8F7D\uFF0C\u5B9E\u4F8B\u5316\u670D\u52A1\u63D0\u4F9B\u8005</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">;</span>

    <span class="token comment">// \u8BBF\u95EE\u63A7\u5236\u4E0A\u4E0B\u6587</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AccessControlContext</span> acc<span class="token punctuation">;</span>

    <span class="token comment">// \u7F13\u5B58\u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u7684\u670D\u52A1\u63D0\u4F9B\u8005\uFF0C\u6309\u7167\u5B9E\u4F8B\u5316\u7684\u987A\u5E8F\u5B58\u50A8</span>
    <span class="token keyword">private</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> providers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8FED\u4EE3\u5668</span>
    <span class="token keyword">private</span> <span class="token class-name">LazyIterator</span> lookupIterator<span class="token punctuation">;</span>


    <span class="token comment">//\u91CD\u65B0\u52A0\u8F7D\uFF0C\u5C31\u76F8\u5F53\u4E8E\u91CD\u65B0\u521B\u5EFAServiceLoader\u4E86\uFF0C\u7528\u4E8E\u65B0\u7684\u670D\u52A1\u63D0\u4F9B\u8005\u5B89\u88C5\u5230\u6B63\u5728\u8FD0\u884C\u7684Java\u865A\u62DF\u673A\u4E2D\u7684\u60C5\u51B5\u3002</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6E05\u7A7A\u7F13\u5B58\u4E2D\u6240\u6709\u5DF2\u5B9E\u4F8B\u5316\u7684\u670D\u52A1\u63D0\u4F9B\u8005</span>
        providers<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u65B0\u5EFA\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF0C\u8BE5\u8FED\u4EE3\u5668\u4F1A\u4ECE\u5934\u67E5\u627E\u548C\u5B9E\u4F8B\u5316\u670D\u52A1\u63D0\u4F9B\u8005</span>
        lookupIterator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LazyIterator</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u79C1\u6709\u6784\u9020\u5668</span>
    <span class="token comment">//\u4F7F\u7528\u6307\u5B9A\u7684\u7C7B\u52A0\u8F7D\u5668\u548C\u670D\u52A1\u521B\u5EFA\u670D\u52A1\u52A0\u8F7D\u5668</span>
    <span class="token comment">//\u5982\u679C\u6CA1\u6709\u6307\u5B9A\u7C7B\u52A0\u8F7D\u5668\uFF0C\u4F7F\u7528\u7CFB\u7EDF\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5C31\u662F\u5E94\u7528\u7C7B\u52A0\u8F7D\u5668\u3002</span>
    <span class="token keyword">private</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> svc<span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span> cl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        service <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>svc<span class="token punctuation">,</span> <span class="token string">&quot;Service interface cannot be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        loader <span class="token operator">=</span> <span class="token punctuation">(</span>cl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> cl<span class="token punctuation">;</span>
        acc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u89E3\u6790\u5931\u8D25\u5904\u7406\u7684\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ServiceConfigurationError</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceConfigurationError</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">,</span>
                                            cause<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ServiceConfigurationError</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceConfigurationError</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">URL</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> line<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ServiceConfigurationError</span>
    <span class="token punctuation">{</span>
        <span class="token function">fail</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> u <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> line <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u89E3\u6790\u670D\u52A1\u63D0\u4F9B\u8005\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684\u4E00\u884C</span>
    <span class="token comment">//\u9996\u5148\u53BB\u6389\u6CE8\u91CA\u6821\u9A8C\uFF0C\u7136\u540E\u4FDD\u5B58</span>
    <span class="token comment">//\u8FD4\u56DE\u4E0B\u4E00\u884C\u884C\u53F7</span>
    <span class="token comment">//\u91CD\u590D\u7684\u914D\u7F6E\u9879\u548C\u5DF2\u7ECF\u88AB\u5B9E\u4F8B\u5316\u7684\u914D\u7F6E\u9879\u4E0D\u4F1A\u88AB\u4FDD\u5B58</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">parseLine</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">URL</span> u<span class="token punctuation">,</span> <span class="token class-name">BufferedReader</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> lc<span class="token punctuation">,</span>
                          <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServiceConfigurationError</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u8BFB\u53D6\u4E00\u884C</span>
        <span class="token class-name">String</span> ln <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ln <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//#\u53F7\u4EE3\u8868\u6CE8\u91CA\u884C</span>
        <span class="token keyword">int</span> ci <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ci <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> ln <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ln <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ln<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>ln<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;\\t&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">fail</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> u<span class="token punctuation">,</span> lc<span class="token punctuation">,</span> <span class="token string">&quot;Illegal configuration-file syntax&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> cp <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierStart</span><span class="token punctuation">(</span>cp<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token function">fail</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> u<span class="token punctuation">,</span> lc<span class="token punctuation">,</span> <span class="token string">&quot;Illegal provider-class name: &quot;</span> <span class="token operator">+</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">charCount</span><span class="token punctuation">(</span>cp<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">charCount</span><span class="token punctuation">(</span>cp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cp <span class="token operator">=</span> ln<span class="token punctuation">.</span><span class="token function">codePointAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isJavaIdentifierPart</span><span class="token punctuation">(</span>cp<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>cp <span class="token operator">!=</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token function">fail</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> u<span class="token punctuation">,</span> lc<span class="token punctuation">,</span> <span class="token string">&quot;Illegal provider-class name: &quot;</span> <span class="token operator">+</span> ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>providers<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>ln<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>names<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>ln<span class="token punctuation">)</span><span class="token punctuation">)</span>
                names<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ln<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> lc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u89E3\u6790\u914D\u7F6E\u6587\u4EF6\uFF0C\u89E3\u6790\u6307\u5B9A\u7684url\u914D\u7F6E\u6587\u4EF6</span>
    <span class="token comment">//\u4F7F\u7528parseLine\u65B9\u6CD5\u8FDB\u884C\u89E3\u6790\uFF0C\u672A\u88AB\u5B9E\u4F8B\u5316\u7684\u670D\u52A1\u63D0\u4F9B\u8005\u4F1A\u88AB\u4FDD\u5B58\u5230\u7F13\u5B58\u4E2D\u53BB</span>
    <span class="token keyword">private</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">URL</span> u<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ServiceConfigurationError</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">BufferedReader</span> r <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            in <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">openStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> lc <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>lc <span class="token operator">=</span> <span class="token function">parseLine</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> u<span class="token punctuation">,</span> r<span class="token punctuation">,</span> lc<span class="token punctuation">,</span> names<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u670D\u52A1\u63D0\u4F9B\u8005\u67E5\u627E\u7684\u8FED\u4EE3\u5668</span>
    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">LazyIterator</span>
        <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">{</span>

        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">;</span><span class="token comment">//\u670D\u52A1\u63D0\u4F9B\u8005\u63A5\u53E3</span>
        <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">;</span><span class="token comment">//\u7C7B\u52A0\u8F7D\u5668</span>
        <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span>URL<span class="token punctuation">&gt;</span></span> configs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u4FDD\u5B58\u5B9E\u73B0\u7C7B\u7684url</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> pending <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u4FDD\u5B58\u5B9E\u73B0\u7C7B\u7684\u5168\u540D</span>
        <span class="token class-name">String</span> nextName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u8FED\u4EE3\u5668\u4E2D\u4E0B\u4E00\u4E2A\u5B9E\u73B0\u7C7B\u7684\u5168\u540D</span>

        <span class="token keyword">private</span> <span class="token class-name">LazyIterator</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>service <span class="token operator">=</span> service<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>loader <span class="token operator">=</span> loader<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">hasNextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nextName <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>configs <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> fullName <span class="token operator">=</span> <span class="token constant">PREFIX</span> <span class="token operator">+</span> service<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>loader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                        configs <span class="token operator">=</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemResources</span><span class="token punctuation">(</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        configs <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pending <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>pending<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>configs<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                pending <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> configs<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            nextName <span class="token operator">=</span> pending<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">private</span> <span class="token class-name">S</span> <span class="token function">nextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasNextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> cn <span class="token operator">=</span> nextName<span class="token punctuation">;</span>
            nextName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                c <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>cn<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>service<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">fail</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> <span class="token string">&quot;Provider &quot;</span> <span class="token operator">+</span> cn  <span class="token operator">+</span> <span class="token string">&quot; not a subtype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">S</span> p <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">cast</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                providers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cn<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>acc <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">hasNextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> action <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">hasNextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">S</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>acc <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">nextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> action <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">public</span> <span class="token class-name">S</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">nextService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> acc<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment">//\u83B7\u53D6\u8FED\u4EE3\u5668</span>
    <span class="token comment">//\u8FD4\u56DE\u904D\u5386\u670D\u52A1\u63D0\u4F9B\u8005\u7684\u8FED\u4EE3\u5668</span>
    <span class="token comment">//\u4EE5\u61D2\u52A0\u8F7D\u7684\u65B9\u5F0F\u52A0\u8F7D\u53EF\u7528\u7684\u670D\u52A1\u63D0\u4F9B\u8005</span>
    <span class="token comment">//\u61D2\u52A0\u8F7D\u7684\u5B9E\u73B0\u662F\uFF1A\u89E3\u6790\u914D\u7F6E\u6587\u4EF6\u548C\u5B9E\u4F8B\u5316\u670D\u52A1\u63D0\u4F9B\u8005\u7684\u5DE5\u4F5C\u7531\u8FED\u4EE3\u5668\u672C\u8EAB\u5B8C\u6210</span>
    <span class="token keyword">public</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u6309\u7167\u5B9E\u4F8B\u5316\u987A\u5E8F\u8FD4\u56DE\u5DF2\u7ECF\u7F13\u5B58\u7684\u670D\u52A1\u63D0\u4F9B\u8005\u5B9E\u4F8B</span>
            <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> knownProviders
                <span class="token operator">=</span> providers<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>knownProviders<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> lookupIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">public</span> <span class="token class-name">S</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>knownProviders<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> knownProviders<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> lookupIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u4E3A\u6307\u5B9A\u7684\u670D\u52A1\u4F7F\u7528\u6307\u5B9A\u7684\u7C7B\u52A0\u8F7D\u5668\u6765\u521B\u5EFA\u4E00\u4E2AServiceLoader</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">,</span>
                                            <span class="token class-name">ClassLoader</span> loader<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u4F7F\u7528\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u7684\u7C7B\u52A0\u8F7D\u5668\u6765\u521B\u5EFAServiceLoader</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassLoader</span> cl <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> cl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u4F7F\u7528\u6269\u5C55\u7C7B\u52A0\u8F7D\u5668\u4E3A\u6307\u5B9A\u7684\u670D\u52A1\u521B\u5EFAServiceLoader</span>
    <span class="token comment">//\u53EA\u80FD\u627E\u5230\u5E76\u52A0\u8F7D\u5DF2\u7ECF\u5B89\u88C5\u5230\u5F53\u524DJava\u865A\u62DF\u673A\u4E2D\u7684\u670D\u52A1\u63D0\u4F9B\u8005\uFF0C\u5E94\u7528\u7A0B\u5E8F\u7C7B\u8DEF\u5F84\u4E2D\u7684\u670D\u52A1\u63D0\u4F9B\u8005\u5C06\u88AB\u5FFD\u7565</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ServiceLoader</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadInstalled</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassLoader</span> cl <span class="token operator">=</span> <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClassLoader</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            prev <span class="token operator">=</span> cl<span class="token punctuation">;</span>
            cl <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">ServiceLoader</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;java.util.ServiceLoader[&quot;</span> <span class="token operator">+</span> service<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9996\u5148</strong>\uFF0CServiceLoader\u5B9E\u73B0\u4E86<code>Iterable</code>\u63A5\u53E3\uFF0C\u6240\u4EE5\u5B83\u6709\u8FED\u4EE3\u5668\u7684\u5C5E\u6027\uFF0C\u8FD9\u91CC\u4E3B\u8981\u90FD\u662F\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u7684<code>hasNext</code>\u548C<code>next</code>\u65B9\u6CD5\u3002\u8FD9\u91CC\u4E3B\u8981\u90FD\u662F\u8C03\u7528\u7684<code>lookupIterator</code>\u7684\u76F8\u5E94<code>hasNext</code>\u548C<code>next</code>\u65B9\u6CD5\uFF0C<code>lookupIterator</code>\u662F\u61D2\u52A0\u8F7D\u8FED\u4EE3\u5668\u3002</p><p><strong>\u5176\u6B21</strong>\uFF0C<code>LazyIterator</code>\u4E2D\u7684<code>hasNext</code>\u65B9\u6CD5\uFF0C\u9759\u6001\u53D8\u91CFPREFIX\u5C31\u662F<code>\u201DMETA-INF/services/\u201D</code>\u76EE\u5F55\uFF0C\u8FD9\u4E5F\u5C31\u662F\u4E3A\u4EC0\u4E48\u9700\u8981\u5728<code>classpath</code>\u4E0B\u7684<code>META-INF/services/</code>\u76EE\u5F55\u91CC\u521B\u5EFA\u4E00\u4E2A\u4EE5\u670D\u52A1\u63A5\u53E3\u547D\u540D\u7684\u6587\u4EF6\u3002</p><p><strong>\u6700\u540E</strong>\uFF0C\u901A\u8FC7\u53CD\u5C04\u65B9\u6CD5<code>Class.forName()</code>\u52A0\u8F7D\u7C7B\u5BF9\u8C61\uFF0C\u5E76\u7528<code>newInstance</code>\u65B9\u6CD5\u5C06\u7C7B\u5B9E\u4F8B\u5316\uFF0C\u5E76\u628A\u5B9E\u4F8B\u5316\u540E\u7684\u7C7B\u7F13\u5B58\u5230<code>providers</code>\u5BF9\u8C61\u4E2D\uFF0C(<code>LinkedHashMap&lt;String,S&gt;</code>\u7C7B\u578B\uFF09\u7136\u540E\u8FD4\u56DE\u5B9E\u4F8B\u5BF9\u8C61\u3002</p><p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u770B\u5230<code>ServiceLoader</code>\u4E0D\u662F\u5B9E\u4F8B\u5316\u4EE5\u540E\uFF0C\u5C31\u53BB\u8BFB\u53D6\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684\u5177\u4F53\u5B9E\u73B0\uFF0C\u5E76\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002\u800C\u662F\u7B49\u5230\u4F7F\u7528\u8FED\u4EE3\u5668\u53BB\u904D\u5386\u7684\u65F6\u5019\uFF0C\u624D\u4F1A\u52A0\u8F7D\u5BF9\u5E94\u7684\u914D\u7F6E\u6587\u4EF6\u53BB\u89E3\u6790\uFF0C\u8C03\u7528<code>hasNext</code>\u65B9\u6CD5\u7684\u65F6\u5019\u4F1A\u53BB\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6\u8FDB\u884C\u89E3\u6790\uFF0C\u8C03\u7528<code>next</code>\u65B9\u6CD5\u7684\u65F6\u5019\u8FDB\u884C\u5B9E\u4F8B\u5316\u5E76\u7F13\u5B58\u3002</p><p>\u6240\u6709\u7684\u914D\u7F6E\u6587\u4EF6\u53EA\u4F1A\u52A0\u8F7D\u4E00\u6B21\uFF0C\u670D\u52A1\u63D0\u4F9B\u8005\u4E5F\u53EA\u4F1A\u88AB\u5B9E\u4F8B\u5316\u4E00\u6B21\uFF0C\u91CD\u65B0\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6\u53EF\u4F7F\u7528<code>reload</code>\u65B9\u6CD5\u3002</p><h3 id="_4-4-spi\u673A\u5236\u7684\u7F3A\u9677" tabindex="-1"><a class="header-anchor" href="#_4-4-spi\u673A\u5236\u7684\u7F3A\u9677" aria-hidden="true">#</a> 4.4 SPI\u673A\u5236\u7684\u7F3A\u9677</h3><p>\u901A\u8FC7\u4E0A\u9762\u7684\u89E3\u6790\uFF0C\u53EF\u4EE5\u53D1\u73B0\uFF0C\u6211\u4EEC\u4F7F\u7528SPI\u673A\u5236\u7684\u7F3A\u9677\uFF1A</p><ul><li>\u4E0D\u80FD\u6309\u9700\u52A0\u8F7D\uFF0C\u9700\u8981\u904D\u5386\u6240\u6709\u7684\u5B9E\u73B0\uFF0C\u5E76\u5B9E\u4F8B\u5316\uFF0C\u7136\u540E\u5728\u5FAA\u73AF\u4E2D\u624D\u80FD\u627E\u5230\u6211\u4EEC\u9700\u8981\u7684\u5B9E\u73B0\u3002\u5982\u679C\u4E0D\u60F3\u7528\u67D0\u4E9B\u5B9E\u73B0\u7C7B\uFF0C\u6216\u8005\u67D0\u4E9B\u7C7B\u5B9E\u4F8B\u5316\u5F88\u8017\u65F6\uFF0C\u5B83\u4E5F\u88AB\u8F7D\u5165\u5E76\u5B9E\u4F8B\u5316\u4E86\uFF0C\u8FD9\u5C31\u9020\u6210\u4E86\u6D6A\u8D39\u3002</li><li>\u83B7\u53D6\u67D0\u4E2A\u5B9E\u73B0\u7C7B\u7684\u65B9\u5F0F\u4E0D\u591F\u7075\u6D3B\uFF0C\u53EA\u80FD\u901A\u8FC7 Iterator \u5F62\u5F0F\u83B7\u53D6\uFF0C\u4E0D\u80FD\u6839\u636E\u67D0\u4E2A\u53C2\u6570\u6765\u83B7\u53D6\u5BF9\u5E94\u7684\u5B9E\u73B0\u7C7B\u3002</li><li>\u591A\u4E2A\u5E76\u53D1\u591A\u7EBF\u7A0B\u4F7F\u7528 ServiceLoader \u7C7B\u7684\u5B9E\u4F8B\u662F\u4E0D\u5B89\u5168\u7684\u3002</li></ul><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,14),b={href:"https://pdai.tech/md/java/advanced/java-advanced-spi.html",target:"_blank",rel:"noopener noreferrer"};function g(y,f){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("\u7F51\u4E0A\u627E\u4E86\u4E2A\u4F8B\u5B50\uFF1A"),n("a",r,[s("\u8FD9\u91CC"),t(a)])])]),k,n("ul",null,[n("li",null,[n("a",d,[s("difference-between-spi-and-api (opens new window)"),t(a)])]),n("li",null,[n("a",v,[s("\u8BBE\u8BA1\u539F\u5219\uFF1A\u5C0F\u8BAE SPI \u548C API"),t(a)])])]),m,n("p",null,[n("a",b,[s("Java\u5E38\u7528\u673A\u5236 - SPI\u673A\u5236\u8BE6\u89E3"),t(a)])])])}const S=e(i,[["render",g],["__file","java-basic-keywords.html.vue"]]);export{S as default};
