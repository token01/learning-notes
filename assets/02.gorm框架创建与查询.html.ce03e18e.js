import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as p,f as a,r as u}from"./app.5764f959.js";const i={},l=a(`<h1 id="_02-gorm\u6846\u67B6\u521B\u5EFA\u4E0E\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_02-gorm\u6846\u67B6\u521B\u5EFA\u4E0E\u67E5\u8BE2" aria-hidden="true">#</a> 02.gorm\u6846\u67B6\u521B\u5EFA\u4E0E\u67E5\u8BE2</h1><h2 id="_1-\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFA" aria-hidden="true">#</a> 1\uFF0C\u521B\u5EFA</h2><h3 id="_1-\u521B\u5EFA\u8BB0\u5F55" tabindex="-1"><a class="header-anchor" href="#_1-\u521B\u5EFA\u8BB0\u5F55" aria-hidden="true">#</a> 1\uFF0C\u521B\u5EFA\u8BB0\u5F55</h3><p>\u9996\u5148\u5B9A\u4E49\u6A21\u578B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ID           <span class="token builtin">int64</span>
    Name         <span class="token builtin">string</span>
    Age          <span class="token builtin">int64</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u4F7F\u7528<code>NewRecord()</code>\u67E5\u8BE2\u4E3B\u952E\u662F\u5426\u5B58\u5728\uFF0C\u4E3B\u952E\u4E3A\u7A7A\u4F7F\u7528<code>Create()</code>\u521B\u5EFA\u8BB0\u5F55\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>u <span class="token operator">:=</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;eryajf&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span> <span class="token comment">//\u7ED3\u6784\u4F53\u7684\u521D\u59CB\u5316\uFF0C\u76F8\u5F53\u4E8E\u521B\u5EFA\u4E86\u4E00\u6761\u7528\u6237\u6570\u636E</span>

fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">//\u5224\u65AD\u4E3B\u952E\u662F\u5426\u4E3A\u7A7A true</span>
db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span>                      <span class="token comment">//\u5C06\u4E0A\u8FB9\u5B9A\u4E49\u7684\u7528\u6237\u6570\u636E\u5199\u5165\u5230\u6570\u636E\u5E93user\u8868\u4E2D</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">//\u5224\u65AD\u4E3B\u952E\u662F\u5426\u4E3A\u7A7A false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#_2-\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> 2\uFF0C\u9ED8\u8BA4\u503C</h3><p>\u53EF\u4EE5\u901A\u8FC7 tag \u5B9A\u4E49\u5B57\u6BB5\u7684\u9ED8\u8BA4\u503C\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ID   <span class="token builtin">int64</span>
    Name sql<span class="token punctuation">.</span>NullString <span class="token string">\`gorm:&quot;default:&#39;eryajf&#39;&quot;\`</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**\u6CE8\u610F\uFF1A**\u901A\u8FC7tag\u5B9A\u4E49\u5B57\u6BB5\u7684\u9ED8\u8BA4\u503C\uFF0C\u5728\u521B\u5EFA\u8BB0\u5F55\u65F6\u5019\u751F\u6210\u7684 SQL \u8BED\u53E5\u4F1A\u6392\u9664\u6CA1\u6709\u503C\u6216\u503C\u4E3A \u96F6\u503C \u7684\u5B57\u6BB5\u3002 \u5728\u5C06\u8BB0\u5F55\u63D2\u5165\u5230\u6570\u636E\u5E93\u540E\uFF0CGorm\u4F1A\u4ECE\u6570\u636E\u5E93\u52A0\u8F7D\u90A3\u4E9B\u5B57\u6BB5\u7684\u9ED8\u8BA4\u503C\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> user <span class="token operator">=</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5B9E\u9645\u6267\u884C\u7684SQL\u8BED\u53E5\u662F<code>INSERT INTO users(&quot;age&quot;) values(&#39;99&#39;);</code>\uFF0C\u6392\u9664\u4E86\u96F6\u503C\u5B57\u6BB5<code>Name</code>\uFF0C\u800C\u5728\u6570\u636E\u5E93\u4E2D\u8FD9\u4E00\u6761\u6570\u636E\u4F1A\u4F7F\u7528\u8BBE\u7F6E\u7684\u9ED8\u8BA4\u503C<code>eryajf</code>\u4F5C\u4E3AName\u5B57\u6BB5\u7684\u503C\u3002</p><blockquote><p>**\u6CE8\u610F\uFF1A**\u6240\u6709\u5B57\u6BB5\u7684\u96F6\u503C, \u6BD4\u5982<code>0</code>, <code>&quot;&quot;</code>,<code>false</code>\u6216\u8005\u5176\u5B83<code>\u96F6\u503C</code>\uFF0C\u90FD\u4E0D\u4F1A\u4FDD\u5B58\u5230\u6570\u636E\u5E93\u5185\uFF0C\u4F46\u4F1A\u4F7F\u7528\u4ED6\u4EEC\u7684\u9ED8\u8BA4\u503C\u3002 \u5982\u679C\u4F60\u60F3\u907F\u514D\u8FD9\u79CD\u60C5\u51B5\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u6307\u9488\u6216\u5B9E\u73B0 <code>Scanner/Valuer</code>\u63A5\u53E3</p></blockquote><h4 id="_1-\u4F7F\u7528\u6307\u9488\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#_1-\u4F7F\u7528\u6307\u9488\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93" aria-hidden="true">#</a> 1\uFF0C\u4F7F\u7528\u6307\u9488\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ID   <span class="token builtin">int64</span>
    Name <span class="token operator">*</span><span class="token builtin">string</span> <span class="token string">\`gorm:&quot;default:&#39;eryajf&#39;&quot;\`</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    u4 <span class="token operator">:=</span> User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span> Name<span class="token punctuation">:</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span> <span class="token comment">// INSERT INTO \`user\` (\`name\`,\`age\`) VALUES (&#39;&#39;,24)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u4F7F\u7528scanner-valuer\u63A5\u53E3\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#_2-\u4F7F\u7528scanner-valuer\u63A5\u53E3\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93" aria-hidden="true">#</a> 2\uFF0C\u4F7F\u7528Scanner/Valuer\u63A5\u53E3\u65B9\u5F0F\u5B9E\u73B0\u96F6\u503C\u5B58\u5165\u6570\u636E\u5E93</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;database/sql&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ID   <span class="token builtin">int64</span>
    Name sql<span class="token punctuation">.</span>NullString <span class="token string">\`gorm:&quot;default:&#39;eryajf&#39;&quot;\`</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    u4 <span class="token operator">:=</span> User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span> Name<span class="token punctuation">:</span> sql<span class="token punctuation">.</span>NullString<span class="token punctuation">{</span>String<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> Valid<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span> <span class="token comment">// INSERT INTO \`user\` (\`name\`,\`age\`) VALUES (&#39;&#39;,24)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">NewRecord</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u4<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u6269\u5C55\u521B\u5EFA\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#_3-\u6269\u5C55\u521B\u5EFA\u9009\u9879" aria-hidden="true">#</a> 3\uFF0C\u6269\u5C55\u521B\u5EFA\u9009\u9879</h3><p>\u4F8B\u5982<code>PostgreSQL</code>\u6570\u636E\u5E93\u4E2D\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u65B9\u5F0F\u5B9E\u73B0\u5408\u5E76\u63D2\u5165, \u6709\u5219\u66F4\u65B0, \u65E0\u5219\u63D2\u5165\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4E3AInstert\u8BED\u53E5\u6DFB\u52A0\u6269\u5C55SQL\u9009\u9879</span>
db<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;gorm:insert_option&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ON CONFLICT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>product<span class="token punctuation">)</span>
<span class="token comment">// INSERT INTO products (name, code) VALUES (&quot;name&quot;, &quot;code&quot;) ON CONFLICT;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_2-\u67E5\u8BE2" aria-hidden="true">#</a> 2\uFF0C\u67E5\u8BE2</h2><h3 id="_1-\u666E\u901A\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_1-\u666E\u901A\u67E5\u8BE2" aria-hidden="true">#</a> 1\uFF0C\u666E\u901A\u67E5\u8BE2</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">// SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u4E3B\u952E\u67E5\u8BE2\u7B2C\u4E00\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Take</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u968F\u673A\u83B7\u53D6\u4E00\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Last</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL ORDER BY \`user\`.\`id\` DESC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u4E3B\u952E\u67E5\u8BE2\u6700\u540E\u4E00\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u6240\u6709\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`id\` = 2)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u6307\u5B9A\u7684\u67D0\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span> <span class="token comment">//\u4EC5\u5F53\u4E3B\u952E\u4E3A\u6574\u578B\u65F6\u53EF\u7528</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-where-\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-where-\u6761\u4EF6" aria-hidden="true">#</a> 2\uFF0CWhere \u6761\u4EF6</h3><h4 id="_2-\u666E\u901Asql\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_2-\u666E\u901Asql\u67E5\u8BE2" aria-hidden="true">#</a> 2\uFF0C\u666E\u901ASQL\u67E5\u8BE2</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
    <span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2 // Where</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u7B2C\u4E00\u6761\u5339\u914D\u6761\u4EF6\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u6240\u6709\u5339\u914D\u6761\u4EF6\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name &lt;&gt; ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name &lt;&gt; &#39;jinzhu&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E0D\u7B49\u4E8Ejinzhu\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name IN (?)&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name IN (&#39;jinzhu&#39;,&#39;jinzhu 2&#39;)))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u5728jinzhu\u548Cjinzhu 2\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name LIKE ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%jin%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name LIKE &#39;%jin%&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u5305\u542Bjin\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ? AND age &gt;= ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39; AND age &gt;= &#39;20&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u4E24\u4E2A\u6761\u4EF6\u90FD\u7B26\u5408\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    oneDay<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseDuration</span><span class="token punctuation">(</span><span class="token string">&quot;-24h&quot;</span><span class="token punctuation">)</span>
    lastWeek <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>oneDay <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;updated_at &gt; ?&quot;</span><span class="token punctuation">,</span> lastWeek<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((updated_at &gt; &#39;2020-03-01 19:45:11&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u4E00\u5468\u5185\u66F4\u65B0\u7684\u7528\u6237\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    today <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;created_at BETWEEN ? AND ?&quot;</span><span class="token punctuation">,</span> lastWeek<span class="token punctuation">,</span> today<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((created_at BETWEEN &#39;2020-03-01 19:52:51&#39; AND &#39;2020-03-08 19:52:51&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u4E00\u5468\u5185\u521B\u5EFA\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-struct-map\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_2-struct-map\u67E5\u8BE2" aria-hidden="true">#</a> 2\uFF0CStruct &amp; Map\u67E5\u8BE2</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;) AND (\`user\`.\`age\` = 22)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u7ED3\u6784\u4F53\u67E5\u8BE2\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;) AND (\`user\`.\`age\` = 22))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7map\u67E5\u8BE2\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`id\` IN (1,2)))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u4E3B\u952E\u7684\u5207\u7247\u67E5\u8BE2\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**\u63D0\u793A\uFF1A**\u5F53\u901A\u8FC7\u7ED3\u6784\u4F53\u8FDB\u884C\u67E5\u8BE2\u65F6\uFF0CGORM\u5C06\u4F1A\u53EA\u901A\u8FC7\u975E\u96F6\u503C\u5B57\u6BB5\u67E5\u8BE2\uFF0C\u8FD9\u610F\u5473\u7740\u5982\u679C\u4F60\u7684\u5B57\u6BB5\u503C\u4E3A<code>0</code>\uFF0C<code>&#39;&#39;</code>\uFF0C<code>false</code>\u6216\u8005\u5176\u4ED6<code>\u96F6\u503C</code>\u65F6\uFF0C\u5C06\u4E0D\u4F1A\u88AB\u7528\u4E8E\u6784\u5EFA\u67E5\u8BE2\u6761\u4EF6\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>  <span class="token comment">// SELECT * FROM users WHERE name = &quot;jinzhu&quot;;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6B64\u65F6\uFF0C\u5C31\u50CF\u521B\u5EFA\u4E00\u6837\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u6307\u9488\u6216\u5B9E\u73B0 Scanner/Valuer \u63A5\u53E3\u6765\u907F\u514D\u8FD9\u4E2A\u95EE\u9898.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4F7F\u7528\u6307\u9488</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Name <span class="token builtin">string</span>
  Age  <span class="token operator">*</span><span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528 Scanner/Valuer</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  gorm<span class="token punctuation">.</span>Model
  Name <span class="token builtin">string</span>
  Age  sql<span class="token punctuation">.</span>NullInt64  <span class="token comment">// sql.NullInt64 \u5B9E\u73B0\u4E86 Scanner/Valuer \u63A5\u53E3</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-not-\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_3-not-\u6761\u4EF6" aria-hidden="true">#</a> 3\uFF0CNot \u6761\u4EF6</h3><p>\u4F5C\u7528\u4E0E Where \u7C7B\u4F3C\u7684\u60C5\u5F62\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` NOT IN (&#39;jinzhu&#39;))) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E0D\u662Fjinzhu\u7684\u7B2C\u4E00\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` NOT IN (&#39;jinzhu&#39;,&#39;jinzhu 2&#39;)))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E0D\u5728jinzhu\u6216jinzhu2\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`id\` NOT IN (1,2,3)))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u4E3B\u952E\u4E0D\u662F1\uFF0C2\uFF0C3\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u6240\u6709\u7528\u6237\u4E2D\u7684\u7B2C\u4E00\u4E2A\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND (NOT (name = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E0D\u662Fjinzhu\u7684\u7B2C\u4E00\u4E2A\u7528\u6237\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Not</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` &lt;&gt; &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u7ED3\u6784\u4F53\u67E5\u8BE2name\u4E0D\u662Fjinzhu\u7684\u7B2C\u4E00\u4E2A\u7528\u6237\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-or\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_4-or\u6761\u4EF6" aria-hidden="true">#</a> 4\uFF0COr\u6761\u4EF6</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;age &gt; ?&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span><span class="token string">&quot;age &lt; ?&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((age &gt; 25) OR (age &lt; 23))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u5E74\u9F84\u5C0F\u4E8E23\u7684\u6216\u8005\u5927\u4E8E25\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    <span class="token comment">// struct</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = &#39;jinzhu&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39;) OR (\`user\`.\`name\` = &#39;jinzhu 2&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u6784\u4F53\uFF1A\u67E5\u8BE2\u540D\u5B57\u662Fjinzhu\u7684\u6216\u8005\u662Fjinzhu 2\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    <span class="token comment">// map</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = &#39;jinzhu&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;jinzhu 2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39;) OR (\`user\`.\`name\` = &#39;jinzhu 2&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;map\uFF1A\u67E5\u8BE2\u540D\u5B57\u662Fjinzhu\u7684\u6216\u8005\u662Fjinzhu 2\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-\u5185\u8054\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_5-\u5185\u8054\u6761\u4EF6" aria-hidden="true">#</a> 5\uFF0C\u5185\u8054\u6761\u4EF6</h3>`,40),k=n("code",null,"Where",-1),r={href:"https://www.liwenzhou.com/posts/Go/gorm_crud/#autoid-1-3-1",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>          <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`id\` = 3)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u4E3B\u952E\u67E5\u8BE2\u6307\u5B9A\u7684\u67D0\u6761\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span> <span class="token comment">//\u4EC5\u5F53\u4E3B\u952E\u4E3A\u6574\u578B\u65F6\u53EF\u7528</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">&quot;id = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;string_primary_key&quot;</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((id = &#39;string_primary_key&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6839\u636E\u4E3B\u952E\u662F\u975E\u6574\u5F62\u4E3B\u952E\u83B7\u53D6\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name = &#39;jinzhu&#39;))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E3Ajinzhu\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token string">&quot;name &lt;&gt; ? AND age &gt; ? &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((name &lt;&gt; &#39;jinzhu&#39; AND age &gt; &#39;20&#39; ))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E0D\u662Fjinzhu\u4E14\u5E74\u9F84\u5927\u4E8E20\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`age\` = 20))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u7ED3\u6784\u4F53\u67E5\u8BE2\u5E74\u9F84\u662F20\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`age\` = 20))</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7map\u67E5\u8BE2\u5E74\u9F84\u662F20\u7684\u6240\u6709\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-\u989D\u5916\u67E5\u8BE2\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#_6-\u989D\u5916\u67E5\u8BE2\u9009\u9879" aria-hidden="true">#</a> 6\uFF0C\u989D\u5916\u67E5\u8BE2\u9009\u9879</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4E3A\u67E5\u8BE2 SQL \u6DFB\u52A0\u989D\u5916\u7684 SQL \u64CD\u4F5C</span>
db<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;gorm:query_option&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;FOR UPDATE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users WHERE id = 10 FOR UPDATE;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-firstorinit" tabindex="-1"><a class="header-anchor" href="#_7-firstorinit" aria-hidden="true">#</a> 7\uFF0CFirstOrInit</h3><p>\u83B7\u53D6\u5339\u914D\u7684\u7B2C\u4E00\u6761\u8BB0\u5F55\uFF0C\u5426\u5219\u6839\u636E\u7ED9\u5B9A\u7684\u6761\u4EF6\u521D\u59CB\u5316\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61 (\u4EC5\u652F\u6301 struct \u548C map \u6761\u4EF6)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2name\u4E3Anon_existing\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7\u7ED3\u6784\u4F53\u67E5\u8BE2name\u4E3Ajinzhu\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u8FC7map\u67E5\u8BE2name\u4E3Ajinzhu\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-attrs" tabindex="-1"><a class="header-anchor" href="#_1-attrs" aria-hidden="true">#</a> 1\uFF0CAttrs</h4><p>\u5982\u679C\u8BB0\u5F55\u672A\u627E\u5230\uFF0C\u5C06\u4F7F\u7528\u53C2\u6570\u521D\u59CB\u5316 struct.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    <span class="token comment">// \u672A\u627E\u5230</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attrs</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attrs</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    <span class="token comment">// \u627E\u5230</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attrs</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-assign" tabindex="-1"><a class="header-anchor" href="#_2-assign" aria-hidden="true">#</a> 2\uFF0CAssign</h4><p>\u4E0D\u7BA1\u8BB0\u5F55\u662F\u5426\u627E\u5230\uFF0C\u90FD\u5C06\u53C2\u6570\u8D4B\u503C\u7ED9 struct.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Assign</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    <span class="token comment">// \u627E\u5230</span>
    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Assign</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrInit</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-firstorcreate" tabindex="-1"><a class="header-anchor" href="#_8-firstorcreate" aria-hidden="true">#</a> 8\uFF0CFirstOrCreate</h3><p>\u83B7\u53D6\u5339\u914D\u7684\u7B2C\u4E00\u6761\u8BB0\u5F55, \u5426\u5219\u6839\u636E\u7ED9\u5B9A\u7684\u6761\u4EF6\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8BB0\u5F55 (\u4EC5\u652F\u6301 struct \u548C map \u6761\u4EF6)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">,</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="attrs" tabindex="-1"><a class="header-anchor" href="#attrs" aria-hidden="true">#</a> Attrs</h4><p>\u5982\u679C\u8BB0\u5F55\u672A\u627E\u5230\uFF0C\u5C06\u4F7F\u7528\u53C2\u6570\u521B\u5EFA struct \u548C\u8BB0\u5F55.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attrs</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;non_existing&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Attrs</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT * FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL AND ((\`user\`.\`name\` = &#39;jinzhu&#39;)) ORDER BY \`user\`.\`id\` ASC LIMIT 1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="assign" tabindex="-1"><a class="header-anchor" href="#assign" aria-hidden="true">#</a> Assign</h3><p>\u4E0D\u7BA1\u8BB0\u5F55\u662F\u5426\u627E\u5230\uFF0C\u90FD\u5C06\u53C2\u6570\u8D4B\u503C\u7ED9 struct \u5E76\u4FDD\u5B58\u81F3\u6570\u636E\u5E93.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u672A\u627E\u5230</span>
db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;non_existing&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Assign</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users WHERE name = &#39;non_existing&#39;;</span>
<span class="token comment">//// INSERT INTO &quot;users&quot; (name, age) VALUES (&quot;non_existing&quot;, 20);</span>
<span class="token comment">//// user -&gt; User{Id: 112, Name: &quot;non_existing&quot;, Age: 20}</span>

<span class="token comment">// \u627E\u5230</span>
db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Assign</span><span class="token punctuation">(</span>User<span class="token punctuation">{</span>Age<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FirstOrCreate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users WHERE name = &#39;jinzhu&#39;;</span>
<span class="token comment">//// UPDATE users SET age=30 WHERE id = 111;</span>
<span class="token comment">//// user -&gt; User{Id: 111, Name: &quot;jinzhu&quot;, Age: 30}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-\u9AD8\u7EA7\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_9-\u9AD8\u7EA7\u67E5\u8BE2" aria-hidden="true">#</a> 9\uFF0C\u9AD8\u7EA7\u67E5\u8BE2</h3><h4 id="_1-\u5B50\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_1-\u5B50\u67E5\u8BE2" aria-hidden="true">#</a> 1\uFF0C\u5B50\u67E5\u8BE2</h4><p>\u57FA\u4E8E <code>*gorm.expr</code> \u7684\u5B50\u67E5\u8BE2</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;amount &gt; ?&quot;</span><span class="token punctuation">,</span> DB<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;AVG(amount)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;state = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;paid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">QueryExpr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>orders<span class="token punctuation">)</span>
<span class="token comment">// SELECT * FROM &quot;orders&quot;  WHERE &quot;orders&quot;.&quot;deleted_at&quot; IS NULL AND (amount &gt; (SELECT AVG(amount) FROM &quot;orders&quot;  WHERE (state = &#39;paid&#39;)));</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u9009\u62E9\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#_2-\u9009\u62E9\u5B57\u6BB5" aria-hidden="true">#</a> 2\uFF0C\u9009\u62E9\u5B57\u6BB5</h4><p>Select\uFF0C\u6307\u5B9A\u4F60\u60F3\u4ECE\u6570\u636E\u5E93\u4E2D\u68C0\u7D22\u51FA\u7684\u5B57\u6BB5\uFF0C\u9ED8\u8BA4\u4F1A\u9009\u62E9\u5168\u90E8\u5B57\u6BB5\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;github.com/jinzhu/gorm&quot;</span>
    <span class="token boolean">_</span> <span class="token string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u5B9A\u4E49\u6A21\u578B</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    gorm<span class="token punctuation">.</span>Model
    Name <span class="token builtin">string</span>
    Age  <span class="token builtin">int64</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root:root1234@(127.0.0.1:13306)/db1?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">defer</span> db<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cgorm\u521B\u5EFA\u7684\u8868\u5C06\u4F1A\u662F\u7ED3\u6784\u4F53\u540D\u79F0\u7684\u590D\u6570\u5F62\u5F0F\uFF0C\u5982\u679C\u4E0D\u60F3\u8BA9\u5B83\u81EA\u52A8\u590D\u6570\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E0B\u7981\u7528</span>
    db<span class="token punctuation">.</span><span class="token function">SingularTable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// 2, \u628A\u6A21\u578B\u4E0E\u6570\u636E\u5E93\u4E2D\u7684\u8868\u5BF9\u5E94\u8D77\u6765</span>
    db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 3, \u521B\u5EFA</span>
    <span class="token comment">//u1 := User{Name: &quot;eryajf&quot;, Age: 20}</span>
    <span class="token comment">//db.Create(&amp;u1)</span>
    <span class="token comment">//u2 := User{Name: &quot;jinzhu&quot;, Age: 22}</span>
    <span class="token comment">//db.Create(&amp;u2)</span>

    <span class="token comment">// 4,\u67E5\u8BE2</span>
    <span class="token keyword">var</span> user <span class="token punctuation">[</span><span class="token punctuation">]</span>User

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT name FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL&#39;age&#39;</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u67E5\u8BE2\u8868\u4E2Dname\u5B57\u6BB5\u53C2\u6570\u4E3Aage\u7684\u8BB0\u5F55\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

    db<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span> <span class="token comment">//SELECT name, age FROM \`user\`  WHERE \`user\`.\`deleted_at\` IS NULL</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5217\u51FA\u8868\u4E2Dname\u4E0Eage\u5B57\u6BB5\uFF1A&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_3-\u6392\u5E8F" aria-hidden="true">#</a> 3\uFF0C\u6392\u5E8F</h4><p>Order\uFF0C\u6307\u5B9A\u4ECE\u6570\u636E\u5E93\u4E2D\u68C0\u7D22\u51FA\u8BB0\u5F55\u7684\u987A\u5E8F\u3002\u8BBE\u7F6E\u7B2C\u4E8C\u4E2A\u53C2\u6570 reorder \u4E3A <code>true</code> \uFF0C\u53EF\u4EE5\u8986\u76D6\u524D\u9762\u5B9A\u4E49\u7684\u6392\u5E8F\u6761\u4EF6\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;age desc, name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users ORDER BY age desc, name;</span>

<span class="token comment">// \u591A\u5B57\u6BB5\u6392\u5E8F</span>
db<span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;age desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users ORDER BY age desc, name;</span>

<span class="token comment">// \u8986\u76D6\u6392\u5E8F</span>
db<span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;age desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users2<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users ORDER BY age desc; (users1)</span>
<span class="token comment">//// SELECT * FROM users ORDER BY age; (users2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-\u6570\u91CF" tabindex="-1"><a class="header-anchor" href="#_4-\u6570\u91CF" aria-hidden="true">#</a> 4\uFF0C\u6570\u91CF</h4><p>Limit\uFF0C\u6307\u5B9A\u4ECE\u6570\u636E\u5E93\u68C0\u7D22\u51FA\u7684\u6700\u5927\u8BB0\u5F55\u6570\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users LIMIT 3;</span>

<span class="token comment">// -1 \u53D6\u6D88 Limit \u6761\u4EF6</span>
db<span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users2<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users LIMIT 10; (users1)</span>
<span class="token comment">//// SELECT * FROM users; (users2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-\u504F\u79FB" tabindex="-1"><a class="header-anchor" href="#_5-\u504F\u79FB" aria-hidden="true">#</a> 5\uFF0C\u504F\u79FB</h4><p>Offset\uFF0C\u6307\u5B9A\u5F00\u59CB\u8FD4\u56DE\u8BB0\u5F55\u524D\u8981\u8DF3\u8FC7\u7684\u8BB0\u5F55\u6570\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users OFFSET 3;</span>

<span class="token comment">// -1 \u53D6\u6D88 Offset \u6761\u4EF6</span>
db<span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users2<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * FROM users OFFSET 10; (users1)</span>
<span class="token comment">//// SELECT * FROM users; (users2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-\u603B\u6570" tabindex="-1"><a class="header-anchor" href="#_6-\u603B\u6570" aria-hidden="true">#</a> 6\uFF0C\u603B\u6570</h4><p>Count\uFF0C\u8BE5 model \u80FD\u83B7\u53D6\u7684\u8BB0\u5F55\u603B\u6570\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Or</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">)</span>
<span class="token comment">//// SELECT * from USERS WHERE name = &#39;jinzhu&#39; OR name = &#39;jinzhu 2&#39;; (users)</span>
<span class="token comment">//// SELECT count(*) FROM users WHERE name = &#39;jinzhu&#39; OR name = &#39;jinzhu 2&#39;; (count)</span>

db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">)</span>
<span class="token comment">//// SELECT count(*) FROM users WHERE name = &#39;jinzhu&#39;; (count)</span>

db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;deleted_users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">)</span>
<span class="token comment">//// SELECT count(*) FROM deleted_users;</span>

db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;deleted_users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;count(distinct(name))&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>count<span class="token punctuation">)</span>
<span class="token comment">//// SELECT count( distinct(name) ) FROM deleted_users; (count)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong> <code>Count</code> \u5FC5\u987B\u662F\u94FE\u5F0F\u67E5\u8BE2\u7684\u6700\u540E\u4E00\u4E2A\u64CD\u4F5C \uFF0C\u56E0\u4E3A\u5B83\u4F1A\u8986\u76D6\u524D\u9762\u7684 <code>SELECT</code>\uFF0C\u4F46\u5982\u679C\u91CC\u9762\u4F7F\u7528\u4E86 <code>count</code> \u65F6\u4E0D\u4F1A\u8986\u76D6</p><h4 id="_7-group-having" tabindex="-1"><a class="header-anchor" href="#_7-group-having" aria-hidden="true">#</a> 7\uFF0CGroup &amp; Having</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at) as date, sum(amount) as total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528Scan\u5C06\u591A\u6761\u7ED3\u679C\u626B\u63CF\u8FDB\u4E8B\u5148\u51C6\u5907\u597D\u7684\u7ED3\u6784\u4F53\u5207\u7247\u4E2D</span>
<span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Date time<span class="token punctuation">.</span>Time
    Total <span class="token builtin">int</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> rets <span class="token punctuation">[</span><span class="token punctuation">]</span>Result
db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at) as date, sum(age) as total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rets<span class="token punctuation">)</span>

rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at) as date, sum(amount) as total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Having</span><span class="token punctuation">(</span><span class="token string">&quot;sum(amount) &gt; ?&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Date  time<span class="token punctuation">.</span>Time
  Total <span class="token builtin">int64</span>
<span class="token punctuation">}</span>
db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;orders&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at) as date, sum(amount) as total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;date(created_at)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Having</span><span class="token punctuation">(</span><span class="token string">&quot;sum(amount) &gt; ?&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>results<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#_8-\u8FDE\u63A5" aria-hidden="true">#</a> 8\uFF0C\u8FDE\u63A5</h4><p>Joins\uFF0C\u6307\u5B9A\u8FDE\u63A5\u6761\u4EF6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;users.name, emails.email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;left join emails on emails.user_id = users.id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Rows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;users.name, emails.email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;left join emails on emails.user_id = users.id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>results<span class="token punctuation">)</span>

<span class="token comment">// \u591A\u8FDE\u63A5\u53CA\u53C2\u6570</span>
db<span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;JOIN emails ON emails.user_id = users.id AND emails.email = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jinzhu@example.org&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Joins</span><span class="token punctuation">(</span><span class="token string">&quot;JOIN credit_cards ON credit_cards.user_id = users.id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;credit_cards.number = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;411111111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-pluck" tabindex="-1"><a class="header-anchor" href="#_9-pluck" aria-hidden="true">#</a> 9\uFF0CPluck</h4>`,47),m={href:"https://www.liwenzhou.com/posts/Go/gorm_crud/#Scan",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"Scan",-1),b=a(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> ages <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span>
db<span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pluck</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ages<span class="token punctuation">)</span>

<span class="token keyword">var</span> names <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pluck</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>names<span class="token punctuation">)</span>

db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;deleted_users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Pluck</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>names<span class="token punctuation">)</span>

<span class="token comment">// \u60F3\u67E5\u8BE2\u591A\u4E2A\u5B57\u6BB5\uFF1F \u8FD9\u6837\u505A\uFF1A</span>
db<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;name, age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-\u626B\u63CF" tabindex="-1"><a class="header-anchor" href="#_10-\u626B\u63CF" aria-hidden="true">#</a> 10\uFF0C\u626B\u63CF</h4><p>Scan\uFF0C\u626B\u63CF\u7ED3\u679C\u81F3\u4E00\u4E2A struct.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Name <span class="token builtin">string</span>
  Age  <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> result Result
db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;name, age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Antonio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span>

<span class="token keyword">var</span> results <span class="token punctuation">[</span><span class="token punctuation">]</span>Result
db<span class="token punctuation">.</span><span class="token function">Table</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;name, age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;id &gt; ?&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>results<span class="token punctuation">)</span>

<span class="token comment">// \u539F\u751F SQL</span>
db<span class="token punctuation">.</span><span class="token function">Raw</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT name, age FROM users WHERE name = ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Antonio&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(f,q){const t=u("ExternalLinkIcon");return o(),c("div",null,[l,n("p",null,[s("\u4F5C\u7528\u4E0E"),k,s("\u67E5\u8BE2\u7C7B\u4F3C\uFF0C\u5F53\u5185\u8054\u6761\u4EF6\u4E0E\u591A\u4E2A"),n("a",r,[s("\u7ACB\u5373\u6267\u884C\u65B9\u6CD5"),p(t)]),s("\u4E00\u8D77\u4F7F\u7528\u65F6, \u5185\u8054\u6761\u4EF6\u4E0D\u4F1A\u4F20\u9012\u7ED9\u540E\u9762\u7684\u7ACB\u5373\u6267\u884C\u65B9\u6CD5\u3002")]),d,n("p",null,[s("Pluck\uFF0C\u67E5\u8BE2 model \u4E2D\u7684\u4E00\u4E2A\u5217\u4F5C\u4E3A\u5207\u7247\uFF0C\u5982\u679C\u60A8\u60F3\u8981\u67E5\u8BE2\u591A\u4E2A\u5217\uFF0C\u60A8\u5E94\u8BE5\u4F7F\u7528 "),n("a",m,[v,p(t)])]),b])}const L=e(i,[["render",g],["__file","02.gorm\u6846\u67B6\u521B\u5EFA\u4E0E\u67E5\u8BE2.html.vue"]]);export{L as default};
