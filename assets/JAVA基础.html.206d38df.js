const l=JSON.parse('{"key":"v-3c57eec6","path":"/3.java/JAVA%E5%9F%BA%E7%A1%80.html","title":"基础知识积累","lang":"zh-CN","frontmatter":{"article":false,"title":"基础知识积累","icon":"note","description":"JDK和JRE 跨平台原理 数据类型 8种基本数据类型; byte; 1字节; short; 2字节; char; 2字节; int; 4字节; long; 8字节; float; 4字节; double; 8字节; boolean; 1字节; 装箱和拆箱; 装箱:int->integer; 拆箱:integer->int; 自动类型转换; 转换原则：...","head":[["meta",{"property":"og:url","content":"https://abelsun.tech/3.java/JAVA%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"LearnNotes"}],["meta",{"property":"og:title","content":"基础知识积累"}],["meta",{"property":"og:description","content":"JDK和JRE 跨平台原理 数据类型 8种基本数据类型; byte; 1字节; short; 2字节; char; 2字节; int; 4字节; long; 8字节; float; 4字节; double; 8字节; boolean; 1字节; 装箱和拆箱; 装箱:int->integer; 拆箱:integer->int; 自动类型转换; 转换原则：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-21T06:28:45.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-11-21T06:28:45.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"JDK和JRE","slug":"jdk和jre","link":"#jdk和jre","children":[]},{"level":3,"title":"跨平台原理","slug":"跨平台原理","link":"#跨平台原理","children":[]},{"level":3,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":3,"title":"java 中的 Math.round(-1.5) 等于多少","slug":"java-中的-math-round-1-5-等于多少","link":"#java-中的-math-round-1-5-等于多少","children":[]},{"level":3,"title":"java特性","slug":"java特性","link":"#java特性","children":[]},{"level":3,"title":"多态用到了动态绑定","slug":"多态用到了动态绑定","link":"#多态用到了动态绑定","children":[]},{"level":3,"title":"向上转型与向下转型","slug":"向上转型与向下转型","link":"#向上转型与向下转型","children":[]},{"level":3,"title":"java元注解","slug":"java元注解","link":"#java元注解","children":[]},{"level":3,"title":"java注解","slug":"java注解","link":"#java注解","children":[]},{"level":3,"title":"==和equals","slug":"和equals","link":"#和equals","children":[]},{"level":3,"title":"String StringBuffer StringBuilder","slug":"string-stringbuffer-stringbuilder","link":"#string-stringbuffer-stringbuilder","children":[]},{"level":3,"title":"抽象类和接口区别","slug":"抽象类和接口区别","link":"#抽象类和接口区别","children":[]},{"level":3,"title":"泛型和类型擦除","slug":"泛型和类型擦除","link":"#泛型和类型擦除","children":[]},{"level":3,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":3,"title":"序列化","slug":"序列化","link":"#序列化","children":[]},{"level":3,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[]},{"level":3,"title":"克隆","slug":"克隆","link":"#克隆","children":[]},{"level":3,"title":"关键字","slug":"关键字","link":"#关键字","children":[]},{"level":3,"title":"DOM和SAX解析xml的不同","slug":"dom和sax解析xml的不同","link":"#dom和sax解析xml的不同","children":[]},{"level":3,"title":"Java包装类的缓存","slug":"java包装类的缓存","link":"#java包装类的缓存","children":[]},{"level":3,"title":"BIO、NIO、AIO","slug":"bio、nio、aio","link":"#bio、nio、aio","children":[]},{"level":3,"title":"io","slug":"io","link":"#io","children":[]},{"level":3,"title":"异常","slug":"异常","link":"#异常","children":[]},{"level":3,"title":"#字节码的结构","slug":"字节码的结构","link":"#字节码的结构","children":[]},{"level":3,"title":"Enum类中为什么","slug":"enum类中为什么","link":"#enum类中为什么","children":[]},{"level":3,"title":"sort排序原理","slug":"sort排序原理","link":"#sort排序原理","children":[]},{"level":3,"title":"面向接口编程的好处","slug":"面向接口编程的好处","link":"#面向接口编程的好处","children":[]},{"level":2,"title":"容器","slug":"容器","link":"#容器","children":[{"level":3,"title":"List","slug":"list","link":"#list","children":[]},{"level":3,"title":"CopyonWriteArrayList和CopyOnWriteArraySet","slug":"copyonwritearraylist和copyonwritearrayset","link":"#copyonwritearraylist和copyonwritearrayset","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"Iterator和ListIterator","slug":"iterator和listiterator","link":"#iterator和listiterator","children":[]},{"level":3,"title":"queue","slug":"queue","link":"#queue","children":[]},{"level":3,"title":"fail-fast机制","slug":"fail-fast机制","link":"#fail-fast机制","children":[]}]},{"level":2,"title":"jvm","slug":"jvm","link":"#jvm","children":[{"level":3,"title":"组成及其作用","slug":"组成及其作用","link":"#组成及其作用","children":[]},{"level":3,"title":"运行时数据区","slug":"运行时数据区","link":"#运行时数据区","children":[]},{"level":3,"title":"引用类型","slug":"引用类型","link":"#引用类型","children":[]},{"level":3,"title":"一个对象的引用有多个，该如何判断它的可达性","slug":"一个对象的引用有多个-该如何判断它的可达性","link":"#一个对象的引用有多个-该如何判断它的可达性","children":[]},{"level":3,"title":"判断一个对象是否可被回收","slug":"判断一个对象是否可被回收","link":"#判断一个对象是否可被回收","children":[]},{"level":3,"title":"垃圾收集","slug":"垃圾收集","link":"#垃圾收集","children":[]},{"level":3,"title":"JVM的栈上分配与逃逸分析(Escape Analysis）","slug":"jvm的栈上分配与逃逸分析-escape-analysis","link":"#jvm的栈上分配与逃逸分析-escape-analysis","children":[]},{"level":3,"title":"内存分配与回收策略","slug":"内存分配与回收策略","link":"#内存分配与回收策略","children":[]},{"level":3,"title":"内存泄漏（无法释放已申请的内存空间）","slug":"内存泄漏-无法释放已申请的内存空间","link":"#内存泄漏-无法释放已申请的内存空间","children":[]},{"level":3,"title":"内存溢出（没有足够的内存供申请者使用）","slug":"内存溢出-没有足够的内存供申请者使用","link":"#内存溢出-没有足够的内存供申请者使用","children":[]},{"level":3,"title":"调优工具","slug":"调优工具","link":"#调优工具","children":[]},{"level":3,"title":"17 个 JVM 参数","slug":"_17-个-jvm-参数","link":"#_17-个-jvm-参数","children":[]},{"level":3,"title":"new的对象如何不分配在堆而分配在栈上","slug":"new的对象如何不分配在堆而分配在栈上","link":"#new的对象如何不分配在堆而分配在栈上","children":[]}]},{"level":2,"title":"多线程","slug":"多线程","link":"#多线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"线程池","slug":"线程池","link":"#线程池","children":[]},{"level":3,"title":"阻塞队列","slug":"阻塞队列","link":"#阻塞队列","children":[]},{"level":3,"title":"判断线程是否停止的方法interrupted","slug":"判断线程是否停止的方法interrupted","link":"#判断线程是否停止的方法interrupted","children":[]},{"level":3,"title":"三个线程交替顺序打印ABC","slug":"三个线程交替顺序打印abc","link":"#三个线程交替顺序打印abc","children":[]},{"level":3,"title":"多线程中join()方法","slug":"多线程中join-方法","link":"#多线程中join-方法","children":[]},{"level":3,"title":"缓存一致性问题","slug":"缓存一致性问题","link":"#缓存一致性问题","children":[]},{"level":3,"title":"ThreadLocal","slug":"threadlocal","link":"#threadlocal","children":[]},{"level":3,"title":"sleep()、wait","slug":"sleep-、wait","link":"#sleep-、wait","children":[]},{"level":3,"title":"notify和notifyAll","slug":"notify和notifyall","link":"#notify和notifyall","children":[]},{"level":3,"title":"run和start","slug":"run和start","link":"#run和start","children":[]},{"level":3,"title":"死锁","slug":"死锁","link":"#死锁","children":[]},{"level":3,"title":"锁优化","slug":"锁优化","link":"#锁优化","children":[]},{"level":3,"title":"volatile","slug":"volatile","link":"#volatile","children":[]},{"level":3,"title":"用户态和核心态","slug":"用户态和核心态","link":"#用户态和核心态","children":[]},{"level":3,"title":"无锁化编程实现线程安全","slug":"无锁化编程实现线程安全","link":"#无锁化编程实现线程安全","children":[]},{"level":3,"title":"读写锁","slug":"读写锁","link":"#读写锁","children":[]},{"level":3,"title":"如何判断一个线程是否拥有锁","slug":"如何判断一个线程是否拥有锁","link":"#如何判断一个线程是否拥有锁","children":[]},{"level":3,"title":"happens-before原则","slug":"happens-before原则","link":"#happens-before原则","children":[]},{"level":3,"title":"乐观锁（适用于大并发量）","slug":"乐观锁-适用于大并发量","link":"#乐观锁-适用于大并发量","children":[]},{"level":3,"title":"悲观锁（适用于并发量不大的场景）","slug":"悲观锁-适用于并发量不大的场景","link":"#悲观锁-适用于并发量不大的场景","children":[]},{"level":3,"title":"可重入锁和不可重入锁（自旋锁）","slug":"可重入锁和不可重入锁-自旋锁","link":"#可重入锁和不可重入锁-自旋锁","children":[]},{"level":3,"title":"synchronized 和 volatile 的区别是什么？","slug":"synchronized-和-volatile-的区别是什么","link":"#synchronized-和-volatile-的区别是什么","children":[]},{"level":3,"title":"synchronized 和 ReentrantLock 区别是什么","slug":"synchronized-和-reentrantlock-区别是什么","link":"#synchronized-和-reentrantlock-区别是什么","children":[]},{"level":3,"title":"高并发系统限流中的算法","slug":"高并发系统限流中的算法","link":"#高并发系统限流中的算法","children":[]},{"level":3,"title":"锁的状态","slug":"锁的状态","link":"#锁的状态","children":[]}]},{"level":2,"title":"JUC","slug":"juc","link":"#juc","children":[{"level":3,"title":"Semaphore","slug":"semaphore","link":"#semaphore","children":[]},{"level":3,"title":"CountDownLatch","slug":"countdownlatch","link":"#countdownlatch","children":[]},{"level":3,"title":"SynchronousQueue","slug":"synchronousqueue","link":"#synchronousqueue","children":[]},{"level":3,"title":"CyclicBarrier","slug":"cyclicbarrier","link":"#cyclicbarrier","children":[]},{"level":3,"title":"CopyOnWriteArrayList, CopyOnWriteArraySet和ConcurrentSkipListSet","slug":"copyonwritearraylist-copyonwritearrayset和concurrentskiplistset","link":"#copyonwritearraylist-copyonwritearrayset和concurrentskiplistset","children":[]},{"level":3,"title":"ConcurrentHashMap","slug":"concurrenthashmap","link":"#concurrenthashmap","children":[]},{"level":3,"title":"Future","slug":"future","link":"#future","children":[]},{"level":3,"title":"ReentrantLock","slug":"reentrantlock","link":"#reentrantlock","children":[]}]},{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]},{"level":3,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[]},{"level":3,"title":"装饰者模式","slug":"装饰者模式","link":"#装饰者模式","children":[]},{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":3,"title":"设计模式之六大原则","slug":"设计模式之六大原则","link":"#设计模式之六大原则","children":[]}]},{"level":2,"title":"JDK1.9特性","slug":"jdk1-9特性","link":"#jdk1-9特性","children":[{"level":3,"title":"Java 平台模块系统的引入，创建出只包含所依赖的 JDK","slug":"java-平台模块系统的引入-创建出只包含所依赖的-jdk","link":"#java-平台模块系统的引入-创建出只包含所依赖的-jdk","children":[]},{"level":3,"title":"shell 为 Java 增加了类似 NodeJS 和 Python","slug":"shell-为-java-增加了类似-nodejs-和-python","link":"#shell-为-java-增加了类似-nodejs-和-python","children":[]},{"level":3,"title":"j子主题在集合上，Java 9 增加 了 List.of()、Set.of()、","slug":"j子主题在集合上-java-9-增加-了-list-of-、set-of-、","link":"#j子主题在集合上-java-9-增加-了-list-of-、set-of-、","children":[]}]},{"level":2,"title":"JDK8的特性","slug":"jdk8的特性","link":"#jdk8的特性","children":[{"level":3,"title":"Lambda 表达式 − Lambda允许把函数作为一个方法的参数","slug":"lambda-表达式-−-lambda允许把函数作为一个方法的参数","link":"#lambda-表达式-−-lambda允许把函数作为一个方法的参数","children":[]},{"level":3,"title":"方法引用 − 方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器","slug":"方法引用-−-方法引用提供了非常有用的语法-可以直接引用已有java类或对象-实例-的方法或构造器","link":"#方法引用-−-方法引用提供了非常有用的语法-可以直接引用已有java类或对象-实例-的方法或构造器","children":[]},{"level":3,"title":"Stream API −新添加的Stream API","slug":"stream-api-−新添加的stream-api","link":"#stream-api-−新添加的stream-api","children":[]},{"level":3,"title":"Date Time API − 加强对日期与时间的处理","slug":"date-time-api-−-加强对日期与时间的处理","link":"#date-time-api-−-加强对日期与时间的处理","children":[]}]},{"level":2,"title":"java三大器","slug":"java三大器","link":"#java三大器","children":[{"level":3,"title":"过滤器","slug":"过滤器","link":"#过滤器","children":[]},{"level":3,"title":"监听器","slug":"监听器","link":"#监听器","children":[]},{"level":3,"title":"拦截器(Interceptor)","slug":"拦截器-interceptor","link":"#拦截器-interceptor","children":[]}]},{"level":2,"title":"打印JAVA信息","slug":"打印java信息","link":"#打印java信息","children":[]},{"level":2,"title":"版本","slug":"版本","link":"#版本","children":[{"level":3,"title":"JDK 1.0","slug":"jdk-1-0","link":"#jdk-1-0","children":[]},{"level":3,"title":"JDK 1.1","slug":"jdk-1-1","link":"#jdk-1-1","children":[]},{"level":3,"title":"J2SE 1.2","slug":"j2se-1-2","link":"#j2se-1-2","children":[]},{"level":3,"title":"J2SE 1.3","slug":"j2se-1-3","link":"#j2se-1-3","children":[]},{"level":3,"title":"J2SE 1.4","slug":"j2se-1-4","link":"#j2se-1-4","children":[]},{"level":3,"title":"J2SE 5.0","slug":"j2se-5-0","link":"#j2se-5-0","children":[]},{"level":3,"title":"Java SE 6","slug":"java-se-6","link":"#java-se-6","children":[]},{"level":3,"title":"Java SE 7","slug":"java-se-7","link":"#java-se-7","children":[]},{"level":3,"title":"Java SE 8","slug":"java-se-8","link":"#java-se-8","children":[]},{"level":3,"title":"Java SE 9","slug":"java-se-9","link":"#java-se-9","children":[]},{"level":3,"title":"Java SE 10","slug":"java-se-10","link":"#java-se-10","children":[]},{"level":3,"title":"Java SE 11","slug":"java-se-11","link":"#java-se-11","children":[]},{"level":3,"title":"Java SE 12","slug":"java-se-12","link":"#java-se-12","children":[]},{"level":3,"title":"Java SE 13","slug":"java-se-13","link":"#java-se-13","children":[]},{"level":3,"title":"Java SE 14","slug":"java-se-14","link":"#java-se-14","children":[]}]},{"level":2,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[{"level":3,"title":"链表与数组","slug":"链表与数组","link":"#链表与数组","children":[]},{"level":3,"title":"红黑树","slug":"红黑树","link":"#红黑树","children":[]}]},{"level":2,"title":"List集合，多线程计算总和","slug":"list集合-多线程计算总和","link":"#list集合-多线程计算总和","children":[]},{"level":2,"title":"List 去重","slug":"list-去重","link":"#list-去重","children":[]},{"level":2,"title":"三个线程顺序打印ABC","slug":"三个线程顺序打印abc","link":"#三个线程顺序打印abc","children":[]},{"level":2,"title":"可以实现多继承吗？","slug":"可以实现多继承吗","link":"#可以实现多继承吗","children":[]},{"level":2,"title":"画一下RPC的架构图","slug":"画一下rpc的架构图","link":"#画一下rpc的架构图","children":[]},{"level":2,"title":"Lock 锁","slug":"lock-锁","link":"#lock-锁","children":[{"level":3,"title":"synchronized","slug":"synchronized","link":"#synchronized","children":[]},{"level":3,"title":"ReentrantLock","slug":"reentrantlock-1","link":"#reentrantlock-1","children":[]},{"level":3,"title":"ReadWriteLock 读写锁","slug":"readwritelock-读写锁","link":"#readwritelock-读写锁","children":[]},{"level":3,"title":"StampedLock","slug":"stampedlock","link":"#stampedlock","children":[]},{"level":3,"title":"CAS","slug":"cas","link":"#cas","children":[]},{"level":3,"title":"AQS","slug":"aqs","link":"#aqs","children":[]},{"level":3,"title":"ThreadLocal","slug":"threadlocal-1","link":"#threadlocal-1","children":[]}]},{"level":2,"title":"对象在内存中的存储布局","slug":"对象在内存中的存储布局","link":"#对象在内存中的存储布局","children":[]},{"level":2,"title":"堆外内存是什么？会溢出吗？什么时候会触发堆外内存回收？","slug":"堆外内存是什么-会溢出吗-什么时候会触发堆外内存回收","link":"#堆外内存是什么-会溢出吗-什么时候会触发堆外内存回收","children":[]},{"level":2,"title":"序列化","slug":"序列化-1","link":"#序列化-1","children":[]},{"level":2,"title":"IO","slug":"io-1","link":"#io-1","children":[{"level":3,"title":"零拷贝","slug":"零拷贝","link":"#零拷贝","children":[]}]}],"git":{"createdTime":1669012125000,"updatedTime":1669012125000,"contributors":[{"name":"Kong Ming(空明)","email":"token01@126.com","commits":1}]},"readingTime":{"minutes":47.44,"words":14232},"filePathRelative":"3.java/JAVA基础.md","localizedDate":"2022年11月21日"}');export{l as data};
