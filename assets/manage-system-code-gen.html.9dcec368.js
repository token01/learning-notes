import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as t,a as n,b as p,d as o,f as l,r as c}from"./app.fbd57b6d.js";const i={},r=l(`<h1 id="\u4EE3\u7801\u751F\u6210\u529F\u80FD-\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u751F\u6210\u529F\u80FD-\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> \u4EE3\u7801\u751F\u6210\u529F\u80FD&amp;\u5B9E\u73B0\u601D\u8DEF</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>\u5927\u90E8\u5206\u9879\u76EE\u91CC\u5176\u5B9E\u6709\u5F88\u591A\u4EE3\u7801\u90FD\u662F\u91CD\u590D\u7684\uFF0C\u51E0\u4E4E\u6BCF\u4E2A\u57FA\u7840\u6A21\u5757\u7684\u4EE3\u7801<strong>\u90FD\u6709\u589E\u5220\u6539\u67E5\u7684\u529F\u80FD</strong>\uFF0C\u800C\u8FD9\u4E9B\u529F\u80FD\u90FD\u662F\u5927\u540C\u5C0F\u5F02\uFF0C\u5982\u679C\u8FD9\u4E9B\u529F\u80FD\u90FD\u8981\u81EA\u5DF1\u53BB\u5199\uFF0C\u5C06\u4F1A\u5927\u5927\u6D6A\u8D39\u6211\u4EEC\u7684\u7CBE\u529B\u548C\u964D\u4F4E\u3002\u6240\u4EE5\u8FD9\u79CD\u91CD\u590D\u6027\u7684\u4EE3\u7801\u53EF\u4EE5\u4F7F\u7528\u4EE3\u7801\u751F\u6210\u3002</p><h2 id="_2-\u4EE3\u7801\u751F\u6210\u8BBE\u8BA1\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-\u4EE3\u7801\u751F\u6210\u8BBE\u8BA1\u601D\u8DEF" aria-hidden="true">#</a> 2. \u4EE3\u7801\u751F\u6210\u8BBE\u8BA1\u601D\u8DEF</h2><h3 id="_2-1-\u9879\u76EE\u7EC4\u6210\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#_2-1-\u9879\u76EE\u7EC4\u6210\u90E8\u5206" aria-hidden="true">#</a> 2.1 \u9879\u76EE\u7EC4\u6210\u90E8\u5206</h3><p>\u6211\u4EECjava \u9879\u76EE\u7684\u6784\u6210\u4E3B\u8981\u5982\u4E0B</p><ul><li><p>\u540E\u7AEF\u4EE3\u7801</p><ul><li>controller</li><li>service <ul><li>serviceImpl</li></ul></li><li>mapper</li><li>Mapper.xml(mybatis)</li><li>domain</li></ul></li><li><p>\u524D\u7AEF</p><ul><li>\u5BF9\u5E94\u7684vue\u589E\u5220\u6539\u67E5</li><li>vue \u63A5\u53E3\u7684api</li></ul></li><li><p>sql\u4EE3\u7801</p><p>\u5982\u679C\u9879\u76EE\u4E2D\u8BBE\u8BA1\u5230\u540E\u53F0\u914D\u7F6E\u83DC\u5355\uFF0C\u90A3\u4E48\u4E5F\u9700\u8981\u5C06\u83DC\u5355sql\u751F\u6210\u51FA\u6765</p></li></ul><h3 id="_2-2-\u751F\u6210\u7684\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#_2-2-\u751F\u6210\u7684\u76EE\u6807" aria-hidden="true">#</a> 2.2 \u751F\u6210\u7684\u76EE\u6807</h3><ul><li>\u5E0C\u671B\u751F\u6210\u9879\u76EE\u6A21\u5757\u4E2D\u6240\u6709\u4EE3\u7801\u3002 <ul><li>\u5982\u679C\u53EA\u5F15\u5165 <code>mybatis generator</code> \u8FD9\u7C7B\u5DE5\u5177\uFF0C\u53EA\u80FD\u89E3\u51B3mapper \u5C42\u7684\u95EE\u9898\u3002\u800C\u4E14sql \u975E\u5E38\u4E0D\u6E05\u6670\uFF0C\u5B8C\u5168\u65E0\u6CD5\u590D\u7528</li></ul></li><li>\u751F\u6210\u7684\u4EE3\u7801\u53EF\u4EE5\u81EA\u5B9A\u4E49\u914D\u7F6E\uFF0C\u800C\u4E0D\u662F\u4E00\u6210\u4E0D\u53D8\u7684</li><li>\u751F\u6210\u7684\u4EE3\u7801\u6269\u5C55\u6027\u8981\u5F3A\uFF0C\u65B0\u589E\u6A21\u677F\u65B9\u4FBF <ul><li>\u589E\u52A0\u6279\u91CF\u5220\u9664\u529F\u80FD</li><li>\u589E\u52A0\u6279\u91CF\u65B0\u589E\u548C\u4FEE\u6539mapper</li></ul></li></ul><h3 id="_2-3-\u5B9E\u73B0\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_2-3-\u5B9E\u73B0\u601D\u8DEF" aria-hidden="true">#</a> 2.3 \u5B9E\u73B0\u601D\u8DEF</h3><ul><li>\u4F7F\u7528\u6A21\u677F\u5F15\u64CE\u6839\u636E\u6211\u4EEC\u7684\u9879\u76EE\u7ED3\u6784\u751F\u6210\u524D\u540E\u7AEF\u6A21\u677F\u4EE3\u7801</li></ul><h2 id="_3-\u6570\u636E\u5E93\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u636E\u5E93\u8BBE\u8BA1" aria-hidden="true">#</a> 3. \u6570\u636E\u5E93\u8BBE\u8BA1</h2><h3 id="_3-1-\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868" aria-hidden="true">#</a> 3.1 \u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>
<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- 18\u3001\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> gen_table<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> gen_table <span class="token punctuation">(</span>
  table_id          <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>      <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;\u7F16\u53F7&#39;</span><span class="token punctuation">,</span>
  table_name        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u8868\u540D\u79F0&#39;</span><span class="token punctuation">,</span>
  table_comment     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u8868\u63CF\u8FF0&#39;</span><span class="token punctuation">,</span>
  sub_table_name    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;\u5173\u8054\u5B50\u8868\u7684\u8868\u540D&#39;</span><span class="token punctuation">,</span>
  sub_table_fk_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;\u5B50\u8868\u5173\u8054\u7684\u5916\u952E\u540D&#39;</span><span class="token punctuation">,</span>
  class_name        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u5B9E\u4F53\u7C7B\u540D\u79F0&#39;</span><span class="token punctuation">,</span>
  tpl_category      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;crud&#39;</span>             <span class="token keyword">comment</span> <span class="token string">&#39;\u4F7F\u7528\u7684\u6A21\u677F\uFF08crud\u5355\u8868\u64CD\u4F5C tree\u6811\u8868\u64CD\u4F5C\uFF09&#39;</span><span class="token punctuation">,</span>
  package_name      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u5305\u8DEF\u5F84&#39;</span><span class="token punctuation">,</span>
  module_name       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u6A21\u5757\u540D&#39;</span><span class="token punctuation">,</span>
  business_name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u4E1A\u52A1\u540D&#39;</span><span class="token punctuation">,</span>
  function_name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u529F\u80FD\u540D&#39;</span><span class="token punctuation">,</span>
  function_author   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u529F\u80FD\u4F5C\u8005&#39;</span><span class="token punctuation">,</span>
  gen_type          <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">default</span> <span class="token string">&#39;0&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u4EE3\u7801\u65B9\u5F0F\uFF080zip\u538B\u7F29\u5305 1\u81EA\u5B9A\u4E49\u8DEF\u5F84\uFF09&#39;</span><span class="token punctuation">,</span>
  gen_path          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;/&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;\u751F\u6210\u8DEF\u5F84\uFF08\u4E0D\u586B\u9ED8\u8BA4\u9879\u76EE\u8DEF\u5F84\uFF09&#39;</span><span class="token punctuation">,</span>
  options           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>                              <span class="token keyword">comment</span> <span class="token string">&#39;\u5176\u5B83\u751F\u6210\u9009\u9879&#39;</span><span class="token punctuation">,</span>
  create_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u521B\u5EFA\u8005&#39;</span><span class="token punctuation">,</span>
  create_time 	    <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;\u521B\u5EFA\u65F6\u95F4&#39;</span><span class="token punctuation">,</span>
  update_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u66F4\u65B0\u8005&#39;</span><span class="token punctuation">,</span>
  update_time       <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;\u66F4\u65B0\u65F6\u95F4&#39;</span><span class="token punctuation">,</span>
  remark            <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;\u5907\u6CE8&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>table_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868&#39;</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#_3-2-\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868\u5B57\u6BB5" aria-hidden="true">#</a> 3.2 \u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868\u5B57\u6BB5</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>
<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- 19\u3001\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868\u5B57\u6BB5</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> gen_table_column<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> gen_table_column <span class="token punctuation">(</span>
  column_id         <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>      <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;\u7F16\u53F7&#39;</span><span class="token punctuation">,</span>
  table_id          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;\u5F52\u5C5E\u8868\u7F16\u53F7&#39;</span><span class="token punctuation">,</span>
  column_name       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;\u5217\u540D\u79F0&#39;</span><span class="token punctuation">,</span>
  column_comment    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;\u5217\u63CF\u8FF0&#39;</span><span class="token punctuation">,</span>
  column_type       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;\u5217\u7C7B\u578B&#39;</span><span class="token punctuation">,</span>
  java_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;JAVA\u7C7B\u578B&#39;</span><span class="token punctuation">,</span>
  java_field        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;JAVA\u5B57\u6BB5\u540D&#39;</span><span class="token punctuation">,</span>
  is_pk             <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u4E3B\u952E\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_increment      <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u81EA\u589E\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_required       <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u5FC5\u586B\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_insert         <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u4E3A\u63D2\u5165\u5B57\u6BB5\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_edit           <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u7F16\u8F91\u5B57\u6BB5\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_list           <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u5217\u8868\u5B57\u6BB5\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  is_query          <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;\u662F\u5426\u67E5\u8BE2\u5B57\u6BB5\uFF081\u662F\uFF09&#39;</span><span class="token punctuation">,</span>
  query_type        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;EQ&#39;</span>               <span class="token keyword">comment</span> <span class="token string">&#39;\u67E5\u8BE2\u65B9\u5F0F\uFF08\u7B49\u4E8E\u3001\u4E0D\u7B49\u4E8E\u3001\u5927\u4E8E\u3001\u5C0F\u4E8E\u3001\u8303\u56F4\uFF09&#39;</span><span class="token punctuation">,</span>
  html_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;\u663E\u793A\u7C7B\u578B\uFF08\u6587\u672C\u6846\u3001\u6587\u672C\u57DF\u3001\u4E0B\u62C9\u6846\u3001\u590D\u9009\u6846\u3001\u5355\u9009\u6846\u3001\u65E5\u671F\u63A7\u4EF6\uFF09&#39;</span><span class="token punctuation">,</span>
  dict_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u5B57\u5178\u7C7B\u578B&#39;</span><span class="token punctuation">,</span>
  sort              <span class="token keyword">int</span>                                        <span class="token keyword">comment</span> <span class="token string">&#39;\u6392\u5E8F&#39;</span><span class="token punctuation">,</span>
  create_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u521B\u5EFA\u8005&#39;</span><span class="token punctuation">,</span>
  create_time 	    <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;\u521B\u5EFA\u65F6\u95F4&#39;</span><span class="token punctuation">,</span>
  update_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;\u66F4\u65B0\u8005&#39;</span><span class="token punctuation">,</span>
  update_time       <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;\u66F4\u65B0\u65F6\u95F4&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>column_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;\u4EE3\u7801\u751F\u6210\u4E1A\u52A1\u8868\u5B57\u6BB5&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u4EE3\u7801\u5B9E\u73B0\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#_4-\u4EE3\u7801\u5B9E\u73B0\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> 4. \u4EE3\u7801\u5B9E\u73B0\u6CE8\u610F\u4E8B\u9879</h2><h3 id="_4-1\u5BFC\u5165\u8868\u7ED3\u6784\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1\u5BFC\u5165\u8868\u7ED3\u6784\u4FE1\u606F" aria-hidden="true">#</a> 4.1\u5BFC\u5165\u8868\u7ED3\u6784\u4FE1\u606F</h3><p>\u6839\u636E\u9009\u4E2D\u7684\u8868\u540D\uFF0C\u751F\u6210\u8868\u7ED3\u6784</p><ol><li><p>\u67E5\u8BE2\u8868\u7ED3\u6784\uFF08information_schema\uFF09\u4FE1\u606F\uFF08\u5305\u62EC\u8868\u82F1\u6587\u540D\u548C\u4E2D\u6587\u6CE8\u91CA\uFF09</p></li><li><p>\u67E5\u8BE2\u8868\u5B57\u6BB5\u4FE1\u606F</p></li><li><p>\u5C06\u6570\u636E\u5E93\u8868\u5B57\u6BB5\u7C7B\u578B \u8F6C\u4E3A java\u5B57\u6BB5\u7C7B\u578B</p></li><li><p>\u63D2\u5165\u8868\u7ED3\u6784\u4FE1\u606F</p></li><li><p>\u63D2\u5165\u8868\u5B57\u6BB5\u4FE1\u606F</p></li></ol><h4 id="_4-1-1-controller-\u5C42" tabindex="-1"><a class="header-anchor" href="#_4-1-1-controller-\u5C42" aria-hidden="true">#</a> 4.1.1 controller \u5C42</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u5BFC\u5165\u8868\u7ED3\u6784\uFF08\u4FDD\u5B58\uFF09
 */</span>
<span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;@ss.hasPermi(&#39;tool:gen:import&#39;)&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Log</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">&quot;\u4EE3\u7801\u751F\u6210&quot;</span><span class="token punctuation">,</span> businessType <span class="token operator">=</span> <span class="token class-name">BusinessType</span><span class="token punctuation">.</span><span class="token constant">IMPORT</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/importTable&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">importTableSave</span><span class="token punctuation">(</span><span class="token class-name">String</span> tables<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStrArray</span><span class="token punctuation">(</span>tables<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u67E5\u8BE2\u8868\u4FE1\u606F</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> tableList <span class="token operator">=</span> genTableService<span class="token punctuation">.</span><span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
    genTableService<span class="token punctuation">.</span><span class="token function">importGenTable</span><span class="token punctuation">(</span>tableList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-service" tabindex="-1"><a class="header-anchor" href="#_4-1-2-service" aria-hidden="true">#</a> 4.1.2 service</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u67E5\u8BE2\u636E\u5E93\u5217\u8868
 * 
 * <span class="token keyword">@param</span> <span class="token parameter">tableNames</span> \u8868\u540D\u79F0\u7EC4
 * <span class="token keyword">@return</span> \u6570\u636E\u5E93\u8868\u96C6\u5408
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> genTableMapper<span class="token punctuation">.</span><span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * \u5BFC\u5165\u8868\u7ED3\u6784
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">tableList</span> \u5BFC\u5165\u8868\u5217\u8868
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importGenTable</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> tableList<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span> operName <span class="token operator">=</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GenTable</span> table <span class="token operator">:</span> tableList<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">String</span> tableName <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">GenUtils</span><span class="token punctuation">.</span><span class="token function">initTable</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> operName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> row <span class="token operator">=</span> genTableMapper<span class="token punctuation">.</span><span class="token function">insertGenTable</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// \u4FDD\u5B58\u5217\u4FE1\u606F</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTableColumn</span><span class="token punctuation">&gt;</span></span> genTableColumns <span class="token operator">=</span> genTableColumnMapper<span class="token punctuation">.</span><span class="token function">selectDbTableColumnsByName</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GenTableColumn</span> column <span class="token operator">:</span> genTableColumns<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token class-name">GenUtils</span><span class="token punctuation">.</span><span class="token function">initColumnField</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        genTableColumnMapper<span class="token punctuation">.</span><span class="token function">insertGenTableColumn</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token string">&quot;\u5BFC\u5165\u5931\u8D25\uFF1A&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-3-mapper" tabindex="-1"><a class="header-anchor" href="#_4-1-3-mapper" aria-hidden="true">#</a> 4.1.3 mapper</h4><h5 id="_4-1-3-1-\u67E5\u8BE2\u8868\u7ED3\u6784\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-3-1-\u67E5\u8BE2\u8868\u7ED3\u6784\u4FE1\u606F" aria-hidden="true">#</a> 4.1.3.1 \u67E5\u8BE2\u8868\u7ED3\u6784\u4FE1\u606F</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;selectDbTableListByNames&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableResult&quot;</span><span class="token operator">&gt;</span>
		<span class="token keyword">select</span> table_name<span class="token punctuation">,</span> table_comment<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
		<span class="token keyword">where</span> table_name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">&#39;qrtz_%&#39;</span> <span class="token operator">and</span> table_name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">&#39;gen_%&#39;</span> <span class="token operator">and</span> table_schema <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token operator">and</span> table_name <span class="token operator">in</span>
	    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
 			<span class="token comment">#{name}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span> 
	<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010125640172.png" alt="image-20211010125640172"></p><h5 id="_4-1-3-2-\u67E5\u8BE2\u5217\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-3-2-\u67E5\u8BE2\u5217\u4FE1\u606F" aria-hidden="true">#</a> 4.1.3.2 \u67E5\u8BE2\u5217\u4FE1\u606F</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>   <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;selectDbTableColumnsByName&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableColumnResult&quot;</span><span class="token operator">&gt;</span>
		<span class="token keyword">select</span> column_name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>is_nullable <span class="token operator">=</span> <span class="token string">&#39;no&#39;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token punctuation">[</span>CDATA<span class="token punctuation">[</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> column_key <span class="token operator">!=</span> <span class="token string">&#39;PRI&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token boolean">null</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_required<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> column_key <span class="token operator">=</span> <span class="token string">&#39;PRI&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_pk<span class="token punctuation">,</span> ordinal_position <span class="token keyword">as</span> sort<span class="token punctuation">,</span> column_comment<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> extra <span class="token operator">=</span> <span class="token string">&#39;auto_increment&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_increment<span class="token punctuation">,</span> column_type
		<span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">and</span> table_name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token comment">#{tableName})</span>
		<span class="token keyword">order</span> <span class="token keyword">by</span> ordinal_position
	<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010130749447.png" alt="image-20211010130749447"></p><h5 id="_4-1-3-3-\u63D2\u5165\u8868\u7ED3\u6784\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-3-3-\u63D2\u5165\u8868\u7ED3\u6784\u4FE1\u606F" aria-hidden="true">#</a> 4.1.3.3 \u63D2\u5165\u8868\u7ED3\u6784\u4FE1\u606F</h5><p>\u8868\u4FE1\u606F\u4E2D\u4E0D\u5355\u5355\u53EA\u6709\u8868\u4FE1\u606F\uFF0C\u8FD8\u5305\u62EC\u4E86\u8868\u5BF9\u5E94\u7684\u751F\u6210\u4FE1\u606F\u3002\u5982\u751F\u6210\u7684\u6A21\u677F\u7C7B\u578B\uFF0C\u5305\u8DEF\u5F84\uFF0C\u751F\u6210\u4EE3\u7801\u65B9\u5F0F\u7B49</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insertGenTable&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;GenTable&quot;</span> useGeneratedKeys<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> keyProperty<span class="token operator">=</span><span class="token string">&quot;tableId&quot;</span><span class="token operator">&gt;</span>
       <span class="token keyword">insert</span> <span class="token keyword">into</span> gen_table <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableName != null&quot;</span><span class="token operator">&gt;</span>table_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableComment != null and tableComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>table_comment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;className != null and className != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>class_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tplCategory != null and tplCategory != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>tpl_category<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;packageName != null and packageName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>package_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;moduleName != null and moduleName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>module_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;businessName != null and businessName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>business_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionName != null and functionName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>function_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionAuthor != null and functionAuthor != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>function_author<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genType != null and genType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>gen_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genPath != null and genPath != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>gen_path<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;remark != null and remark != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>remark<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>create_by<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      create_time
        <span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableName != null&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableComment != null and tableComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableComment},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;className != null and className != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{className},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tplCategory != null and tplCategory != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tplCategory},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;packageName != null and packageName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{packageName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;moduleName != null and moduleName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{moduleName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;businessName != null and businessName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{businessName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionName != null and functionName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{functionName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionAuthor != null and functionAuthor != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{functionAuthor},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genType != null and genType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{genType},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genPath != null and genPath != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{genPath},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;remark != null and remark != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{remark},&lt;/if&gt;</span>
         <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{createBy},&lt;/if&gt;</span>
      sysdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010172355888.png" alt="image-20211010172355888"></p><h5 id="_4-1-3-4-\u63D2\u5165\u8868\u5B57\u6BB5\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-3-4-\u63D2\u5165\u8868\u5B57\u6BB5\u4FE1\u606F" aria-hidden="true">#</a> 4.1.3.4 \u63D2\u5165\u8868\u5B57\u6BB5\u4FE1\u606F</h5><p>\u8868\u5B57\u6BB5\u4FE1\u606F\u4E2D\u4E0D\u5355\u5355\u6709\u8868\u5B57\u6BB5\u4FE1\u606F\uFF0C\u8FD8\u5305\u62EC\u751F\u6210\u5B57\u6BB5\u5728\u524D\u7AEF\u5C55\u793A\u5174\u6CF0\uFF0C\u5982\u662F\u5426\u9700\u8981\u5C55\u793A\uFF0C\u67E5\u8BE2\u65B9\u5F0F\uFF0C\u662F\u5426\u4F7F\u7528\u5B57\u5178\u7B49</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code> <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insertGenTableColumn&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;GenTableColumn&quot;</span> useGeneratedKeys<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> keyProperty<span class="token operator">=</span><span class="token string">&quot;columnId&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> gen_table_column <span class="token punctuation">(</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableId != null and tableId != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>table_id<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnName != null and columnName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnComment != null and columnComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_comment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnType != null and columnType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaType != null and javaType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>java_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaField != null  and javaField != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>java_field<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isPk != null and isPk != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_pk<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isIncrement != null and isIncrement != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_increment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isRequired != null and isRequired != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_required<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isInsert != null and isInsert != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_insert<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isEdit != null and isEdit != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_edit<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isList != null and isList != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_list<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isQuery != null and isQuery != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_query<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;queryType != null and queryType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>query_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;htmlType != null and htmlType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>html_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;dictType != null and dictType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>dict_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;sort != null&quot;</span><span class="token operator">&gt;</span>sort<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>create_by<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			create_time
         <span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableId != null and tableId != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableId},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnName != null and columnName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnName},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnComment != null and columnComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnComment},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnType != null and columnType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaType != null and javaType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{javaType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaField != null and javaField != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{javaField},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isPk != null and isPk != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isPk},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isIncrement != null and isIncrement != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isIncrement},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isRequired != null and isRequired != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isRequired},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isInsert != null and isInsert != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isInsert},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isEdit != null and isEdit != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isEdit},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isList != null and isList != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isList},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isQuery != null and isQuery != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isQuery},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;queryType != null and queryType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{queryType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;htmlType != null and htmlType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{htmlType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;dictType != null and dictType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{dictType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;sort != null&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{sort},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{createBy},&lt;/if&gt;</span>
			sysdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010172448197.png" alt="image-20211010172448197"></p><h5 id="_4-1-3-4-resultmap" tabindex="-1"><a class="header-anchor" href="#_4-1-3-4-resultmap" aria-hidden="true">#</a> 4.1.3.4 resultMap</h5><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;GenTable&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;GenTableResult&quot;</span><span class="token operator">&gt;</span>
	    <span class="token operator">&lt;</span>id     property<span class="token operator">=</span><span class="token string">&quot;tableId&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_id&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tableName&quot;</span>      <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_name&quot;</span>        <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tableComment&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_comment&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;subTableName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_table_name&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;subTableFkName&quot;</span> <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_table_fk_name&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;className&quot;</span>      <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;class_name&quot;</span>        <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tplCategory&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;tpl_category&quot;</span>      <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;packageName&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;package_name&quot;</span>      <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;moduleName&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;module_name&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;businessName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;business_name&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;functionName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;function_name&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;functionAuthor&quot;</span> <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;function_author&quot;</span>   <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;genType&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;gen_type&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;genPath&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;gen_path&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;options&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;options&quot;</span>           <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;createBy&quot;</span>       <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;create_by&quot;</span>         <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;createTime&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;create_time&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;updateBy&quot;</span>       <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;update_by&quot;</span>         <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;updateTime&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;update_time&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;remark&quot;</span>         <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;remark&quot;</span>            <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>collection  property<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span>  javaType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span>  resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableColumnResult&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-5-domain" tabindex="-1"><a class="header-anchor" href="#_4-1-5-domain" aria-hidden="true">#</a> 4.1.5 domain</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u4E1A\u52A1\u8868 gen_table
 * 
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenTable</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u7F16\u53F7 */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> tableId<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u8868\u540D\u79F0 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u8868\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tableName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u8868\u63CF\u8FF0 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u8868\u63CF\u8FF0\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tableComment<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u5173\u8054\u7236\u8868\u7684\u8868\u540D */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subTableName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u672C\u8868\u5173\u8054\u7236\u8868\u7684\u5916\u952E\u540D */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subTableFkName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u5B9E\u4F53\u7C7B\u540D\u79F0(\u9996\u5B57\u6BCD\u5927\u5199) */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u5B9E\u4F53\u7C7B\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> className<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u4F7F\u7528\u7684\u6A21\u677F\uFF08crud\u5355\u8868\u64CD\u4F5C tree\u6811\u8868\u64CD\u4F5C sub\u4E3B\u5B50\u8868\u64CD\u4F5C\uFF09 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tplCategory<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u5305\u8DEF\u5F84 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u751F\u6210\u5305\u8DEF\u5F84\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> packageName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u6A21\u5757\u540D */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u751F\u6210\u6A21\u5757\u540D\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> moduleName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u4E1A\u52A1\u540D */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u751F\u6210\u4E1A\u52A1\u540D\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> businessName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u529F\u80FD\u540D */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u751F\u6210\u529F\u80FD\u540D\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> functionName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u4F5C\u8005 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;\u4F5C\u8005\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> functionAuthor<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u4EE3\u7801\u65B9\u5F0F\uFF080zip\u538B\u7F29\u5305 1\u81EA\u5B9A\u4E49\u8DEF\u5F84\uFF09 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> genType<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u751F\u6210\u8DEF\u5F84\uFF08\u4E0D\u586B\u9ED8\u8BA4\u9879\u76EE\u8DEF\u5F84\uFF09 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> genPath<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u4E3B\u952E\u4FE1\u606F */</span>
    <span class="token keyword">private</span> <span class="token class-name">GenTableColumn</span> pkColumn<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u5B50\u8868\u4FE1\u606F */</span>
    <span class="token keyword">private</span> <span class="token class-name">GenTable</span> subTable<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u8868\u5217\u4FE1\u606F */</span>
    <span class="token annotation punctuation">@Valid</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTableColumn</span><span class="token punctuation">&gt;</span></span> columns<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u5176\u5B83\u751F\u6210\u9009\u9879 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> options<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u6811\u7F16\u7801\u5B57\u6BB5 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeCode<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u6811\u7236\u7F16\u7801\u5B57\u6BB5 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeParentCode<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u6811\u540D\u79F0\u5B57\u6BB5 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u4E0A\u7EA7\u83DC\u5355ID\u5B57\u6BB5 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentMenuId<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** \u4E0A\u7EA7\u83DC\u5355\u540D\u79F0\u5B57\u6BB5 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentMenuName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-6-\u9875\u9762\u6548\u679C" tabindex="-1"><a class="header-anchor" href="#_4-1-6-\u9875\u9762\u6548\u679C" aria-hidden="true">#</a> 4.1.6 \u9875\u9762\u6548\u679C</h4><h5 id="_4-1-6-1-\u5BFC\u5165\u8868" tabindex="-1"><a class="header-anchor" href="#_4-1-6-1-\u5BFC\u5165\u8868" aria-hidden="true">#</a> 4.1.6.1 \u5BFC\u5165\u8868</h5><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010172655487.png" alt="image-20211010172655487"></p><h5 id="_4-1-6-2-\u5BFC\u5165\u540E\u8868\u57FA\u672C\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-6-2-\u5BFC\u5165\u540E\u8868\u57FA\u672C\u4FE1\u606F" aria-hidden="true">#</a> 4.1.6.2 \u5BFC\u5165\u540E\u8868\u57FA\u672C\u4FE1\u606F</h5><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010173151657.png" alt="image-20211010173151657"></p><h5 id="_4-1-6-3-\u5BFC\u5165\u540E\u8868\u5B57\u6BB5\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-6-3-\u5BFC\u5165\u540E\u8868\u5B57\u6BB5\u4FE1\u606F" aria-hidden="true">#</a> 4.1.6.3 \u5BFC\u5165\u540E\u8868\u5B57\u6BB5\u4FE1\u606F</h5><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010173235650.png" alt="image-20211010173235650"></p><h5 id="_4-1-6-4-\u5BFC\u5165\u540E\u751F\u6210\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#_4-1-6-4-\u5BFC\u5165\u540E\u751F\u6210\u4FE1\u606F" aria-hidden="true">#</a> 4.1.6.4 \u5BFC\u5165\u540E\u751F\u6210\u4FE1\u606F</h5><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20211010173250906.png" alt="image-20211010173250906"></p><h4 id="_4-1-5-\u751F\u6210\u5DE5\u5177\u7C7Bgenutils" tabindex="-1"><a class="header-anchor" href="#_4-1-5-\u751F\u6210\u5DE5\u5177\u7C7Bgenutils" aria-hidden="true">#</a> 4.1.5 \u751F\u6210\u5DE5\u5177\u7C7BGenUtils</h4><p>\u4E3B\u8981\u529F\u80FD</p><ul><li>initTable\uFF1A \u521D\u59CB\u5316\u8868\u7ED3\u6784\u4FE1\u606F <ul><li>\u8868\u540D</li><li>\u5305\u540D</li><li>\u6A21\u5757\u540D</li></ul></li><li>initColumnField \uFF1A \u521D\u59CB\u5316\u5217\u540D\u4FE1\u606F <ul><li>\u9700\u8981\u5C06\u6570\u636E\u5E93\u7C7B\u578B\u8F6C\u4E3Ajava\u7C7B\u578B</li></ul></li></ul><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>
<span class="token comment">/**
 * \u4EE3\u7801\u751F\u6210\u5668 \u5DE5\u5177\u7C7B
 * 
 * @author ygn
 */</span>
<span class="token keyword">public</span> class GenUtils
{
    <span class="token comment">/**
     * \u521D\u59CB\u5316\u8868\u4FE1\u606F
     */</span>
    <span class="token keyword">public</span> static void initTable<span class="token punctuation">(</span>GenTable genTable<span class="token punctuation">,</span> String operName<span class="token punctuation">)</span>
    {
        genTable<span class="token punctuation">.</span>setClassName<span class="token punctuation">(</span>convertClassName<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setPackageName<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getPackageName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setModuleName<span class="token punctuation">(</span>getModuleName<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getPackageName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setBusinessName<span class="token punctuation">(</span>getBusinessName<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setFunctionName<span class="token punctuation">(</span>replaceText<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableComment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setFunctionAuthor<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getAuthor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setCreateBy<span class="token punctuation">(</span>operName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u521D\u59CB\u5316\u5217\u5C5E\u6027\u5B57\u6BB5
     */</span>
    <span class="token keyword">public</span> static void initColumnField<span class="token punctuation">(</span>GenTableColumn <span class="token keyword">column</span><span class="token punctuation">,</span> GenTable <span class="token keyword">table</span><span class="token punctuation">)</span>
    {
        String dataType <span class="token operator">=</span> getDbType<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String columnName <span class="token operator">=</span> <span class="token keyword">column</span><span class="token punctuation">.</span>getColumnName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setTableId<span class="token punctuation">(</span><span class="token keyword">table</span><span class="token punctuation">.</span>getTableId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setCreateBy<span class="token punctuation">(</span><span class="token keyword">table</span><span class="token punctuation">.</span>getCreateBy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6Ejava\u5B57\u6BB5\u540D</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaField<span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>toCamelCase<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u9ED8\u8BA4\u7C7B\u578B</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_STRING<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_STR<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span> <span class="token operator">||</span> arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TEXT<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token comment">// \u5B57\u7B26\u4E32\u957F\u5EA6\u8D85\u8FC7500\u8BBE\u7F6E\u4E3A\u6587\u672C\u57DF</span>
            <span class="token keyword">Integer</span> columnLength <span class="token operator">=</span> getColumnLength<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String htmlType <span class="token operator">=</span> columnLength <span class="token operator">&gt;=</span> <span class="token number">500</span> <span class="token operator">||</span> arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TEXT<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span> ? GenConstants<span class="token punctuation">.</span>HTML_TEXTAREA : GenConstants<span class="token punctuation">.</span>HTML_INPUT<span class="token punctuation">;</span>
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>htmlType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TIME<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_DATETIME<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_NUMBER<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5982\u679C\u662F\u6D6E\u70B9\u578B \u7EDF\u4E00\u7528BigDecimal</span>
            String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>split<span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>substringBetween<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">=</span><span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>parseInt<span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_BIGDECIMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
            <span class="token comment">// \u5982\u679C\u662F\u6574\u5F62</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">=</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>parseInt<span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_INTEGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
            <span class="token comment">// \u957F\u6574\u5F62</span>
            <span class="token keyword">else</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_LONG<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
        }

        <span class="token comment">// \u63D2\u5165\u5B57\u6BB5\uFF08\u9ED8\u8BA4\u6240\u6709\u5B57\u6BB5\u90FD\u9700\u8981\u63D2\u5165\uFF09</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setIsInsert<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u7F16\u8F91\u5B57\u6BB5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_EDIT<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsEdit<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u5217\u8868\u5B57\u6BB5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_LIST<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsList<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u67E5\u8BE2\u5B57\u6BB5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_QUERY<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsQuery<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }

        <span class="token comment">// \u67E5\u8BE2\u5B57\u6BB5\u7C7B\u578B</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setQueryType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>QUERY_LIKE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u72B6\u6001\u5B57\u6BB5\u8BBE\u7F6E\u5355\u9009\u6846</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_RADIO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u7C7B\u578B&amp;\u6027\u522B\u5B57\u6BB5\u8BBE\u7F6E\u4E0B\u62C9\u6846</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_SELECT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u56FE\u7247\u5B57\u6BB5\u8BBE\u7F6E\u56FE\u7247\u4E0A\u4F20\u63A7\u4EF6</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;image&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_IMAGE_UPLOAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u6587\u4EF6\u5B57\u6BB5\u8BBE\u7F6E\u6587\u4EF6\u4E0A\u4F20\u63A7\u4EF6</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_FILE_UPLOAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// \u5185\u5BB9\u5B57\u6BB5\u8BBE\u7F6E\u5BCC\u6587\u672C\u63A7\u4EF6</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_EDITOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
    }

    <span class="token comment">/**
     * \u6821\u9A8C\u6570\u7EC4\u662F\u5426\u5305\u542B\u6307\u5B9A\u503C
     * 
     * @param arr \u6570\u7EC4
     * @param targetValue \u503C
     * @return \u662F\u5426\u5305\u542B
     */</span>
    <span class="token keyword">public</span> static <span class="token keyword">boolean</span> arraysContains<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> String targetValue<span class="token punctuation">)</span>
    {
        <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span>asList<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">contains</span><span class="token punctuation">(</span>targetValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u83B7\u53D6\u6A21\u5757\u540D
     * 
     * @param packageName \u5305\u540D
     * @return \u6A21\u5757\u540D
     */</span>
    <span class="token keyword">public</span> static String getModuleName<span class="token punctuation">(</span>String packageName<span class="token punctuation">)</span>
    {
        <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> packageName<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nameLength <span class="token operator">=</span> packageName<span class="token punctuation">.</span>length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String moduleName <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> lastIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nameLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> moduleName<span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u83B7\u53D6\u4E1A\u52A1\u540D
     * 
     * @param tableName \u8868\u540D
     * @return \u4E1A\u52A1\u540D
     */</span>
    <span class="token keyword">public</span> static String getBusinessName<span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span>
    {
        <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> tableName<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nameLength <span class="token operator">=</span> tableName<span class="token punctuation">.</span>length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String businessName <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> lastIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nameLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> businessName<span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u8868\u540D\u8F6C\u6362\u6210Java\u7C7B\u540D
     * 
     * @param tableName \u8868\u540D\u79F0
     * @return \u7C7B\u540D
     */</span>
    <span class="token keyword">public</span> static String convertClassName<span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span>
    {
        <span class="token keyword">boolean</span> autoRemovePre <span class="token operator">=</span> GenConfig<span class="token punctuation">.</span>getAutoRemovePre<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String tablePrefix <span class="token operator">=</span> GenConfig<span class="token punctuation">.</span>getTablePrefix<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>autoRemovePre <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span>isNotEmpty<span class="token punctuation">(</span>tablePrefix<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            String<span class="token punctuation">[</span><span class="token punctuation">]</span> searchList <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>split<span class="token punctuation">(</span>tablePrefix<span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tableName <span class="token operator">=</span> replaceFirst<span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> searchList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>convertToCamelCase<span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u6279\u91CF\u66FF\u6362\u524D\u7F00
     * 
     * @param replacementm \u66FF\u6362\u503C
     * @param searchList \u66FF\u6362\u5217\u8868
     * @return
     */</span>
    <span class="token keyword">public</span> static String replaceFirst<span class="token punctuation">(</span>String replacementm<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> searchList<span class="token punctuation">)</span>
    {
        String <span class="token keyword">text</span> <span class="token operator">=</span> replacementm<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>String searchString : searchList<span class="token punctuation">)</span>
        {
            <span class="token keyword">if</span> <span class="token punctuation">(</span>replacementm<span class="token punctuation">.</span>startsWith<span class="token punctuation">(</span>searchString<span class="token punctuation">)</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">text</span> <span class="token operator">=</span> replacementm<span class="token punctuation">.</span>replaceFirst<span class="token punctuation">(</span>searchString<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            }
        }
        <span class="token keyword">return</span> <span class="token keyword">text</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u5173\u952E\u5B57\u66FF\u6362
     * 
     * @param text \u9700\u8981\u88AB\u66FF\u6362\u7684\u540D\u5B57
     * @return \u66FF\u6362\u540E\u7684\u540D\u5B57
     */</span>
    <span class="token keyword">public</span> static String replaceText<span class="token punctuation">(</span>String <span class="token keyword">text</span><span class="token punctuation">)</span>
    {
        <span class="token keyword">return</span> RegExUtils<span class="token punctuation">.</span>replaceAll<span class="token punctuation">(</span><span class="token keyword">text</span><span class="token punctuation">,</span> <span class="token string">&quot;(?:\u8868|\u597D\u540D\u7F51)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * \u83B7\u53D6\u6570\u636E\u5E93\u7C7B\u578B\u5B57\u6BB5
     * 
     * @param columnType \u5217\u7C7B\u578B
     * @return \u622A\u53D6\u540E\u7684\u5217\u7C7B\u578B
     */</span>
    <span class="token keyword">public</span> static String getDbType<span class="token punctuation">(</span>String columnType<span class="token punctuation">)</span>
    {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>substringBefore<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span>
        {
            <span class="token keyword">return</span> columnType<span class="token punctuation">;</span>
        }
    }

    <span class="token comment">/**
     * \u83B7\u53D6\u5B57\u6BB5\u957F\u5EA6
     * 
     * @param columnType \u5217\u7C7B\u578B
     * @return \u622A\u53D6\u540E\u7684\u5217\u7C7B\u578B
     */</span>
    <span class="token keyword">public</span> static <span class="token keyword">Integer</span> getColumnLength<span class="token punctuation">(</span>String columnType<span class="token punctuation">)</span>
    {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        {
            String length <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substringBetween<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>valueOf<span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span>
        {
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        }
    }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-\u751F\u6210\u4EE3\u7801\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#_4-2-\u751F\u6210\u4EE3\u7801\u6A21\u677F" aria-hidden="true">#</a> 4.2 \u751F\u6210\u4EE3\u7801\u6A21\u677F</h3><h4 id="_4-2-1-controller\u5C42" tabindex="-1"><a class="header-anchor" href="#_4-2-1-controller\u5C42" aria-hidden="true">#</a> 4.2.1 controller\u5C42</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token doc-comment comment">/**
     * \u6279\u91CF\u751F\u6210\u4EE3\u7801
     */</span>
    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;@ss.hasPermi(&#39;tool:gen:code&#39;)&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Log</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">&quot;\u4EE3\u7801\u751F\u6210&quot;</span><span class="token punctuation">,</span> businessType <span class="token operator">=</span> <span class="token class-name">BusinessType</span><span class="token punctuation">.</span><span class="token constant">GENCODE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/batchGenCode&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">batchGenCode</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> tables<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStrArray</span><span class="token punctuation">(</span>tables<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> genTableService<span class="token punctuation">.</span><span class="token function">downloadCode</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">genCode</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    
    <span class="token doc-comment comment">/**
     * \u751F\u6210zip\u6587\u4EF6
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">genCode</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Expose-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment; filename=\\&quot;ygn.zip\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/octet-stream; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-service\u5C42" tabindex="-1"><a class="header-anchor" href="#_4-2-2-service\u5C42" aria-hidden="true">#</a> 4.2.2 Service\u5C42</h4><ul><li>\u8BBE\u7F6E\u8868\u57FA\u672C\u4FE1\u606F\u548C\u4E3B\u952E\u4FE1\u606F\u7B49</li><li>\u83B7\u53D6\u6211\u4EEC\u7684\u6A21\u677F\u7EC4</li><li>\u4F9D\u6B21\u6E32\u67D3\u6A21\u677F\u5185\u5BB9</li><li>\u518D\u5C06\u6E32\u67D3\u597D\u7684\u5185\u5BB9\u653E\u5165zip\u5305</li><li>\u8FD4\u56DE\u4E0B\u8F7D\u7684zip\u5305</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * \u6279\u91CF\u751F\u6210\u4EE3\u7801\uFF08\u4E0B\u8F7D\u65B9\u5F0F\uFF09
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">tableNames</span> \u8868\u6570\u7EC4
     * <span class="token keyword">@return</span> \u6570\u636E
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">downloadCode</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ByteArrayOutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ZipOutputStream</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipOutputStream</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tableName <span class="token operator">:</span> tableNames<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">generatorCode</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> zip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>zip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * \u67E5\u8BE2\u8868\u4FE1\u606F\u5E76\u751F\u6210\u4EE3\u7801
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">generatorCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> tableName<span class="token punctuation">,</span> <span class="token class-name">ZipOutputStream</span> zip<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// \u67E5\u8BE2\u8868\u4FE1\u606F</span>
        <span class="token class-name">GenTable</span> table <span class="token operator">=</span> genTableMapper<span class="token punctuation">.</span><span class="token function">selectGenTableByName</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u4E3B\u5B50\u8868\u4FE1\u606F</span>
        <span class="token function">setSubTable</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u4E3B\u952E\u5217\u4FE1\u606F</span>
        <span class="token function">setPkColumn</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">VelocityInitializer</span><span class="token punctuation">.</span><span class="token function">initVelocity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">VelocityContext</span> context <span class="token operator">=</span> <span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">prepareContext</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u6A21\u677F\u5217\u8868</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> templates <span class="token operator">=</span> <span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">getTemplateList</span><span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">getTplCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> template <span class="token operator">:</span> templates<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// \u6E32\u67D3\u6A21\u677F</span>
            <span class="token class-name">StringWriter</span> sw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Template</span> tpl <span class="token operator">=</span> <span class="token class-name">Velocity</span><span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">UTF8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tpl<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sw<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// \u6DFB\u52A0\u5230zip</span>
                zip<span class="token punctuation">.</span><span class="token function">putNextEntry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ZipEntry</span><span class="token punctuation">(</span><span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>sw<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zip<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">UTF8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>sw<span class="token punctuation">)</span><span class="token punctuation">;</span>
				zip<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                zip<span class="token punctuation">.</span><span class="token function">closeEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u6E32\u67D3\u6A21\u677F\u5931\u8D25\uFF0C\u8868\u540D\uFF1A&quot;</span> <span class="token operator">+</span> table<span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-\u4EE3\u7801\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#_4-3-\u4EE3\u7801\u6A21\u677F" aria-hidden="true">#</a> 4.3 \u4EE3\u7801\u6A21\u677F</h3><h4 id="_4-3-1-mybatis-sql-\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#_4-3-1-mybatis-sql-\u6A21\u677F" aria-hidden="true">#</a> 4.3.1 mybatis sql \u6A21\u677F</h4><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">&lt;</span>?xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span> ?<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mapper
<span class="token keyword">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>
<span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">&quot;\${packageName}.mapper.\${ClassName}Mapper&quot;</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach ($column in $columns)</span>
        <span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;\${column.javaField}&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;\${column.columnName}&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
<span class="token comment">#if($table.sub)</span>

    <span class="token operator">&lt;</span>resultMap id<span class="token operator">=</span><span class="token string">&quot;\${ClassName}\${subClassName}Result&quot;</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> extends<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>collection property<span class="token operator">=</span><span class="token string">&quot;\${subclassName}List&quot;</span> notNullColumn<span class="token operator">=</span><span class="token string">&quot;sub_\${subTable.pkColumn.columnName}&quot;</span> javaType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;\${subClassName}Result&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${subClassName}&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;\${subClassName}Result&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach ($column in $subTable.columns)</span>
        <span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;\${column.javaField}&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_\${column.columnName}&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
<span class="token comment">#end</span>

    <span class="token operator">&lt;</span><span class="token keyword">sql</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">select</span><span class="token comment">#foreach($column in $columns) $column.columnName#if($velocityCount != $columns.size()),#end#end from \${tableName}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">sql</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}List&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token keyword">where</span><span class="token operator">&gt;</span>  
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#set($queryType=$column.queryType)</span>
<span class="token comment">#set($javaField=$column.javaField)</span>
<span class="token comment">#set($javaType=$column.javaType)</span>
<span class="token comment">#set($columnName=$column.columnName)</span>
<span class="token comment">#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + \${column.javaField.substring(1)})</span>
<span class="token comment">#if($column.query)</span>
<span class="token comment">#if($column.queryType == &quot;EQ&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;NE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">!=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;GT&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;GTE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LT&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LTE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LIKE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">like</span> concat<span class="token punctuation">(</span><span class="token string">&#39;%&#39;</span><span class="token punctuation">,</span> <span class="token comment">#{$javaField}, &#39;%&#39;)&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;BETWEEN&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;params.begin$AttrName != null and params.begin$AttrName != &#39;&#39; and params.end$AttrName != null and params.end$AttrName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">between</span> <span class="token comment">#{params.begin$AttrName} and #{params.end$AttrName}&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">where</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}ById&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaType}&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;#if($table.sub)\${ClassName}\${subClassName}Result#else\${ClassName}Result#end&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#if($table.crud || $table.tree)</span>
        <span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
<span class="token comment">#elseif($table.sub)</span>
        <span class="token keyword">select</span><span class="token comment">#foreach($column in $columns) a.$column.columnName#if($velocityCount != $columns.size()),#end#end,</span>
           <span class="token comment">#foreach($column in $subTable.columns) b.$column.columnName as sub_$column.columnName#if($velocityCount != $subTable.columns.size()),#end#end</span>

        <span class="token keyword">from</span> \${tableName} a
        <span class="token keyword">left</span> <span class="token keyword">join</span> \${subTableName} b <span class="token keyword">on</span> b<span class="token punctuation">.</span>\${subTableFkName} <span class="token operator">=</span> a<span class="token punctuation">.</span>\${pkColumn<span class="token punctuation">.</span>columnName}
        <span class="token keyword">where</span> a<span class="token punctuation">.</span>\${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
        
    <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insert\${ClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span><span class="token comment">#if($pkColumn.increment) useGeneratedKeys=&quot;true&quot; keyProperty=&quot;$pkColumn.javaField&quot;#end&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> \${tableName}
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;(&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span>$<span class="token keyword">column</span><span class="token punctuation">.</span>columnName<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;values (&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{$column.javaField},&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">update</span> id<span class="token operator">=</span><span class="token string">&quot;update\${ClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">update</span> \${tableName}
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;SET&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span>$<span class="token keyword">column</span><span class="token punctuation">.</span>columnName <span class="token operator">=</span> <span class="token comment">#{$column.javaField},&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
        <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">update</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${ClassName}ById&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaType}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${tableName} <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${ClassName}ByIds&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${tableName} <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">in</span> 
        <span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaField}&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
            <span class="token comment">#{\${pkColumn.javaField}}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>
<span class="token comment">#if($table.sub)</span>
    
    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${subClassName}By\${subTableFkClassName}s&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${subTableName} <span class="token keyword">where</span> \${subTableFkName} <span class="token operator">in</span> 
        <span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;\${subTableFkclassName}&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
            <span class="token comment">#{\${subTableFkclassName}}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${subClassName}By\${subTableFkClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;Long&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${subTableName} <span class="token keyword">where</span> \${subTableFkName} <span class="token operator">=</span> <span class="token comment">#{\${subTableFkclassName}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;batch\${subClassName}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> \${subTableName}<span class="token punctuation">(</span><span class="token comment">#foreach($column in $subTable.columns) $column.columnName#if($velocityCount != $subTable.columns.size()),#end#end) values</span>
		<span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">&quot;index&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">(</span><span class="token comment">#foreach($column in $subTable.columns) #{item.$column.javaField}#if($velocityCount != $subTable.columns.size()),#end#end)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-2-service\u5B9E\u73B0\u7C7B\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#_4-3-2-service\u5B9E\u73B0\u7C7B\u6A21\u677F" aria-hidden="true">#</a> 4.3.2 Service\u5B9E\u73B0\u7C7B\u6A21\u677F</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package \${packageName}.service.impl;

import java.util.List;
#foreach ($column in $columns)
#if($column.javaField == &#39;createTime&#39; || $column.javaField == &#39;updateTime&#39;)
import com.ygn.common.utils.DateUtils;
#break
#end
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
#if($table.sub)
import java.util.ArrayList;
import com.ygn.common.utils.StringUtils;
import org.springframework.transaction.annotation.Transactional;
import \${packageName}.domain.\${subClassName};
#end
import \${packageName}.mapper.\${ClassName}Mapper;
import \${packageName}.domain.\${ClassName};
import \${packageName}.service.\${ClassName}Service;

/**
 * \${functionName}Service\u4E1A\u52A1\u5C42\u5904\u7406
 * 
 * @author \${author}
 * @date \${datetime}
 */
@Service
public class \${ClassName}ServiceImpl implements \${ClassName}Service
{
    @Resource
    private \${ClassName}Mapper \${className}Mapper;

    /**
     * \u67E5\u8BE2\${functionName}
     * 
     * @param \${pkColumn.javaField} \${functionName}ID
     * @return \${functionName}
     */
    @Override
    public \${ClassName} select\${ClassName}ById(\${pkColumn.javaType} \${pkColumn.javaField})
    {
        return \${className}Mapper.select\${ClassName}ById(\${pkColumn.javaField});
    }

    /**
     * \u67E5\u8BE2\${functionName}\u5217\u8868
     * 
     * @param \${className} \${functionName}
     * @return \${functionName}
     */
    @Override
    public List&lt;\${ClassName}&gt; select\${ClassName}List(\${ClassName} \${className})
    {
        return \${className}Mapper.select\${ClassName}List(\${className});
    }

    /**
     * \u65B0\u589E\${functionName}
     * 
     * @param \${className} \${functionName}
     * @return \u7ED3\u679C
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int insert\${ClassName}(\${ClassName} \${className})
    {
#foreach ($column in $columns)
#if($column.javaField == &#39;createTime&#39;)
        \${className}.setCreateTime(DateUtils.getNowDate());
#end
#end
#if($table.sub)
        int rows = \${className}Mapper.insert\${ClassName}(\${className});
        insert\${subClassName}(\${className});
        return rows;
#else
        return \${className}Mapper.insert\${ClassName}(\${className});
#end
    }

    /**
     * \u4FEE\u6539\${functionName}
     * 
     * @param \${className} \${functionName}
     * @return \u7ED3\u679C
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int update\${ClassName}(\${ClassName} \${className})
    {
#foreach ($column in $columns)
#if($column.javaField == &#39;updateTime&#39;)
        \${className}.setUpdateTime(DateUtils.getNowDate());
#end
#end
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}(\${className}.get\${pkColumn.capJavaField}());
        insert\${subClassName}(\${className});
#end
        return \${className}Mapper.update\${ClassName}(\${className});
    }

    /**
     * \u6279\u91CF\u5220\u9664\${functionName}
     * 
     * @param \${pkColumn.javaField}s \u9700\u8981\u5220\u9664\u7684\${functionName}ID
     * @return \u7ED3\u679C
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int delete\${ClassName}ByIds(\${pkColumn.javaType}[] \${pkColumn.javaField}s)
    {
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}s(\${pkColumn.javaField}s);
#end
        return \${className}Mapper.delete\${ClassName}ByIds(\${pkColumn.javaField}s);
    }

    /**
     * \u5220\u9664\${functionName}\u4FE1\u606F
     * 
     * @param \${pkColumn.javaField} \${functionName}ID
     * @return \u7ED3\u679C
     */
    @Override
    public int delete\${ClassName}ById(\${pkColumn.javaType} \${pkColumn.javaField})
    {
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}(\${pkColumn.javaField});
#end
        return \${className}Mapper.delete\${ClassName}ById(\${pkColumn.javaField});
    }
#if($table.sub)

    /**
     * \u65B0\u589E\${subTable.functionName}\u4FE1\u606F
     * 
     * @param \${className} \${functionName}\u5BF9\u8C61
     */
    public void insert\${subClassName}(\${ClassName} \${className})
    {
        List&lt;\${subClassName}&gt; \${subclassName}List = \${className}.get\${subClassName}List();
        Long \${pkColumn.javaField} = \${className}.get\${pkColumn.capJavaField}();
        if (StringUtils.isNotNull(\${subclassName}List))
        {
            List&lt;\${subClassName}&gt; list = new ArrayList&lt;\${subClassName}&gt;();
            for (\${subClassName} \${subclassName} : \${subclassName}List)
            {
                \${subclassName}.set\${subTableFkClassName}(\${pkColumn.javaField});
                list.add(\${subclassName});
            }
            if (list.size() &gt; 0)
            {
                \${className}Mapper.batch\${subClassName}(list);
            }
        }
    }
#end
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,68),u={href:"http://doc.ruoyi.vip/ruoyi/document/htsc.html#%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E6%BA%90",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=c("ExternalLinkIcon");return e(),t("div",null,[r,n("p",null,[n("a",u,[p("\u82E5\u4F9D\u5B98\u65B9\u6587\u6863"),o(s)])])])}const g=a(i,[["render",k],["__file","manage-system-code-gen.html.vue"]]);export{g as default};
