import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as e,r as l}from"./app.c8e02ec4.js";const i={},u=n("h1",{id:"\u5B9A\u65F6\u4EFB\u52A1-springschedule\u5B9E\u73B0\u65B9\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B9A\u65F6\u4EFB\u52A1-springschedule\u5B9E\u73B0\u65B9\u5F0F","aria-hidden":"true"},"#"),s(" \u5B9A\u65F6\u4EFB\u52A1 - SpringSchedule\u5B9E\u73B0\u65B9\u5F0F")],-1),k=n("blockquote",null,[n("p",null,"\u524D\u6587\u6211\u4EEC\u4ECB\u7ECD\u4E86Timer\u548CScheduledExecutorService\u662FJDK\u5185\u7F6E\u7684\u5B9A\u65F6\u4EFB\u52A1\u65B9\u6848\u4EE5\u53CANetty\u5185\u90E8\u57FA\u4E8E\u65F6\u95F4\u8F6E\u5B9E\u73B0\u7684HashedWheelTimer\uFF1B\u800C\u4E3B\u6D41\u7684SpringBoot\u96C6\u6210\u65B9\u6848\u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u662FSpring Sechedule, \u53E6\u4E00\u79CD\u662FSpring\u96C6\u6210Quartz\uFF1B \u672C\u6587\u4E3B\u8981\u4ECB\u7ECDSpring Schedule\u5B9E\u73B0\u65B9\u5F0F\u3002")],-1),d=n("h2",{id:"_1-\u51C6\u5907\u77E5\u8BC6\u70B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-\u51C6\u5907\u77E5\u8BC6\u70B9","aria-hidden":"true"},"#"),s(" 1. \u51C6\u5907\u77E5\u8BC6\u70B9")],-1),r={href:"https://pdai.tech/md/spring/spring-x-framework-ioc-source-3.html",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"_1-1-\u4EC0\u4E48\u662Fcron\u8868\u8FBE\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-\u4EC0\u4E48\u662Fcron\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#"),s(" 1.1 \u4EC0\u4E48\u662Fcron\u8868\u8FBE\u5F0F")],-1),m=n("p",null,"\u5B9A\u65F6\u4EFB\u52A1\u548CCRON\u8868\u8FBE\u5F0F\u5728\u5F00\u53D1\u4E2D\u4F7F\u7528\u4E5F\u975E\u5E38\u5E7F\u6CDB\uFF1B\u5728\u5B66\u4E60\u65F6\uFF0C\u603B\u4F53\u4E0A\u7406\u89E3\uFF0C\u5BF9\u5E38\u7528\u7684\u77E5\u6089\uFF0C\u5F00\u53D1\u65F6\u53EF\u4EE5\u5FEB\u901F\u67E5\u8BE2\u4F7F\u7528\u5373\u53EF\u3002",-1),b=n("p",null,[n("em",null,"\u76F8\u5173\u6587\u7AE0")],-1),g={href:"https://pdai.tech/md/develop/cron/dev-cron-x-usage.html",target:"_blank",rel:"noopener noreferrer"},h=n("ul",null,[n("li",null,"\u5B9A\u65F6\u4EFB\u52A1\u548CCRON\u8868\u8FBE\u5F0F\u5728\u5F00\u53D1\u4E2D\u4F7F\u7528\u4E5F\u975E\u5E38\u5E7F\u6CDB\uFF0C\u672C\u6587\u6574\u7406\u4E86CRON\u8868\u8FBE\u5F0F\u548C\u5E38\u89C1\u4F7F\u7528\u4F8B\u5B50")],-1),f={href:"https://pdai.tech/md/develop/cron/dev-cron-x-tools.html",target:"_blank",rel:"noopener noreferrer"},y=n("ul",null,[n("li",null,"\u672C\u6587\u4E3B\u8981\u603B\u7ED3\u5E38\u7528\u7684\u5728\u7EBFCRON\u751F\u6210\u548C\u6821\u9A8C\u5DE5\u5177\uFF0C\u4ECE\u800C\u9AD8\u6548\u7684\u5199\u51FA\u6B63\u786E\u7684\u8868\u8FBE\u5F0F")],-1),w=e(`<h2 id="_2-\u5B9E\u73B0\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u73B0\u6848\u4F8B" aria-hidden="true">#</a> 2. \u5B9E\u73B0\u6848\u4F8B</h2><blockquote><p>SpringTask\u5C01\u88C5\u7684\u6BD4\u8F83\u597D\uFF0C\u4F7F\u7528\u975E\u5E38\u7B80\u5355\u3002</p></blockquote><h3 id="_2-1-enablescheduling-scheduled" tabindex="-1"><a class="header-anchor" href="#_2-1-enablescheduling-scheduled" aria-hidden="true">#</a> 2.1 @EnableScheduling+@Scheduled</h3><ul><li><strong>\u901A\u8FC7@EnableScheduling\u542F\u7528\u5B9A\u65F6\u4EFB\u52A1\uFF0C@Scheduled\u5B9A\u4E49\u4EFB\u52A1</strong></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@EnableScheduling</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScheduleDemo</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u6BCF\u96941\u5206\u949F\u6267\u884C\u4E00\u6B21\u3002
     */</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>fixedRate <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">runScheduleFixedRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;runScheduleFixedRate: current DateTime, {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6BCF\u4E2A\u6574\u70B9\u5C0F\u65F6\u6267\u884C\u4E00\u6B21\u3002
     */</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 0 */1 * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">runScheduleCron</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;runScheduleCron: current DateTime, {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>@Scheduled\u6240\u652F\u6301\u7684\u53C2\u6570</strong>\uFF1A</li></ul><ol><li><code>cron</code>\uFF1Acron\u8868\u8FBE\u5F0F\uFF0C\u6307\u5B9A\u4EFB\u52A1\u5728\u7279\u5B9A\u65F6\u95F4\u6267\u884C\uFF1B</li><li><code>fixedDelay</code>\uFF1A\u8868\u793A\u4E0A\u4E00\u6B21\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\u591A\u4E45\u518D\u6B21\u6267\u884C\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>fixedDelayString</code>\uFF1A\u4E0EfixedDelay\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>fixedRate</code>\uFF1A\u8868\u793A\u6309\u4E00\u5B9A\u7684\u9891\u7387\u6267\u884C\u4EFB\u52A1\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>fixedRateString</code>: \u4E0EfixedRate\u7684\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u5C06\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>initialDelay</code>\uFF1A\u8868\u793A\u5EF6\u8FDF\u591A\u4E45\u518D\u7B2C\u4E00\u6B21\u6267\u884C\u4EFB\u52A1\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>initialDelayString</code>\uFF1A\u4E0EinitialDelay\u7684\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u5C06\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>zone</code>\uFF1A\u65F6\u533A\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u65F6\u533A\uFF0C\u4E00\u822C\u6CA1\u6709\u7528\u5230\u3002</li></ol><h2 id="_3-\u8FDB\u4E00\u6B65\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#_3-\u8FDB\u4E00\u6B65\u7406\u89E3" aria-hidden="true">#</a> 3. \u8FDB\u4E00\u6B65\u7406\u89E3</h2><blockquote><p>\u6211\u4EEC\u518D\u901A\u8FC7\u4E00\u4E9B\u95EE\u9898\u6765\u5E2E\u52A9\u4F60\u66F4\u6DF1\u5165\u7406\u89E3SpringTask\u5B9E\u73B0\u65B9\u5F0F\u3002</p></blockquote><h3 id="_3-1-\u4F7F\u7528spring-schedule\u8981\u6CE8\u610F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4F7F\u7528spring-schedule\u8981\u6CE8\u610F\u4EC0\u4E48" aria-hidden="true">#</a> 3.1 \u4F7F\u7528Spring Schedule\u8981\u6CE8\u610F\u4EC0\u4E48\uFF1F</h3><ul><li><strong>\u5173\u4E8E\u5F02\u5E38\u5904\u7406</strong></li></ul><p>\u5EFA\u8BAE\u81EA\u884C\u5904\u7406\u5F02\u5E38</p><ul><li><strong>\u5173\u4E8E\u8D85\u65F6\u5904\u7406</strong></li></ul><p>\u5728\u5B9E\u9645\u7684\u5F00\u53D1\u4E2D\uFF0C\u8FD9\u4E2A\u95EE\u9898\u7ECF\u5E38\u4F1A\u51FA\u73B0\uFF0C\u6BD4\u5982\u6267\u884C\u4E00\u6BB5\u65F6\u95F4\u540E\u5B9A\u65F6\u4EFB\u52A1\u4E0D\u518D\u6267\u884C\u4E86\uFF1B \u8FD9\u79CD\u60C5\u51B5\u4F1A\u53D1\u751F\u5728\uFF0C\u6BD4\u5982\u4F60\u8C03\u7528\u4E00\u4E2A\u7B2C\u4E09\u65B9\u63A5\u53E3\uFF0C\u6CA1\u6709\u8BBE\u7F6E\u8C03\u7528\u8D85\u65F6\uFF0C\u7EE7\u800C\u5F15\u53D1\u5F02\u5E38\uFF0C\u8FD9\u65F6\u5019\u5F53\u524D\u4EFB\u52A1\u4FBF\u963B\u585E\u4E86\u3002</p><h3 id="_3-2-springtask\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-springtask\u7684\u539F\u7406" aria-hidden="true">#</a> 3.2 SpringTask\u7684\u539F\u7406\uFF1F</h3><blockquote><p>SpringTask\u7684\u6E90\u7801\u5728\u8FD9\u91CC\uFF1A</p></blockquote><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220719042742912.png" alt="image-20220719042742912"></p><h4 id="_3-2-1-enablescheduling\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_3-2-1-enablescheduling\u6CE8\u89E3" aria-hidden="true">#</a> 3.2.1 @EnableScheduling\u6CE8\u89E3</h4><p>\u6DFB\u52A0@EnableScheduling\u6CE8\u89E3\u4F1A\u81EA\u52A8\u6CE8\u5165SchedulingConfiguration</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> <span class="token class-name">Chris</span> <span class="token class-name">Beams</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> <span class="token class-name">Juergen</span> <span class="token class-name">Hoeller</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@since</span> <span class="token number">3.1</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">Scheduled</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">SchedulingConfiguration</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">SchedulingConfigurer</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">ScheduledTaskRegistrar</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">Trigger</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@see</span> <span class="token class-name">ScheduledAnnotationBeanPostProcessor</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">SchedulingConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">EnableScheduling</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-schedulingconfiguration\u4E2D\u521D\u59CB\u5316scheduledannotationbeanpostprocessor" tabindex="-1"><a class="header-anchor" href="#_3-2-2-schedulingconfiguration\u4E2D\u521D\u59CB\u5316scheduledannotationbeanpostprocessor" aria-hidden="true">#</a> 3.2.2 SchedulingConfiguration\u4E2D\u521D\u59CB\u5316ScheduledAnnotationBeanPostProcessor</h4><p>SchedulingConfiguration\u914D\u7F6E\u4E2D\u81EA\u52A8\u521D\u59CB\u5316ScheduledAnnotationBeanPostProcessor</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span><span class="token constant">ROLE_INFRASTRUCTURE</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchedulingConfiguration</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token class-name">TaskManagementConfigUtils</span><span class="token punctuation">.</span><span class="token constant">SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME</span><span class="token punctuation">)</span>
	<span class="token annotation punctuation">@Role</span><span class="token punctuation">(</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">.</span><span class="token constant">ROLE_INFRASTRUCTURE</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">ScheduledAnnotationBeanPostProcessor</span> <span class="token function">scheduledAnnotationProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledAnnotationBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),S={href:"https://pdai.tech/md/spring/spring-x-framework-ioc-source-3.html",target:"_blank",rel:"noopener noreferrer"},x=e(`<p><strong>Spring \u5BB9\u5668\u4E2D Bean \u7684\u751F\u547D\u5468\u671F\u6D41\u7A0B</strong></p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220719042950892.png" alt="image-20220719042950892"></p><h4 id="_3-2-3-scheduledtaskregistrar\u6CE8\u518Ctask" tabindex="-1"><a class="header-anchor" href="#_3-2-3-scheduledtaskregistrar\u6CE8\u518Ctask" aria-hidden="true">#</a> 3.2.3 ScheduledTaskRegistrar\u6CE8\u518Ctask</h4><p>\u5728ScheduledAnnotationBeanPostProcessor\u6784\u9020\u51FD\u6570\u4E2D\u521D\u59CB\u5316\u4E86ScheduledTaskRegistrar</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Create a default <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ScheduledAnnotationBeanPostProcessor</span></span></span><span class="token punctuation">}</span>.
    */</span>
<span class="token keyword">public</span> <span class="token class-name">ScheduledAnnotationBeanPostProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>registrar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledTaskRegistrar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ScheduledTaskRegistrar\u6700\u4E3B\u8981\u7684\u662F\u6CE8\u518C\u5404\u79CD\u7C7B\u578B\u7684task \uFF08\u8FD9\u79CD\u65B9\u5F0F\u5728\u65B0\u7684\u7248\u672C\u4E2D\u5DF2\u7ECF\u5E9F\u5F03\u4E86\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">scheduleTasks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>taskScheduler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>localExecutor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadScheduledExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>taskScheduler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentTaskScheduler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>localExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>triggerTasks <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TriggerTask</span> task <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>triggerTasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addScheduledTask</span><span class="token punctuation">(</span><span class="token function">scheduleTriggerTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cronTasks <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CronTask</span> task <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cronTasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addScheduledTask</span><span class="token punctuation">(</span><span class="token function">scheduleCronTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixedRateTasks <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">IntervalTask</span> task <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fixedRateTasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addScheduledTask</span><span class="token punctuation">(</span><span class="token function">scheduleFixedRateTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixedDelayTasks <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">IntervalTask</span> task <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fixedDelayTasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addScheduledTask</span><span class="token punctuation">(</span><span class="token function">scheduleFixedDelayTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u518C\u54EA\u4E9BTask\uFF0C\u600E\u4E48\u8BBE\u8BA1\u7C7B\u7684\u5462\uFF1F</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220719043438091.png" alt="image-20220719043438091"></p><h4 id="_3-2-4-scheduledannotationbeanpostprocessor\u52A0\u8F7Dscheduled\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#_3-2-4-scheduledannotationbeanpostprocessor\u52A0\u8F7Dscheduled\u6CE8\u89E3" aria-hidden="true">#</a> 3.2.4 ScheduledAnnotationBeanPostProcessor\u52A0\u8F7DScheduled\u6CE8\u89E3</h4><p>\u5728BeanPostProcessor\u7684postProcessAfterInitialization\u9636\u6BB5\u52A0\u8F7DScheduled\u6CE8\u89E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token keyword">instanceof</span> <span class="token class-name">AopInfrastructureBean</span> <span class="token operator">||</span> bean <span class="token keyword">instanceof</span> <span class="token class-name">TaskScheduler</span> <span class="token operator">||</span>
            bean <span class="token keyword">instanceof</span> <span class="token class-name">ScheduledExecutorService</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Ignore AOP infrastructure such as scoped proxies.</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetClass <span class="token operator">=</span> <span class="token class-name">AopProxyUtils</span><span class="token punctuation">.</span><span class="token function">ultimateTargetClass</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>nonAnnotatedClasses<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
            <span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">isCandidateClass</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">Scheduled</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Schedules</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Scheduled</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> annotatedMethods <span class="token operator">=</span> <span class="token class-name">MethodIntrospector</span><span class="token punctuation">.</span><span class="token function">selectMethods</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token class-name">MethodIntrospector<span class="token punctuation">.</span>MetadataLookup</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Scheduled</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> method <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Scheduled</span><span class="token punctuation">&gt;</span></span> scheduledAnnotations <span class="token operator">=</span> <span class="token class-name">AnnotatedElementUtils</span><span class="token punctuation">.</span><span class="token function">getMergedRepeatableAnnotations</span><span class="token punctuation">(</span>
                            method<span class="token punctuation">,</span> <span class="token class-name">Scheduled</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Schedules</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">!</span>scheduledAnnotations<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> scheduledAnnotations <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>annotatedMethods<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>nonAnnotatedClasses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;No @Scheduled annotations found on bean class: &quot;</span> <span class="token operator">+</span> targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Non-empty set of methods</span>
            annotatedMethods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> scheduledAnnotations<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                    scheduledAnnotations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>scheduled <span class="token operator">-&gt;</span> <span class="token function">processScheduled</span><span class="token punctuation">(</span>scheduled<span class="token punctuation">,</span> method<span class="token punctuation">,</span> bean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span>annotatedMethods<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; @Scheduled methods processed on bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                        <span class="token string">&quot;&#39;: &quot;</span> <span class="token operator">+</span> annotatedMethods<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Scheduled\u6CE8\u89E3\u662F\u6DFB\u52A0\u5230\u65B9\u6CD5\u7EA7\u522B\uFF0C\u5177\u4F53\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">ANNOTATION_TYPE</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token annotation punctuation">@Repeatable</span><span class="token punctuation">(</span><span class="token class-name">Schedules</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Scheduled</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
	 * A special cron expression value that indicates a disabled trigger: <span class="token punctuation">{</span><span class="token keyword">@value</span><span class="token punctuation">}</span>.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This is primarily meant for use with <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">$<span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> placeholders,
	 * allowing for external disabling of corresponding scheduled methods.
	 * <span class="token keyword">@since</span> 5.1
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">ScheduledTaskRegistrar</span><span class="token punctuation">#</span><span class="token field">CRON_DISABLED</span></span>
	 */</span>
	<span class="token class-name">String</span> <span class="token constant">CRON_DISABLED</span> <span class="token operator">=</span> <span class="token class-name">ScheduledTaskRegistrar</span><span class="token punctuation">.</span><span class="token constant">CRON_DISABLED</span><span class="token punctuation">;</span>


	<span class="token doc-comment comment">/**
	 * A cron-like expression, extending the usual UN*X definition to include triggers
	 * on the second, minute, hour, day of month, month, and day of week.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>For example, <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token string">&quot;0 * * * * MON-FRI&quot;</span></span></span><span class="token punctuation">}</span> means once per minute on weekdays
	 * (at the top of the minute - the 0th second).
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The fields read from left to right are interpreted as follows.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>minute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>hour<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>day of month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>day of week<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The special value <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">CRON_DISABLED</span></span> &quot;-&quot;<span class="token punctuation">}</span> indicates a disabled cron
	 * trigger, primarily meant for externally specified values resolved by a
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">$<span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">&gt;</span></span> placeholder.
	 * <span class="token keyword">@return</span> an expression that can be parsed to a cron schedule
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">CronExpression</span><span class="token punctuation">#</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span></span>
	 */</span>
	<span class="token class-name">String</span> <span class="token function">cron</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * A time zone for which the cron expression will be resolved. By default, this
	 * attribute is the empty String (i.e. the server&#39;s local time zone will be used).
	 * <span class="token keyword">@return</span> a zone id accepted by <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TimeZone</span><span class="token punctuation">#</span><span class="token function">getTimeZone</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>,
	 * or an empty String to indicate the server&#39;s default time zone
	 * <span class="token keyword">@since</span> 4.0
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">CronTrigger</span><span class="token punctuation">#</span><span class="token function">CronTrigger</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TimeZone</span><span class="token punctuation">)</span></span>
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">TimeZone</span></span>
	 */</span>
	<span class="token class-name">String</span> <span class="token function">zone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Execute the annotated method with a fixed period between the end of the
	 * last invocation and the start of the next.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the delay
	 */</span>
	<span class="token keyword">long</span> <span class="token function">fixedDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Execute the annotated method with a fixed period between the end of the
	 * last invocation and the start of the next.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the delay as a String value <span class="token entity named-entity" title="\u2014">&amp;mdash;</span> for example, a placeholder
	 * or a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span><span class="token punctuation">#</span><span class="token field">parse</span></span> java.time.Duration<span class="token punctuation">}</span> compliant value
	 * <span class="token keyword">@since</span> 3.2.2
	 */</span>
	<span class="token class-name">String</span> <span class="token function">fixedDelayString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Execute the annotated method with a fixed period between invocations.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the period
	 */</span>
	<span class="token keyword">long</span> <span class="token function">fixedRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Execute the annotated method with a fixed period between invocations.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the period as a String value <span class="token entity named-entity" title="\u2014">&amp;mdash;</span> for example, a placeholder
	 * or a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span><span class="token punctuation">#</span><span class="token field">parse</span></span> java.time.Duration<span class="token punctuation">}</span> compliant value
	 * <span class="token keyword">@since</span> 3.2.2
	 */</span>
	<span class="token class-name">String</span> <span class="token function">fixedRateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Number of units of time to delay before the first execution of a
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedRate</span></span><span class="token punctuation">}</span> or <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedDelay</span></span><span class="token punctuation">}</span> task.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the initial
	 * <span class="token keyword">@since</span> 3.2
	 */</span>
	<span class="token keyword">long</span> <span class="token function">initialDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Number of units of time to delay before the first execution of a
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedRate</span></span><span class="token punctuation">}</span> or <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedDelay</span></span><span class="token punctuation">}</span> task.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The time unit is milliseconds by default but can be overridden via
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">timeUnit</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the initial delay as a String value <span class="token entity named-entity" title="\u2014">&amp;mdash;</span> for example, a placeholder
	 * or a <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span><span class="token punctuation">#</span><span class="token field">parse</span></span> java.time.Duration<span class="token punctuation">}</span> compliant value
	 * <span class="token keyword">@since</span> 3.2.2
	 */</span>
	<span class="token class-name">String</span> <span class="token function">initialDelayString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">TimeUnit</span></span><span class="token punctuation">}</span> to use for <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedDelay</span></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedDelayString</span></span><span class="token punctuation">}</span>,
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedRate</span></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedRateString</span></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">initialDelay</span></span><span class="token punctuation">}</span>, and
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">initialDelayString</span></span><span class="token punctuation">}</span>.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Defaults to <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">TimeUnit</span><span class="token punctuation">#</span><span class="token field">MICROSECONDS</span></span><span class="token punctuation">}</span>.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This attribute is ignored for <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">cron</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span> cron expressions<span class="token punctuation">}</span>
	 * and for <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Duration</span></span><span class="token punctuation">}</span> values supplied via <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedDelayString</span></span><span class="token punctuation">}</span>,
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">fixedRateString</span></span><span class="token punctuation">}</span>, or <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">initialDelayString</span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@return</span> the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">TimeUnit</span></span></span><span class="token punctuation">}</span> to use
	 * <span class="token keyword">@since</span> 5.3.10
	 */</span>
	<span class="token class-name">TimeUnit</span> <span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@Scheduled\u6240\u652F\u6301\u7684\u53C2\u6570\uFF1A</p><ol><li><code>cron</code>\uFF1Acron\u8868\u8FBE\u5F0F\uFF0C\u6307\u5B9A\u4EFB\u52A1\u5728\u7279\u5B9A\u65F6\u95F4\u6267\u884C\uFF1B</li><li><code>fixedDelay</code>\uFF1A\u8868\u793A\u4E0A\u4E00\u6B21\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u540E\u591A\u4E45\u518D\u6B21\u6267\u884C\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>fixedDelayString</code>\uFF1A\u4E0EfixedDelay\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>fixedRate</code>\uFF1A\u8868\u793A\u6309\u4E00\u5B9A\u7684\u9891\u7387\u6267\u884C\u4EFB\u52A1\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>fixedRateString</code>: \u4E0EfixedRate\u7684\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u5C06\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>initialDelay</code>\uFF1A\u8868\u793A\u5EF6\u8FDF\u591A\u4E45\u518D\u7B2C\u4E00\u6B21\u6267\u884C\u4EFB\u52A1\uFF0C\u53C2\u6570\u7C7B\u578B\u4E3Along\uFF0C\u5355\u4F4Dms\uFF1B</li><li><code>initialDelayString</code>\uFF1A\u4E0EinitialDelay\u7684\u542B\u4E49\u4E00\u6837\uFF0C\u53EA\u662F\u5C06\u53C2\u6570\u7C7B\u578B\u53D8\u4E3AString\uFF1B</li><li><code>zone</code>\uFF1A\u65F6\u533A\uFF0C\u9ED8\u8BA4\u4E3A\u5F53\u524D\u65F6\u533A\uFF0C\u4E00\u822C\u6CA1\u6709\u7528\u5230\u3002</li></ol><p>\u83B7\u53D6\u5230\u65B9\u6CD5\u4E0AScheduled\u6CE8\u89E3\uFF08\u5BF9\u4EFB\u52A1\u7684\u5B9A\u4E49\uFF09\uFF0C\u901A\u8FC7processScheduled\u5904\u7406\u5177\u4F53\u7C7B\u578B\u7684task</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Process the given <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@Scheduled</span></span></span><span class="token punctuation">}</span> method declaration on the given bean.
    * <span class="token keyword">@param</span> <span class="token parameter">scheduled</span> the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@Scheduled</span></span></span><span class="token punctuation">}</span> annotation
    * <span class="token keyword">@param</span> <span class="token parameter">method</span> the method that the annotation has been declared on
    * <span class="token keyword">@param</span> <span class="token parameter">bean</span> the target bean instance
    * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">createRunnable</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Method</span><span class="token punctuation">)</span></span>
    */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">processScheduled</span><span class="token punctuation">(</span><span class="token class-name">Scheduled</span> scheduled<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Runnable</span> runnable <span class="token operator">=</span> <span class="token function">createRunnable</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> processedSchedule <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> errorMessage <span class="token operator">=</span>
                <span class="token string">&quot;Exactly one of the &#39;cron&#39;, &#39;fixedDelay(String)&#39;, or &#39;fixedRate(String)&#39; attributes is required&quot;</span><span class="token punctuation">;</span>

        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ScheduledTask</span><span class="token punctuation">&gt;</span></span> tasks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Determine initial delay</span>
        <span class="token keyword">long</span> initialDelay <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>scheduled<span class="token punctuation">.</span><span class="token function">initialDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> initialDelayString <span class="token operator">=</span> scheduled<span class="token punctuation">.</span><span class="token function">initialDelayString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>initialDelayString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>initialDelay <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;Specify &#39;initialDelay&#39; or &#39;initialDelayString&#39;, not both&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                initialDelayString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">.</span><span class="token function">resolveStringValue</span><span class="token punctuation">(</span>initialDelayString<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>initialDelayString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    initialDelay <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>initialDelayString<span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;Invalid initialDelayString value \\&quot;&quot;</span> <span class="token operator">+</span> initialDelayString <span class="token operator">+</span> <span class="token string">&quot;\\&quot; - cannot parse into long&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Check cron expression</span>
        <span class="token class-name">String</span> cron <span class="token operator">=</span> scheduled<span class="token punctuation">.</span><span class="token function">cron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> zone <span class="token operator">=</span> scheduled<span class="token punctuation">.</span><span class="token function">zone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cron <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">.</span><span class="token function">resolveStringValue</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">;</span>
                zone <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">.</span><span class="token function">resolveStringValue</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>initialDelay <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;&#39;initialDelay&#39; not supported for cron triggers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                processedSchedule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Scheduled</span><span class="token punctuation">.</span><span class="token constant">CRON_DISABLED</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cron<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeZone</span> timeZone<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        timeZone <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">parseTimeZoneString</span><span class="token punctuation">(</span>zone<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        timeZone <span class="token operator">=</span> <span class="token class-name">TimeZone</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    tasks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registrar<span class="token punctuation">.</span><span class="token function">scheduleCronTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CronTask</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CronTrigger</span><span class="token punctuation">(</span>cron<span class="token punctuation">,</span> timeZone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// At this point we don&#39;t need to differentiate between initial delay set or not anymore</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialDelay <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            initialDelay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Check fixed delay</span>
        <span class="token keyword">long</span> fixedDelay <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>scheduled<span class="token punctuation">.</span><span class="token function">fixedDelay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fixedDelay <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>processedSchedule<span class="token punctuation">,</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            processedSchedule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            tasks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registrar<span class="token punctuation">.</span><span class="token function">scheduleFixedDelayTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FixedDelayTask</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> fixedDelay<span class="token punctuation">,</span> initialDelay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> fixedDelayString <span class="token operator">=</span> scheduled<span class="token punctuation">.</span><span class="token function">fixedDelayString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>fixedDelayString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fixedDelayString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">.</span><span class="token function">resolveStringValue</span><span class="token punctuation">(</span>fixedDelayString<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>fixedDelayString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>processedSchedule<span class="token punctuation">,</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
                processedSchedule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    fixedDelay <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>fixedDelayString<span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;Invalid fixedDelayString value \\&quot;&quot;</span> <span class="token operator">+</span> fixedDelayString <span class="token operator">+</span> <span class="token string">&quot;\\&quot; - cannot parse into long&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                tasks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registrar<span class="token punctuation">.</span><span class="token function">scheduleFixedDelayTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FixedDelayTask</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> fixedDelay<span class="token punctuation">,</span> initialDelay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Check fixed rate</span>
        <span class="token keyword">long</span> fixedRate <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>scheduled<span class="token punctuation">.</span><span class="token function">fixedRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fixedRate <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>processedSchedule<span class="token punctuation">,</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            processedSchedule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            tasks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registrar<span class="token punctuation">.</span><span class="token function">scheduleFixedRateTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FixedRateTask</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> fixedRate<span class="token punctuation">,</span> initialDelay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> fixedRateString <span class="token operator">=</span> scheduled<span class="token punctuation">.</span><span class="token function">fixedRateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>fixedRateString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fixedRateString <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>embeddedValueResolver<span class="token punctuation">.</span><span class="token function">resolveStringValue</span><span class="token punctuation">(</span>fixedRateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>fixedRateString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span><span class="token operator">!</span>processedSchedule<span class="token punctuation">,</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
                processedSchedule <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    fixedRate <span class="token operator">=</span> <span class="token function">convertToMillis</span><span class="token punctuation">(</span>fixedRateString<span class="token punctuation">,</span> scheduled<span class="token punctuation">.</span><span class="token function">timeUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;Invalid fixedRateString value \\&quot;&quot;</span> <span class="token operator">+</span> fixedRateString <span class="token operator">+</span> <span class="token string">&quot;\\&quot; - cannot parse into long&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                tasks<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>registrar<span class="token punctuation">.</span><span class="token function">scheduleFixedRateTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FixedRateTask</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> fixedRate<span class="token punctuation">,</span> initialDelay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Check whether we had any attribute set</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>processedSchedule<span class="token punctuation">,</span> errorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Finally register the scheduled tasks</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scheduledTasks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ScheduledTask</span><span class="token punctuation">&gt;</span></span> regTasks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledTasks<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> key <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            regTasks<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Encountered invalid @Scheduled method &#39;&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-5-scheduledtaskregistrar-\u4E2D\u89E3\u6790task" tabindex="-1"><a class="header-anchor" href="#_3-2-5-scheduledtaskregistrar-\u4E2D\u89E3\u6790task" aria-hidden="true">#</a> 3.2.5 ScheduledTaskRegistrar \u4E2D\u89E3\u6790task</h4><p>\u4EE5CronTask\u4E3A\u4F8B\uFF0C\u5982\u679C\u5B9A\u4E49\u4E86taskScheduler\u5219\u7531taskScheduler\u6267\u884C\uFF0C\u5982\u679C\u6CA1\u6709\u653E\u5230unresolvedTasks\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Schedule the specified cron task, either right away if possible
    * or on initialization of the scheduler.
    * <span class="token keyword">@return</span> a handle to the scheduled task, allowing to cancel it
    * (or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if processing a previously registered task)
    * <span class="token keyword">@since</span> 4.3
    */</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">ScheduledTask</span> <span class="token function">scheduleCronTask</span><span class="token punctuation">(</span><span class="token class-name">CronTask</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ScheduledTask</span> scheduledTask <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>unresolvedTasks<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> newTask <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduledTask <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scheduledTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>taskScheduler <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        scheduledTask<span class="token punctuation">.</span>future <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>taskScheduler<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">addCronTask</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>unresolvedTasks<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> scheduledTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>newTask <span class="token operator">?</span> scheduledTask <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-6-taskscheduler\u5BF9task\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_3-2-6-taskscheduler\u5BF9task\u5904\u7406" aria-hidden="true">#</a> 3.2.6 TaskScheduler\u5BF9Task\u5904\u7406</h4><p>\u9ED8\u8BA4\u662FConcurrentTaskScheduler\uFF0C \u5904\u7406\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token class-name">Trigger</span> trigger<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>enterpriseConcurrentScheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">EnterpriseConcurrentTriggerScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token function">decorateTask</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">ErrorHandler</span> errorHandler <span class="token operator">=</span>
                    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>errorHandler <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errorHandler <span class="token operator">:</span> <span class="token class-name">TaskUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultErrorHandler</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReschedulingRunnable</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> trigger<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clock<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutor<span class="token punctuation">,</span> errorHandler<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RejectedExecutionException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TaskRejectedException</span><span class="token punctuation">(</span><span class="token string">&quot;Executor [&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutor <span class="token operator">+</span> <span class="token string">&quot;] did not accept task: &quot;</span> <span class="token operator">+</span> task<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EnterpriseConcurrentTriggerScheduler \u662F JSR-236 Trigger\u6807\u51C6\uFF0C\u5B83\u7684\u5904\u7406\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Delegate that adapts a Spring Trigger to a JSR-236 Trigger.
    * Separated into an inner class in order to avoid a hard dependency on the JSR-236 API.
    */</span>
<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">EnterpriseConcurrentTriggerScheduler</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Trigger</span> trigger<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ManagedScheduledExecutorService</span> executor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ManagedScheduledExecutorService</span><span class="token punctuation">)</span> scheduledExecutor<span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>enterprise<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>Trigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token annotation punctuation">@Nullable</span>
            <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getNextRunTime</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">LastExecution</span> le<span class="token punctuation">,</span> <span class="token class-name">Date</span> taskScheduledTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span>trigger<span class="token punctuation">.</span><span class="token function">nextExecutionTime</span><span class="token punctuation">(</span>le <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span>
                        <span class="token keyword">new</span> <span class="token class-name">SimpleTriggerContext</span><span class="token punctuation">(</span>le<span class="token punctuation">.</span><span class="token function">getScheduledStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> le<span class="token punctuation">.</span><span class="token function">getRunStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> le<span class="token punctuation">.</span><span class="token function">getRunEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                        <span class="token keyword">new</span> <span class="token class-name">SimpleTriggerContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">skipRun</span><span class="token punctuation">(</span><span class="token class-name">LastExecution</span> lastExecution<span class="token punctuation">,</span> <span class="token class-name">Date</span> scheduledRunTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6CA1\u6709\u4F7F\u7528EnterpriseConcurrentTriggerScheduler, \u5219\u4F7F\u7528ReschedulingRunnable\uFF0C\u672C\u8D28\u4E0A\u7531ScheduledExecutorService\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ReschedulingRunnable</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> delegate<span class="token punctuation">,</span> <span class="token class-name">Trigger</span> trigger<span class="token punctuation">,</span> <span class="token class-name">Clock</span> clock<span class="token punctuation">,</span>
			<span class="token class-name">ScheduledExecutorService</span> executor<span class="token punctuation">,</span> <span class="token class-name">ErrorHandler</span> errorHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">super</span><span class="token punctuation">(</span>delegate<span class="token punctuation">,</span> errorHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>trigger <span class="token operator">=</span> trigger<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>triggerContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleTriggerContext</span><span class="token punctuation">(</span>clock<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>executor <span class="token operator">=</span> executor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">ScheduledFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>triggerContextMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutionTime <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>trigger<span class="token punctuation">.</span><span class="token function">nextExecutionTime</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>triggerContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutionTime <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> initialDelay <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scheduledExecutionTime<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>triggerContext<span class="token punctuation">.</span><span class="token function">getClock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">millis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>currentFuture <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> initialDelay<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,29),T={href:"https://pdai.tech/md/spring/springboot/springboot-x-task-spring-task-timer.html",target:"_blank",rel:"noopener noreferrer"},R=n("strong",null,"SpringBoot\u5B9A\u65F6\u4EFB\u52A1 - Spring Schedule\u5B9E\u73B0\u65B9\u5F0F",-1);function D(E,_){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,k,d,n("blockquote",null,[n("p",null,[s("cron\u8868\u8FBE\u5F0F\uFF0C \u4EE5\u53CABeanPostProcessor\uFF08\u65B9\u4FBF\u4F60\u7406\u89E3\u5B83\u7684\u539F\u7406\uFF0C\u76F8\u5173\u4ECB\u7ECD\u5728\u4E4B\u524D\u7684\u6587\u7AE0\u4E2D"),n("a",r,[s("Spring\u6838\u5FC3\u4E4B\u63A7\u5236\u53CD\u8F6C(IOC)\u6E90\u7801\u89E3\u6790"),t(a)]),s("\uFF09.")])]),v,m,b,n("ul",null,[n("li",null,[n("a",g,[s("CRON\u8868\u8FBE\u5F0F - CRON\u8868\u8FBE\u5F0F\u4ECB\u7ECD\u548C\u4F7F\u7528"),t(a)]),h]),n("li",null,[n("a",f,[s("CRON\u8868\u8FBE\u5F0F - CRON\u751F\u6210\u548C\u6821\u9A8C\u5DE5\u5177"),t(a)]),y])]),w,n("p",null,[s("\u4EC0\u4E48\u662FBeanPostProcessor? \u6211\u4EEC\u5728\u524D\u6587\u4E2D\u6709\u8BE6\u89E3\u7684\u8BB2\u89E3\uFF0C\u5177\u4F53\u770B"),n("a",S,[s("Spring\u6838\u5FC3\u4E4B\u63A7\u5236\u53CD\u8F6C(IOC)\u6E90\u7801\u89E3\u6790"),t(a)])]),x,n("p",null,[n("a",T,[R,t(a)])])])}const j=p(i,[["render",D],["__file","springboot-x-task-spring-task-timer.html.vue"]]);export{j as default};
