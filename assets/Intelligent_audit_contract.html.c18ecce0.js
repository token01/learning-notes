const l=JSON.parse('{"key":"v-2e84af65","path":"/blockchain/Smart_contract%20/Intelligent_audit_contract.html","title":"智能合约审计","lang":"zh-CN","frontmatter":{"summary":"智能合约审计 常见漏洞 以下总结的常见漏洞基本涵盖一般的漏洞类型，部分内容可能过于细致，或许有更加合理的分类方法。不过，应该能给大家提供一定的参考。 整数溢出 注意，Solidity 0.8.0 开始，加入了自动检查溢出，此版本之后的合约，可不必担心这个漏洞。 下面用 Beauty Chain 的例子说明，源码在这里，可见如下： 从区块链浏览器将代码复制到 ","head":[["meta",{"property":"og:url","content":"https://newzone.top/blockchain/Smart_contract%20/Intelligent_audit_contract.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源笔记"}],["meta",{"property":"og:title","content":"智能合约审计"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T07:08:02.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-09T07:08:02.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"常见漏洞","slug":"常见漏洞","link":"#常见漏洞","children":[{"level":3,"title":"整数溢出","slug":"整数溢出","link":"#整数溢出","children":[]},{"level":3,"title":"重入攻击","slug":"重入攻击","link":"#重入攻击","children":[]},{"level":3,"title":"payable 函数导致合约余额更新","slug":"payable-函数导致合约余额更新","link":"#payable-函数导致合约余额更新","children":[]},{"level":3,"title":"tx.origin","slug":"tx-origin","link":"#tx-origin","children":[]},{"level":3,"title":"短地址攻击","slug":"短地址攻击","link":"#短地址攻击","children":[]},{"level":3,"title":"挖矿属性依赖","slug":"挖矿属性依赖","link":"#挖矿属性依赖","children":[]},{"level":3,"title":"合约余额依赖","slug":"合约余额依赖","link":"#合约余额依赖","children":[]},{"level":3,"title":"数据私有属性的误解","slug":"数据私有属性的误解","link":"#数据私有属性的误解","children":[]},{"level":3,"title":"delegatecall","slug":"delegatecall","link":"#delegatecall","children":[]},{"level":3,"title":"拒绝服务攻击","slug":"拒绝服务攻击","link":"#拒绝服务攻击","children":[]},{"level":3,"title":"交易顺序依赖","slug":"交易顺序依赖","link":"#交易顺序依赖","children":[]},{"level":3,"title":"使用未初始化的内存","slug":"使用未初始化的内存","link":"#使用未初始化的内存","children":[]},{"level":3,"title":"权限设置不当","slug":"权限设置不当","link":"#权限设置不当","children":[]},{"level":3,"title":"合约实例偷换地址","slug":"合约实例偷换地址","link":"#合约实例偷换地址","children":[]},{"level":3,"title":"未检查底层调用结果","slug":"未检查底层调用结果","link":"#未检查底层调用结果","children":[]},{"level":3,"title":"签名重放","slug":"签名重放","link":"#签名重放","children":[]}]},{"level":2,"title":"开源审计工具","slug":"开源审计工具","link":"#开源审计工具","children":[{"level":3,"title":"mythril","slug":"mythril","link":"#mythril","children":[]},{"level":3,"title":"echidna","slug":"echidna","link":"#echidna","children":[]},{"level":3,"title":"Slither","slug":"slither","link":"#slither","children":[]},{"level":3,"title":"manticore","slug":"manticore","link":"#manticore","children":[]},{"level":3,"title":"scribble","slug":"scribble","link":"#scribble","children":[]},{"level":3,"title":"Legions","slug":"legions","link":"#legions","children":[]},{"level":3,"title":"vscode-solidity-auditor","slug":"vscode-solidity-auditor","link":"#vscode-solidity-auditor","children":[]}]},{"level":2,"title":"安全实践","slug":"安全实践","link":"#安全实践","children":[{"level":3,"title":"了解常见的安全漏洞","slug":"了解常见的安全漏洞","link":"#了解常见的安全漏洞","children":[]},{"level":3,"title":"学会使用安全工具","slug":"学会使用安全工具","link":"#学会使用安全工具","children":[]},{"level":3,"title":"使用开源的合约库","slug":"使用开源的合约库","link":"#使用开源的合约库","children":[]}]},{"level":2,"title":"深入字节码分析","slug":"深入字节码分析","link":"#深入字节码分析","children":[]},{"level":2,"title":"合约优化","slug":"合约优化","link":"#合约优化","children":[]},{"level":2,"title":"参考：","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1670415083000,"updatedTime":1670569682000,"contributors":[{"name":"Kong Ming(空明)","email":"token01@126.com","commits":3}]},"readingTime":{"minutes":17.6,"words":5279},"filePathRelative":"blockchain/Smart_contract /Intelligent_audit_contract.md","localizedDate":"2022年12月7日"}');export{l as data};
