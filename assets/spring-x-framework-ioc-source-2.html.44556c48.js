import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as e,a as n,d as p,f as o,r as c}from"./app.c33d508b.js";const i={},l=o(`<h1 id="spring\u8FDB\u9636-spring-ioc\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bioc\u521D\u59CB\u5316\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#spring\u8FDB\u9636-spring-ioc\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bioc\u521D\u59CB\u5316\u6D41\u7A0B" aria-hidden="true">#</a> Spring\u8FDB\u9636 - Spring IOC\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BIOC\u521D\u59CB\u5316\u6D41\u7A0B</h1><blockquote><p>\u4E0A\u6587\uFF0C\u6211\u4EEC\u770B\u4E86IOC\u8BBE\u8BA1\u8981\u70B9\u548C\u8BBE\u8BA1\u7ED3\u6784\uFF1B\u7D27\u63A5\u7740\u8FD9\u7BC7\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u4E0B\u6E90\u7801\u7684\u5B9E\u73B0\u4E86\uFF1ASpring\u5982\u4F55\u5B9E\u73B0\u5C06\u8D44\u6E90\u914D\u7F6E\uFF08\u4EE5xml\u914D\u7F6E\u4E3A\u4F8B\uFF09\u901A\u8FC7\u52A0\u8F7D\uFF0C\u89E3\u6790\uFF0C\u751F\u6210BeanDefination\u5E76\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\u7684</p></blockquote><h2 id="_1-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165" aria-hidden="true">#</a> 1. \u5F15\u5165</h2><p>\u4E0A\u6587\uFF0C\u6211\u4EEC\u770B\u4E86IOC\u8BBE\u8BA1\u8981\u70B9\u548C\u8BBE\u8BA1\u7ED3\u6784\uFF1B\u7D27\u63A5\u7740\u8FD9\u7BC7\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u4E0B\u6E90\u7801\u7684\u5B9E\u73B0\u4E86\uFF1ASpring\u5982\u4F55\u5B9E\u73B0\u5C06\u8D44\u6E90\u914D\u7F6E\uFF08\u4EE5xml\u914D\u7F6E\u4E3A\u4F8B\uFF09\u901A\u8FC7\u52A0\u8F7D\uFF0C\u89E3\u6790\uFF0C\u751F\u6210BeanDefination\u5E76\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\u7684\uFF08\u5C31\u662F\u6211\u4EEC\u5708\u51FA\u6765\u7684\u90E8\u5206\uFF09</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220711215020687.png" alt="image-20220711215020687"></p><h2 id="_2-\u5982\u4F55\u5C06bean\u4ECExml\u914D\u7F6E\u4E2D\u89E3\u6790\u540E\u653E\u5230ioc\u5BB9\u5668\u4E2D\u7684" tabindex="-1"><a class="header-anchor" href="#_2-\u5982\u4F55\u5C06bean\u4ECExml\u914D\u7F6E\u4E2D\u89E3\u6790\u540E\u653E\u5230ioc\u5BB9\u5668\u4E2D\u7684" aria-hidden="true">#</a> 2. \u5982\u4F55\u5C06Bean\u4ECEXML\u914D\u7F6E\u4E2D\u89E3\u6790\u540E\u653E\u5230IoC\u5BB9\u5668\u4E2D\u7684\uFF1F</h2><blockquote><p>\u672C\u6587\u7684\u76EE\u6807\u5C31\u662F\u5206\u6790Spring\u5982\u4F55\u5B9E\u73B0\u5C06\u8D44\u6E90\u914D\u7F6E\uFF08\u4EE5xml\u914D\u7F6E\u4E3A\u4F8B\uFF09\u901A\u8FC7\u52A0\u8F7D\uFF0C\u89E3\u6790\uFF0C\u751F\u6210BeanDefination\u5E76\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\u7684\u3002</p></blockquote><h3 id="_2-1-\u521D\u59CB\u5316\u7684\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#_2-1-\u521D\u59CB\u5316\u7684\u5165\u53E3" aria-hidden="true">#</a> 2.1 \u521D\u59CB\u5316\u7684\u5165\u53E3</h3><p>\u5BF9\u4E8Exml\u914D\u7F6E\u7684Spring\u5E94\u7528\uFF0C\u5728main()\u65B9\u6CD5\u4E2D\u5B9E\u4F8B\u5316ClasspathXmlApplicationContext\u5373\u53EF\u521B\u5EFA\u4E00\u4E2AIoC\u5BB9\u5668\u3002\u6211\u4EEC\u53EF\u4EE5\u4ECE\u8FD9\u4E2A\u6784\u9020\u65B9\u6CD5\u5F00\u59CB\uFF0C\u63A2\u7A76\u4E00\u4E0BIoC\u5BB9\u5668\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">// create and configure beans</span>
<span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;aspects.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;daos.xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;services.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> configLocations<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations<span class="token punctuation">,</span> <span class="token keyword">boolean</span> refresh<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BBE\u7F6EBean\u8D44\u6E90\u52A0\u8F7D\u5668</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BBE\u7F6E\u914D\u7F6E\u8DEF\u5F84</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setConfigLocations</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521D\u59CB\u5316\u5BB9\u5668</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>refresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u8BBE\u7F6E\u8D44\u6E90\u89E3\u6790\u5668\u548C\u73AF\u5883" tabindex="-1"><a class="header-anchor" href="#_2-2-\u8BBE\u7F6E\u8D44\u6E90\u89E3\u6790\u5668\u548C\u73AF\u5883" aria-hidden="true">#</a> 2.2 \u8BBE\u7F6E\u8D44\u6E90\u89E3\u6790\u5668\u548C\u73AF\u5883</h3><p>\u8C03\u7528\u7236\u7C7B\u5BB9\u5668AbstractApplicationContext\u7684\u6784\u9020\u65B9\u6CD5(<code>super(parent)</code>\u65B9\u6CD5)\u4E3A\u5BB9\u5668\u8BBE\u7F6E\u597DBean\u8D44\u6E90\u52A0\u8F7D\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AbstractApplicationContext</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9ED8\u8BA4\u6784\u9020\u51FD\u6570\u521D\u59CB\u5316\u5BB9\u5668id, name, \u72B6\u6001 \u4EE5\u53CA \u8D44\u6E90\u89E3\u6790\u5668</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u7236\u5BB9\u5668\u7684Environment\u5408\u5E76\u5230\u5F53\u524D\u5BB9\u5668</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7AbstractApplicationContext\u9ED8\u8BA4\u6784\u9020\u51FD\u6570\u521D\u59CB\u5316\u5BB9\u5668id, name, \u72B6\u6001 \u4EE5\u53CA \u8D44\u6E90\u89E3\u6790\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">AbstractApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">identityToString</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>displayName <span class="token operator">=</span> <span class="token class-name">ObjectUtils</span><span class="token punctuation">.</span><span class="token function">identityToString</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactoryPostProcessors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>closed <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup <span class="token operator">=</span> <span class="token class-name">ApplicationStartup</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>applicationListeners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resourcePatternResolver <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Spring\u8D44\u6E90\u52A0\u8F7D\u5668</span>
<span class="token keyword">protected</span> <span class="token class-name">ResourcePatternResolver</span> <span class="token function">getResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7AbstractApplicationContext\u7684<code>setParent(parent)</code>\u65B9\u6CD5\u5C06\u7236\u5BB9\u5668\u7684Environment\u5408\u5E76\u5230\u5F53\u524D\u5BB9\u5668</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParent</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ApplicationContext</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Environment</span> parentEnvironment <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parentEnvironment <span class="token keyword">instanceof</span> <span class="token class-name">ConfigurableEnvironment</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span><span class="token punctuation">)</span>parentEnvironment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u8BBE\u7F6E\u914D\u7F6E\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#_2-3-\u8BBE\u7F6E\u914D\u7F6E\u8DEF\u5F84" aria-hidden="true">#</a> 2.3 \u8BBE\u7F6E\u914D\u7F6E\u8DEF\u5F84</h3><p>\u5728\u8BBE\u7F6E\u5BB9\u5668\u7684\u8D44\u6E90\u52A0\u8F7D\u5668\u4E4B\u540E\uFF0C\u63A5\u4E0B\u6765FileSystemXmlApplicationContext\u6267\u884CsetConfigLocations\u65B9\u6CD5\u901A\u8FC7\u8C03\u7528\u5176\u7236\u7C7BAbstractRefreshableConfigApplicationContext\u7684\u65B9\u6CD5\u8FDB\u884C\u5BF9Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u7684\u5B9A\u4F4D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setConfigLocations</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> locations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>locations <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">noNullElements</span><span class="token punctuation">(</span>locations<span class="token punctuation">,</span> <span class="token string">&quot;Config locations must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configLocations <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>locations<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> locations<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u89E3\u6790\u914D\u7F6E\u8DEF\u5F84</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>configLocations<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolvePath</span><span class="token punctuation">(</span>locations<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>configLocations <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">resolvePath</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4ECE\u4E0A\u4E00\u6B65Environment\u4E2D\u89E3\u6790</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveRequiredPlaceholders</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u521D\u59CB\u5316\u7684\u4E3B\u4F53\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_2-4-\u521D\u59CB\u5316\u7684\u4E3B\u4F53\u6D41\u7A0B" aria-hidden="true">#</a> 2.4 \u521D\u59CB\u5316\u7684\u4E3B\u4F53\u6D41\u7A0B</h3><p>Spring IoC\u5BB9\u5668\u5BF9Bean\u5B9A\u4E49\u8D44\u6E90\u7684\u8F7D\u5165\u662F\u4ECErefresh()\u51FD\u6570\u5F00\u59CB\u7684\uFF0Crefresh()\u662F\u4E00\u4E2A\u6A21\u677F\u65B9\u6CD5\uFF0Crefresh()\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\uFF1A\u5728\u521B\u5EFAIoC\u5BB9\u5668\u524D\uFF0C\u5982\u679C\u5DF2\u7ECF\u6709\u5BB9\u5668\u5B58\u5728\uFF0C\u5219\u9700\u8981\u628A\u5DF2\u6709\u7684\u5BB9\u5668\u9500\u6BC1\u548C\u5173\u95ED\uFF0C\u4EE5\u4FDD\u8BC1\u5728refresh\u4E4B\u540E\u4F7F\u7528\u7684\u662F\u65B0\u5EFA\u7ACB\u8D77\u6765\u7684IoC\u5BB9\u5668\u3002refresh\u7684\u4F5C\u7528\u7C7B\u4F3C\u4E8E\u5BF9IoC\u5BB9\u5668\u7684\u91CD\u542F\uFF0C\u5728\u65B0\u5EFA\u7ACB\u597D\u7684\u5BB9\u5668\u4E2D\u5BF9\u5BB9\u5668\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5BF9Bean\u5B9A\u4E49\u8D44\u6E90\u8FDB\u884C\u8F7D\u5165\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalStateException</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>startupShutdownMonitor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StartupStep</span> contextRefresh <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.context.refresh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Prepare this context for refreshing.</span>
        <span class="token function">prepareRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Tell the subclass to refresh the internal bean factory.</span>
        <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Prepare the bean factory for use in this context.</span>
        <span class="token function">prepareBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// Allows post-processing of the bean factory in context subclasses.</span>
            <span class="token function">postProcessBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">StartupStep</span> beanPostProcess <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>applicationStartup<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token string">&quot;spring.context.beans.post-process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Invoke factory processors registered as beans in the context.</span>
            <span class="token function">invokeBeanFactoryPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Register bean processors that intercept bean creation.</span>
            <span class="token function">registerBeanPostProcessors</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            beanPostProcess<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Initialize message source for this context.</span>
            <span class="token function">initMessageSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Initialize event multicaster for this context.</span>
            <span class="token function">initApplicationEventMulticaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Initialize other special beans in specific context subclasses.</span>
            <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Check for listener beans and register them.</span>
            <span class="token function">registerListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Instantiate all remaining (non-lazy-init) singletons.</span>
            <span class="token function">finishBeanFactoryInitialization</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Last step: publish corresponding event.</span>
            <span class="token function">finishRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeansException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isWarnEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Exception encountered during context initialization - &quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;cancelling refresh attempt: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// Destroy already created singletons to avoid dangling resources.</span>
            <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Reset &#39;active&#39; flag.</span>
            <span class="token function">cancelRefresh</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Propagate exception to caller.</span>
            <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">// Reset common introspection caches in Spring&#39;s core, since we</span>
            <span class="token comment">// might not ever need metadata for singleton beans anymore...</span>
            <span class="token function">resetCommonCaches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            contextRefresh<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684\u8BBE\u8BA1\u4E0A\u662F\u4E00\u4E2A\u975E\u5E38\u5178\u578B\u7684\u8D44\u6E90\u7C7B\u52A0\u8F7D\u5904\u7406\u578B\u7684\u601D\u8DEF\uFF0C\u5934\u8111\u4E2D\u9700\u8981\u5F62\u6210\u5982\u4E0B\u56FE\u7684<strong>\u9876\u5C42\u601D\u8DEF</strong>\uFF08\u800C\u4E0D\u662F\u53EA\u505C\u7559\u5728\u6D41\u6C34\u5F0F\u7684\u65B9\u6CD5\u4E0A\u9762\uFF09\uFF1A</p><ul><li><strong>\u6A21\u677F\u65B9\u6CD5\u8BBE\u8BA1\u6A21\u5F0F</strong>\uFF0C\u6A21\u677F\u65B9\u6CD5\u4E2D\u4F7F\u7528\u5178\u578B\u7684<strong>\u94A9\u5B50\u65B9\u6CD5</strong></li><li>\u5C06<strong>\u5177\u4F53\u7684\u521D\u59CB\u5316\u52A0\u8F7D\u65B9\u6CD5</strong>\u63D2\u5165\u5230\u94A9\u5B50\u65B9\u6CD5\u4E4B\u95F4</li><li>\u5C06\u521D\u59CB\u5316\u7684\u9636\u6BB5\u5C01\u88C5\uFF0C\u7528\u6765\u8BB0\u5F55\u5F53\u524D\u521D\u59CB\u5316\u5230\u4EC0\u4E48\u9636\u6BB5\uFF1B\u5E38\u89C1\u7684\u8BBE\u8BA1\u662FxxxPhase/xxxStage\uFF1B</li><li>\u8D44\u6E90\u52A0\u8F7D\u521D\u59CB\u5316\u6709\u5931\u8D25\u7B49\u5904\u7406\uFF0C\u5FC5\u7136\u662F<strong>try/catch/finally</strong>...</li></ul><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220711220055068.png" alt="image-20220711220055068"></p><h4 id="_2-4-1-\u521D\u59CB\u5316beanfactory\u4E4Bobtainfreshbeanfactory" tabindex="-1"><a class="header-anchor" href="#_2-4-1-\u521D\u59CB\u5316beanfactory\u4E4Bobtainfreshbeanfactory" aria-hidden="true">#</a> 2.4.1 \u521D\u59CB\u5316BeanFactory\u4E4BobtainFreshBeanFactory</h4><p>AbstractApplicationContext\u7684obtainFreshBeanFactory()\u65B9\u6CD5\u8C03\u7528\u5B50\u7C7B\u5BB9\u5668\u7684refreshBeanFactory()\u65B9\u6CD5\uFF0C\u542F\u52A8\u5BB9\u5668\u8F7D\u5165Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u7684\u8FC7\u7A0B\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">obtainFreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528\u4E86\u59D4\u6D3E\u8BBE\u8BA1\u6A21\u5F0F\uFF0C\u7236\u7C7B\u5B9A\u4E49\u4E86\u62BD\u8C61\u7684refreshBeanFactory()\u65B9\u6CD5\uFF0C\u5177\u4F53\u5B9E\u73B0\u8C03\u7528\u5B50\u7C7B\u5BB9\u5668\u7684refreshBeanFactory()\u65B9\u6CD5</span>
    <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractApplicationContext\u7C7B\u4E2D\u53EA\u62BD\u8C61\u5B9A\u4E49\u4E86refreshBeanFactory()\u65B9\u6CD5\uFF0C\u5BB9\u5668\u771F\u6B63\u8C03\u7528\u7684\u662F\u5176\u5B50\u7C7BAbstractRefreshableApplicationContext\u5B9E\u73B0\u7684refreshBeanFactory()\u65B9\u6CD5; \u5728\u521B\u5EFAIoC\u5BB9\u5668\u524D\uFF0C\u5982\u679C\u5DF2\u7ECF\u6709\u5BB9\u5668\u5B58\u5728\uFF0C\u5219\u9700\u8981\u628A\u5DF2\u6709\u7684\u5BB9\u5668\u9500\u6BC1\u548C\u5173\u95ED\uFF0C\u4EE5\u4FDD\u8BC1\u5728refresh\u4E4B\u540E\u4F7F\u7528\u7684\u662F\u65B0\u5EFA\u7ACB\u8D77\u6765\u7684IoC\u5BB9\u5668\u3002\u65B9\u6CD5\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">refreshBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6709\u5BB9\u5668\u5B58\u5728\uFF0C\u5219\u9700\u8981\u628A\u5DF2\u6709\u7684\u5BB9\u5668\u9500\u6BC1\u548C\u5173\u95ED\uFF0C\u4EE5\u4FDD\u8BC1\u5728refresh\u4E4B\u540E\u4F7F\u7528\u7684\u662F\u65B0\u5EFA\u7ACB\u8D77\u6765\u7684IoC\u5BB9\u5668</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">destroyBeans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">closeBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521B\u5EFADefaultListableBeanFactory\uFF0C\u5E76\u8C03\u7528loadBeanDefinitions(beanFactory)\u88C5\u8F7Dbean\u5B9A\u4E49</span>
        <span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token function">createBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        beanFactory<span class="token punctuation">.</span><span class="token function">setSerializationId</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">customizeBeanFactory</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5BF9IoC\u5BB9\u5668\u8FDB\u884C\u5B9A\u5236\u5316\uFF0C\u5982\u8BBE\u7F6E\u542F\u52A8\u53C2\u6570\uFF0C\u5F00\u542F\u6CE8\u89E3\u7684\u81EA\u52A8\u88C5\u914D\u7B49 </span>
        <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8C03\u7528\u8F7D\u5165Bean\u5B9A\u4E49\u7684\u65B9\u6CD5\uFF0C\u4E3B\u8981\u8FD9\u91CC\u53C8\u4F7F\u7528\u4E86\u4E00\u4E2A\u59D4\u6D3E\u6A21\u5F0F\uFF0C\u5728\u5F53\u524D\u7C7B\u4E2D\u53EA\u5B9A\u4E49\u4E86\u62BD\u8C61\u7684loadBeanDefinitions\u65B9\u6CD5\uFF0C\u5177\u4F53\u7684\u5B9E\u73B0\u8C03\u7528\u5B50\u7C7B\u5BB9\u5668  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">=</span> beanFactory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ApplicationContextException</span><span class="token punctuation">(</span><span class="token string">&quot;I/O error parsing bean definition source for &quot;</span> <span class="token operator">+</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-2-\u521D\u59CB\u5316beanfactory\u4E4Bloadbeandefinitions" tabindex="-1"><a class="header-anchor" href="#_2-4-2-\u521D\u59CB\u5316beanfactory\u4E4Bloadbeandefinitions" aria-hidden="true">#</a> 2.4.2 \u521D\u59CB\u5316BeanFactory\u4E4BloadBeanDefinitions</h4><p>AbstractRefreshableApplicationContext\u4E2D\u53EA\u5B9A\u4E49\u4E86\u62BD\u8C61\u7684loadBeanDefinitions\u65B9\u6CD5\uFF0C\u5BB9\u5668\u771F\u6B63\u8C03\u7528\u7684\u662F\u5176\u5B50\u7C7BAbstractXmlApplicationContext\u5BF9\u8BE5\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0CAbstractXmlApplicationContext\u7684\u4E3B\u8981\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFAXmlBeanDefinitionReader\uFF0C\u5373\u521B\u5EFABean\u8BFB\u53D6\u5668\uFF0C\u5E76\u901A\u8FC7\u56DE\u8C03\u8BBE\u7F6E\u5230\u5BB9\u5668\u4E2D\u53BB\uFF0C\u5BB9\u5668\u4F7F\u7528\u8BE5\u8BFB\u53D6\u5668\u8BFB\u53D6Bean\u5B9A\u4E49\u8D44\u6E90  </span>
    <span class="token class-name">XmlBeanDefinitionReader</span> beanDefinitionReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionReader</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u914D\u7F6E\u4E0A\u4E0B\u6587\u7684\u73AF\u5883\uFF0C\u8D44\u6E90\u52A0\u8F7D\u5668\u3001\u89E3\u6790\u5668</span>
    beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEnvironment</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setResourceLoader</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    beanDefinitionReader<span class="token punctuation">.</span><span class="token function">setEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceEntityResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E3ABean\u8BFB\u53D6\u5668\u8BBE\u7F6ESAX xml\u89E3\u6790\u5668</span>

    <span class="token comment">// \u5141\u8BB8\u5B50\u7C7B\u81EA\u884C\u521D\u59CB\u5316\uFF08\u6BD4\u5982\u6821\u9A8C\u673A\u5236\uFF09\uFF0C\u5E76\u63D0\u4F9B\u771F\u6B63\u7684\u52A0\u8F7D\u65B9\u6CD5</span>
    <span class="token function">initBeanDefinitionReader</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53Bean\u8BFB\u53D6\u5668\u8BFB\u53D6Bean\u5B9A\u4E49\u7684Xml\u8D44\u6E90\u6587\u4EF6\u65F6\uFF0C\u542F\u7528Xml\u7684\u6821\u9A8C\u673A\u5236  </span>
    <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>beanDefinitionReader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">XmlBeanDefinitionReader</span> reader<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u52A0\u8F7DXML\u914D\u7F6E\u65B9\u5F0F\u91CC\u7684Bean\u5B9A\u4E49\u7684\u8D44\u6E90</span>
    <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configResources <span class="token operator">=</span> <span class="token function">getConfigResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>configResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configResources<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u52A0\u8F7D\u6784\u9020\u51FD\u6570\u91CC\u914D\u7F6E\u7684Bean\u914D\u7F6E\u6587\u4EF6\uFF0C\u5373{&quot;aspects.xml&quot;, &quot;daos.xml&quot;, &quot;services.xml&quot;}</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configLocations <span class="token operator">=</span> <span class="token function">getConfigLocations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>configLocations <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reader<span class="token punctuation">.</span><span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>configLocations<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Xml Bean\u8BFB\u53D6\u5668(XmlBeanDefinitionReader)\u8C03\u7528\u5176\u7236\u7C7BAbstractBeanDefinitionReader\u7684 reader.loadBeanDefinitions\u65B9\u6CD5\u8BFB\u53D6Bean\u5B9A\u4E49\u8D44\u6E90\u3002</p><p>\u7531\u4E8E\u6211\u4EEC\u4F7F\u7528ClassPathXmlApplicationContext\u4F5C\u4E3A\u4F8B\u5B50\u5206\u6790\uFF0C\u56E0\u6B64getConfigResources\u7684\u8FD4\u56DE\u503C\u4E3Anull\uFF0C\u56E0\u6B64\u7A0B\u5E8F\u6267\u884Creader.loadBeanDefinitions(configLocations)\u5206\u652F\u3002</p><h4 id="_2-4-3-abstractbeandefinitionreader\u8BFB\u53D6bean\u5B9A\u4E49\u8D44\u6E90" tabindex="-1"><a class="header-anchor" href="#_2-4-3-abstractbeandefinitionreader\u8BFB\u53D6bean\u5B9A\u4E49\u8D44\u6E90" aria-hidden="true">#</a> 2.4.3 AbstractBeanDefinitionReader\u8BFB\u53D6Bean\u5B9A\u4E49\u8D44\u6E90</h4><p>AbstractBeanDefinitionReader\u7684loadBeanDefinitions\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Resource</span><span class="token punctuation">&gt;</span></span> actualResources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ResourceLoader</span> resourceLoader <span class="token operator">=</span> <span class="token function">getResourceLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resourceLoader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Cannot load bean definitions from location [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]: no ResourceLoader available&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6A21\u5F0F\u5339\u914D\u7C7B\u578B\u7684\u89E3\u6790\u5668\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u662F\u52A0\u8F7D\u591A\u4E2A\u6EE1\u8DB3\u5339\u914D\u6761\u4EF6\u7684\u8D44\u6E90</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resourceLoader <span class="token keyword">instanceof</span> <span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6\u5230\u8981\u52A0\u8F7D\u7684\u8D44\u6E90</span>
            <span class="token class-name">Resource</span><span class="token punctuation">[</span><span class="token punctuation">]</span> resources <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResourcePatternResolver</span><span class="token punctuation">)</span> resourceLoader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resources<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u59D4\u6D3E\u8C03\u7528\u5176\u5B50\u7C7BXmlBeanDefinitionReader\u7684\u65B9\u6CD5\uFF0C\u5B9E\u73B0\u52A0\u8F7D\u529F\u80FD  </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>actualResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>actualResources<span class="token punctuation">,</span> resources<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from location pattern [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> count<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Could not resolve bean definition resource pattern [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u80FD\u901A\u8FC7\u7EDD\u5BF9\u8DEF\u5F84URL\u52A0\u8F7D\u5355\u4E2A\u8D44\u6E90.</span>
        <span class="token class-name">Resource</span> resource <span class="token operator">=</span> resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">loadBeanDefinitions</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actualResources <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            actualResources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from location [&quot;</span> <span class="token operator">+</span> location <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u5BF9AbstractBeanDefinitionReader\u7684loadBeanDefinitions\u65B9\u6CD5\u6E90\u7801\u5206\u6790\u53EF\u4EE5\u770B\u51FA\u8BE5\u65B9\u6CD5\u505A\u4E86\u4EE5\u4E0B\u4E24\u4EF6\u4E8B\uFF1A</p><ul><li>\u9996\u5148\uFF0C\u8C03\u7528\u8D44\u6E90\u52A0\u8F7D\u5668\u7684\u83B7\u53D6\u8D44\u6E90\u65B9\u6CD5resourceLoader.getResource(location)\uFF0C\u83B7\u53D6\u5230\u8981\u52A0\u8F7D\u7684\u8D44\u6E90\u3002</li><li>\u5176\u6B21\uFF0C\u771F\u6B63\u6267\u884C\u52A0\u8F7D\u529F\u80FD\u662F\u5176\u5B50\u7C7BXmlBeanDefinitionReader\u7684loadBeanDefinitions\u65B9\u6CD5\u3002</li></ul><h4 id="_2-4-4-xmlbeandefinitionreader\u52A0\u8F7Dbean\u5B9A\u4E49\u8D44\u6E90" tabindex="-1"><a class="header-anchor" href="#_2-4-4-xmlbeandefinitionreader\u52A0\u8F7Dbean\u5B9A\u4E49\u8D44\u6E90" aria-hidden="true">#</a> 2.4.4 XmlBeanDefinitionReader\u52A0\u8F7DBean\u5B9A\u4E49\u8D44\u6E90</h4><p>\u7EE7\u7EED\u770B\u5B50\u7C7BXmlBeanDefinitionReader\u7684loadBeanDefinitions(Resource \u2026)\u65B9\u6CD5\u770B\u5230\u4EE3\u8868bean\u6587\u4EF6\u7684\u8D44\u6E90\u5B9A\u4E49\u4EE5\u540E\u7684\u8F7D\u5165\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * \u672C\u8D28\u4E0A\u662F\u52A0\u8F7DXML\u914D\u7F6E\u7684Bean\u3002
    * <span class="token keyword">@param</span> <span class="token parameter">inputSource</span> the SAX InputSource to read from
    * <span class="token keyword">@param</span> <span class="token parameter">resource</span> the resource descriptor for the XML file
    */</span>
<span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">doLoadBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token function">doLoadDocument</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u6210Document\u5BF9\u8C61</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Loaded &quot;</span> <span class="token operator">+</span> count <span class="token operator">+</span> <span class="token string">&quot; bean definitions from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SAXParseException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;Line &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getLineNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; in XML document from &quot;</span> <span class="token operator">+</span> resource <span class="token operator">+</span> <span class="token string">&quot; is invalid&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SAXException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">XmlBeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;XML document from &quot;</span> <span class="token operator">+</span> resource <span class="token operator">+</span> <span class="token string">&quot; is invalid&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParserConfigurationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;Parser configuration exception parsing XML from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;IOException parsing XML document from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;Unexpected exception parsing XML document from &quot;</span> <span class="token operator">+</span> resource<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u914D\u7F6E\u7684DocumentLoader\u52A0\u8F7DXML\u5B9A\u4E49\u6587\u4EF6\u4E3ADocument.</span>
<span class="token keyword">protected</span> <span class="token class-name">Document</span> <span class="token function">doLoadDocument</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>documentLoader<span class="token punctuation">.</span><span class="token function">loadDocument</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">,</span> <span class="token function">getEntityResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>errorHandler<span class="token punctuation">,</span>
            <span class="token function">getValidationModeForResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">isNamespaceAware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u6E90\u7801\u5206\u6790\uFF0C\u8F7D\u5165Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u7684\u6700\u540E\u4E00\u6B65\u662F\u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u4E3ADocument\u5BF9\u8C61\uFF0C\u8BE5\u8FC7\u7A0B\u7531documentLoader\u5B9E\u73B0</p><h4 id="_2-4-5-documentloader\u5C06bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u4E3Adocument\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_2-4-5-documentloader\u5C06bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u4E3Adocument\u5BF9\u8C61" aria-hidden="true">#</a> 2.4.5 DocumentLoader\u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u4E3ADocument\u5BF9\u8C61</h4><p>DocumentLoader\u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u6210Document\u5BF9\u8C61\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F7F\u7528\u6807\u51C6\u7684JAXP\u5C06\u8F7D\u5165\u7684Bean\u5B9A\u4E49\u8D44\u6E90\u8F6C\u6362\u6210document\u5BF9\u8C61</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Document</span> <span class="token function">loadDocument</span><span class="token punctuation">(</span><span class="token class-name">InputSource</span> inputSource<span class="token punctuation">,</span> <span class="token class-name">EntityResolver</span> entityResolver<span class="token punctuation">,</span>
        <span class="token class-name">ErrorHandler</span> errorHandler<span class="token punctuation">,</span> <span class="token keyword">int</span> validationMode<span class="token punctuation">,</span> <span class="token keyword">boolean</span> namespaceAware<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u521B\u5EFA\u6587\u4EF6\u89E3\u6790\u5668\u5DE5\u5382</span>
    <span class="token class-name">DocumentBuilderFactory</span> factory <span class="token operator">=</span> <span class="token function">createDocumentBuilderFactory</span><span class="token punctuation">(</span>validationMode<span class="token punctuation">,</span> namespaceAware<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Using JAXP provider [&quot;</span> <span class="token operator">+</span> factory<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u6587\u6863\u89E3\u6790\u5668</span>
    <span class="token class-name">DocumentBuilder</span> builder <span class="token operator">=</span> <span class="token function">createDocumentBuilder</span><span class="token punctuation">(</span>factory<span class="token punctuation">,</span> entityResolver<span class="token punctuation">,</span> errorHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>inputSource<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u89E3\u6790</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">DocumentBuilderFactory</span> <span class="token function">createDocumentBuilderFactory</span><span class="token punctuation">(</span><span class="token keyword">int</span> validationMode<span class="token punctuation">,</span> <span class="token keyword">boolean</span> namespaceAware<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ParserConfigurationException</span> <span class="token punctuation">{</span>

    <span class="token class-name">DocumentBuilderFactory</span> factory <span class="token operator">=</span> <span class="token class-name">DocumentBuilderFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    factory<span class="token punctuation">.</span><span class="token function">setNamespaceAware</span><span class="token punctuation">(</span>namespaceAware<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BBE\u7F6E\u89E3\u6790XML\u7684\u6821\u9A8C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>validationMode <span class="token operator">!=</span> <span class="token class-name">XmlValidationModeDetector</span><span class="token punctuation">.</span><span class="token constant">VALIDATION_NONE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        factory<span class="token punctuation">.</span><span class="token function">setValidating</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>validationMode <span class="token operator">==</span> <span class="token class-name">XmlValidationModeDetector</span><span class="token punctuation">.</span><span class="token constant">VALIDATION_XSD</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Enforce namespace aware for XSD...</span>
            factory<span class="token punctuation">.</span><span class="token function">setNamespaceAware</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                factory<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">SCHEMA_LANGUAGE_ATTRIBUTE</span><span class="token punctuation">,</span> <span class="token constant">XSD_SCHEMA_LANGUAGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ParserConfigurationException</span> pcex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParserConfigurationException</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;Unable to validate using XSD: Your JAXP provider [&quot;</span> <span class="token operator">+</span> factory <span class="token operator">+</span>
                        <span class="token string">&quot;] does not support XML Schema. Are you running on Java 1.4 with Apache Crimson? &quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;Upgrade to Apache Xerces (or Java 1.5) for full XSD support.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                pcex<span class="token punctuation">.</span><span class="token function">initCause</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> pcex<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u89E3\u6790\u8FC7\u7A0B\u8C03\u7528JavaEE\u6807\u51C6\u7684JAXP\u6807\u51C6\u8FDB\u884C\u5904\u7406\u3002</p><p>\u81F3\u6B64Spring IoC\u5BB9\u5668\u6839\u636E\u5B9A\u4F4D\u7684Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\uFF0C\u5C06\u5176\u52A0\u8F7D\u8BFB\u5165\u5E76\u8F6C\u6362\u6210\u4E3ADocument\u5BF9\u8C61\u8FC7\u7A0B\u5B8C\u6210\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u8981\u7EE7\u7EED\u5206\u6790Spring IoC\u5BB9\u5668\u5C06\u8F7D\u5165\u7684Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u8F6C\u6362\u4E3ADocument\u5BF9\u8C61\u4E4B\u540E\uFF0C\u662F\u5982\u4F55\u5C06\u5176\u89E3\u6790\u4E3ASpring IoC\u7BA1\u7406\u7684Bean\u5BF9\u8C61\u5E76\u5C06\u5176\u6CE8\u518C\u5230\u5BB9\u5668\u4E2D\u7684\u3002</p><h4 id="_2-4-6-xmlbeandefinitionreader\u89E3\u6790\u8F7D\u5165\u7684bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#_2-4-6-xmlbeandefinitionreader\u89E3\u6790\u8F7D\u5165\u7684bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6" aria-hidden="true">#</a> 2.4.6 XmlBeanDefinitionReader\u89E3\u6790\u8F7D\u5165\u7684Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6</h4><p>XmlBeanDefinitionReader\u7C7B\u4E2D\u7684doLoadBeanDefinitions\u65B9\u6CD5\u662F\u4ECE\u7279\u5B9AXML\u6587\u4EF6\u4E2D\u5B9E\u9645\u8F7D\u5165Bean\u5B9A\u4E49\u8D44\u6E90\u7684\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5728\u8F7D\u5165Bean\u5B9A\u4E49\u8D44\u6E90\u4E4B\u540E\u5C06\u5176\u8F6C\u6362\u4E3ADocument\u5BF9\u8C61\uFF0C\u63A5\u4E0B\u6765\u8C03\u7528registerBeanDefinitions\u542F\u52A8Spring IoC\u5BB9\u5668\u5BF9Bean\u5B9A\u4E49\u7684\u89E3\u6790\u8FC7\u7A0B\uFF0CregisterBeanDefinitions\u65B9\u6CD5\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6309\u7167Spring\u7684Bean\u8BED\u4E49\u8981\u6C42\u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u89E3\u6790\u5E76\u8F6C\u6362\u4E3A\u5BB9\u5668\u5185\u90E8\u6570\u636E\u7ED3\u6784 </span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>
    <span class="token class-name">BeanDefinitionDocumentReader</span> documentReader <span class="token operator">=</span> <span class="token function">createBeanDefinitionDocumentReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> countBefore <span class="token operator">=</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u89E3\u6790\u8FC7\u7A0B\u5165\u53E3\uFF0C\u8FD9\u91CC\u4F7F\u7528\u4E86\u59D4\u6D3E\u6A21\u5F0F\uFF0C\u5177\u4F53\u7684\u89E3\u6790\u5B9E\u73B0\u8FC7\u7A0B\u6709\u5B9E\u73B0\u7C7BDefaultBeanDefinitionDocumentReader\u5B8C\u6210  </span>
    documentReader<span class="token punctuation">.</span><span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token function">createReaderContext</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanDefinitionCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> countBefore<span class="token punctuation">;</span>  <span class="token comment">// \u8FD4\u56DE\u6B64\u6B21\u89E3\u6790\u4E86\u591A\u5C11\u4E2A\u5BF9\u8C61</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFABeanDefinitionDocumentReader\u5BF9\u8C61\uFF0C\u89E3\u6790Document\u5BF9\u8C61  </span>
<span class="token keyword">protected</span> <span class="token class-name">BeanDefinitionDocumentReader</span> <span class="token function">createBeanDefinitionDocumentReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">instantiateClass</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>documentReaderClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
    * Create the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">XmlReaderContext</span></span><span class="token punctuation">}</span> to pass over to the document reader.
    */</span>
<span class="token keyword">public</span> <span class="token class-name">XmlReaderContext</span> <span class="token function">createReaderContext</span><span class="token punctuation">(</span><span class="token class-name">Resource</span> resource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">XmlReaderContext</span><span class="token punctuation">(</span>resource<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>problemReporter<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eventListener<span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>sourceExtractor<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getNamespaceHandlerResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bean\u5B9A\u4E49\u8D44\u6E90\u7684\u8F7D\u5165\u89E3\u6790\u5206\u4E3A\u4EE5\u4E0B\u4E24\u4E2A\u8FC7\u7A0B\uFF1A</p><ul><li>\u9996\u5148\uFF0C\u901A\u8FC7\u8C03\u7528XML\u89E3\u6790\u5668\u5C06Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u8F6C\u6362\u5F97\u5230Document\u5BF9\u8C61\uFF0C\u4F46\u662F\u8FD9\u4E9BDocument\u5BF9\u8C61\u5E76\u6CA1\u6709\u6309\u7167Spring\u7684Bean\u89C4\u5219\u8FDB\u884C\u89E3\u6790\u3002\u8FD9\u4E00\u6B65\u662F\u8F7D\u5165\u7684\u8FC7\u7A0B</li><li>\u5176\u6B21\uFF0C\u5728\u5B8C\u6210\u901A\u7528\u7684XML\u89E3\u6790\u4E4B\u540E\uFF0C\u6309\u7167Spring\u7684Bean\u89C4\u5219\u5BF9Document\u5BF9\u8C61\u8FDB\u884C\u89E3\u6790\u3002</li></ul><p>\u6309\u7167Spring\u7684Bean\u89C4\u5219\u5BF9Document\u5BF9\u8C61\u89E3\u6790\u7684\u8FC7\u7A0B\u662F\u5728\u63A5\u53E3BeanDefinitionDocumentReader\u7684\u5B9E\u73B0\u7C7BDefaultBeanDefinitionDocumentReader\u4E2D\u5B9E\u73B0\u7684\u3002</p><h4 id="_2-4-7-defaultbeandefinitiondocumentreader\u5BF9bean\u5B9A\u4E49\u7684document\u5BF9\u8C61\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_2-4-7-defaultbeandefinitiondocumentreader\u5BF9bean\u5B9A\u4E49\u7684document\u5BF9\u8C61\u89E3\u6790" aria-hidden="true">#</a> 2.4.7 DefaultBeanDefinitionDocumentReader\u5BF9Bean\u5B9A\u4E49\u7684Document\u5BF9\u8C61\u89E3\u6790</h4><p>BeanDefinitionDocumentReader\u63A5\u53E3\u901A\u8FC7registerBeanDefinitions\u65B9\u6CD5\u8C03\u7528\u5176\u5B9E\u73B0\u7C7BDefaultBeanDefinitionDocumentReader\u5BF9Document\u5BF9\u8C61\u8FDB\u884C\u89E3\u6790\uFF0C\u89E3\u6790\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">XmlReaderContext</span> readerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>readerContext <span class="token operator">=</span> readerContext<span class="token punctuation">;</span>
    <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">getDocumentElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CE8\u518C&lt;beans/&gt;\u914D\u7F6E\u7684Beans</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;deprecation&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// for Environment.acceptsProfiles(String...)</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Any nested &lt;beans&gt; elements will cause recursion in this method. In</span>
    <span class="token comment">// order to propagate and preserve &lt;beans&gt; default-* attributes correctly,</span>
    <span class="token comment">// keep track of the current (parent) delegate, which may be null. Create</span>
    <span class="token comment">// the new (child) delegate with a reference to the parent for fallback purposes,</span>
    <span class="token comment">// then ultimately reset this.delegate back to its original (parent) reference.</span>
    <span class="token comment">// this behavior emulates a stack of delegates without actually necessitating one.</span>
    <span class="token class-name">BeanDefinitionParserDelegate</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token function">createDelegate</span><span class="token punctuation">(</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> profileSpec <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">PROFILE_ATTRIBUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>profileSpec<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specifiedProfiles <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">tokenizeToStringArray</span><span class="token punctuation">(</span>
                    profileSpec<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span><span class="token punctuation">.</span><span class="token constant">MULTI_VALUE_ATTRIBUTE_DELIMITERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// We cannot use Profiles.of(...) since profile expressions are not supported</span>
            <span class="token comment">// in XML config. See SPR-12458 for details.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">acceptsProfiles</span><span class="token punctuation">(</span>specifiedProfiles<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Skipped XML bean definition file due to specified profiles [&quot;</span> <span class="token operator">+</span> profileSpec <span class="token operator">+</span>
                            <span class="token string">&quot;] not matching: &quot;</span> <span class="token operator">+</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">preProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECEDocument\u7684\u6839\u5143\u7D20\u5F00\u59CB\u8FDB\u884CBean\u5B9A\u4E49\u7684Document\u5BF9\u8C61  </span>
    <span class="token function">postProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-8-beandefinitionparserdelegate\u89E3\u6790bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u751F\u6210beandefinition" tabindex="-1"><a class="header-anchor" href="#_2-4-8-beandefinitionparserdelegate\u89E3\u6790bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u751F\u6210beandefinition" aria-hidden="true">#</a> 2.4.8 BeanDefinitionParserDelegate\u89E3\u6790Bean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u751F\u6210BeanDefinition</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Parse the elements at the root level in the document:
    * &quot;import&quot;, &quot;alias&quot;, &quot;bean&quot;.
    * <span class="token keyword">@param</span> <span class="token parameter">root</span> the DOM root element of the document
    */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NodeList</span> nl <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nl<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> node <span class="token operator">=</span> nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Element</span> ele <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span> node<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseDefaultElement</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      
    <span class="token comment">// \u5982\u679C\u5143\u7D20\u8282\u70B9\u662F&lt;Import&gt;\u5BFC\u5165\u5143\u7D20\uFF0C\u8FDB\u884C\u5BFC\u5165\u89E3\u6790</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token constant">IMPORT_ELEMENT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">importBeanDefinitionResource</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5143\u7D20\u8282\u70B9\u662F&lt;Alias&gt;\u522B\u540D\u5143\u7D20\uFF0C\u8FDB\u884C\u522B\u540D\u89E3\u6790 </span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token constant">ALIAS_ELEMENT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">processAliasRegistration</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5143\u7D20\u8282\u70B9&lt;Bean&gt;\u5143\u7D20, \u6309\u7167Spring\u7684Bean\u89C4\u5219\u89E3\u6790\u5143\u7D20  </span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token constant">BEAN_ELEMENT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5143\u7D20\u8282\u70B9&lt;Beans&gt;\u5143\u7D20\uFF0C\u5373\u5B83\u662F\u5D4C\u5957\u7C7B\u578B\u7684</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">nodeNameEquals</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> <span class="token constant">NESTED_BEANS_ELEMENT</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u89E3\u6790</span>
        <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6790Bean\u751F\u6210BeanDefinitionHolder\u7684\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Process the given bean element, parsing the bean definition
    * and registering it with the registry.
    */</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">processBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">Element</span> ele<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BeanDefinitionHolder</span> bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">parseBeanDefinitionElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bdHolder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bdHolder <span class="token operator">=</span> delegate<span class="token punctuation">.</span><span class="token function">decorateBeanDefinitionIfRequired</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> bdHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6CE8\u518C\u6700\u7EC8\u7684\u88C5\u9970\u5B9E\u4F8B</span>
            <span class="token class-name">BeanDefinitionReaderUtils</span><span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">,</span> <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionStoreException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to register bean definition with name &#39;&quot;</span> <span class="token operator">+</span>
                    bdHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> ele<span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Send registration event.</span>
        <span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fireComponentRegistered</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BeanComponentDefinition</span><span class="token punctuation">(</span>bdHolder<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uFF08\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u4E86\uFF0C\u65E0\u975E\u5C31\u662F\u89E3\u6790XML\u5404\u79CD\u5143\u7D20\uFF0C\u6765\u751F\u6210BeanDefinition\uFF09</p><h4 id="_2-4-9-\u89E3\u6790\u8FC7\u540E\u7684beandefinition\u5728ioc\u5BB9\u5668\u4E2D\u7684\u6CE8\u518C" tabindex="-1"><a class="header-anchor" href="#_2-4-9-\u89E3\u6790\u8FC7\u540E\u7684beandefinition\u5728ioc\u5BB9\u5668\u4E2D\u7684\u6CE8\u518C" aria-hidden="true">#</a> 2.4.9 \u89E3\u6790\u8FC7\u540E\u7684BeanDefinition\u5728IoC\u5BB9\u5668\u4E2D\u7684\u6CE8\u518C</h4><p>Document\u5BF9\u8C61\u7684\u89E3\u6790\u540E\u5F97\u5230\u5C01\u88C5BeanDefinition\u7684BeanDefinitionHold\u5BF9\u8C61\uFF0C\u7136\u540E\u8C03\u7528BeanDefinitionReaderUtils\u7684registerBeanDefinition\u65B9\u6CD5\u5411IoC\u5BB9\u5668\u6CE8\u518C\u89E3\u6790\u7684Bean\uFF0CBeanDefinitionReaderUtils\u7684\u6CE8\u518C\u7684\u6E90\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u901A\u8FC7BeanDefinitionRegistry\u5C06BeanDefinitionHolder\u6CE8\u518C\u5230BeanFactory</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>
        <span class="token class-name">BeanDefinitionHolder</span> definitionHolder<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

    <span class="token comment">// Register bean definition under primary name.</span>
    <span class="token class-name">String</span> beanName <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    registry<span class="token punctuation">.</span><span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getBeanDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Register aliases for bean name, if any.</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliases <span class="token operator">=</span> definitionHolder<span class="token punctuation">.</span><span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>aliases <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> alias <span class="token operator">:</span> aliases<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            registry<span class="token punctuation">.</span><span class="token function">registerAlias</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> alias<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u8C03\u7528BeanDefinitionReaderUtils\u5411IoC\u5BB9\u5668\u6CE8\u518C\u89E3\u6790\u7684BeanDefinition\u65F6\uFF0C\u771F\u6B63\u5B8C\u6210\u6CE8\u518C\u529F\u80FD\u7684\u662FDefaultListableBeanFactory\u3002</p><h4 id="_2-4-10-defaultlistablebeanfactory\u5411ioc\u5BB9\u5668\u6CE8\u518C\u89E3\u6790\u540E\u7684beandefinition" tabindex="-1"><a class="header-anchor" href="#_2-4-10-defaultlistablebeanfactory\u5411ioc\u5BB9\u5668\u6CE8\u518C\u89E3\u6790\u540E\u7684beandefinition" aria-hidden="true">#</a> 2.4.10 DefaultListableBeanFactory\u5411IoC\u5BB9\u5668\u6CE8\u518C\u89E3\u6790\u540E\u7684BeanDefinition</h4><p>IOC\u5BB9\u5668\u672C\u8D28\u4E0A\u5C31\u662F\u4E00\u4E2AbeanDefinitionMap\uFF0C \u6CE8\u518C\u5373\u5C06BeanDefinition put\u5230map\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** Map of bean definition objects, keyed by bean name. */</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** Map from bean name to merged BeanDefinitionHolder. */</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionHolder</span><span class="token punctuation">&gt;</span></span> mergedBeanDefinitionHolders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerBeanDefinition</span><span class="token punctuation">(</span><span class="token class-name">String</span> beanName<span class="token punctuation">,</span> <span class="token class-name">BeanDefinition</span> beanDefinition<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">BeanDefinitionStoreException</span> <span class="token punctuation">{</span>

    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token string">&quot;Bean name must not be empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> <span class="token string">&quot;BeanDefinition must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>beanDefinition <span class="token keyword">instanceof</span> <span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AbstractBeanDefinition</span><span class="token punctuation">)</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BeanDefinitionValidationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionStoreException</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">.</span><span class="token function">getResourceDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">,</span>
                    <span class="token string">&quot;Validation of bean definition failed&quot;</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">BeanDefinition</span> existingDefinition <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u6CE8\u518C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>existingDefinition <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u8986\u76D6</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAllowBeanDefinitionOverriding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BeanDefinitionOverrideException</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">,</span> existingDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>existingDefinition<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> beanDefinition<span class="token punctuation">.</span><span class="token function">getRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isInfoEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Overriding user-defined bean definition for bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                        <span class="token string">&quot;&#39; with a framework-generated bean definition: replacing [&quot;</span> <span class="token operator">+</span>
                        existingDefinition <span class="token operator">+</span> <span class="token string">&quot;] with [&quot;</span> <span class="token operator">+</span> beanDefinition <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanDefinition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>existingDefinition<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Overriding bean definition for bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                        <span class="token string">&quot;&#39; with a different definition: replacing [&quot;</span> <span class="token operator">+</span> existingDefinition <span class="token operator">+</span>
                        <span class="token string">&quot;] with [&quot;</span> <span class="token operator">+</span> beanDefinition <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Overriding bean definition for bean &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                        <span class="token string">&quot;&#39; with an equivalent definition: replacing [&quot;</span> <span class="token operator">+</span> existingDefinition <span class="token operator">+</span>
                        <span class="token string">&quot;] with [&quot;</span> <span class="token operator">+</span> beanDefinition <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u8986\u76D6</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasBeanCreationStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Cannot modify startup-time collection elements anymore (for stable iteration)</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updatedDefinitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                updatedDefinitions<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
                updatedDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames <span class="token operator">=</span> updatedDefinitions<span class="token punctuation">;</span>
                <span class="token function">removeManualSingletonName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Still in startup registration phase</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> beanDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>beanDefinitionNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">removeManualSingletonName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u91CD\u7F6E\u6240\u6709\u5DF2\u7ECF\u6CE8\u518C\u8FC7\u7684BeanDefinition\u7684\u7F13\u5B58  </span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>frozenBeanDefinitionNames <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>existingDefinition <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token function">containsSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resetBeanDefinition</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isConfigurationFrozen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearByTypeCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0CBean\u5B9A\u4E49\u8D44\u6E90\u6587\u4EF6\u4E2D\u914D\u7F6E\u7684Bean\u88AB\u89E3\u6790\u8FC7\u540E\uFF0C\u5DF2\u7ECF\u6CE8\u518C\u5230IoC\u5BB9\u5668\u4E2D\uFF0C\u88AB\u5BB9\u5668\u7BA1\u7406\u8D77\u6765\uFF0C\u771F\u6B63\u5B8C\u6210\u4E86IoC\u5BB9\u5668\u521D\u59CB\u5316\u6240\u505A\u7684\u5168\u90E8\u5DE5\u4F5C\u3002\u73B0 \u5728IoC\u5BB9\u5668\u4E2D\u5DF2\u7ECF\u5EFA\u7ACB\u4E86\u6574\u4E2ABean\u7684\u914D\u7F6E\u4FE1\u606F\uFF0C\u8FD9\u4E9BBeanDefinition\u4FE1\u606F\u5DF2\u7ECF\u53EF\u4EE5\u4F7F\u7528\uFF0C\u5E76\u4E14\u53EF\u4EE5\u88AB\u68C0\u7D22\uFF0CIoC\u5BB9\u5668\u7684\u4F5C\u7528\u5C31\u662F\u5BF9\u8FD9\u4E9B\u6CE8\u518C\u7684Bean\u5B9A\u4E49\u4FE1\u606F\u8FDB\u884C\u5904\u7406\u548C\u7EF4\u62A4\u3002\u8FD9\u4E9B\u7684\u6CE8\u518C\u7684Bean\u5B9A\u4E49\u4FE1\u606F\u662FIoC\u5BB9\u5668\u63A7\u5236\u53CD\u8F6C\u7684\u57FA\u7840\uFF0C\u6B63\u662F\u6709\u4E86\u8FD9\u4E9B\u6CE8\u518C\u7684\u6570\u636E\uFF0C\u5BB9\u5668\u624D\u53EF\u4EE5\u8FDB\u884C\u4F9D\u8D56\u6CE8\u5165\u3002</p><h2 id="_3-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_3-\u603B\u7ED3" aria-hidden="true">#</a> 3. \u603B\u7ED3</h2><p>\u73B0\u5728\u901A\u8FC7\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u603B\u7ED3\u4E00\u4E0BIOC\u5BB9\u5668\u521D\u59CB\u5316\u7684\u57FA\u672C\u6B65\u9AA4\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220711221826522.png" alt="image-20220711221826522"></p><ul><li>\u521D\u59CB\u5316\u7684\u5165\u53E3\u5728\u5BB9\u5668\u5B9E\u73B0\u4E2D\u7684 refresh()\u8C03\u7528\u6765\u5B8C\u6210</li><li>\u5BF9 bean \u5B9A\u4E49\u8F7D\u5165 IOC \u5BB9\u5668\u4F7F\u7528\u7684\u65B9\u6CD5\u662F loadBeanDefinition,\u5176\u4E2D\u7684\u5927\u81F4\u8FC7\u7A0B\u5982\u4E0B\uFF1A <ul><li>\u901A\u8FC7 ResourceLoader \u6765\u5B8C\u6210\u8D44\u6E90\u6587\u4EF6\u4F4D\u7F6E\u7684\u5B9A\u4F4D\uFF0CDefaultResourceLoader \u662F\u9ED8\u8BA4\u7684\u5B9E\u73B0\uFF0C\u540C\u65F6\u4E0A\u4E0B\u6587\u672C\u8EAB\u5C31\u7ED9\u51FA\u4E86 ResourceLoader \u7684\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u4ECE\u7C7B\u8DEF\u5F84\uFF0C\u6587\u4EF6\u7CFB\u7EDF, URL \u7B49\u65B9\u5F0F\u6765\u5B9A\u4E3A\u8D44\u6E90\u4F4D\u7F6E\u3002\u5982\u679C\u662F XmlBeanFactory\u4F5C\u4E3A IOC \u5BB9\u5668\uFF0C\u90A3\u4E48\u9700\u8981\u4E3A\u5B83\u6307\u5B9A bean \u5B9A\u4E49\u7684\u8D44\u6E90\uFF0C\u4E5F\u5C31\u662F\u8BF4 bean \u5B9A\u4E49\u6587\u4EF6\u65F6\u901A\u8FC7\u62BD\u8C61\u6210 Resource \u6765\u88AB IOC \u5BB9\u5668\u5904\u7406\u7684</li><li>\u901A\u8FC7 BeanDefinitionReader\u6765\u5B8C\u6210\u5B9A\u4E49\u4FE1\u606F\u7684\u89E3\u6790\u548C Bean \u4FE1\u606F\u7684\u6CE8\u518C, \u5F80\u5F80\u4F7F\u7528\u7684\u662FXmlBeanDefinitionReader \u6765\u89E3\u6790 bean \u7684 xml \u5B9A\u4E49\u6587\u4EF6 - \u5B9E\u9645\u7684\u5904\u7406\u8FC7\u7A0B\u662F\u59D4\u6258\u7ED9 BeanDefinitionParserDelegate \u6765\u5B8C\u6210\u7684\uFF0C\u4ECE\u800C\u5F97\u5230 bean \u7684\u5B9A\u4E49\u4FE1\u606F\uFF0C\u8FD9\u4E9B\u4FE1\u606F\u5728 Spring \u4E2D\u4F7F\u7528 BeanDefinition \u5BF9\u8C61\u6765\u8868\u793A - \u8FD9\u4E2A\u540D\u5B57\u53EF\u4EE5\u8BA9\u6211\u4EEC\u60F3\u5230loadBeanDefinition,RegisterBeanDefinition \u8FD9\u4E9B\u76F8\u5173\u7684\u65B9\u6CD5 - \u4ED6\u4EEC\u90FD\u662F\u4E3A\u5904\u7406 BeanDefinitin \u670D\u52A1\u7684</li><li>\u5BB9\u5668\u89E3\u6790\u5F97\u5230 BeanDefinition \u4EE5\u540E\uFF0C\u9700\u8981\u628A\u5B83\u5728 IOC \u5BB9\u5668\u4E2D\u6CE8\u518C\uFF0C\u8FD9\u7531 IOC \u5B9E\u73B0 BeanDefinitionRegistry \u63A5\u53E3\u6765\u5B9E\u73B0\u3002\u6CE8\u518C\u8FC7\u7A0B\u5C31\u662F\u5728 IOC \u5BB9\u5668\u5185\u90E8\u7EF4\u62A4\u7684\u4E00\u4E2AHashMap \u6765\u4FDD\u5B58\u5F97\u5230\u7684 BeanDefinition \u7684\u8FC7\u7A0B\u3002\u8FD9\u4E2A HashMap \u662F IoC \u5BB9\u5668\u6301\u6709 bean \u4FE1\u606F\u7684\u573A\u6240\uFF0C\u4EE5\u540E\u5BF9 bean \u7684\u64CD\u4F5C\u90FD\u662F\u56F4\u7ED5\u8FD9\u4E2AHashMap \u6765\u5B9E\u73B0\u7684.</li></ul></li><li>\u7136\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u901A\u8FC7 BeanFactory \u548C ApplicationContext \u6765\u4EAB\u53D7\u5230 Spring IOC \u7684\u670D\u52A1\u4E86,\u5728\u4F7F\u7528 IOC \u5BB9\u5668\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u6CE8\u610F\u5230\u9664\u4E86\u5C11\u91CF\u7C98\u5408\u4EE3\u7801\uFF0C\u7EDD\u5927\u591A\u6570\u4EE5\u6B63\u786E IoC \u98CE\u683C\u7F16\u5199\u7684\u5E94\u7528\u7A0B\u5E8F\u4EE3\u7801\u5B8C\u5168\u4E0D\u7528\u5173\u5FC3\u5982\u4F55\u5230\u8FBE\u5DE5\u5382\uFF0C\u56E0\u4E3A\u5BB9\u5668\u5C06\u628A\u8FD9\u4E9B\u5BF9\u8C61\u4E0E\u5BB9\u5668\u7BA1\u7406\u7684\u5176\u4ED6\u5BF9\u8C61\u94A9\u5728\u4E00\u8D77\u3002\u57FA\u672C\u7684\u7B56\u7565\u662F\u628A\u5DE5\u5382\u653E\u5230\u5DF2\u77E5\u7684\u5730\u65B9\uFF0C\u6700\u597D\u662F\u653E\u5728\u5BF9\u9884\u671F\u4F7F\u7528\u7684\u4E0A\u4E0B\u6587\u6709\u610F\u4E49\u7684\u5730\u65B9\uFF0C\u4EE5\u53CA\u4EE3\u7801\u5C06\u5B9E\u9645\u9700\u8981\u8BBF\u95EE\u5DE5\u5382\u7684\u5730\u65B9\u3002 Spring \u672C\u8EAB\u63D0\u4F9B\u4E86\u5BF9\u58F0\u660E\u5F0F\u8F7D\u5165 web \u5E94\u7528\u7A0B\u5E8F\u7528\u6CD5\u7684\u5E94\u7528\u7A0B\u5E8F\u4E0A\u4E0B\u6587,\u5E76\u5C06\u5176\u5B58\u50A8\u5728ServletContext \u4E2D\u7684\u6846\u67B6\u5B9E\u73B0\u3002</li></ul><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,79),u={href:"https://pdai.tech/md/spring/spring-x-framework-ioc-source-2.html",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"Spring\u8FDB\u9636- Spring IOC\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BIOC\u521D\u59CB\u5316\u6D41\u7A0B",-1);function r(d,v){const s=c("ExternalLinkIcon");return t(),e("div",null,[l,n("p",null,[n("a",u,[k,p(s)])])])}const f=a(i,[["render",r],["__file","spring-x-framework-ioc-source-2.html.vue"]]);export{f as default};
