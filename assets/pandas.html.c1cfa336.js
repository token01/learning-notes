import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as e,a as n,b as s,d as p,e as c,r as u}from"./app.af6359e2.js";const l={},i=n("h2",{id:"pandas",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pandas","aria-hidden":"true"},"#"),s(" Pandas")],-1),k=n("blockquote",null,[n("p",null,"Pandas 是一个强大的分析结构化数据的工具集，它的使用基础是 Numpy（提供高性能的矩阵运算），用于数据挖掘和数据分析，同时也提供数据清洗功能。")],-1),r=n("h3",{id:"官方",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方","aria-hidden":"true"},"#"),s(" 官方")],-1),d={href:"https://pandas.pydata.org/docs/reference/index.html#api",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/pandas-dev/pandas",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"非官方",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#非官方","aria-hidden":"true"},"#"),s(" 非官方")],-1),b={href:"https://www.gairuo.com/p/pandas-tutorial",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.gairuo.com/p/numpy-tutorial",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.gairuo.com/p/regular-expression",target:"_blank",rel:"noopener noreferrer"},_=c(`<h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd  <span class="token comment"># 最新为 1.0.4 版本 (2020-05-29)</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns
<span class="token operator">%</span>matplotlib inline

<span class="token comment">#df：任意的 Pandas DataFrame 对象</span>
<span class="token comment">#s：任意的 Pandas Series 对象</span>
<span class="token comment">#注：有些属性方法 df 和 s 都可以使用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="导入导出数据" tabindex="-1"><a class="header-anchor" href="#导入导出数据" aria-hidden="true">#</a> 导入导出数据</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 从 CSV 文件导入数据</span>
pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;file.csv&#39;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;列名&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;列名2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 从限定分隔符的文本文件导入数据</span>
pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment"># Excel 导入，指定 sheet 和表头</span>
pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">&#39;file.xlsx&#39;</span><span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39; 表1&#39;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment"># 从 SQL 表/库导入数据</span>
pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span>query<span class="token punctuation">,</span> connection_object<span class="token punctuation">)</span>
<span class="token comment"># 从 JSON 格式的字符串导入数据</span>
pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span>json_string<span class="token punctuation">)</span>
<span class="token comment"># 解析 URL、字符串或者 HTML 文件，抽取其中的 tables 表格</span>
pd<span class="token punctuation">.</span>read_html<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token comment"># 从你的粘贴板获取内容，并传给 read_table()</span>
pd<span class="token punctuation">.</span>read_clipboard<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 从字典对象导入数据，Key 是列名，Value是数据</span>
pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">)</span>
<span class="token comment"># 导入字符串</span>
<span class="token keyword">from</span> io <span class="token keyword">import</span> StringIO
pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>StringIO<span class="token punctuation">(</span>web_data<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导出数据到CSV文件</span>
df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;filename.csv&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 导出数据到Excel文件</span>
df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;filename.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 导出数据到 SQL 表</span>
df<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span> connection_object<span class="token punctuation">)</span>
<span class="token comment"># 以Json格式导出数据到文本文件</span>
df<span class="token punctuation">.</span>to_json<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
<span class="token comment"># 其他</span>
df<span class="token punctuation">.</span>to_html<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 显示 HTML 代码</span>
df<span class="token punctuation">.</span>to_markdown<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 显示 markdown 代码</span>
df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 显示格式化字符</span>
df<span class="token punctuation">.</span>to_latex<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># LaTeX tabular, longtable</span>
df<span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span><span class="token string">&#39;split&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 字典, 格式 list/series/records/index</span>
df<span class="token punctuation">.</span>to_clipboard<span class="token punctuation">(</span>sep<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 存入系统剪贴板</span>

<span class="token comment"># 将两个表格输出到一个excel文件里面,导出到多个 sheet</span>
writer<span class="token operator">=</span>pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token string">&#39;new.xlsx&#39;</span><span class="token punctuation">)</span>
df_1<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span>sheet_name<span class="token operator">=</span><span class="token string">&#39;第一个&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
df_2<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span>sheet_name<span class="token operator">=</span><span class="token string">&#39;第二个&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
writer<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 必须运行writer.save()，不然不能输出到本地</span>

<span class="token comment"># 写法2</span>
<span class="token keyword">with</span> pd<span class="token punctuation">.</span>ExcelWriter<span class="token punctuation">(</span><span class="token string">&#39;new.xlsx&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
    df1<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;第一个&#39;</span><span class="token punctuation">)</span>
    df2<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>writer<span class="token punctuation">,</span> sheet_name<span class="token operator">=</span><span class="token string">&#39;第二个&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 用 xlsxwriter 导出支持合并单元格、颜色、图表等定制功能</span>
<span class="token comment"># https://xlsxwriter.readthedocs.io/working_with_pandas.html</span>
<span class="token comment"># pd.ExcelWriter(&#39;new.xlsx&#39;,engine=&#39;xlsxwriter&#39;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="测试数据" tabindex="-1"><a class="header-anchor" href="#测试数据" aria-hidden="true">#</a> 测试数据</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 创建20行5列的随机数组成的 DataFrame 对象</span>
pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 从可迭代对象 my_list 创建一个 Series 对象</span>
pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>
<span class="token comment"># 增加一个日期索引</span>
df<span class="token punctuation">.</span>index <span class="token operator">=</span> pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">&#39;1900/1/30&#39;</span><span class="token punctuation">,</span> periods<span class="token operator">=</span>df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 创建随机数据集</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>util<span class="token punctuation">.</span>testing<span class="token punctuation">.</span>makeDataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 创建随机日期索引数据集</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>util<span class="token punctuation">.</span>testing<span class="token punctuation">.</span>makePeriodFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>util<span class="token punctuation">.</span>testing<span class="token punctuation">.</span>makeTimeDataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 创建随机混合类型数据集</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>util<span class="token punctuation">.</span>testing<span class="token punctuation">.</span>makeMixedDataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看、检查、统计、属性" tabindex="-1"><a class="header-anchor" href="#查看、检查、统计、属性" aria-hidden="true">#</a> 查看、检查、统计、属性</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># 查看 DataFrame 对象的前n行</span>
df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># 查看 DataFrame 对象的最后n行</span>
df<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># 查看 n 个样本，随机</span>
df<span class="token punctuation">.</span>shape <span class="token comment"># 查看行数和列数</span>
df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查看索引、数据类型和内存信息</span>
df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 查看数值型列的汇总统计</span>
df<span class="token punctuation">.</span>dtypes <span class="token comment"># 查看各字段类型</span>
df<span class="token punctuation">.</span>axes <span class="token comment"># 显示数据行和列名</span>
df<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回所有列的均值</span>
df<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 返回所有行的均值，下同</span>
df<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回列与列之间的相关系数</span>
df<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回每一列中的非空值的个数</span>
df<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回每一列的最大值</span>
df<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回每一列的最小值</span>
df<span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回每一列的中位数</span>
df<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回每一列的标准差</span>
df<span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 方差</span>
s<span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 众数</span>
s<span class="token punctuation">.</span>prod<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 连乘</span>
s<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 累积连乘,累乘</span>
df<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 累积连加,累加</span>
s<span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 去重数量，不同值的量</span>
df<span class="token punctuation">.</span>idxmax<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 每列最大的值的索引名</span>
df<span class="token punctuation">.</span>idxmin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 最小</span>
df<span class="token punctuation">.</span>columns <span class="token comment"># 显示所有列名</span>
df<span class="token punctuation">.</span>team<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 显示列中的不重复值</span>
<span class="token comment"># 查看 Series 对象的唯一值和计数, 计数占比: normalize=True</span>
s<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>dropna<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token comment"># 查看 DataFrame 对象中每一列的唯一值和计数</span>
df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">.</span>value_counts<span class="token punctuation">)</span>
df<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 重复行</span>
df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除重复行</span>
<span class="token comment"># set_option、reset_option、describe_option 设置显示要求</span>
pd<span class="token punctuation">.</span>get_option<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 设置行列最大显示数量，None 为不限制(jupyter notebok)</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_rows <span class="token operator">=</span> <span class="token boolean">None</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token boolean">None</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_colwidth <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token comment"># 恢复默认值</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_rows <span class="token operator">=</span> <span class="token number">60</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns <span class="token operator">=</span> <span class="token number">20</span>
pd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_colwidth <span class="token operator">=</span> <span class="token number">50</span>
df<span class="token punctuation">.</span>col<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 最大值[最小值 .argmax()] 所在位置的自动索引</span>
df<span class="token punctuation">.</span>col<span class="token punctuation">.</span>idxmin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 最大值[最小值 .idxmax()] 所在位置的定义索引</span>
<span class="token comment"># 累计统计</span>
ds<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 前边所有值之和</span>
ds<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 前边所有值之积</span>
ds<span class="token punctuation">.</span>cummax<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 前边所有值的最大值</span>
ds<span class="token punctuation">.</span>cummin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 前边所有值的最小值</span>
<span class="token comment"># 窗口计算(滚动计算)</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的和</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的算术平均</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的方差</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的标准差</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的最小值</span>
ds<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#依次计算相邻x个元素的最大值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据清理" tabindex="-1"><a class="header-anchor" href="#数据清理" aria-hidden="true">#</a> 数据清理</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 重命名列名</span>
df<span class="token punctuation">.</span>columns <span class="token operator">=</span> df<span class="token punctuation">.</span>columns<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 列名空格换下划线</span>
df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 批量更改列名</span>
df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;old_name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;new_name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 选择性更改列名</span>
df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;column_one&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 更改索引列</span>
df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 批量重命名索引</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">.</span>AAA <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;BBB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CCC&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">555</span> <span class="token comment"># 替换数据</span>
df<span class="token punctuation">[</span><span class="token string">&#39;pf&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>site_id<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;小程序&#39;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">:</span><span class="token string">&#39;M 站&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 将枚举换成名称</span>
pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 检查DataFrame对象中的空值，并返回一个 Boolean 数组</span>
pd<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 检查DataFrame对象中的非空值，并返回一个 Boolean 数组</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 删除列</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 删除行</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;colname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;不详&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;110&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 删除行</span>
<span class="token keyword">del</span> df<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 删除列</span>
df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 删除所有包含空值的行</span>
df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 删除所有包含空值的列</span>
df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>thresh<span class="token operator">=</span>n<span class="token punctuation">)</span> <span class="token comment"># 删除所有小于 n 个非空值的行</span>
df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment"># 用x替换DataFrame对象中所有的空值</span>
df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;prov&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;未知&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 指定列的空值替换为指定内容</span>
s<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token comment"># 将Series中的数据类型更改为 float 类型</span>
df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;datetime64[ns]&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 转化为时间格式</span>
s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 用 ‘one’ 代替所有等于 1 的值</span>
s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 用&#39;one&#39;代替 1，用 &#39;three&#39; 代替 3</span>
df<span class="token punctuation">[</span><span class="token string">&#39;是否设置提现账号&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;状态&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 复制一列</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 列顺序反转</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># 行顺序反转, 下方为重新定义索引</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 修改某个cell</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;colname&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;colname&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;newvalue&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据处理、filter、sort" tabindex="-1"><a class="header-anchor" href="#数据处理、filter、sort" aria-hidden="true">#</a> 数据处理、Filter、Sort</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 保留小数位，四舍六入五成双</span>
df<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 全部</span>
df<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment"># 指定列</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>Name <span class="token comment"># 取列名的两个方法</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span>index <span class="token operator">==</span> <span class="token string">&#39;Jude&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 索引列的查询要用 .index</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">]</span> <span class="token comment"># 选择col列的值大于0.5的行</span>
<span class="token comment"># 多条件查询</span>
df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;team&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
   <span class="token punctuation">(</span> df<span class="token punctuation">[</span><span class="token string">&#39;Q1&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
   df<span class="token punctuation">.</span>utype<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;老客&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;老访客&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment"># 筛选为空的内容</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span>order<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment"># 类似 SQL where in</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span>team<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>team<span class="token operator">==</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>df<span class="token punctuation">.</span>Q1 <span class="token operator">==</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
df<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;team&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span> df<span class="token punctuation">[</span><span class="token string">&#39;Q1&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 非，或</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span>Name<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span><span class="token string">&#39;张&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># 包含字符</span>
df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>col1<span class="token punctuation">)</span> <span class="token comment"># 按照列col1排序数据，默认升序排列</span>
df<span class="token punctuation">.</span>col1<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 同上, -&gt; s</span>
df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>col2<span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 按照列 col1 降序排列数据</span>
<span class="token comment"># 先按列col1升序排列，后按col2降序排列数据</span>
df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span>col1<span class="token punctuation">,</span>col2<span class="token punctuation">]</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>df<span class="token punctuation">,</span> prefix<span class="token operator">=</span><span class="token string">&#39;t_&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 将枚举的那些列带枚举转到列上</span>
s<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 多索引处理</span>
dd<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;utype&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;site_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p_day&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
dd<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 按索引排序</span>
dd<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">&#39;新访客&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;2019-06-22&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>barh<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># loc 中按顺序指定索引内容</span>
<span class="token comment"># 前100行, 不能指定行，如：df[100]</span>
df<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">]</span>
<span class="token comment"># 只取指定行</span>
df1 <span class="token operator">=</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;设计师ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment"># 将ages平分成5个区间并指定 labels</span>
ages <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
pd<span class="token punctuation">.</span>cut<span class="token punctuation">(</span>ages<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
       labels<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">u&quot;婴儿&quot;</span><span class="token punctuation">,</span><span class="token string">u&quot;青年&quot;</span><span class="token punctuation">,</span><span class="token string">u&quot;中年&quot;</span><span class="token punctuation">,</span><span class="token string">u&quot;壮年&quot;</span><span class="token punctuation">,</span><span class="token string">u&quot;老年&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

daily_index<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>df_work_day<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token comment"># 取出差别</span>
<span class="token comment"># 格式化</span>
df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>name <span class="token comment"># 索引的名称 str</span>
df<span class="token punctuation">.</span>columns<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>总人口<span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">)</span> <span class="token comment"># 对 DataFrame 中的每一列应用函数 np.mean</span>
data<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 对 DataFrame 中的每一行应用函数 np.max</span>
df<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> allow_duplicates<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 插入列 (位置、列名、[值])</span>
df<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 删除列</span>
<span class="token comment"># 增加一行</span>
df<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span>
                        <span class="token string">&#39;two&#39;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span>
                        <span class="token string">&#39;three&#39;</span><span class="token punctuation">:</span> <span class="token number">4.4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                       index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          sort<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 指定新列</span>
iris<span class="token punctuation">.</span>assign<span class="token punctuation">(</span>sepal_ratio<span class="token operator">=</span>iris<span class="token punctuation">[</span><span class="token string">&#39;SepalWidth&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> iris<span class="token punctuation">[</span><span class="token string">&#39;SepalLength&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>assign<span class="token punctuation">(</span>rate<span class="token operator">=</span><span class="token keyword">lambda</span> df<span class="token punctuation">:</span> df<span class="token punctuation">.</span>orders<span class="token operator">/</span>df<span class="token punctuation">.</span>uv<span class="token punctuation">)</span>
<span class="token comment"># shift 函数是对数据进行平移动的操作</span>
df<span class="token punctuation">[</span><span class="token string">&#39;增幅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;国内生产总值&#39;</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">&#39;国内生产总值&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>tshift<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 时间移动，按周期</span>
<span class="token comment"># 和上相同，diff 函数是用来将数据进行移动之后与原数据差</span>
<span class="token comment"># 异数据，等于 df.shift()-df</span>
df<span class="token punctuation">[</span><span class="token string">&#39;增幅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;国内生产总值&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 留存数据，因为最大一般为数据池</span>
df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">/</span>x<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 取 best 列中值为列名的值写到 name 行上</span>
df<span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>lookup<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

s<span class="token punctuation">.</span>where<span class="token punctuation">(</span>s <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 满足条件下数据替换（10，空为 NaN）</span>
s<span class="token punctuation">.</span>mask<span class="token punctuation">(</span>s <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 留下满足条件的，其他的默认为 NaN</span>
<span class="token comment"># 所有值加 1 (加减乘除等)</span>
df <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">/</span> df<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 管道方法，链式调用函数，f(df)=df.pipe(f)</span>
<span class="token keyword">def</span> <span class="token function">gb</span><span class="token punctuation">(</span>df<span class="token punctuation">,</span> by<span class="token punctuation">)</span><span class="token punctuation">:</span>
    result <span class="token operator">=</span> df<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> result<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token comment"># 调用</span>
df<span class="token punctuation">.</span>pipe<span class="token punctuation">(</span>gb<span class="token punctuation">,</span> by<span class="token operator">=</span><span class="token string">&#39;team&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 窗口计算 &#39;2s&#39; 为两秒</span>
df<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 在窗口结果基础上的窗口计算</span>
df<span class="token punctuation">.</span>expanding<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 超出（大于、小于）的值替换成对应值</span>
df<span class="token punctuation">.</span>clip<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token comment"># AB 两列想加增加 C 列</span>
df<span class="token punctuation">[</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;A+B&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 和上相同效果</span>
df<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;C = A + B&#39;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment"># 数列的变化百分比</span>
s<span class="token punctuation">.</span>pct_change<span class="token punctuation">(</span>periods<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 分位数, 可实现时间的中间点</span>
df<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">)</span>
<span class="token comment"># 排名 average, min,max,first，dense, 默认 average</span>
s<span class="token punctuation">.</span>rank<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 数据爆炸，将本列的类列表数据和其他列的数据展开铺开</span>
df<span class="token punctuation">.</span>explode<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 枚举更新</span>
status <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">&#39;未执行&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token string">&#39;执行中&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token string">&#39;执行完毕&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token string">&#39;执行异常&#39;</span><span class="token punctuation">}</span>
df<span class="token punctuation">[</span><span class="token string">&#39;taskStatus&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;taskStatus&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span>get<span class="token punctuation">)</span>
df<span class="token punctuation">.</span>assign<span class="token punctuation">(</span>金额<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 新增字段</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 多索引查询</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;i0 == &quot;b&quot; &amp; i1 == &quot;b&quot;&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 多索引查询方法 2</span>
<span class="token comment"># 取多索引中指定级别的所有不重复值</span>
df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>get_level_values<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 去掉为零小数，12.00 -&gt; 12</span>
df<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>applymap<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;.00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 插入数据，在第三列加入「两倍」列</span>
df<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;两倍&#39;</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">&#39;值&#39;</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 枚举转换</span>
df<span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>gender<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;female&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 增加本行之和列</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Col_sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment"># 对指定行进行加和</span>
col_list<span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># 取请假范围日期</span>
df<span class="token punctuation">[</span><span class="token string">&#39;总天数&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span>col_list<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 计算总请假天数</span>
<span class="token comment"># 对列求和，汇总</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">&#39;col_sum&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 按指定的列表顺序显示</span>
df<span class="token punctuation">.</span>reindex<span class="token punctuation">(</span>order_list<span class="token punctuation">)</span>
<span class="token comment"># 按指定的多列排序</span>
df<span class="token punctuation">.</span>reindex<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;col_1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col_5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 补齐空值</span>
a <span class="token operator">=</span> a<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">&#39;bfill&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#method : {‘backfill&#39;, ‘bfill&#39;, ‘pad&#39;, ‘ffill&#39;, None}, default None</span>
<span class="token comment">#pad / ffill: 向下自动填充</span>
<span class="token comment">#backfill / bfill: 向上自动填充</span>
<span class="token comment"># 时间范围</span>
s_date <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;2021-06-29&#39;</span><span class="token punctuation">)</span><span class="token comment">#datetime.datetime.strptime(&#39;20210629&#39;, &#39;%Y%m%d&#39;).date()</span>
e_date <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;2021-07-29&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;DATA_DATE_TIME&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;DATA_DATE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;DATA_DATE_TIME&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;=</span>s_date<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;DATA_DATE_TIME&#39;</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span>e_date<span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># 查询具体重复的数据</span>
unique1 <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;ORDER_ID&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
unique2 <span class="token operator">=</span> unique1<span class="token punctuation">[</span>unique1<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
unique3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>unique2<span class="token punctuation">,</span>df<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;ORDER_ID&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
unique3

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据选取" tabindex="-1"><a class="header-anchor" href="#数据选取" aria-hidden="true">#</a> 数据选取</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token punctuation">[</span>col1<span class="token punctuation">,</span> col2<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 以DataFrame形式返回多列</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;team&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 按条件查询，只显示name 列</span>
s<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># 按位置选取数据</span>
s<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">&#39;index_one&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 按索引选取数据</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">]</span> <span class="token comment">#  A到 B 字段的第一行</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">2018</span><span class="token punctuation">:</span><span class="token number">1990</span><span class="token punctuation">,</span> <span class="token string">&#39;第一产业增加值&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;第三产业增加值&#39;</span><span class="token punctuation">]</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># d.loc[位置切片, 字段]</span>
df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># 返回第一行, iloc 只能是数字</span>
df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># 返回第一列的第一个元素</span>
dc<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;site_id &gt; 8 and utype==&quot;老客&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 可以 and or / &amp; |</span>
 <span class="token comment"># 迭代器及使用</span>
<span class="token keyword">for</span> idx<span class="token punctuation">,</span>row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> row<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># 迭代器对每个元素进行处理</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>i<span class="token punctuation">,</span><span class="token string">&#39;链接&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;http://www.gairuo.com/p/</span><span class="token interpolation"><span class="token punctuation">{</span>slug<span class="token punctuation">}</span></span><span class="token string">.html&#39;</span></span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> df<span class="token punctuation">.</span>Name<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment"># 迭代一个列</span>
<span class="token comment"># 按列迭代，[列名, 列中的数据序列 S（索引名 值)]</span>
<span class="token keyword">for</span> label<span class="token punctuation">,</span> content <span class="token keyword">in</span> df<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>label<span class="token punctuation">,</span> content<span class="token punctuation">)</span>
<span class="token comment"># 按行迭代，迭代出整行包括索引的类似列表的内容，可row[2]取</span>
<span class="token keyword">for</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>itertuples<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
df<span class="token punctuation">.</span>at<span class="token punctuation">[</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token string">&#39;总人口&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 按行列索引名取一个指定的单个元素</span>
df<span class="token punctuation">.</span>iat<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 索引和列的编号取单个元素</span>
s<span class="token punctuation">.</span>nlargest<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 最大和最小的前几个值</span>
df<span class="token punctuation">.</span>nlargest<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;population&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;GDP&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 指定多个行列位置的内容</span>
<span class="token comment"># 按行列截取掉部分内容，支持日期索引标签</span>
ds<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span>before<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> after<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token comment"># 将 dataframe 转成 series</span>
df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&#39;%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 百分数转数字</span>
df<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 取消索引</span>

df<span class="token punctuation">.</span>eq<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 等于相等 ==</span>
df<span class="token punctuation">.</span>ne<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 不等于 !=</span>
df<span class="token punctuation">.</span>le<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 小于等于 &gt;=</span>
df<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 小于 &lt;</span>
df<span class="token punctuation">.</span>ge<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 大于等于 &gt;=</span>
df<span class="token punctuation">.</span>gt<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 大于 &gt;</span>
<span class="token comment"># 都支持  axis{0 or ‘index’, 1 or ‘columns’}, default ‘columns’</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span>Q1<span class="token punctuation">.</span>ne<span class="token punctuation">(</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># Q1 不等于8</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">.</span>Q1<span class="token punctuation">.</span>gt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> df<span class="token punctuation">.</span>Q2<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># and 关系 Q1&gt;90 Q2&lt;90</span>

df<span class="token punctuation">[</span><span class="token keyword">lambda</span> df<span class="token punctuation">:</span> df<span class="token punctuation">[</span><span class="token string">&#39;Q1&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token comment"># Q1为8的</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token keyword">lambda</span> df<span class="token punctuation">:</span> df<span class="token punctuation">.</span>Q1 <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;Q1&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;Q2&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Q1为8的, 显示 Q1 Q2</span>

df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 &gt; Q2 &gt; 90&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 直接写类型 sql where 语句</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 + Q2 &gt; 180&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 == Q2&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;(Q1&lt;50) &amp; (Q2&gt;40) and (Q3&gt;90)&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 &gt; Q2 &gt; Q3 &gt; Q4&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;team != &quot;C&quot;&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;team not in (&quot;E&quot;,&quot;A&quot;,&quot;B&quot;)&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 对于名称中带有空格的列，可以使用反引号引起来</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;B == \`team name\`&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 支持传入变量，如：大于平均分40分的</span>
a <span class="token operator">=</span> df<span class="token punctuation">.</span>Q1<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 &gt; @a+40&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;Q1 &gt; \`Q2\`+@a&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># df.eval() 用法与 df.query 类似</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&quot;Q1 &gt; 90 &gt; Q3 &gt; 10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
df<span class="token punctuation">[</span>df<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&quot;Q1 &gt; \`Q2\`+@a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># 分组取前3</span>
df_ask_org<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;CLASS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">.</span>nlargest<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;述求量&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据处理、分组、透视" tabindex="-1"><a class="header-anchor" href="#数据处理、分组、透视" aria-hidden="true">#</a> 数据处理、分组、透视</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span>col1<span class="token punctuation">,</span>col2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 返回一个按多列进行分组的Groupby对象</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>col1<span class="token punctuation">)</span><span class="token punctuation">[</span>col2<span class="token punctuation">]</span> <span class="token comment"># 返回按列col1进行分组后，列col2的均值</span>
<span class="token comment"># 创建一个按列col1进行分组，并计算col2和col3的最大值的数据透视表</span>
df<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>index<span class="token operator">=</span>col1<span class="token punctuation">,</span>
               values<span class="token operator">=</span><span class="token punctuation">[</span>col2<span class="token punctuation">,</span>col3<span class="token punctuation">]</span><span class="token punctuation">,</span>
               aggfunc<span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">,</span>
               as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token comment"># 同上</span>
df<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;site_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utype&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;uv_all&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;regist_num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               aggfunc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mean&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>col1<span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">)</span> <span class="token comment"># 返回按列col1分组的所有列的均值</span>
<span class="token comment"># 按列将其他列转行</span>
pd<span class="token punctuation">.</span>melt<span class="token punctuation">(</span>df<span class="token punctuation">,</span> id_vars<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;day&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> var_name<span class="token operator">=</span><span class="token string">&#39;city&#39;</span><span class="token punctuation">,</span> value_name<span class="token operator">=</span><span class="token string">&#39;temperature&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 交叉表是用于统计分组频率的特殊透视表</span>
pd<span class="token punctuation">.</span>crosstab<span class="token punctuation">(</span>df<span class="token punctuation">.</span>Nationality<span class="token punctuation">,</span>df<span class="token punctuation">.</span>Handedness<span class="token punctuation">)</span>
<span class="token comment"># groupby 后排序，分组 agg 内的元素取固定个数</span>
<span class="token punctuation">(</span>
    df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>p_day <span class="token operator">&gt;=</span> <span class="token string">&#39;20190101&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;p_day&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;uv&#39;</span><span class="token punctuation">:</span><span class="token builtin">sum</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;p_day&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;uv&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>level<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># 每天取5个页面</span>
    <span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token comment"># 合并查询经第一个看（max, min, last, size:数量）</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;结算类型&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 合并明细并分组统计加总（&#39;max&#39;, \`mean\`, \`median\`,</span>
<span class="token comment"># \`prod\`, \`sum\`, \`std\`,\`var\`, &#39;nunique&#39;）,&#39;nunique&#39;为去重的列表</span>
df1 <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">&#39;设计师ID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;结算金额&#39;</span><span class="token punctuation">:</span><span class="token builtin">sum</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span>df<span class="token punctuation">.</span>pf<span class="token punctuation">)</span><span class="token punctuation">.</span>ip<span class="token punctuation">.</span>nunique<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># groupby distinct, 分组+去重数</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span>df<span class="token punctuation">.</span>pf<span class="token punctuation">)</span><span class="token punctuation">.</span>ip<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># groupby 分组+去重的值及数量</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;median&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

se_level1<span class="token punctuation">[</span><span class="token string">&#39;level_0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x <span class="token punctuation">:</span> <span class="token string">&#39;{:0&gt;2d}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
data<span class="token punctuation">[</span><span class="token string">&#39;huanbi_01&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;mony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> data<span class="token punctuation">[</span><span class="token string">&#39;mony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span>data<span class="token punctuation">[</span><span class="token string">&#39;mony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;.2%&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># {:.2f} 保留小数点后两位</span>
<span class="token comment"># {:+.2f} 带符号保留小数点后两位</span>
<span class="token comment"># {:+.2f} 带符号保留小数点后两位</span>
<span class="token comment"># {:.0f} 不带小数</span>
<span class="token comment"># {:0&gt;2d} 数字补零 (填充左边, 宽度为2)</span>
<span class="token comment"># {:x&lt;4d} 数字补x (填充右边, 宽度为4)</span>
<span class="token comment"># {:x&lt;4d} 数字补x (填充右边, 宽度为4)</span>
<span class="token comment"># {:,} 以逗号分隔的数字格式</span>
<span class="token comment"># {:.2%} 百分比格式</span>
<span class="token comment"># {:.2e} 指数记法</span>
<span class="token comment"># {:&gt;10d} 右对齐 (默认, 宽度为10)</span>
<span class="token comment"># {:&lt;10d} 左对齐 (宽度为10)</span>
<span class="token comment"># {:^10d} 中间对齐 (宽度为10)</span>

<span class="token comment"># 占比</span>
r15<span class="token punctuation">[</span><span class="token string">&#39;proportion&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> r15<span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token operator">/</span>r15<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;service_provider&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;trip_type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 合并结果为一列</span>
r1_3 <span class="token operator">=</span> df<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&quot;APPLICANT_SEX_CN != &#39;未知&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&quot;CASE_TYPE_CN&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;APPLICANT_SEX_CN&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>
        <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> gensexrate<span class="token punctuation">(</span>x<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#.apply(lambda x: &quot;:&quot;.join(str(a) for a in x.value_counts().values.tolist()))</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据合并" tabindex="-1"><a class="header-anchor" href="#数据合并" aria-hidden="true">#</a> 数据合并</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 合并透视表和分组表</span>
table4 <span class="token operator">=</span> table1<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
table3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;二级分类&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;uuid&quot;</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
table2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;uuid&quot;</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
table1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>df<span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三级分类&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fill_value<span class="token operator">=</span><span class="token string">&quot;无&quot;</span><span class="token punctuation">,</span> values<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> aggfunc<span class="token operator">=</span><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
_merge <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>table2<span class="token punctuation">,</span> table4<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
_merge<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一级分类_count&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三级分类_count&#39;</span><span class="token punctuation">]</span>
merge <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>_merge<span class="token punctuation">,</span> table3<span class="token punctuation">,</span> on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">,</span><span class="token string">&quot;二级分类&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
merge <span class="token operator">=</span> merge<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;工单编号&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;二级分类_count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
merge <span class="token operator">=</span> merge<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一级分类_count&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二级分类_count&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;三级分类&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三级分类_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
merge <span class="token operator">=</span> merge<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;一级分类_count&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;二级分类_count&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;三级分类_count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 合并拼接行</span>
<span class="token comment"># 将df2中的行添加到df1的尾部</span>
df1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>df2<span class="token punctuation">)</span>
<span class="token comment"># 指定列合并成一个新表新列</span>
ndf <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;提名1&#39;</span><span class="token punctuation">]</span>
       <span class="token punctuation">.</span>append<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;提名2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span>append<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;提名3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ndf <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>ndf<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 将df2中的列添加到df1的尾部</span>
df<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span> df2<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 合并文件的各行</span>
df1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;111.csv&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
df2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;222.csv&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
excel_list <span class="token operator">=</span> <span class="token punctuation">[</span>df1<span class="token punctuation">,</span> df2<span class="token punctuation">]</span>
<span class="token comment"># result = pd.concat(excel_list).fillna(&#39;&#39;)[:].astype(&#39;str&#39;)</span>
result <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span>excel_list<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
result<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;333.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 合并指定目录下所有的 excel (csv) 文件</span>
<span class="token keyword">import</span> glob
files <span class="token operator">=</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">&quot;data/cs/*.xls&quot;</span><span class="token punctuation">)</span>
dflist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> files<span class="token punctuation">:</span>
    dflist<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span>i<span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;时间&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;名称&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span>dflist<span class="token punctuation">)</span>

<span class="token comment"># 合并增加列</span>
<span class="token comment"># 对df1的列和df2的列执行SQL形式的join</span>
df1<span class="token punctuation">.</span>join<span class="token punctuation">(</span>df2<span class="token punctuation">,</span>on<span class="token operator">=</span>col1<span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">&#39;inner&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 用 key 合并两个表</span>
df_all <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df_sku<span class="token punctuation">,</span> df_spu<span class="token punctuation">,</span>
                  how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
                  left_on<span class="token operator">=</span>df_sku<span class="token punctuation">[</span><span class="token string">&#39;product_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                  right_on<span class="token operator">=</span>df_spu<span class="token punctuation">[</span><span class="token string">&#39;p.product_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 返回多列</span>
<span class="token keyword">def</span> <span class="token function">formatrow</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&quot;cnt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&quot;cnt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> row<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> a<span class="token punctuation">,</span> b
df_tmp<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;fomat1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;format2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_tmp<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>formatrow<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> result_type<span class="token operator">=</span><span class="token string">&quot;expand&quot;</span><span class="token punctuation">)</span>
df_tmp<span class="token punctuation">[</span><span class="token string">&quot;fomat1-1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df_tmp<span class="token punctuation">[</span><span class="token string">&quot;format2-2&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>df_tmp<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>formatrow<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">age_map</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> x<span class="token operator">+</span><span class="token number">1</span>
data<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;birth_year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>age_map<span class="token punctuation">)</span>

pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
df<span class="token punctuation">.</span>isna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间处理" tabindex="-1"><a class="header-anchor" href="#时间处理" aria-hidden="true">#</a> 时间处理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 时间索引</span>
df<span class="token punctuation">.</span>index <span class="token operator">=</span> pd<span class="token punctuation">.</span>DatetimeIndex<span class="token punctuation">(</span>df<span class="token punctuation">.</span>index<span class="token punctuation">)</span>
<span class="token comment"># 时间只保留日期</span>
df<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>date
<span class="token comment"># 将指定字段格式化为时间类型</span>
df<span class="token punctuation">[</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;时间&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># 转化为北京时间</span>
df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>tz_convert<span class="token punctuation">(</span><span class="token string">&#39;Asia/Shanghai&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 转为指定格式，可能会失去秒以后的精度</span>
df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span>
dc<span class="token punctuation">.</span>index <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>dc<span class="token punctuation">.</span>index<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 时间，参与运算</span>
pd<span class="token punctuation">.</span>DateOffset<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 当前时间</span>
pd<span class="token punctuation">.</span>Timestamp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;today&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 判断时间是否当天</span>
pd<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year <span class="token operator">==</span> df<span class="token punctuation">.</span>start_work<span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year
df<span class="token punctuation">.</span>time<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;datetime64[ns]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>date <span class="token operator">==</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;today&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 定义个天数</span>
<span class="token keyword">import</span> datetime
days <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span>x<span class="token punctuation">)</span>
days<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 同上，直接用 pd 包装的</span>
pd<span class="token punctuation">.</span>Timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># unix 时间戳</span>
pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>ted<span class="token punctuation">.</span>film_date<span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">&#39;ms&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 按月（YMDHminS）采集合计数据</span>
df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;quantity&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;ext price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&quot;M&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按天汇总，index 是 datetime 时间类型</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span>df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;uu&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment"># 按周汇总</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by<span class="token operator">=</span>df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>weekday<span class="token punctuation">)</span><span class="token punctuation">.</span>uu<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按月进行汇总</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> pd<span class="token punctuation">.</span>Grouper<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;ext price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按月进行汇总</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>Grouper<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token string">&#39;day&#39;</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">&#39;1M&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按照年度，且截止到12月最后一天统计 ext price 的 sum 值</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> pd<span class="token punctuation">.</span>Grouper<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">&#39;A-DEC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;ext price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 按月的平均重新采样</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Close&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases</span>
<span class="token comment"># 取时间范围，并取工作日</span>
rng <span class="token operator">=</span> pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">&quot;6/1/2016&quot;</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&quot;6/30/2016&quot;</span><span class="token punctuation">,</span>freq<span class="token operator">=</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 重新定时数据频度，按一定补充方法</span>
df<span class="token punctuation">.</span>asfreq<span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&#39;pad&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 时区，df.tz_convert(&#39;Europe/Berlin&#39;)</span>
df<span class="token punctuation">.</span>time<span class="token punctuation">.</span>tz_localize<span class="token punctuation">(</span>tz<span class="token operator">=</span><span class="token string">&#39;Asia/Shanghai&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 转北京时间</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>tz_localize<span class="token punctuation">(</span><span class="token string">&#39;UTC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>tz_convert<span class="token punctuation">(</span><span class="token string">&#39;Asia/Shanghai&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 查看所有时区</span>
<span class="token keyword">from</span> pytz <span class="token keyword">import</span> all_timezones
<span class="token keyword">print</span> <span class="token punctuation">(</span>all_timezones<span class="token punctuation">)</span>
<span class="token comment"># 时长，多久，两个时间间隔时间，时差</span>
df<span class="token punctuation">[</span><span class="token string">&#39;duration&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;begin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span>
<span class="token comment"># 指定时间进行对比</span>
df<span class="token punctuation">.</span>Time<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;datetime64[ns]&#39;</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;2019-12-11 20:00:00&#39;</span><span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 只计算工作日</span>
<span class="token keyword">from</span> pandas<span class="token punctuation">.</span>tseries<span class="token punctuation">.</span>offsets <span class="token keyword">import</span> CustomBusinessDay
b <span class="token operator">=</span> CustomBusinessDay<span class="token punctuation">(</span>holidays<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;2022-04-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-04-04&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-04-05&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>weekmask<span class="token operator">=</span><span class="token string">&#39;Mon Tue Wed Thu Fri Sat Sun&#39;</span><span class="token punctuation">)</span>
start_time <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;2022-03-28 01:30:12&#39;</span><span class="token punctuation">)</span>
end_time <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">&#39;2022-04-11 12:55:35&#39;</span><span class="token punctuation">)</span>
len1 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start_time<span class="token punctuation">,</span> end_time<span class="token punctuation">,</span>freq<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
len2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start_time<span class="token punctuation">,</span> end_time<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>len1<span class="token punctuation">,</span>len2<span class="token punctuation">)</span>
duration <span class="token operator">=</span> end_time<span class="token operator">-</span>start_time
<span class="token keyword">print</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span>duration<span class="token punctuation">)</span><span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len2<span class="token operator">-</span>len1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">24</span><span class="token punctuation">)</span>
<span class="token comment"># 只计算工作日，考虑开始时间与结束时间可能是非工作日的情况</span>
holidays<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;2022-04-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-04-04&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2022-04-05&#39;</span><span class="token punctuation">]</span>
businessdays <span class="token operator">=</span> pd<span class="token punctuation">.</span>tseries<span class="token punctuation">.</span>offsets<span class="token punctuation">.</span>CustomBusinessDay<span class="token punctuation">(</span>holidays<span class="token operator">=</span>holidays<span class="token punctuation">,</span>weekmask<span class="token operator">=</span><span class="token string">&#39;Mon Tue Wed Thu Fri Sat Sun&#39;</span><span class="token punctuation">)</span>
df_test <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;2022-03-28 01:30:12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-04-11 12:55:35&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;te1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token punctuation">[</span><span class="token string">&#39;2022-04-04 01:30:12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-04-11 12:55:35&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;te2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token punctuation">[</span><span class="token string">&#39;2022-04-04 23:30:12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-04-06 12:20:35&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;te3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token punctuation">[</span><span class="token string">&#39;2022-04-02 20:30:12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2022-04-03 12:00:00&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;te4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                       columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;start_time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;end_time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">computeDur</span><span class="token punctuation">(</span>start_time<span class="token punctuation">,</span> end_time<span class="token punctuation">)</span><span class="token punctuation">:</span>
   start_time <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>start_time<span class="token punctuation">)</span>
   end_time <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>end_time<span class="token punctuation">)</span>
   len1 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> freq<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
   len2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token keyword">if</span> len1 <span class="token operator">==</span><span class="token number">0</span> <span class="token punctuation">:</span>
       <span class="token keyword">return</span> <span class="token number">0</span>
   sub_s <span class="token operator">=</span> <span class="token number">0</span>
   sub_e <span class="token operator">=</span> <span class="token number">0</span>
   <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>start_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">in</span> holidays<span class="token punctuation">:</span>
       sub_s <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>start_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; 23:59:59&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
       sub_s <span class="token operator">=</span> <span class="token number">24</span> <span class="token operator">-</span> sub_s<span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span>
   <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>end_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">in</span> holidays<span class="token punctuation">:</span>
       sub_e <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>end_time<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; 23:59:59&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span> end_time
       sub_e <span class="token operator">=</span> sub_e<span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span>
   <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end_time <span class="token operator">-</span> start_time<span class="token punctuation">)</span><span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len2 <span class="token operator">-</span> len1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">+</span> sub_s <span class="token operator">+</span> sub_e

df_test<span class="token punctuation">[</span><span class="token string">&#39;duration&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_test<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> computeDur<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token string">&#39;start_time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token string">&#39;end_time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 解决科学计数法问题</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;111.csv&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;str&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 和订单量相关性最大到小显示</span>
dd<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>total_order_num<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 解析列表、json 字符串</span>
<span class="token keyword">import</span> ast
ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span><span class="token string">&quot;[{&#39;id&#39;: 7, &#39;name&#39;: &#39;Funny&#39;}]&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Series apply method applies a function to</span>
<span class="token comment"># every element in a Series and returns a Series</span>
ted<span class="token punctuation">.</span>ratings<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>str_to_list<span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># lambda is a shorter alternative</span>
ted<span class="token punctuation">.</span>ratings<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># an even shorter alternative is to apply the</span>
<span class="token comment"># function directly (without lambda)</span>
ted<span class="token punctuation">.</span>ratings<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>ast<span class="token punctuation">.</span>literal_eval<span class="token punctuation">)</span>
<span class="token comment"># 索引 index 使用 apply()</span>
df<span class="token punctuation">.</span>index<span class="token punctuation">.</span>to_series<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="样式显示" tabindex="-1"><a class="header-anchor" href="#样式显示" aria-hidden="true">#</a> 样式显示</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># https://pbpython.com/styling-pandas.html</span>
df<span class="token punctuation">[</span><span class="token string">&#39;per_cost&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;per_cost&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token string">&#39;{:,.2f}%&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">)</span>  <span class="token comment"># 显示%比形式</span>
<span class="token comment"># 指定列表（值大于0）加背景色</span>
df<span class="token punctuation">.</span>style<span class="token punctuation">.</span>applymap<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token string">&#39;background-color: grey&#39;</span> <span class="token keyword">if</span> x<span class="token operator">&gt;</span><span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
                  subset<span class="token operator">=</span>pd<span class="token punctuation">.</span>IndexSlice<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 最大值最小值加背景色</span>
df<span class="token punctuation">.</span>style<span class="token punctuation">.</span>highlight_max<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;lightgreen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>highlight_min<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;#cd4f39&#39;</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;{:.2%}&#39;</span><span class="token punctuation">,</span> subset<span class="token operator">=</span>pd<span class="token punctuation">.</span>IndexSlice<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 显示百分号</span>

<span class="token comment"># 指定各列的样式</span>
format_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;\${0:,.0f}&#39;</span><span class="token punctuation">,</span>
                       <span class="token string">&#39;date&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;{:%Y-%m}&#39;</span><span class="token punctuation">,</span>
                       <span class="token string">&#39;pct_of_total&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;{:.2%}&#39;</span>
                       <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">.</span>upper<span class="token punctuation">}</span>

<span class="token comment"># 一次性样式设置</span>
<span class="token punctuation">(</span>df<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>format_dict<span class="token punctuation">)</span> <span class="token comment"># 多种样式形式</span>
    <span class="token punctuation">.</span>hide_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 指定列按颜色深度表示值大小, cmap 为 matplotlib colormap</span>
    <span class="token punctuation">.</span>background_gradient<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;sum_num&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&#39;BuGn&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 表格内作横向 bar 代表值大小</span>
    <span class="token punctuation">.</span>bar<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;#FFA07A&#39;</span><span class="token punctuation">,</span> vmin<span class="token operator">=</span><span class="token number">100_000</span><span class="token punctuation">,</span> subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;zero&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 表格内作横向 bar 代表值大小</span>
    <span class="token punctuation">.</span>bar<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;lightgreen&#39;</span><span class="token punctuation">,</span> vmin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;pct_of_total&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;zero&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 下降（小于0）为红色, 上升为绿色</span>
    <span class="token punctuation">.</span>bar<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;#ffe4e4&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#bbf9ce&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vmin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> vmax<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;增长率&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;zero&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># 给样式表格起个名字</span>
    <span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">&#39;2018 Sales Performance&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>hide_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 按条件给整行加背景色（样式）</span>
<span class="token keyword">def</span> <span class="token function">background_color</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> row<span class="token punctuation">.</span>pv_num <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;background-color: red&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> row<span class="token punctuation">.</span>pv_num <span class="token operator">&gt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;background-color: yellow&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
<span class="token comment"># 使用</span>
df<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>background_color<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表格中的直方图-sparkline-图形" tabindex="-1"><a class="header-anchor" href="#表格中的直方图-sparkline-图形" aria-hidden="true">#</a> 表格中的直方图，sparkline 图形</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sparklines
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">def</span> <span class="token function">sparkline_str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    bins<span class="token operator">=</span>np<span class="token punctuation">.</span>histogram<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    sl <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>sparklines<span class="token punctuation">.</span>sparklines<span class="token punctuation">(</span>bins<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> sl
sparkline_str<span class="token punctuation">.</span>__name__ <span class="token operator">=</span> <span class="token string">&quot;sparkline&quot;</span>
<span class="token comment"># 画出趋势图，保留两位小数</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;quantity&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ext price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">,</span> sparkline_str<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

<span class="token comment"># sparkline 图形</span>
<span class="token comment"># https://hugoworld.wordpress.com/2019/01/26/sparklines-in-jupyter-notebooks-ipython-and-pandas/</span>
<span class="token keyword">def</span> <span class="token function">sparkline</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    creates a sparkline
    &quot;&quot;&quot;</span>

    <span class="token comment"># Turn off the max column width so the images won&#39;t be truncated</span>
    pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">&#39;display.max_colwidth&#39;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment"># Turning off the max column will display all the data</span>
    <span class="token comment"># if gathering into sets / array we might want to restrict to a few items</span>
    pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">&#39;display.max_seq_items&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>

    <span class="token comment">#Monkey patch the dataframe so the sparklines are displayed</span>
    pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">.</span>_repr_html_ <span class="token operator">=</span> <span class="token keyword">lambda</span> self<span class="token punctuation">:</span> self<span class="token punctuation">.</span>to_html<span class="token punctuation">(</span>escape<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt
    <span class="token keyword">import</span> base64
    <span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO

    data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

    <span class="token operator">*</span>_<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span>figsize<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token builtin">min</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>set_axis_off<span class="token punctuation">(</span><span class="token punctuation">)</span>

    img <span class="token operator">=</span> BytesIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&lt;img src=&quot;data:image/png;base64, {}&quot; /&gt;&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>img<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 使用</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;quantity&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ext price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">,</span> sparkline<span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>sparkline<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 仅支持横向数据画线，可做 T 转置</span>

df88<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token string">&#39;rate&#39;</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 图形大小，单位英寸</span>
df_1<span class="token punctuation">[</span>df_1<span class="token punctuation">.</span>p_day <span class="token operator">&gt;</span> <span class="token string">&#39;2019-06-01&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;p_day&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;total_order_num&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;order_user&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 柱状图</span>
<span class="token comment"># 每条线一个站点，各站点的 home_remain, stack的意思是堆叠，堆积</span>
<span class="token comment"># unstack 即“不要堆叠”</span>
<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>p_day <span class="token operator">&gt;=</span> <span class="token string">&#39;2019-05-1&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>df<span class="token punctuation">.</span>utype <span class="token operator">==</span> <span class="token string">&#39;老客&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;p_day&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;site_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;home_remain&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  折线图，多条, x 轴默认为 index</span>
dd<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>line<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;p_day&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;uv_all&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;home_remain&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
dd<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">&#39;新访客&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;order_user&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;paid_order_user&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 散点图</span>
dd<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 柱状图, barh 为横向柱状图</span>
sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>dd<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 相关性可视化</span>
<span class="token comment">#  刻度从0开始，指定范围 ylim=(0,100), x 轴相同</span>
s<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>line<span class="token punctuation">(</span>ylim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 折线颜色 https://matplotlib.org/examples/color/named_colors.html</span>
<span class="token comment"># 样式( &#39;-&#39;,&#39;--&#39;,&#39;-.&#39;,&#39;:&#39; )</span>
<span class="token comment"># 折线标记 https://matplotlib.org/api/markers_api.html</span>
<span class="token comment"># grid=True 显示刻度 etc: https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html</span>
s<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>line<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 两个图绘在一起</span>
<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;数量&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>kde<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">&#39;数量&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">.</span>hist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># 对表中的数据按颜色可视化</span>
<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns
cm <span class="token operator">=</span> sns<span class="token punctuation">.</span>light_palette<span class="token punctuation">(</span><span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> as_cmap<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background_gradient<span class="token punctuation">(</span>cmap<span class="token operator">=</span>cm<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># 将数据转化为二维数组</span>
<span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">.</span>index<span class="token punctuation">.</span>to_list<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>to_list<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># 和 plot 用法一样 https://hvplot.pyviz.org/user_guide/Plotting.html</span>
<span class="token keyword">import</span> hvplot<span class="token punctuation">.</span>pandas

<span class="token comment"># 打印 Sqlite 建表语句</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>io<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>get_schema<span class="token punctuation">(</span>fdf<span class="token punctuation">,</span> <span class="token string">&#39;table_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># jupyter notebooks plt 图表配置</span>
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;figure.figsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">15.0</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">)</span> <span class="token comment"># 固定显示大小</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;font.family&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;sans-serif&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 显示中文问题</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;font.sans-serif&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;SimHei&#39;</span><span class="token punctuation">]</span> <span class="token comment"># 显示中文问题</span>

<span class="token comment"># 输出单行全部变量</span>
<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>core<span class="token punctuation">.</span>interactiveshell <span class="token keyword">import</span> InteractiveShell
InteractiveShell<span class="token punctuation">.</span>ast_node_interactivity <span class="token operator">=</span> <span class="token string">&#39;all&#39;</span>

<span class="token comment"># jupyter notebooks 页面自适应宽度</span>
<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>core<span class="token punctuation">.</span>display <span class="token keyword">import</span> display<span class="token punctuation">,</span> HTML
display<span class="token punctuation">(</span>HTML<span class="token punctuation">(</span><span class="token string">&quot;&lt;style&gt;.container { width:100% !important; }&lt;/style&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 背景白色 &lt;style&gt;#notebook_panel {background: #ffffff;}&lt;/style&gt;</span>

<span class="token comment"># jupyter notebooks 嵌入页面内容</span>
<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> IFrame
IFrame<span class="token punctuation">(</span><span class="token string">&#39;https://arxiv.org/pdf/1406.2661.pdf&#39;</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">450</span><span class="token punctuation">)</span>

<span class="token comment"># Markdown 一个 cell 不支持多张粘贴图片</span>
<span class="token comment"># 一个文件打印打开只显示一张图片问题解决</span>
<span class="token comment"># /site-packages/notebook/static/notebook/js/main.min.js var key 处</span>
<span class="token comment"># 33502、33504 行</span>
key <span class="token operator">=</span> utils<span class="token punctuation">.</span>uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">+</span>encodeURIandParens<span class="token punctuation">(</span>blob<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
key <span class="token operator">=</span> utils<span class="token punctuation">.</span>uuid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">+</span>Object<span class="token punctuation">.</span>keys<span class="token punctuation">(</span>that<span class="token punctuation">.</span>attachments<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token comment"># https://github.com/ihnorton/notebook/commit/55687c2dc08817da587977cb6f19f8cc0103bab1</span>

<span class="token comment"># 多行输出</span>
<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>core<span class="token punctuation">.</span>interactiveshell <span class="token keyword">import</span> InteractiveShell
InteractiveShell<span class="token punctuation">.</span>ast_node_interactivity <span class="token operator">=</span> <span class="token string">&#39;all&#39;</span> <span class="token comment">#默认为&#39;last&#39;</span>

<span class="token comment"># 执行 shell 命令: ! &lt;命令语句&gt;</span>

<span class="token comment"># 在线可视化工具</span>
https<span class="token punctuation">:</span><span class="token operator">//</span>plot<span class="token punctuation">.</span>ly<span class="token operator">/</span>create
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="slideshow-幻灯片" tabindex="-1"><a class="header-anchor" href="#slideshow-幻灯片" aria-hidden="true">#</a> Slideshow 幻灯片</h4><p><code>pip install RISE</code></p>`,29);function y(h,x){const a=u("ExternalLinkIcon");return o(),e("div",null,[i,k,r,n("ul",null,[n("li",null,[n("a",d,[s("官方文档"),p(a)])]),n("li",null,[n("a",m,[s("源代码"),p(a)])])]),v,n("ul",null,[n("li",null,[n("a",b,[s("Pandas 教程"),p(a)])]),n("li",null,[n("a",g,[s("numpy 教程"),p(a)])]),n("li",null,[n("a",f,[s("正则表达式语法"),p(a)])])]),_])}const S=t(l,[["render",y],["__file","pandas.html.vue"]]);export{S as default};
