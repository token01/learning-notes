import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,a as n,b as a,d as e,f as t,r}from"./app.da5f94a0.js";const i={},l=t('<blockquote><p>\u6D45\u8C08\u4EE5\u592A\u574A\u6E90\u7801\u5206\u6790\u4E4Brlpx\u534F\u8BAE</p></blockquote><p>\u672C\u6587\u4E3B\u8981\u53C2\u8003\u81EAeth\u5B98\u65B9\u6587\u6863\uFF1A<a href="">rlpx\u534F\u8BAE</a></p><h2 id="\u7B26\u53F7" tabindex="-1"><a class="header-anchor" href="#\u7B26\u53F7" aria-hidden="true">#</a> \u7B26\u53F7</h2><ul><li><code>X || Y</code>\uFF1A\u8868\u793AX\u548CY\u7684\u4E32\u8054</li><li><code>X ^ Y</code>\uFF1A X\u548CY\u6309\u4F4D\u5F02\u6216</li><li><code>X[:N]</code>\uFF1AX\u7684\u524DN\u4E2A\u5B57\u8282</li><li><code>[X, Y, Z, ...]</code>\uFF1A[X, Y, Z, ...]\u7684RLP\u9012\u5F52\u7F16\u7801</li><li><code>keccak256(MESSAGE)</code>\uFF1A\u4EE5\u592A\u574A\u4F7F\u7528\u7684keccak256\u54C8\u5E0C\u7B97\u6CD5</li><li><code>ecies.encrypt(PUBKEY, MESSAGE, AUTHDATA)</code>\uFF1ARLPx\u4F7F\u7528\u7684\u975E\u5BF9\u79F0\u8EAB\u4EFD\u9A8C\u8BC1\u52A0\u5BC6\u51FD\u6570 AUTHDATA\u662F\u8EAB\u4EFD\u8BA4\u8BC1\u7684\u6570\u636E\uFF0C\u5E76\u975E\u5BC6\u6587\u7684\u4E00\u90E8\u5206 \u4F46\u662FAUTHDATA\u4F1A\u5728\u751F\u6210\u6D88\u606Ftag\u524D\uFF0C\u5199\u5165HMAC-256\u54C8\u5E0C\u51FD\u6570</li><li><code>ecdh.agree(PRIVKEY, PUBKEY)</code>\uFF1A\u662FPRIVKEY\u548CPUBKEY\u4E4B\u95F4\u7684\u692D\u5706\u66F2\u7EBFDiffie-Hellman\u534F\u5546\u51FD\u6570</li></ul><hr><h2 id="ecies\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#ecies\u52A0\u5BC6" aria-hidden="true">#</a> ECIES\u52A0\u5BC6</h2><p>ECIES (Elliptic Curve Integrated Encryption Scheme) \u975E\u5BF9\u79F0\u52A0\u5BC6\u7528\u4E8ERLPx\u63E1\u624B\u3002RLPx\u4F7F\u7528\u7684\u52A0\u5BC6\u7CFB\u7EDF\uFF1A</p><ul><li>\u692D\u5706\u66F2\u7EBFsecp256k1\u57FA\u70B9<code>G</code></li><li><code>KDF(k, len)</code>\uFF1A\u5BC6\u94A5\u63A8\u5BFC\u51FD\u6570 NIST SP 800-56 Concatenation</li><li><code>MAC(k, m)</code>\uFF1AHMAC\u51FD\u6570\uFF0C\u4F7F\u7528\u4E86SHA-256\u54C8\u5E0C</li><li><code>AES(k, iv, m)</code>\uFF1AAES-128\u5BF9\u79F0\u52A0\u5BC6\u51FD\u6570\uFF0CCTR\u6A21\u5F0F</li></ul><p>\u5047\u8BBEAlice\u60F3\u53D1\u9001\u52A0\u5BC6\u6D88\u606F\u7ED9Bob\uFF0C\u5E76\u4E14\u5E0C\u671BBob\u53EF\u4EE5\u7528\u4ED6\u7684\u9759\u6001\u79C1\u94A5<code>kB</code>\u89E3\u5BC6\u3002Alice\u77E5\u9053Bob\u7684\u9759\u6001\u516C\u94A5<code>KB</code>\u3002</p><p>Alice\u4E3A\u4E86\u5BF9\u6D88\u606F<code>m</code>\u8FDB\u884C\u52A0\u5BC6\uFF1A</p><ol><li>\u751F\u6210\u4E00\u4E2A\u968F\u673A\u6570<code>r</code>\u5E76\u751F\u6210\u5BF9\u5E94\u7684\u692D\u5706\u66F2\u7EBF\u516C\u94A5<code>R = r * G</code></li><li>\u8BA1\u7B97\u5171\u4EAB\u5BC6\u7801<code>S = Px</code>\uFF0C\u5176\u4E2D <code>(Px, Py) = r * KB</code></li><li>\u63A8\u5BFC\u52A0\u5BC6\u53CA\u8BA4\u8BC1\u6240\u9700\u7684\u5BC6\u94A5<code>kE || kM = KDF(S, 32)</code>\u4EE5\u53CA\u968F\u673A\u5411\u91CF<code>iv</code></li><li>\u4F7F\u7528AES\u52A0\u5BC6 <code>c = AES(kE, iv, m)</code></li><li>\u8BA1\u7B97MAC\u6821\u9A8C <code>d = MAC(keccak256(kM), iv || c)</code></li><li>\u53D1\u9001\u5B8C\u6574\u5BC6\u6587<code>R || iv || c || d</code>\u7ED9Bob</li></ol><p>Bob\u5BF9\u5BC6\u6587<code>R || iv || c || d</code>\u8FDB\u884C\u89E3\u5BC6\uFF1A</p><ol><li>\u63A8\u5BFC\u5171\u4EAB\u5BC6\u7801<code>S = Px</code>, \u5176\u4E2D<code>(Px, Py) = r * KB = kB * R</code></li><li>\u63A8\u5BFC\u52A0\u5BC6\u8BA4\u8BC1\u7528\u7684\u5BC6\u94A5<code>kE || kM = KDF(S, 32)</code></li><li>\u9A8C\u8BC1MAC<code>d = MAC(keccak256(kM), iv || c)</code></li><li>\u83B7\u5F97\u660E\u6587<code>m = AES(kE, iv || c)</code></li></ol><hr><h2 id="\u8282\u70B9\u8EAB\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u8282\u70B9\u8EAB\u4EFD" aria-hidden="true">#</a> \u8282\u70B9\u8EAB\u4EFD</h2><p>\u6240\u6709\u7684\u52A0\u5BC6\u64CD\u4F5C\u90FD\u57FA\u4E8E<strong>secp256k1</strong>\u692D\u5706\u66F2\u7EBF\u3002\u6BCF\u4E2A\u8282\u70B9\u7EF4\u62A4\u4E00\u4E2A\u9759\u6001\u7684<strong>secp256k1</strong>\u79C1\u94A5\u3002\u5EFA\u8BAE\u8BE5\u79C1\u94A5\u53EA\u80FD\u8FDB\u884C\u624B\u52A8\u91CD\u7F6E\uFF08\u4F8B\u5982\u5220\u9664\u6587\u4EF6\u6216\u6570\u636E\u5E93\u6761\u76EE\uFF09\u3002</p><hr><h2 id="\u63E1\u624B\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u63E1\u624B\u6D41\u7A0B" aria-hidden="true">#</a> \u63E1\u624B\u6D41\u7A0B</h2><p>RLPx\u8FDE\u63A5\u57FA\u4E8ETCP\u901A\u4FE1\uFF0C\u5E76\u4E14\u6BCF\u6B21\u901A\u4FE1\u90FD\u4F1A\u751F\u6210\u968F\u673A\u7684\u4E34\u65F6\u5BC6\u94A5\u7528\u4E8E\u52A0\u5BC6\u548C\u9A8C\u8BC1\u3002\u751F\u6210\u4E34\u65F6\u5BC6\u94A5\u7684\u8FC7\u7A0B\u88AB\u79F0\u4F5C\u201C\u63E1\u624B\u201D (handshake)\uFF0C\u63E1\u624B\u5728\u53D1\u8D77\u7AEF\uFF08initiator, \u53D1\u8D77TCP\u8FDE\u63A5\u8BF7\u6C42\u7684\u8282\u70B9\uFF09\u548C\u63A5\u6536\u7AEF\uFF08recipient, \u63A5\u53D7\u8FDE\u63A5\u7684\u8282\u70B9\uFF09\u4E4B\u95F4\u8FDB\u884C\u3002</p>',19),d=t("<li>\u53D1\u8D77\u7AEF\u5411\u63A5\u6536\u7AEF\u53D1\u8D77TCP\u8FDE\u63A5\uFF0C\u53D1\u9001<code>auth</code>\u6D88\u606F</li><li>\u63A5\u6536\u7AEF\u63A5\u53D7\u8FDE\u63A5\uFF0C\u89E3\u5BC6\u3001\u9A8C\u8BC1<code>auth</code>\u6D88\u606F\uFF08\u68C0\u67E5recovery of signature == <code>keccak256(ephemeral-pubk)</code>\uFF09</li><li>\u63A5\u6536\u7AEF\u901A\u8FC7<code>remote-ephemeral-pubk</code> \u548C <code>nonce</code>\u751F\u6210<code>auth-ack</code>\u6D88\u606F</li>",3),u={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00",target:"_blank",rel:"noopener noreferrer"},k=n("li",null,[a("\u53D1\u8D77\u7AEF\u63A5\u6536\u5230"),n("code",null,"auth-ack"),a("\u6D88\u606F\uFF0C\u5BFC\u51FA\u5BC6\u94A5")],-1),m={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"\u63A5\u6536\u7AEF\u63A5\u6536\u5E76\u9A8C\u8BC1\u9996\u4E2A\u52A0\u5BC6\u540E\u7684\u6570\u636E\u5E27",-1),v=n("li",null,"\u53D1\u8D77\u7AEF\u63A5\u6536\u5E76\u9A8C\u8BC1\u9996\u4E2A\u52A0\u5BC6\u540E\u7684\u6570\u636E\u5E27",-1),g=n("li",null,"\u5982\u679C\u4E24\u8FB9\u7684\u9996\u4E2A\u52A0\u5BC6\u6570\u636E\u5E27\u7684MAC\u90FD\u9A8C\u8BC1\u901A\u8FC7\uFF0C\u5219\u52A0\u5BC6\u63E1\u624B\u5B8C\u6210",-1),b=t(`<p>\u5982\u679C\u9996\u4E2A\u6570\u636E\u5E27\u7684\u9A8C\u8BC1\u5931\u8D25\uFF0C\u5219\u4EFB\u610F\u4E00\u65B9\u90FD\u53EF\u4EE5\u65AD\u5F00\u8FDE\u63A5\u3002</p><h3 id="\u63E1\u624B\u6D88\u606F" tabindex="-1"><a class="header-anchor" href="#\u63E1\u624B\u6D88\u606F" aria-hidden="true">#</a> \u63E1\u624B\u6D88\u606F</h3><p><strong>\u53D1\u9001\u7AEF\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>auth <span class="token operator">=</span> auth<span class="token operator">-</span>size <span class="token operator">||</span> enc<span class="token operator">-</span>auth<span class="token operator">-</span>body
auth<span class="token operator">-</span>size <span class="token operator">=</span> size of enc<span class="token operator">-</span>auth<span class="token operator">-</span>body<span class="token punctuation">,</span> encoded as a big<span class="token operator">-</span>endian <span class="token number">16</span><span class="token operator">-</span>bit integer
auth<span class="token operator">-</span>vsn <span class="token operator">=</span> <span class="token number">4</span>
auth<span class="token operator">-</span>body <span class="token operator">=</span> <span class="token punctuation">[</span>sig<span class="token punctuation">,</span> initiator<span class="token operator">-</span>pubk<span class="token punctuation">,</span> initiator<span class="token operator">-</span>nonce<span class="token punctuation">,</span> auth<span class="token operator">-</span>vsn<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span>
enc<span class="token operator">-</span>auth<span class="token operator">-</span>body <span class="token operator">=</span> ecies<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>recipient<span class="token operator">-</span>pubk<span class="token punctuation">,</span> auth<span class="token operator">-</span>body <span class="token operator">||</span> auth<span class="token operator">-</span>padding<span class="token punctuation">,</span> auth<span class="token operator">-</span>size<span class="token punctuation">)</span>
auth<span class="token operator">-</span>padding <span class="token operator">=</span> arbitrary data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63A5\u6536\u7AEF\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ack <span class="token operator">=</span> ack<span class="token operator">-</span>size <span class="token operator">||</span> enc<span class="token operator">-</span>ack<span class="token operator">-</span>body
ack<span class="token operator">-</span>size <span class="token operator">=</span> size of enc<span class="token operator">-</span>ack<span class="token operator">-</span>body<span class="token punctuation">,</span> encoded as a big<span class="token operator">-</span>endian <span class="token number">16</span><span class="token operator">-</span>bit integer
ack<span class="token operator">-</span>vsn <span class="token operator">=</span> <span class="token number">4</span>
ack<span class="token operator">-</span>body <span class="token operator">=</span> <span class="token punctuation">[</span>recipient<span class="token operator">-</span>ephemeral<span class="token operator">-</span>pubk<span class="token punctuation">,</span> recipient<span class="token operator">-</span>nonce<span class="token punctuation">,</span> ack<span class="token operator">-</span>vsn<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span>
enc<span class="token operator">-</span>ack<span class="token operator">-</span>body <span class="token operator">=</span> ecies<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>initiator<span class="token operator">-</span>pubk<span class="token punctuation">,</span> ack<span class="token operator">-</span>body <span class="token operator">||</span> ack<span class="token operator">-</span>padding<span class="token punctuation">,</span> ack<span class="token operator">-</span>size<span class="token punctuation">)</span>
ack<span class="token operator">-</span>padding <span class="token operator">=</span> arbitrary data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u5FC5\u987B\u5FFD\u7565<code>auth-vsn</code> \u548C <code>ack-vsn</code>\u4E2D\u7684\u6240\u6709\u4E0D\u5339\u914D\u3002</p><p>\u5B9E\u73B0\u5FC5\u987B\u5FFD\u7565<code>auth-body</code> \u548C <code>ack-body</code>\u4E2D\u7684\u6240\u6709\u989D\u5916\u5217\u8868\u5143\u7D20\u3002</p><p>\u63E1\u624B\u6D88\u606F\u4E92\u6362\u540E\uFF0C\u5BC6\u94A5\u751F\u6210\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>static<span class="token operator">-</span>shared<span class="token operator">-</span>secret <span class="token operator">=</span> ecdh<span class="token punctuation">.</span><span class="token function">agree</span><span class="token punctuation">(</span>privkey<span class="token punctuation">,</span> remote<span class="token operator">-</span>pubk<span class="token punctuation">)</span>
ephemeral<span class="token operator">-</span>key <span class="token operator">=</span> ecdh<span class="token punctuation">.</span><span class="token function">agree</span><span class="token punctuation">(</span>ephemeral<span class="token operator">-</span>privkey<span class="token punctuation">,</span> remote<span class="token operator">-</span>ephemeral<span class="token operator">-</span>pubk<span class="token punctuation">)</span>
shared<span class="token operator">-</span>secret <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>ephemeral<span class="token operator">-</span>key <span class="token operator">||</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>nonce <span class="token operator">||</span> initiator<span class="token operator">-</span>nonce<span class="token punctuation">)</span><span class="token punctuation">)</span>
aes<span class="token operator">-</span>secret <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>ephemeral<span class="token operator">-</span>key <span class="token operator">||</span> shared<span class="token operator">-</span>secret<span class="token punctuation">)</span>
mac<span class="token operator">-</span>secret <span class="token operator">=</span> <span class="token function">keccak256</span><span class="token punctuation">(</span>ephemeral<span class="token operator">-</span>key <span class="token operator">||</span> aes<span class="token operator">-</span>secret<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E27\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5E27\u7ED3\u6784" aria-hidden="true">#</a> \u5E27\u7ED3\u6784</h2><p>\u63E1\u624B\u540E\u6240\u6709\u7684\u6D88\u606F\u90FD\u6309\u5E27 (frame) \u4F20\u8F93\u3002\u4E00\u5E27\u6570\u636E\u643A\u5E26\u5C5E\u4E8E\u67D0\u4E00\u529F\u80FD\u7684\u4E00\u6761\u52A0\u5BC6\u6D88\u606F\u3002</p><p>\u5206\u5E27\u4F20\u8F93\u7684\u4E3B\u8981\u76EE\u7684\u662F\u5728\u5355\u4E00\u8FDE\u63A5\u4E0A\u5B9E\u73B0\u53EF\u9760\u7684\u652F\u6301\u591A\u8DEF\u590D\u7528\u534F\u8BAE\u3002\u5176\u6B21\uFF0C\u56E0\u6570\u636E\u5305\u5206\u5E27\uFF0C\u4E3A\u6D88\u606F\u8BA4\u8BC1\u7801\u4EA7\u751F\u4E86\u9002\u5F53\u7684\u5206\u754C\u70B9\uFF0C\u4F7F\u5F97\u52A0\u5BC6\u6D41\u53D8\u5F97\u7B80\u5355\u4E86\u3002\u901A\u8FC7\u63E1\u624B\u751F\u6210\u7684\u5BC6\u94A5\u5BF9\u6570\u636E\u5E27\u8FDB\u884C\u52A0\u5BC6\u548C\u9A8C\u8BC1\u3002</p><p>\u5E27\u5934\u63D0\u4F9B\u5173\u4E8E\u6D88\u606F\u5927\u5C0F\u548C\u6D88\u606F\u6E90\u529F\u80FD\u7684\u4FE1\u606F\u3002\u586B\u5145\u5B57\u8282\u7528\u4E8E\u9632\u6B62\u7F13\u5B58\u533A\u4E0D\u8DB3\uFF0C\u4F7F\u5F97\u5E27\u7EC4\u4EF6\u6309\u6307\u5B9A\u533A\u5757\u5B57\u8282\u5927\u5C0F\u5BF9\u9F50\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>frame <span class="token operator">=</span> header<span class="token operator">-</span>ciphertext <span class="token operator">||</span> header<span class="token operator">-</span>mac <span class="token operator">||</span> frame<span class="token operator">-</span>ciphertext <span class="token operator">||</span> frame<span class="token operator">-</span>mac
header<span class="token operator">-</span>ciphertext <span class="token operator">=</span> <span class="token function">aes</span><span class="token punctuation">(</span>aes<span class="token operator">-</span>secret<span class="token punctuation">,</span> header<span class="token punctuation">)</span>
header <span class="token operator">=</span> frame<span class="token operator">-</span>size <span class="token operator">||</span> header<span class="token operator">-</span>data <span class="token operator">||</span> header<span class="token operator">-</span>padding
header<span class="token operator">-</span>data <span class="token operator">=</span> <span class="token punctuation">[</span>capability<span class="token operator">-</span>id<span class="token punctuation">,</span> context<span class="token operator">-</span>id<span class="token punctuation">]</span>
capability<span class="token operator">-</span>id <span class="token operator">=</span> integer<span class="token punctuation">,</span> always zero
context<span class="token operator">-</span>id <span class="token operator">=</span> integer<span class="token punctuation">,</span> always zero
header<span class="token operator">-</span>padding <span class="token operator">=</span> zero<span class="token operator">-</span>fill header to <span class="token number">16</span><span class="token operator">-</span><span class="token builtin">byte</span> boundary
frame<span class="token operator">-</span>ciphertext <span class="token operator">=</span> <span class="token function">aes</span><span class="token punctuation">(</span>aes<span class="token operator">-</span>secret<span class="token punctuation">,</span> frame<span class="token operator">-</span>data <span class="token operator">||</span> frame<span class="token operator">-</span>padding<span class="token punctuation">)</span>
frame<span class="token operator">-</span>padding <span class="token operator">=</span> zero<span class="token operator">-</span>fill frame<span class="token operator">-</span>data to <span class="token number">16</span><span class="token operator">-</span><span class="token builtin">byte</span> boundary
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="mac" tabindex="-1"><a class="header-anchor" href="#mac" aria-hidden="true">#</a> MAC</h2><p>RLPx\u4E2D\u7684\u6D88\u606F\u8BA4\u8BC1 (Message authentication) \u4F7F\u7528\u4E86\u4E24\u4E2Akeccak256\u72B6\u6001\uFF0C\u5206\u522B\u7528\u4E8E\u4E24\u4E2A\u4F20\u8F93\u65B9\u5411\u3002<code>egress-mac</code>\u548C<code>ingress-mac</code>\u5206\u522B\u4EE3\u8868\u53D1\u9001\u548C\u63A5\u6536\u72B6\u6001\uFF0C\u6BCF\u6B21\u53D1\u9001\u6216\u8005\u63A5\u6536\u5BC6\u6587\uFF0C\u5176\u72B6\u6001\u90FD\u4F1A\u66F4\u65B0\u3002\u521D\u59CB\u63E1\u624B\u540E\uFF0CMAC\u72B6\u6001\u521D\u59CB\u5316\u5982\u4E0B:</p><p><strong>\u53D1\u9001\u7AEF\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>egress<span class="token operator">-</span>mac <span class="token operator">=</span> keccak256<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mac<span class="token operator">-</span>secret <span class="token operator">^</span> recipient<span class="token operator">-</span>nonce<span class="token punctuation">)</span> <span class="token operator">||</span> auth<span class="token punctuation">)</span>
ingress<span class="token operator">-</span>mac <span class="token operator">=</span> keccak256<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mac<span class="token operator">-</span>secret <span class="token operator">^</span> initiator<span class="token operator">-</span>nonce<span class="token punctuation">)</span> <span class="token operator">||</span> ack<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63A5\u6536\u7AEF\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>egress<span class="token operator">-</span>mac <span class="token operator">=</span> keccak256<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mac<span class="token operator">-</span>secret <span class="token operator">^</span> initiator<span class="token operator">-</span>nonce<span class="token punctuation">)</span> <span class="token operator">||</span> ack<span class="token punctuation">)</span>
ingress<span class="token operator">-</span>mac <span class="token operator">=</span> keccak256<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mac<span class="token operator">-</span>secret <span class="token operator">^</span> recipient<span class="token operator">-</span>nonce<span class="token punctuation">)</span> <span class="token operator">||</span> auth<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u53D1\u9001\u4E00\u5E27\u6570\u636E\u65F6\uFF0C\u901A\u8FC7\u5373\u5C06\u53D1\u9001\u7684\u6570\u636E\u66F4\u65B0<code>egress-mac</code>\u72B6\u6001\uFF0C\u7136\u540E\u8BA1\u7B97\u76F8\u5E94\u7684MAC\u503C\u3002\u901A\u8FC7\u5C06\u5E27\u5934\u4E0E\u5176\u5BF9\u5E94MAC\u503C\u7684\u52A0\u5BC6\u8F93\u51FA\u5F02\u6216\u6765\u8FDB\u884C\u66F4\u65B0\u3002\u8FD9\u6837\u505A\u662F\u4E3A\u4E86\u786E\u4FDD\u5BF9\u660E\u6587MAC\u548C\u5BC6\u6587\u6267\u884C\u7EDF\u4E00\u64CD\u4F5C\u3002\u6240\u6709\u7684MAC\u503C\u90FD\u4EE5\u660E\u6587\u53D1\u9001\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>header-mac-seed = aes(mac-secret, keccak256.digest(egress-mac)[:16]) ^ header-ciphertext
egress-mac = keccak256.update(egress-mac, header-mac-seed)
header-mac = keccak256.digest(egress-mac)[:16]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8BA1\u7B97 <code>frame-mac</code></strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>egress-mac = keccak256.update(egress-mac, frame-ciphertext)
frame-mac-seed = aes(mac-secret, keccak256.digest(egress-mac)[:16]) ^ keccak256.digest(egress-mac)[:16]
egress-mac = keccak256.update(egress-mac, frame-mac-seed)
frame-mac = keccak256.digest(egress-mac)[:16]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u8981\u53D1\u9001\u8005\u548C\u63A5\u53D7\u8005\u6309\u76F8\u540C\u65B9\u5F0F\u66F4\u65B0<code>egress-mac</code>\u548C<code>ingress-mac</code>\uFF0C\u5E76\u4E14\u5728ingress\u5E27\u4E2D\u6BD4\u5BF9<code>header-mac</code> \u548C <code>frame-mac</code>\u7684\u503C\uFF0C\u5C31\u80FD\u5BF9ingress\u5E27\u4E2D\u7684MAC\u503C\u8FDB\u884C\u6821\u9A8C\u3002\u8FD9\u4E00\u6B65\u5E94\u5F53\u5728\u89E3\u5BC6<code>header-ciphertext</code> \u548C <code>frame-ciphertext</code>\u4E4B\u524D\u5B8C\u6210\u3002</p><hr><h2 id="\u529F\u80FD\u6D88\u606F" tabindex="-1"><a class="header-anchor" href="#\u529F\u80FD\u6D88\u606F" aria-hidden="true">#</a> \u529F\u80FD\u6D88\u606F</h2><p>\u521D\u59CB\u63E1\u624B\u540E\u7684\u6240\u6709\u6D88\u606F\u5747\u4E0E\u201C\u529F\u80FD\u201D\u76F8\u5173\u3002\u5355\u4E2ARLPx\u8FDE\u63A5\u4E0A\u5C31\u53EF\u4EE5\u540C\u65F6\u4F7F\u7528\u4EFB\u4F55\u6570\u91CF\u7684\u529F\u80FD\u3002</p>`,30),x={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00",target:"_blank",rel:"noopener noreferrer"},f=t(`<h3 id="\u6D88\u606F\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#\u6D88\u606F\u7F16\u7801" aria-hidden="true">#</a> \u6D88\u606F\u7F16\u7801</h3><p>\u521D\u59CBHello\u6D88\u606F\u7F16\u7801\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>frame-data = msg-id || msg-data
frame-size = length of frame-data, encoded as a 24bit big-endian integer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>msg-id</code>\u662F\u6807\u8BC6\u6D88\u606F\u7684\u7531RLP\u7F16\u7801\u7684\u6574\u6570\uFF0C<code>msg-data</code>\u662F\u5305\u542B\u6D88\u606F\u6570\u636E\u7684RLP\u5217\u8868\u3002</p><p>Hello\u4E4B\u540E\u7684\u6240\u6709\u6D88\u606F\u5747\u4F7F\u7528Snappy\u7B97\u6CD5\u538B\u7F29\u3002\u8BF7\u6CE8\u610F\uFF0C\u538B\u7F29\u6D88\u606F\u7684<code>frame-size</code>\u6307<code>msg-data</code>\u538B\u7F29\u524D\u7684\u5927\u5C0F\u3002\u6D88\u606F\u7684\u538B\u7F29\u7F16\u7801\u4E3A:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>frame-data = msg-id || snappyCompress(msg-data)
frame-size = length of (msg-id || msg-data) encoded as a 24bit big-endian integer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u57FA\u4E8Emsg-id\u7684\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8Emsg-id\u7684\u590D\u7528" aria-hidden="true">#</a> \u57FA\u4E8E<code>msg-id</code>\u7684\u590D\u7528</h2><p>frame\u4E2D\u867D\u7136\u652F\u6301<code>capability-id</code>\uFF0C\u4F46\u662F\u5728\u672CRLPx\u7248\u672C\u4E2D\u5E76\u6CA1\u6709\u5C06\u8BE5\u5B57\u6BB5\u7528\u4E8E\u4E0D\u540C\u529F\u80FD\u4E4B\u95F4\u7684\u590D\u7528\uFF08\u5F53\u524D\u7248\u672C\u4EC5\u4F7F\u7528msg-id\u6765\u5B9E\u73B0\u590D\u7528\uFF09\u3002</p>`,8),_={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"msg-id\u5E94\u5F53\u5927\u4E8E0x11(0x00-0x10\u4FDD\u7559\u7528\u4E8E\u201C p2p\u201D\u529F\u80FD\uFF09\u3002",-1),P=n("hr",null,null,-1),R=n("h2",{id:"p2p\u529F\u80FD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#p2p\u529F\u80FD","aria-hidden":"true"},"#"),a(" p2p\u529F\u80FD")],-1),A={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#hello-0x00",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#disconnect-0x01",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#disconnect-0x01",target:"_blank",rel:"noopener noreferrer"},C=t(`<h3 id="hello-0x00" tabindex="-1"><a class="header-anchor" href="#hello-0x00" aria-hidden="true">#</a> Hello (0x00)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[protocolVersion: P, clientId: B, capabilities, listenPort: P, nodeKey: B_64, ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63E1\u624B\u5B8C\u6210\u540E\uFF0C\u53CC\u65B9\u53D1\u9001\u7684\u7B2C\u4E00\u5305\u6570\u636E\u3002\u5728\u6536\u5230Hello\u6D88\u606F\u524D\uFF0C\u4E0D\u80FD\u53D1\u9001\u4EFB\u4F55\u5176\u4ED6\u6D88\u606F\u3002\u5B9E\u73B0\u5FC5\u987B\u5FFD\u7565Hello\u6D88\u606F\u4E2D\u6240\u6709\u5176\u4ED6\u5217\u8868\u5143\u7D20\uFF0C\u56E0\u4E3A\u53EF\u80FD\u4F1A\u5728\u672A\u6765\u7248\u672C\u4E2D\u7528\u5230\u3002</p><ul><li><code>protocolVersion</code>\u5F53\u524Dp2p\u529F\u80FD\u7248\u672C\u4E3A\u7B2C5\u7248</li><li><code>clientId</code>\u8868\u793A\u5BA2\u6237\u7AEF\u8F6F\u4EF6\u8EAB\u4EFD\uFF0C\u4EBA\u7C7B\u53EF\u8BFB\u5B57\u7B26\u4E32, \u6BD4\u5982&quot;Ethereum(++)/1.0.0\u201C</li><li><code>capabilities</code>\u652F\u6301\u7684\u5B50\u534F\u8BAE\u5217\u8868\uFF0C\u540D\u79F0\u53CA\u5176\u7248\u672C\uFF1A<code>[[cap1, capVersion1], [cap2, capVersion2], ...]</code></li><li><code>listenPort</code>\u8282\u70B9\u7684\u6536\u542C\u7AEF\u53E3 (\u4F4D\u4E8E\u5F53\u524D\u8FDE\u63A5\u8DEF\u5F84\u7684\u63A5\u53E3)\uFF0C0\u8868\u793A\u6CA1\u6709\u6536\u542C</li><li><code>nodeId</code>secp256k1\u7684\u516C\u94A5\uFF0C\u5BF9\u5E94\u8282\u70B9\u79C1\u94A5</li></ul><h3 id="disconnect-0x01" tabindex="-1"><a class="header-anchor" href="#disconnect-0x01" aria-hidden="true">#</a> Disconnect (0x01)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[reason: P]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u901A\u77E5\u8282\u70B9\u65AD\u5F00\u8FDE\u63A5\u3002\u6536\u5230\u8BE5\u6D88\u606F\u540E\uFF0C\u8282\u70B9\u5E94\u5F53\u7ACB\u5373\u65AD\u5F00\u8FDE\u63A5\u3002\u5982\u679C\u662F\u53D1\u9001\uFF0C\u6B63\u5E38\u7684\u4E3B\u673A\u4F1A\u7ED9\u8282\u70B92\u79D2\u949F\u8BFB\u53D6\u65F6\u95F4\uFF0C\u4F7F\u5176\u4E3B\u52A8\u65AD\u5F00\u8FDE\u63A5\u3002</p><p><code>reason</code> \u4E00\u4E2A\u53EF\u9009\u6574\u6570\uFF0C\u8868\u793A\u65AD\u5F00\u8FDE\u63A5\u7684\u539F\u56E0\uFF1A</p><table><thead><tr><th>Reason</th><th>Meaning</th></tr></thead><tbody><tr><td><code>0x00</code></td><td>Disconnect requested</td></tr><tr><td><code>0x01</code></td><td>TCP sub-system error</td></tr><tr><td><code>0x02</code></td><td>Breach of protocol, e.g. a malformed message, bad RLP, ...</td></tr><tr><td><code>0x03</code></td><td>Useless peer</td></tr><tr><td><code>0x04</code></td><td>Too many peers</td></tr><tr><td><code>0x05</code></td><td>Already connected</td></tr><tr><td><code>0x06</code></td><td>Incompatible P2P protocol version</td></tr><tr><td><code>0x07</code></td><td>Null node identity received - this is automatically invalid</td></tr><tr><td><code>0x08</code></td><td>Client quitting</td></tr><tr><td><code>0x09</code></td><td>Unexpected identity in handshake</td></tr><tr><td><code>0x0a</code></td><td>Identity is the same as this node (i.e. connected to itself)</td></tr><tr><td><code>0x0b</code></td><td>Ping timeout</td></tr><tr><td><code>0x10</code></td><td>Some other reason specific to a subprotocol</td></tr></tbody></table><h3 id="ping-0x02" tabindex="-1"><a class="header-anchor" href="#ping-0x02" aria-hidden="true">#</a> Ping (0x02)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),S={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#pong-0x03",target:"_blank",rel:"noopener noreferrer"},H=t(`<h3 id="pong-0x03" tabindex="-1"><a class="header-anchor" href="#pong-0x03" aria-hidden="true">#</a> Pong (0x03)</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),L={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md#ping-0x02",target:"_blank",rel:"noopener noreferrer"},B=t(`<hr><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><h3 id="\u4E3B\u8981\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u4E3B\u8981\u529F\u80FD" aria-hidden="true">#</a> \u4E3B\u8981\u529F\u80FD</h3><h4 id="\u8FD4\u56DE\u4F20\u8F93\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u4F20\u8F93\u5BF9\u8C61" aria-hidden="true">#</a> \u8FD4\u56DE\u4F20\u8F93\u5BF9\u8C61</h4><blockquote><p>\u8FD4\u56DE\u4E00\u4E2Atransport\u5BF9\u8C61,\u8FDE\u63A5\u6301\u7EED5\u79D2</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// handshakeTimeout 5</span>
<span class="token keyword">func</span> <span class="token function">newRLPX</span><span class="token punctuation">(</span>fd net<span class="token punctuation">.</span>Conn<span class="token punctuation">)</span> transport <span class="token punctuation">{</span>
<span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u8BFB\u53D6\u6D88\u606F" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u6D88\u606F" aria-hidden="true">#</a> \u8BFB\u53D6\u6D88\u606F</h4><blockquote><p>\u8FD4\u56DEMsg\u5BF9\u8C61,\u8C03\u7528\u8BFB\u5199\u5668\u7684ReadMsg,\u8FDE\u63A5\u6301\u7EED30\u79D2</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>rlpx<span class="token punctuation">)</span> <span class="token function">ReadMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Msg<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span>
 t<span class="token punctuation">.</span>fd<span class="token punctuation">.</span><span class="token function">SetReadDeadline</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>frameReadTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5199\u5165\u6D88\u606F" tabindex="-1"><a class="header-anchor" href="#\u5199\u5165\u6D88\u606F" aria-hidden="true">#</a> \u5199\u5165\u6D88\u606F</h4><blockquote><p>\u8C03\u7528\u8BFB\u5199\u5668\u7684WriteMsg\u5199\u4FE1\u606F,\u8FDE\u63A5\u6301\u7EED20\u79D2</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>rlpx<span class="token punctuation">)</span> <span class="token function">WriteMsg</span><span class="token punctuation">(</span>msg Msg<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
 t<span class="token punctuation">.</span>fd<span class="token punctuation">.</span><span class="token function">SetWriteDeadline</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>frameWriteTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u534F\u8BAE\u7248\u672C\u63E1\u624B" tabindex="-1"><a class="header-anchor" href="#\u534F\u8BAE\u7248\u672C\u63E1\u624B" aria-hidden="true">#</a> \u534F\u8BAE\u7248\u672C\u63E1\u624B</h4><blockquote><p>\u534F\u8BAE\u63E1\u624B,\u8F93\u5165\u8F93\u51FA\u5747\u662FprotoHandshake\u5BF9\u8C61,\u5305\u542B\u4E86\u7248\u672C\u53F7\u3001\u540D\u79F0\u3001\u5BB9\u91CF\u3001\u7AEF\u53E3\u53F7\u3001ID\u548C\u4E00\u4E2A\u6269\u5C55\u5C5E\u6027,\u63E1\u624B\u65F6\u4F1A\u5BF9\u8FD9\u4E9B\u4FE1\u606F\u8FDB\u884C\u9A8C\u8BC1</p></blockquote><h4 id="\u52A0\u5BC6\u63E1\u624B" tabindex="-1"><a class="header-anchor" href="#\u52A0\u5BC6\u63E1\u624B" aria-hidden="true">#</a> \u52A0\u5BC6\u63E1\u624B</h4><blockquote><p>\u63E1\u624B\u65F6\u4E3B\u52A8\u53D1\u8D77\u8005\u53EB<strong>initiator</strong></p><p>\u63A5\u6536\u65B9\u53EB<strong>receiver</strong></p><p>\u5206\u522B\u5BF9\u5E94\u4E24\u79CD\u5904\u7406\u65B9\u5F0F<strong>initiatorEncHandshake</strong>\u548CreceiverEncHandshake</p><p>\u4E24\u79CD\u5904\u7406\u65B9\u5F0F\u6210\u529F\u4EE5\u540E\u90FD\u4F1A\u5F97\u5230\u4E00\u4E2A<strong>secrets</strong>\u5BF9\u8C61,\u4FDD\u5B58\u4E86\u5171\u4EAB\u5BC6\u94A5\u4FE1\u606F,\u5B83\u4F1A\u8DDF\u539F\u6709\u7684<strong>net.Conn</strong>\u5BF9\u8C61\u4E00\u8D77\u751F\u6210\u4E00\u4E2A\u5E27\u5904\u7406\u5668:<strong>rlpxFrameRW</strong></p><p>\u63E1\u624B\u53CC\u65B9\u4F7F\u7528\u5230\u7684\u4FE1\u606F\u6709:\u5404\u81EA\u7684\u516C\u79C1\u94A5\u5730\u5740\u5BF9**(iPrv,iPub,rPrv,rPub)<strong>\u3001\u5404\u81EA\u751F\u6210\u7684\u968F\u673A\u516C\u79C1\u94A5\u5BF9</strong>(iRandPrv,iRandPub,rRandPrv,rRandPub)<strong>\u3001\u5404\u81EA\u751F\u6210\u7684\u4E34\u65F6\u968F\u673A\u6570</strong>(initNonce,respNonce).** \u5176\u4E2Di\u5F00\u5934\u7684\u8868\u793A\u53D1\u8D77\u65B9**(initiator)<strong>\u4FE1\u606F,r\u5F00\u5934\u7684\u8868\u793A\u63A5\u6536\u65B9</strong>(receiver)**\u4FE1\u606F.</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>rlpx<span class="token punctuation">)</span> <span class="token function">doEncHandshake</span><span class="token punctuation">(</span>prv <span class="token operator">*</span>ecdsa<span class="token punctuation">.</span>PrivateKey<span class="token punctuation">,</span> dial <span class="token operator">*</span>ecdsa<span class="token punctuation">.</span>PublicKey<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ecdsa<span class="token punctuation">.</span>PublicKey<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> <span class="token punctuation">(</span>
  sec secrets
  err <span class="token builtin">error</span>
 <span class="token punctuation">)</span>
 <span class="token keyword">if</span> dial <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  sec<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">receiverEncHandshake</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> prv<span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536\u8005</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  sec<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">initiatorEncHandshake</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> prv<span class="token punctuation">,</span> dial<span class="token punctuation">)</span> <span class="token comment">//\u4E3B\u52A8\u53D1\u8D77\u8005</span>
 <span class="token punctuation">}</span>
<span class="token operator">...</span>
 t<span class="token punctuation">.</span>rw <span class="token operator">=</span> <span class="token function">newRLPXFrameRW</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>fd<span class="token punctuation">,</span> sec<span class="token punctuation">)</span>
 t<span class="token punctuation">.</span>wmu<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">return</span> sec<span class="token punctuation">.</span>Remote<span class="token punctuation">.</span><span class="token function">ExportECDSA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u5C31\u8BB2\u89E3\u4E00\u4E0B\u4E3B\u52A8\u63E1\u624B\u90E8\u5206\u6E90\u7801<code>initiatorEncHandshake</code>\uFF1A</p><p>\u2460\uFF1A\u521D\u59CB\u5316\u63E1\u624B\u5BF9\u8C61</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>h := &amp;encHandshake{initiator: true, remote: ecies.ImportECDSAPublic(remote)}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2461\uFF1A\u751F\u6210\u9A8C\u8BC1\u4FE1\u606F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>authMsg<span class="token punctuation">,</span> err <span class="token operator">:=</span> h<span class="token punctuation">.</span><span class="token function">makeAuthMsg</span><span class="token punctuation">(</span>prv<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>func (h *encHandshake) makeAuthMsg(prv *ecdsa.PrivateKey) (*authMsgV4, error) {
 // \u751F\u6210\u5DF1\u65B9\u968F\u673A\u6570initNonce
 h.initNonce = make([]byte, shaLen)
 _, err := rand.Read(h.initNonce)
...
 }
// \u751F\u6210\u968F\u673A\u7684\u4E00\u7EC4\u516C\u79C1\u94A5\u5BF9
 h.randomPrivKey, err = ecies.GenerateKey(rand.Reader, crypto.S256(), nil)
...
 }
 // \u751F\u6210\u9759\u6001\u5171\u4EAB\u79D8\u5BC6token(\u7528\u5DF1\u65B9\u79C1\u94A5\u548C\u5BF9\u65B9\u516C\u94A5\u8FDB\u884C\u6709\u9650\u57DF\u4E58\u6CD5)
 token, err := h.staticSharedSecret(prv)
 ...
 }
//  \u548C\u5DF1\u65B9\u968F\u673A\u6570\u5F02\u6216\u540E\u7528\u968F\u673A\u751F\u6210\u7684\u79C1\u94A5\u7B7E\u540D
 signed := xor(token, h.initNonce)
 signature, err := crypto.Sign(signed, h.randomPrivKey.ExportECDSA())
...
 }
...
 return msg, nil
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5C01\u5305,\u5C06\u9A8C\u8BC1\u4FE1\u606F\u548C\u63E1\u624B\u8FDB\u884Crlp\u7F16\u7801\u5E76\u62FC\u63A5\u524D\u7F00\u4FE1\u606F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>authPacket<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">sealEIP8</span><span class="token punctuation">(</span>authMsg<span class="token punctuation">,</span> h<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2463\uFF1A\u901A\u8FC7conn\u53D1\u9001\u6D88\u606F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>conn<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>authPacket<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2464\uFF1A\u5904\u7406\u63A5\u6536\u7684\u4FE1\u606F,\u5F97\u5230\u54CD\u5E94\u5305</p><blockquote><p><code>readHandshakeMsg</code>\u6BD4\u8F83\u7B80\u5355\u3002 \u9996\u5148\u7528\u4E00\u79CD\u683C\u5F0F\u5C1D\u8BD5\u89E3\u7801\u3002\u5982\u679C\u4E0D\u884C\u5C31\u6362\u53E6\u5916\u4E00\u79CD\u3002\u5E94\u8BE5\u662F\u4E00\u79CD\u517C\u5BB9\u6027\u7684\u8BBE\u7F6E\u3002 \u57FA\u672C\u4E0A\u5C31\u662F\u4F7F\u7528\u81EA\u5DF1\u7684\u79C1\u94A5\u8FDB\u884C\u89E3\u7801\u7136\u540E\u8C03\u7528rlp\u89E3\u7801\u6210\u7ED3\u6784\u4F53\u3002</p><p>\u7ED3\u6784\u4F53\u7684\u63CF\u8FF0\u5C31\u662F\u4E0B\u9762\u7684authRespV4,\u91CC\u9762\u6700\u91CD\u8981\u7684\u5C31\u662F\u5BF9\u7AEF\u7684\u968F\u673A\u516C\u94A5\u3002 \u53CC\u65B9\u901A\u8FC7\u81EA\u5DF1\u7684\u79C1\u94A5\u548C\u5BF9\u7AEF\u7684\u968F\u673A\u516C\u94A5\u53EF\u4EE5\u5F97\u5230\u4E00\u6837\u7684\u5171\u4EAB\u79D8\u5BC6\u3002 \u800C\u8FD9\u4E2A\u5171\u4EAB\u79D8\u5BC6\u662F\u7B2C\u4E09\u65B9\u62FF\u4E0D\u5230\u7684</p></blockquote><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code> authRespMsg := new(authRespV4)
 authRespPacket, err := readHandshakeMsg(authRespMsg, encAuthRespLen, prv, conn)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2465\uFF1A\u586B\u5145\u54CD\u5E94\u7684respNonce(\u5BF9\u65B9\u968F\u673A\u6570,\u751F\u6210\u5171\u4EAB\u79C1\u94A5\u7528)\u548CremoteRandomPub(\u5BF9\u65B9\u7684\u968F\u673A\u516C\u94A5)</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code> h.handleAuthResp(authRespMsg)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2466\uFF1A\u5C06\u8BF7\u6C42\u5305\u548C\u54CD\u5E94\u5305\u5C01\u88C5\u6210\u5171\u4EAB\u79D8\u5BC6(secrets)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>h<span class="token punctuation">.</span><span class="token function">secrets</span><span class="token punctuation">(</span>authPacket<span class="token punctuation">,</span> authRespPacket<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5230\u6B64RLPX \u76F8\u5173\u7684\u6BD4\u8F83\u91CD\u8981\u7684\u5185\u5BB9\u5C31\u89E3\u8BFB\u5DEE\u4E0D\u591A\u4E86\u3002</p><hr><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,37),K=n("p",null,"< /blockchainguide> \u2606 \u2606 \u2606 \u2606 \u2606",-1),q={href:"https://mindcarver.cn/",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/ethereum/devp2p/blob/master/rlpx.md",target:"_blank",rel:"noopener noreferrer"};function w(D,G){const s=r("ExternalLinkIcon");return p(),c("div",null,[l,n("ol",null,[d,n("li",null,[a("\u63A5\u6536\u7AEF\u63A8\u5BFC\u5BC6\u94A5\uFF0C\u53D1\u9001\u9996\u4E2A\u5305\u542B"),n("a",u,[a("Hello"),e(s)]),a("\u6D88\u606F\u7684\u6570\u636E\u5E27 (frame)")]),k,n("li",null,[a("\u53D1\u8D77\u7AEF\u53D1\u9001\u9996\u4E2A\u52A0\u5BC6\u540E\u7684\u6570\u636E\u5E27\uFF0C\u5305\u542B\u53D1\u8D77\u7AEF"),n("a",m,[a("Hello"),e(s)]),a("\u6D88\u606F")]),h,v,g]),b,n("p",null,[a("\u529F\u80FD\u7531\u7B80\u77ED\u7684ASCII\u540D\u79F0\u548C\u7248\u672C\u53F7\u6807\u8BC6\u3002\u8FDE\u63A5\u4E24\u7AEF\u90FD\u652F\u6301\u7684\u529F\u80FD\u5728\u96B6\u5C5E\u4E8E\u201C p2p\u201D\u529F\u80FD\u7684"),n("a",x,[a("Hello"),e(s)]),a("\u6D88\u606F\u4E2D\u8FDB\u884C\u4EA4\u6362\uFF0Cp2p\u529F\u80FD\u9700\u8981\u5728\u6240\u6709\u8FDE\u63A5\u4E2D\u90FD\u53EF\u7528\u3002")]),f,n("p",null,[a("\u6BCF\u79CD\u529F\u80FD\u90FD\u4F1A\u6839\u636E\u9700\u8981\u5206\u914D\u5C3D\u53EF\u80FD\u591A\u7684msg-id\u7A7A\u95F4\u3002\u6240\u6709\u8FD9\u4E9B\u529F\u80FD\u6240\u9700\u7684msg-id\u7A7A\u95F4\u90FD\u5FC5\u987B\u901A\u8FC7\u9759\u6001\u6307\u5B9A\u3002\u5728\u8FDE\u63A5\u548C\u63A5\u6536"),n("a",_,[a("Hello"),e(s)]),a("\u6D88\u606F\u65F6\uFF0C\u4E24\u7AEF\u90FD\u5177\u6709\u5171\u4EAB\u529F\u80FD\uFF08\u5305\u62EC\u7248\u672C\uFF09\u7684\u5BF9\u7B49\u4FE1\u606F\uFF0C\u5E76\u4E14\u80FD\u591F\u5C31msg-id\u7A7A\u95F4\u8FBE\u6210\u5171\u8BC6\u3002")]),y,P,R,n("p",null,[a("\u6240\u6709\u8FDE\u63A5\u90FD\u5177\u6709\u201Cp2p\u201D\u529F\u80FD\u3002\u521D\u59CB\u63E1\u624B\u540E\uFF0C\u8FDE\u63A5\u7684\u4E24\u7AEF\u90FD\u5FC5\u987B\u53D1\u9001"),n("a",A,[a("Hello"),e(s)]),a("\u6216"),n("a",E,[a("Disconnect"),e(s)]),a("\u6D88\u606F\u3002\u5728\u63A5\u6536\u5230Hello\u6D88\u606F\u540E\uFF0C\u4F1A\u8BDD\u5C31\u8FDB\u5165\u6FC0\u6D3B\u72B6\u6001\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5F00\u59CB\u53D1\u9001\u5176\u4ED6\u6D88\u606F\u3002\u7531\u4E8E\u524D\u5411\u517C\u5BB9\u6027\uFF0C\u5B9E\u73B0\u5FC5\u987B\u5FFD\u7565\u534F\u8BAE\u7248\u672C\u4E2D\u7684\u6240\u6709\u5DEE\u5F02\u3002\u4E0E\u5904\u4E8E\u8F83\u4F4E\u7248\u672C\u7684\u8282\u70B9\u901A\u4FE1\u65F6\uFF0C\u5B9E\u73B0\u5E94\u5C1D\u8BD5\u9760\u8FD1\u8BE5\u7248\u672C\u3002")]),n("p",null,[a("\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u80FD\u4F1A\u6536\u5230"),n("a",M,[a("Disconnect"),e(s)]),a("\u6D88\u606F\u3002")]),C,n("p",null,[a("\u8981\u6C42\u8282\u70B9\u7ACB\u5373\u8FDB\u884C"),n("a",S,[a("Pong"),e(s)]),a("\u56DE\u590D\u3002")]),H,n("p",null,[a("\u56DE\u590D\u8282\u70B9\u7684"),n("a",L,[a("Ping"),e(s)]),a("\u5305\u3002")]),B,n("blockquote",null,[K,n("p",null,[n("a",q,[a("https://mindcarver.cn/"),e(s)]),a(" \u2606 \u2606 \u2606 \u2606 \u2606")]),n("p",null,[n("a",I,[a("https://github.com/ethereum/devp2p/blob/master/rlpx.md"),e(s)])])])])}const z=o(i,[["render",w],["__file","4.Etheric_fang_RLPX_agreement.html.vue"]]);export{z as default};
