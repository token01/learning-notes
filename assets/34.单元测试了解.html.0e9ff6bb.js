import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.a0a3f66a.js";const p={},o=t(`<h1 id="_34-\u5355\u5143\u6D4B\u8BD5\u4E86\u89E3" tabindex="-1"><a class="header-anchor" href="#_34-\u5355\u5143\u6D4B\u8BD5\u4E86\u89E3" aria-hidden="true">#</a> 34.\u5355\u5143\u6D4B\u8BD5\u4E86\u89E3</h1><p>\u4E0D\u5199\u6D4B\u8BD5\u7684\u5F00\u53D1\u4E0D\u662F\u597D\u7684\u7A0B\u5E8F\u733F\u3002Go\u8BED\u8A00\u4E2D\u7684\u6D4B\u8BD5\u4F9D\u8D56<code>go test</code>\u547D\u4EE4\u3002\u7F16\u5199\u6D4B\u8BD5\u4EE3\u7801\u548C\u7F16\u5199\u666E\u901A\u7684Go\u4EE3\u7801\u8FC7\u7A0B\u662F\u7C7B\u4F3C\u7684\uFF0C\u5E76\u4E0D\u9700\u8981\u5B66\u4E60\u65B0\u7684\u8BED\u6CD5\uFF0C\u89C4\u5219\u6216\u8005\u5DE5\u5177\u3002</p><h2 id="_1-go-test" tabindex="-1"><a class="header-anchor" href="#_1-go-test" aria-hidden="true">#</a> 1\uFF0Cgo test</h2><p><code>go test</code>\u547D\u4EE4\u662F\u4E00\u4E2A\u6309\u7167\u4E00\u5B9A\u7EA6\u5B9A\u548C\u7EC4\u7EC7\u7684\u6D4B\u8BD5\u4EE3\u7801\u7684\u9A71\u52A8\u7A0B\u5E8F\u3002\u5728\u5305\u76EE\u5F55\u5185\uFF0C\u6240\u6709\u4EE5<code>_test.go</code>\u4E3A\u540E\u7F00\u7684\u6E90\u4EE3\u7801\u6587\u4EF6\u90FD\u662F\u6D4B\u8BD5\u7684\u4E00\u90E8\u5206\uFF0C\u4E0D\u4F1A\u88AB<code>go build</code>\u7F16\u8BD1\u5230\u6700\u7EC8\u7684\u53EF\u6267\u884C\u6587\u4EF6\u4E2D\u3002</p><p>\u5728<code>*_test.go</code>\u6587\u4EF6\u4E2D\u6709\u4E09\u79CD\u7C7B\u578B\u7684\u51FD\u6570\uFF0C<code>\u5355\u5143\u6D4B\u8BD5\u51FD\u6570</code>\uFF0C<code>\u57FA\u51C6\u6D4B\u8BD5\u51FD\u6570</code>\u548C<code>\u793A\u4F8B\u51FD\u6570</code>\u3002</p><table><thead><tr><th style="text-align:center;">\u7C7B\u578B</th><th style="text-align:center;">\u683C\u5F0F</th><th style="text-align:center;">\u4F5C\u7528</th></tr></thead><tbody><tr><td style="text-align:center;">\u6D4B\u8BD5\u51FD\u6570</td><td style="text-align:center;">\u51FD\u6570\u540D\u524D\u7F00\u4E3ATest</td><td style="text-align:center;">\u6D4B\u8BD5\u7A0B\u5E8F\u7684\u4E00\u4E9B\u903B\u8F91\u884C\u4E3A\u662F\u5426\u6B63\u786E</td></tr><tr><td style="text-align:center;">\u57FA\u51C6\u51FD\u6570</td><td style="text-align:center;">\u51FD\u6570\u540D\u524D\u7F00\u4E3ABenchmark</td><td style="text-align:center;">\u6D4B\u8BD5\u51FD\u6570\u7684\u6027\u80FD</td></tr><tr><td style="text-align:center;">\u793A\u4F8B\u51FD\u6570</td><td style="text-align:center;">\u51FD\u6570\u540D\u524D\u7F00\u4E3AExample</td><td style="text-align:center;">\u4E3A\u6587\u6863\u63D0\u4F9B\u793A\u4F8B\u6587\u6863</td></tr></tbody></table><p><code>go test</code>\u547D\u4EE4\u4F1A\u904D\u5386\u6240\u6709\u7684<code>*_test.go</code>\u6587\u4EF6\u4E2D\u7B26\u5408\u4E0A\u8FF0\u547D\u540D\u89C4\u5219\u7684\u51FD\u6570\uFF0C\u7136\u540E\u751F\u6210\u4E00\u4E2A\u4E34\u65F6\u7684main\u5305\u7528\u4E8E\u8C03\u7528\u76F8\u5E94\u7684\u6D4B\u8BD5\u51FD\u6570\uFF0C\u7136\u540E\u6784\u5EFA\u5E76\u8FD0\u884C\uFF0C\u62A5\u544A\u6D4B\u8BD5\u7ED3\u679C\uFF0C\u6700\u540E\u6E05\u7406\u6D4B\u8BD5\u4E2D\u751F\u6210\u7684\u4E34\u65F6\u6587\u4EF6\u3002</p><h2 id="_2-\u6D4B\u8BD5\u51FD\u6570\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-\u6D4B\u8BD5\u51FD\u6570\u683C\u5F0F" aria-hidden="true">#</a> 2\uFF0C\u6D4B\u8BD5\u51FD\u6570\u683C\u5F0F</h2><p>\u6BCF\u4E2A\u6D4B\u8BD5\u51FD\u6570\u5FC5\u987B\u5BFC\u5165testing\u5305\uFF0C\u6D4B\u8BD5\u51FD\u6570\u57FA\u672C\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">TestName</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u51FD\u6570\u7684\u540D\u5B57\u5FC5\u987B\u4EE5Test\u5F00\u5934\uFF0C\u53EF\u9009\u7684\u540E\u7F00\u540D\u5FC5\u987B\u4EE5\u5927\u5199\u5B57\u6BCD\u5F00\u5934\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">TestAdd</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">TestSum</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u53C2\u6570<code>t</code>\u7528\u4E8E\u62A5\u544A\u6D4B\u8BD5\u5931\u8D25\u548C\u9644\u52A0\u7684\u65E5\u5FD7\u4FE1\u606F\u3002 <code>testing.T</code>\u7684\u62E5\u6709\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Errorf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">FailNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Failed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Fatal</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Fatalf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Log</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Logf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token operator">*</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Skip</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">SkipNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Skipf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token function">Skipped</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u6D4B\u8BD5\u51FD\u6570\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3-\u6D4B\u8BD5\u51FD\u6570\u793A\u4F8B" aria-hidden="true">#</a> 3\uFF0C\u6D4B\u8BD5\u51FD\u6570\u793A\u4F8B</h2><p>\u6A21\u62DF\u65E5\u5E38\u5F00\u53D1\u8FC7\u7A0B\uFF0C \u6211\u4EEC\u5148\u5199\u4E00\u4E2A\u529F\u80FD\u5355\u4E00\u7684\u7A0B\u5E8F\uFF0C\u8FD9\u4E2A\u7A0B\u5E8F\u53EF\u4EE5\u5206\u5272\u5B57\u7B26\u4E32\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token string">&quot;strings&quot;</span>

<span class="token comment">// Split \u5207\u5272\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
<span class="token keyword">func</span> <span class="token function">Split</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">,</span> sep <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> tmp <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
 index <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
 <span class="token keyword">for</span> index <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
  tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token punctuation">:</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  str <span class="token operator">=</span> str<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
  index <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">)</span>
 <span class="token keyword">return</span> tmp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u540C\u7EA7\u76EE\u5F55\u4E0B\uFF0C\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A <code>split_test.go</code>\u7684\u6D4B\u8BD5\u6587\u4EF6\uFF0C\u5E76\u5B9A\u4E49\u4E00\u4E2A\u6D4B\u8BD5\u51FD\u6570\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;reflect&quot;</span>
 <span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u6D4B\u8BD5\u51FD\u6570\u540D\u5FC5\u987B\u4EE5Test\u5F00\u5934\uFF0C\u5FC5\u987B\u63A5\u6536\u4E00\u4E2A*testing.T\u7C7B\u578B\u53C2\u6570</span>
<span class="token keyword">func</span> <span class="token function">TestSplit</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u7A0B\u5E8F\u8F93\u51FA\u7684\u7ED3\u679C</span>
 got <span class="token operator">:=</span> <span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;a:b:c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
 <span class="token comment">// \u671F\u671B\u7684\u7ED3\u679C</span>
 want <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span>
 <span class="token comment">// \u56E0\u4E3Aslice\u4E0D\u80FD\u6BD4\u8F83\u76F4\u63A5\uFF0C\u501F\u52A9\u53CD\u5C04\u5305\u4E2D\u7684\u65B9\u6CD5\u6BD4\u8F83</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6D4B\u8BD5\u5931\u8D25\u8F93\u51FA\u9519\u8BEF\u63D0\u793A</span>
  t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;test failed, want:%v but got:%v\\n&quot;</span><span class="token punctuation">,</span> want<span class="token punctuation">,</span> got<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Test2Split</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 got <span class="token operator">:=</span> <span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
 want <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">}</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;test failed, want:%v but got:%v\\n&quot;</span><span class="token punctuation">,</span> want<span class="token punctuation">,</span> got<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728\u8FD9\u4E2A\u76EE\u5F55\u4E2D\uFF0C\u76F4\u63A5\u8FD0\u884C <code>go test</code>\u53EF\u4EE5\u770B\u5230\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test 
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>005s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>go test -v</code>\u53EF\u4EE5\u770B\u5230\u8BE6\u7EC6\u5185\u5BB9\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>v
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test2Split
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> Test2Split <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>005s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u6D4B\u8BD5\u7528\u4F8B\u5F53\u4E2D\u5199\u4E86\u4E24\u4E2A\u6D4B\u8BD5\u7528\u4F8B\uFF0C\u90FD\u9A8C\u8BC1\u901A\u8FC7\u4E86\uFF0C\u73B0\u5728\u518D\u5199\u4E00\u4E2A\u5982\u4E0B\u5185\u5BB9\u7684\u7528\u4F8B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Test3Split</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 got <span class="token operator">:=</span> <span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cd&quot;</span><span class="token punctuation">)</span>
 want <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ef&quot;</span><span class="token punctuation">}</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;test failed, want:%v but got:%v\\n&quot;</span><span class="token punctuation">,</span> want<span class="token punctuation">,</span> got<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8DD1\u4E00\u4E0B\uFF0C\u53D1\u73B0\u62A5\u9519\u4E86\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>v
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test2Split
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> Test2Split <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test3Split
<span class="token operator">--</span><span class="token operator">-</span> FAIL<span class="token punctuation">:</span> Test3Split <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    split_test<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">33</span><span class="token punctuation">:</span> test failed<span class="token punctuation">,</span> want<span class="token punctuation">:</span><span class="token punctuation">[</span>ab ef<span class="token punctuation">]</span> but got<span class="token punctuation">:</span><span class="token punctuation">[</span>ab def<span class="token punctuation">]</span>
FAIL
exit status <span class="token number">1</span>
FAIL    oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>004s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u8D77\u6765\u7A0B\u5E8F\u91C7\u7528\u8FD9\u4E2A\u7528\u4F8B\u5C31\u8DD1\u4E0D\u8FC7\u53BB\u4E86\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u8C03\u6574\u7A0B\u5E8F\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;fmt&quot;</span>
 <span class="token string">&quot;strings&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Split \u5207\u5272\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
<span class="token keyword">func</span> <span class="token function">Split</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">,</span> sep <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> tmp <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
 index <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
 <span class="token keyword">for</span> index <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
  tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token punctuation">:</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  str <span class="token operator">=</span> str<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token function">len</span><span class="token punctuation">(</span>sep<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528len(sep)\u83B7\u53D6sep\u7684\u957F\u5EA6</span>
  index <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">)</span>
 <span class="token keyword">return</span> tmp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u8DD1\u4E00\u4E0B\uFF0C\u5C31\u901A\u8FC7\u3002</p><h2 id="_4-\u6D4B\u8BD5\u7EC4" tabindex="-1"><a class="header-anchor" href="#_4-\u6D4B\u8BD5\u7EC4" aria-hidden="true">#</a> 4\uFF0C\u6D4B\u8BD5\u7EC4</h2><p>\u6211\u4EEC\u73B0\u5728\u8FD8\u60F3\u8981\u6D4B\u8BD5\u4E00\u4E0B<code>split</code>\u51FD\u6570\u5BF9\u4E2D\u6587\u5B57\u7B26\u4E32\u7684\u652F\u6301\uFF0C\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u518D\u7F16\u5199\u4E00\u4E2A<code>TestChineseSplit</code>\u6D4B\u8BD5\u51FD\u6570\uFF0C\u4F46\u662F\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5982\u4E0B\u66F4\u53CB\u597D\u7684\u4E00\u79CD\u65B9\u5F0F\u6765\u6DFB\u52A0\u66F4\u591A\u7684\u6D4B\u8BD5\u7528\u4F8B\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;reflect&quot;</span>
 <span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">TestSplit</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6D4B\u8BD5\u7528\u4F8B\u7C7B\u578B</span>
 <span class="token keyword">type</span> testCase <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  str  <span class="token builtin">string</span>
  sep  <span class="token builtin">string</span>
  want <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5B58\u50A8\u6D4B\u8BD5\u7528\u4F8B\u7684\u5207\u7247</span>
 testGroup <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>testCase<span class="token punctuation">{</span>
  testCase<span class="token punctuation">{</span><span class="token string">&quot;a:b:c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  testCase<span class="token punctuation">{</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  testCase<span class="token punctuation">{</span><span class="token string">&quot;\u4F60\u597D\u5417&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u597D&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;\u4F60&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5417&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u904D\u5386\u5207\u7247\uFF0C\u9010\u4E00\u6267\u884C\u6D4B\u8BD5\u7528\u4F8B</span>
 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tc <span class="token operator">:=</span> <span class="token keyword">range</span> testGroup <span class="token punctuation">{</span>
  got <span class="token operator">:=</span> <span class="token function">Split</span><span class="token punctuation">(</span>tc<span class="token punctuation">.</span>str<span class="token punctuation">,</span> tc<span class="token punctuation">.</span>sep<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token operator">!</span>reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>tc<span class="token punctuation">.</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   t<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;test failed,want:%v,got:%v\\n&quot;</span><span class="token punctuation">,</span> tc<span class="token punctuation">.</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>v
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>004s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u5B50\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_5-\u5B50\u6D4B\u8BD5" aria-hidden="true">#</a> 5\uFF0C\u5B50\u6D4B\u8BD5</h2><p>\u4E0A\u8FB9\u7684\u5B9A\u4E49\u65B9\u5F0F\u5927\u5927\u7B80\u5316\u4E86\u9488\u5BF9\u540C\u4E00\u529F\u80FD\u4EE3\u7801\u7528\u4F8B\u7684\u7F16\u5199\uFF0C\u53EA\u9700\u8981\u5728\u5207\u7247\u4E2D\u65B0\u589E\u4E00\u4E2AtestCase\u5373\u53EF\uFF0C\u4F46\u662F\u6709\u4E00\u4E2A\u4E0D\u8DB3\u5C31\u662F\u6240\u6709\u7528\u4F8B\u6267\u884C\u7ED3\u679C\u4E0D\u80FD\u591F\u6E05\u6670\u9010\u4E2A\u770B\u5230\u3002\u5728Go1.7+\u4E2D\u65B0\u589E\u4E86\u5B50\u6D4B\u8BD5\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5B9A\u4E49map\u7684\u65B9\u5F0F\uFF0C\u5C06\u6BCF\u4E2A\u7528\u4F8B\u540D\u5B57\u6253\u5370\u51FA\u6765\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;reflect&quot;</span>
 <span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">TestSplit</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u6D4B\u8BD5\u7528\u4F8B\u7C7B\u578B</span>
 <span class="token keyword">type</span> testCase <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  str  <span class="token builtin">string</span>
  sep  <span class="token builtin">string</span>
  want <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5B58\u50A8\u6D4B\u8BD5\u7528\u4F8B\u7684map</span>
 testGroup <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>testCase<span class="token punctuation">{</span>
  <span class="token string">&quot;case-1&quot;</span><span class="token punctuation">:</span> testCase<span class="token punctuation">{</span><span class="token string">&quot;a:b:c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;case-2&quot;</span><span class="token punctuation">:</span> testCase<span class="token punctuation">{</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;case-3&quot;</span><span class="token punctuation">:</span> testCase<span class="token punctuation">{</span><span class="token string">&quot;\u4F60\u597D\u5417&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u597D&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;\u4F60&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u5417&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// \u904D\u5386map\uFF0C\u9010\u4E00\u6267\u884C\u6D4B\u8BD5\u7528\u4F8B</span>
 <span class="token keyword">for</span> name<span class="token punctuation">,</span> tc <span class="token operator">:=</span> <span class="token keyword">range</span> testGroup <span class="token punctuation">{</span>
  t<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   got <span class="token operator">:=</span> <span class="token function">Split</span><span class="token punctuation">(</span>tc<span class="token punctuation">.</span>str<span class="token punctuation">,</span> tc<span class="token punctuation">.</span>sep<span class="token punctuation">)</span>
   <span class="token keyword">if</span> <span class="token operator">!</span>reflect<span class="token punctuation">.</span><span class="token function">DeepEqual</span><span class="token punctuation">(</span>tc<span class="token punctuation">.</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;test failed,want:%#v,got:%#v\\n&quot;</span><span class="token punctuation">,</span> tc<span class="token punctuation">.</span>want<span class="token punctuation">,</span> got<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u6548\u679C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>v
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">2</span>
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">3</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>005s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u60F3\u8981\u6307\u5B9A\u6267\u884C\u5176\u4E2D\u67D0\u4E2A\u7528\u4F8B\uFF0C\u53EF\u7528\u5982\u4E0B\u65B9\u5F0F\u8FDB\u884C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>v <span class="token operator">-</span>run<span class="token operator">=</span>TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">2</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit
<span class="token operator">==</span><span class="token operator">=</span> RUN   TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">2</span>
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> TestSplit<span class="token operator">/</span><span class="token keyword">case</span><span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>004s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u6D4B\u8BD5\u8986\u76D6\u7387" tabindex="-1"><a class="header-anchor" href="#_6-\u6D4B\u8BD5\u8986\u76D6\u7387" aria-hidden="true">#</a> 6\uFF0C\u6D4B\u8BD5\u8986\u76D6\u7387</h2><p>\u6D4B\u8BD5\u8986\u76D6\u7387\u662F\u4F60\u7684\u4EE3\u7801\u88AB\u6D4B\u8BD5\u5957\u4EF6\u8986\u76D6\u7684\u767E\u5206\u6BD4\u3002\u901A\u5E38\u6211\u4EEC\u4F7F\u7528\u7684\u90FD\u662F\u8BED\u53E5\u7684\u8986\u76D6\u7387\uFF0C\u4E5F\u5C31\u662F\u5728\u6D4B\u8BD5\u4E2D\u81F3\u5C11\u88AB\u8FD0\u884C\u4E00\u6B21\u7684\u4EE3\u7801\u5360\u603B\u4EE3\u7801\u7684\u6BD4\u4F8B\u3002</p><p>Go\u63D0\u4F9B\u5185\u7F6E\u529F\u80FD\u6765\u68C0\u67E5\u4F60\u7684\u4EE3\u7801\u8986\u76D6\u7387\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>go test -cover</code>\u6765\u67E5\u770B\u6D4B\u8BD5\u8986\u76D6\u7387\u3002\u4F8B\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>cover
PASS
coverage<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token operator">%</span> of statements
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>004s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u7ED3\u679C\u53EF\u4EE5\u770B\u5230\u6211\u4EEC\u7684\u6D4B\u8BD5\u7528\u4F8B\u8986\u76D6\u4E86100%\u7684\u4EE3\u7801\u3002</p><p>Go\u8FD8\u63D0\u4F9B\u4E86\u4E00\u4E2A\u989D\u5916\u7684<code>-coverprofile</code>\u53C2\u6570\uFF0C\u7528\u6765\u5C06\u8986\u76D6\u7387\u76F8\u5173\u7684\u8BB0\u5F55\u4FE1\u606F\u8F93\u51FA\u5230\u4E00\u4E2A\u6587\u4EF6\u3002\u4F8B\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>cover <span class="token operator">-</span>coverprofile<span class="token operator">=</span>c<span class="token punctuation">.</span>out 
PASS
coverage<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token operator">%</span> of statements
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">0</span><span class="token punctuation">.</span>004s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u547D\u4EE4\u4F1A\u5C06\u8986\u76D6\u7387\u76F8\u5173\u7684\u4FE1\u606F\u8F93\u51FA\u5230\u5F53\u524D\u6587\u4EF6\u5939\u4E0B\u9762\u7684<code>c.out</code>\u6587\u4EF6\u4E2D\uFF0C\u7136\u540E\u6211\u4EEC\u6267\u884C<code>go tool cover -html=c.out</code>\uFF0C\u4F7F\u7528<code>cover</code>\u5DE5\u5177\u6765\u5904\u7406\u751F\u6210\u7684\u8BB0\u5F55\u4FE1\u606F\uFF0C\u8BE5\u547D\u4EE4\u4F1A\u6253\u5F00\u672C\u5730\u7684\u6D4F\u89C8\u5668\u7A97\u53E3\u751F\u6210\u4E00\u4E2AHTML\u62A5\u544A\u3002</p><p><img src="http://t.eryajf.net/imgs/2021/09/41c1ec1b94a6ac28.jpg" alt="image-20200219225154550"></p><p>\u56FE\u4E2D\u6BCF\u4E2A\u7528\u7EFF\u8272\u6807\u8BB0\u7684\u8BED\u53E5\u5757\u8868\u793A\u88AB\u8986\u76D6\u4E86\uFF0C\u800C\u7EA2\u8272\u7684\u8868\u793A\u6CA1\u6709\u88AB\u8986\u76D6\u3002</p><blockquote><p>\u65E5\u5E38\u5F00\u53D1\u5F53\u4E2D\uFF1A</p><p>\u51FD\u6570\u8986\u76D6\u7387\uFF1A\u5E94\u8BE5\u8FBE\u5230100%</p><p>\u4EE3\u7801\u8986\u76D6\u7387\uFF1A\u5E94\u8BE5\u8D85\u8FC760%</p></blockquote><h2 id="_7-\u57FA\u51C6\u6D4B\u8BD5\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_7-\u57FA\u51C6\u6D4B\u8BD5\u51FD\u6570" aria-hidden="true">#</a> 7\uFF0C\u57FA\u51C6\u6D4B\u8BD5\u51FD\u6570</h2><p>\u57FA\u51C6\u6D4B\u8BD5\u5C31\u662F\u5728\u4E00\u5B9A\u7684\u5DE5\u4F5C\u8D1F\u8F7D\u4E4B\u4E0B\u68C0\u6D4B\u7A0B\u5E8F\u6027\u80FD\u7684\u4E00\u79CD\u65B9\u6CD5\u3002\u57FA\u51C6\u6D4B\u8BD5\u7684\u57FA\u672C\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">BenchmarkName</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u51C6\u6D4B\u8BD5\u4EE5Benchmark\u4E3A\u524D\u7F00\uFF0C\u9700\u8981\u4E00\u4E2A*testing.B\u7C7B\u578B\u7684\u53C2\u6570b\uFF0C\u57FA\u51C6\u6D4B\u8BD5\u5FC5\u987B\u8981\u6267\u884Cb.N\u6B21\uFF0C\u8FD9\u6837\u7684\u6D4B\u8BD5\u624D\u6709\u5BF9\u7167\u6027\uFF0Cb.N\u7684\u503C\u662F\u7CFB\u7EDF\u6839\u636E\u5B9E\u9645\u60C5\u51B5\u53BB\u8C03\u6574\u7684\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u6D4B\u8BD5\u7684\u7A33\u5B9A\u6027\u3002 testing.B\u62E5\u6709\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Errorf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">FailNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Failed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Fatal</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Fatalf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Log</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Logf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">ReportAllocs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">ResetTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Run</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">RunParallel</span><span class="token punctuation">(</span>body <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token operator">*</span>PB<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">SetBytes</span><span class="token punctuation">(</span>n <span class="token builtin">int64</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">SetParallelism</span><span class="token punctuation">(</span>p <span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Skip</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">SkipNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Skipf</span><span class="token punctuation">(</span>format <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">Skipped</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>b <span class="token operator">*</span>B<span class="token punctuation">)</span> <span class="token function">StartTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-\u57FA\u51C6\u6D4B\u8BD5\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_1-\u57FA\u51C6\u6D4B\u8BD5\u793A\u4F8B" aria-hidden="true">#</a> 1\uFF0C\u57FA\u51C6\u6D4B\u8BD5\u793A\u4F8B</h3><p>\u6211\u4EEC\u4E3Asplit\u5305\u4E2D\u7684<code>Split</code>\u51FD\u6570\u7F16\u5199\u57FA\u51C6\u6D4B\u8BD5\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ cat split_test<span class="token punctuation">.</span><span class="token keyword">go</span>

<span class="token keyword">package</span> split

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkSplit</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
  <span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;a:b:c:d:e&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u51C6\u6D4B\u8BD5\u5E76\u4E0D\u4F1A\u9ED8\u8BA4\u6267\u884C\uFF0C\u9700\u8981\u589E\u52A0<code>-bench</code>\u53C2\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u901A\u8FC7\u6267\u884C<code>go test -bench=Split</code>\u547D\u4EE4\u6267\u884C\u57FA\u51C6\u6D4B\u8BD5\uFF0C\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>bench<span class="token operator">=</span>Split
goos<span class="token punctuation">:</span> darwin
goarch<span class="token punctuation">:</span> amd64
pkg<span class="token punctuation">:</span> oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split
BenchmarkSplit<span class="token operator">-</span><span class="token number">4</span>         <span class="token number">5000000</span>               <span class="token number">242</span> ns<span class="token operator">/</span>op
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">1</span><span class="token punctuation">.</span>473s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>BenchmarkSplit-4</code>\u8868\u793A\u5BF9Split\u51FD\u6570\u8FDB\u884C\u57FA\u51C6\u6D4B\u8BD5\uFF0C\u6570\u5B57<code>4</code>\u8868\u793A<code>GOMAXPROCS</code>\u7684\u503C\uFF0C\u8FD9\u4E2A\u5BF9\u4E8E\u5E76\u53D1\u57FA\u51C6\u6D4B\u8BD5\u5F88\u91CD\u8981\u3002<code>5000000</code>\u548C<code>242ns/op</code>\u8868\u793A\u6BCF\u6B21\u8C03\u7528<code>Split</code>\u51FD\u6570\u8017\u65F6<code>242ns</code>\uFF0C\u8FD9\u4E2A\u7ED3\u679C\u662F<code>5000000</code>\u6B21\u8C03\u7528\u7684\u5E73\u5747\u503C\u3002</p><p>\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4E3A\u57FA\u51C6\u6D4B\u8BD5\u6DFB\u52A0<code>-benchmem</code>\u53C2\u6570\uFF0C\u6765\u83B7\u5F97\u5185\u5B58\u5206\u914D\u7684\u7EDF\u8BA1\u6570\u636E\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>bench<span class="token operator">=</span>Split <span class="token operator">-</span>benchmem
goos<span class="token punctuation">:</span> darwin
goarch<span class="token punctuation">:</span> amd64
pkg<span class="token punctuation">:</span> oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split
BenchmarkSplit<span class="token operator">-</span><span class="token number">4</span>         <span class="token number">5000000</span>               <span class="token number">250</span> ns<span class="token operator">/</span>op             <span class="token number">240</span> B<span class="token operator">/</span>op          <span class="token number">4</span> allocs<span class="token operator">/</span>op
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">1</span><span class="token punctuation">.</span>515s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>240 B/op</code>\u8868\u793A\u6BCF\u6B21\u64CD\u4F5C\u5185\u5B58\u5206\u914D\u4E86240\u5B57\u8282\uFF0C<code>4 allocs/op</code>\u5219\u8868\u793A\u6BCF\u6B21\u64CD\u4F5C\u8FDB\u884C\u4E863\u6B21\u5185\u5B58\u5206\u914D\u3002 \u6211\u4EEC\u5C06\u6211\u4EEC\u7684<code>Split</code>\u51FD\u6570\u4F18\u5316\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Split \u5207\u5272\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
<span class="token keyword">func</span> <span class="token function">Split</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">,</span> sep <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> tmp <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> strings<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// \u5728\u58F0\u660E\u53D8\u91CF\u7684\u65F6\u5019\u76F4\u63A5make\u5206\u914D\u5185\u5B58\u7A7A\u95F4</span>
 index <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
 <span class="token keyword">for</span> index <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
  tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token punctuation">:</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  str <span class="token operator">=</span> str<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token function">len</span><span class="token punctuation">(</span>sep<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
  index <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">Index</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> sep<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 tmp <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> str<span class="token punctuation">)</span>
 <span class="token keyword">return</span> tmp
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6539\u8FDB\u4E4B\u540E\u518D\u6B21\u8FDB\u884C\u6027\u80FD\u6D4B\u8BD5\u770B\u770B\u6548\u679C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>$ <span class="token keyword">go</span> test <span class="token operator">-</span>bench<span class="token operator">=</span>Split <span class="token operator">-</span>benchmem
goos<span class="token punctuation">:</span> darwin
goarch<span class="token punctuation">:</span> amd64
pkg<span class="token punctuation">:</span> oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split
BenchmarkSplit<span class="token operator">-</span><span class="token number">4</span>        <span class="token number">20000000</span>               <span class="token number">101</span> ns<span class="token operator">/</span>op              <span class="token number">80</span> B<span class="token operator">/</span>op          <span class="token number">1</span> allocs<span class="token operator">/</span>op
PASS
ok      oldboy<span class="token operator">/</span>day09<span class="token operator">/</span>split      <span class="token number">2</span><span class="token punctuation">.</span>146s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u4F7F\u7528make\u51FD\u6570\u63D0\u524D\u5206\u914D\u5185\u5B58\u7684\u6539\u52A8\uFF0C\u51CF\u5C11\u4E862/3\u7684\u5185\u5B58\u5206\u914D\u6B21\u6570\uFF0C\u5E76\u4E14\u51CF\u5C11\u4E86\u4E00\u534A\u7684\u5185\u5B58\u5206\u914D\u3002</p>`,71),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","34.\u5355\u5143\u6D4B\u8BD5\u4E86\u89E3.html.vue"]]);export{r as default};
