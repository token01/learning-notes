import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as o,a as n,b as s,d as t,f as c,r as i}from"./app.78cf000f.js";const l={},u=n("p",null,"\u6D45\u8C08\u4EE5\u592A\u574A\u6E90\u7801\u5206\u6790\u4E4BEthash\u5171\u8BC6\u7B97\u6CD5",-1),d={href:"https://github.com/ethereum/go-ethereum/tree/v1.9.9",target:"_blank",rel:"noopener noreferrer"},r=c(`<h2 id="\u5F15\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5F15\u8A00" aria-hidden="true">#</a> \u5F15\u8A00</h2><p>\u76EE\u524D\u4EE5\u592A\u574A\u4E2D\u6709\u4E24\u4E2A\u5171\u8BC6\u7B97\u6CD5\u7684\u5B9E\u73B0\uFF1A<code>clique</code>\u548C<code>ethash</code>\u3002\u800C<code>ethash</code>\u662F\u76EE\u524D\u4EE5\u592A\u574A\u4E3B\u7F51\uFF08<code>Homestead</code>\u7248\u672C\uFF09\u7684<code>POW</code>\u5171\u8BC6\u7B97\u6CD5\u3002</p><h2 id="\u76EE\u5F55\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55\u7ED3\u6784" aria-hidden="true">#</a> \u76EE\u5F55\u7ED3\u6784</h2><p><code>ethash</code>\u6A21\u5757\u4F4D\u4E8E\u4EE5\u592A\u574A\u9879\u76EE\u76EE\u5F55\u4E0B\u7684<code>consensus/ethash</code>\u76EE\u5F55\u4E0B\u3002</p><ul><li><strong>algorithm.go</strong> \u5B9E\u73B0\u4E86<code>Dagger-Hashimoto</code>\u7B97\u6CD5\u7684\u6240\u6709\u529F\u80FD\uFF0C\u6BD4\u5982\u751F\u6210<code>cache</code>\u548C<code>dataset</code>\u3001\u6839\u636E<code>Header</code>\u548C<code>Nonce</code>\u8BA1\u7B97\u6316\u77FF\u54C8\u5E0C\u7B49\u3002</li><li><strong>api.go</strong> \u5B9E\u73B0\u4E86\u4F9B<code>RPC</code>\u4F7F\u7528\u7684<code>api</code>\u65B9\u6CD5\u3002</li><li><strong>consensus.go</strong> \u5B9E\u73B0\u4E86\u4EE5\u592A\u574A\u5171\u8BC6\u63A5\u53E3\u7684\u90E8\u5206\u65B9\u6CD5\uFF0C\u5305\u62EC<code>Verify</code>\u7CFB\u5217\u65B9\u6CD5\uFF08<code>VerifyHeader</code>\u3001<code>VerifySeal</code>\u7B49\uFF09\u3001<code>Prepare</code>\u548C<code>Finalize</code>\u3001<code>CalcDifficulty</code>\u3001<code>Author</code>\u3001<code>SealHash</code>\u3002</li><li><strong>ethash.go</strong> \u5B9E\u73B0\u4E86<code>cache</code>\u7ED3\u6784\u4F53\u548C<code>dataset</code>\u7ED3\u6784\u4F53\u53CA\u5B83\u4EEC\u5404\u81EA\u7684\u65B9\u6CD5\u3001<code>MakeCache</code>/<code>MakeDataset</code>\u51FD\u6570\u3001<code>Ethash</code>\u5BF9\u8C61\u7684<code>New</code>\u51FD\u6570\uFF0C\u548C<code>Ethash</code>\u7684\u5185\u90E8\u65B9\u6CD5\u3002</li><li><strong>sealer.go</strong> \u5B9E\u73B0\u4E86\u5171\u8BC6\u63A5\u53E3\u7684<code>Seal</code>\u65B9\u6CD5\uFF0C\u548C<code>Ethash</code>\u7684\u5185\u90E8\u65B9\u6CD5<code>mine</code>\u3002\u8FD9\u4E9B\u65B9\u6CD5\u5B9E\u73B0\u4E86<code>ethash</code>\u7684\u6316\u77FF\u529F\u80FD\u3002</li></ul><h2 id="ethash-\u8BBE\u8BA1\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#ethash-\u8BBE\u8BA1\u539F\u7406" aria-hidden="true">#</a> Ethash \u8BBE\u8BA1\u539F\u7406</h2><h3 id="ethash\u8BBE\u8BA1\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#ethash\u8BBE\u8BA1\u76EE\u6807" aria-hidden="true">#</a> Ethash\u8BBE\u8BA1\u76EE\u6807</h3><p>\u4EE5\u592A\u574A\u8BBE\u8BA1\u5171\u8BC6\u7B97\u6CD5\u65F6\uFF0C\u671F\u671B\u8FBE\u5230\u4E09\u4E2A\u76EE\u7684\uFF1A</p><ol><li>\u6297<code>ASIC</code>\u6027\uFF1A\u4E3A\u7B97\u6CD5\u521B\u5EFA\u4E13\u7528\u786C\u4EF6\u7684\u4F18\u52BF\u5E94\u5C3D\u53EF\u80FD\u5C0F\uFF0C\u8BA9\u666E\u901A\u8BA1\u7B97\u673A\u7528\u6237\u4E5F\u80FD\u4F7F\u7528CPU\u8FDB\u884C\u5F00\u91C7\u3002 <ul><li>\u901A\u8FC7\u5185\u5B58\u9650\u5236\u6765\u62B5\u5236\uFF08<code>ASIC</code>\u4F7F\u7528\u77FF\u673A\u5185\u5B58\u6602\u8D35\uFF09</li><li>\u5927\u91CF\u968F\u673A\u8BFB\u53D6\u5185\u5B58\u6570\u636E\u65F6\u8BA1\u7B97\u901F\u5EA6\u5C31\u4E0D\u4EC5\u4EC5\u53D7\u9650\u4E8E\u8BA1\u7B97\u5355\u5143\uFF0C\u66F4\u53D7\u9650\u4E8E\u5185\u5B58\u7684\u8BFB\u51FA\u901F\u5EA6\u3002</li></ul></li><li>\u8F7B\u5BA2\u6237\u7AEF\u53EF\u9A8C\u8BC1\u6027: \u4E00\u4E2A\u533A\u5757\u5E94\u80FD\u88AB\u8F7B\u5BA2\u6237\u7AEF\u5FEB\u901F\u6709\u6548\u6821\u9A8C\u3002</li><li>\u77FF\u5DE5\u5E94\u8BE5\u8981\u6C42\u5B58\u50A8\u5B8C\u6574\u7684\u533A\u5757\u94FE\u72B6\u6001\u3002</li></ol><h3 id="\u54C8\u5E0C\u6570\u636E\u96C6" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u6570\u636E\u96C6" aria-hidden="true">#</a> \u54C8\u5E0C\u6570\u636E\u96C6</h3><p><code>ethash</code>\u8981\u8BA1\u7B97\u54C8\u5E0C\uFF0C\u9700\u8981\u5148\u6709\u4E00\u5757\u6570\u636E\u96C6\u3002\u8FD9\u5757\u6570\u636E\u96C6\u8F83\u5927\uFF0C\u521D\u59CB\u5927\u5C0F\u5927\u7EA6\u6709<code>1G</code>\uFF0C\u6BCF\u9694 3 \u4E07\u4E2A\u533A\u5757\u5C31\u4F1A\u66F4\u65B0\u4E00\u6B21\uFF0C\u4E14\u6BCF\u6B21\u66F4\u65B0\u90FD\u4F1A\u6BD4\u4E4B\u524D\u53D8\u5927<code>8M</code>\u5DE6\u53F3\u3002\u8BA1\u7B97\u54C8\u5E0C\u7684\u6570\u636E\u6E90\u5C31\u662F\u4ECE\u8FD9\u5757\u6570\u636E\u96C6\u4E2D\u6765\u7684\uFF1B\u800C\u51B3\u5B9A\u4F7F\u7528\u6570\u636E\u96C6\u4E2D\u7684\u54EA\u4E9B\u6570\u636E\u8FDB\u884C\u54C8\u5E0C\u8BA1\u7B97\u7684\uFF0C\u624D\u662F<code>header</code>\u7684\u6570\u636E\u548C<code>Nonce</code>\u5B57\u6BB5\u3002\u8FD9\u90E8\u5206\u662F\u7531<code>Dagger</code>\u7B97\u6CD5\u5B9E\u73B0\u7684\u3002</p><h4 id="dagger" tabindex="-1"><a class="header-anchor" href="#dagger" aria-hidden="true">#</a> Dagger</h4><p><code>Dagger</code>\u7B97\u6CD5\u662F\u7528\u6765\u751F\u6210\u6570\u636E\u96C6<code>Dataset</code>\u7684\uFF0C\u6838\u5FC3\u7684\u90E8\u5206\u5C31\u662F<code>Dataset</code>\u7684\u751F\u6210\u65B9\u5F0F\u548C\u7EC4\u7EC7\u7ED3\u6784\u3002</p><p>\u53EF\u4EE5\u628A<code>Dataset</code>\u60F3\u6210\u591A\u4E2A<code>item</code>\uFF08<strong>dataItem</strong>\uFF09\u7EC4\u6210\u7684\u6570\u7EC4\uFF0C\u6BCF\u4E2A<code>item</code>\u662F<code>64</code>\u5B57\u8282\u7684byte\u6570\u7EC4\uFF08\u4E00\u6761\u54C8\u5E0C\uFF09\u3002<code>dataset</code>\u7684\u521D\u59CB\u5927\u5C0F\u7EA6\u4E3A<code>1G</code>\uFF0C\u6BCF\u96943\u4E07\u4E2A\u533A\u5757\uFF08\u4E00\u4E2A<code>epoch</code>\u533A\u95F4\uFF09\u5C31\u4F1A\u66F4\u65B0\u4E00\u6B21\uFF0C\u4E14\u6BCF\u6B21\u66F4\u65B0\u90FD\u4F1A\u6BD4\u4E4B\u524D\u53D8\u5927<code>8M</code>\u5DE6\u53F3\u3002</p><p><code>Dataset</code>\u7684\u6BCF\u4E2A<code>item</code>\u662F\u7531\u4E00\u4E2A\u7F13\u5B58\u5757\uFF08<code>cache</code>\uFF09\u751F\u6210\u7684\uFF0C\u7F13\u5B58\u5757\u4E5F\u53EF\u4EE5\u770B\u505A\u591A\u4E2A<code>item</code>\uFF08<strong>cacheItem</strong>\uFF09\u7EC4\u6210\uFF0C\u7F13\u5B58\u5757\u5360\u7528\u7684\u5185\u5B58\u8981\u6BD4<code>dataset</code>\u5C0F\u5F97\u591A\uFF0C\u5B83\u7684\u521D\u59CB\u5927\u5C0F\u7EA6\u4E3A<code>16M</code>\u3002\u540C<code>dataset</code>\u7C7B\u4F3C\uFF0C\u6BCF\u9694 3 \u4E07\u4E2A\u533A\u5757\u5C31\u4F1A\u66F4\u65B0\u4E00\u6B21\uFF0C\u4E14\u6BCF\u6B21\u66F4\u65B0\u90FD\u4F1A\u6BD4\u4E4B\u524D\u53D8\u5927<code>128K</code>\u5DE6\u53F3\u3002</p><p>\u751F\u6210\u4E00\u6761<code>dataItem</code>\u7684\u7A0B\u662F\uFF1A\u4ECE\u7F13\u5B58\u5757\u4E2D\u201C\u968F\u673A\u201D\uFF08\u8FD9\u91CC\u7684\u201C\u968F\u673A\u201D\u4E0D\u662F\u771F\u7684\u968F\u673A\u6570\uFF0C\u800C\u662F\u6307\u4E8B\u524D\u4E0D\u80FD\u786E\u5B9A\uFF0C\u4F46\u6BCF\u6B21\u8BA1\u7B97\u5F97\u5230\u7684\u90FD\u662F\u4E00\u6837\u7684\u503C\uFF09\u9009\u62E9\u4E00\u4E2A<code>cacheItem</code>\u8FDB\u884C\u8BA1\u7B97\uFF0C\u5F97\u7684\u7ED3\u679C\u53C2\u4E0E\u4E0B\u6B21\u8BA1\u7B97\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u4F1A\u5FAA\u73AF 256 \u6B21\u3002</p><p>\u7F13\u5B58\u5757\u662F\u7531<code>seed</code>\u751F\u6210\u7684\uFF0C\u800C<code>seed</code>\u7684\u503C\u4E0E\u5757\u7684\u9AD8\u5EA6\u6709\u5173\u3002\u6240\u4EE5\u751F\u6210<code>dataset</code>\u7684\u8FC7\u7A0B\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glm8arq9t7j30x80eytji.jpg" alt="image-20201213144908721"></p><p><code>Dagger</code>\u8FD8\u6709\u4E00\u4E2A\u5173\u952E\u7684\u5730\u65B9\uFF0C\u5C31\u662F\u786E\u5B9A\u6027\u3002\u5373\u540C\u4E00\u4E2A<code>epoch</code>\u5185\uFF0C\u6BCF\u6B21\u8BA1\u7B97\u51FA\u6765\u7684<code>seed</code>\u3001\u7F13\u5B58\u3001<code>dataset</code>\u90FD\u662F\u76F8\u540C\u7684\u3002\u5426\u5219\u5BF9\u4E8E\u540C\u4E00\u4E2A\u533A\u5757\uFF0C\u6316\u77FF\u7684\u4EBA\u548C\u9A8C\u8BC1\u7684\u4EBA\u4F7F\u7528\u4E0D\u540C\u7684<code>dataset</code>\uFF0C\u5C31\u6CA1\u6CD5\u8FDB\u884C\u9A8C\u8BC1\u4E86\u3002</p><hr><h3 id="hashimoto\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#hashimoto\u7B97\u6CD5" aria-hidden="true">#</a> Hashimoto\u7B97\u6CD5</h3><p>\u662F<code>Thaddeus Dryja</code>\u521B\u9020\u7684\u3002\u65E8\u5728\u901A\u8FC7<code>IO</code>\u9650\u5236\u6765\u62B5\u5236\u77FF\u673A\u3002\u5728\u6316\u77FF\u8FC7\u7A0B\u4E2D\uFF0C\u4F7F\u5185\u5B58\u8BFB\u53D6\u9650\u5236\u6761\u4EF6\uFF0C\u7531\u4E8E\u5185\u5B58\u8BBE\u5907\u672C\u8EAB\u4F1A\u6BD4\u8BA1\u7B97\u8BBE\u5907\u66F4\u52A0\u4FBF\u5B9C\u4EE5\u53CA\u666E\u904D\uFF0C\u5728\u5185\u5B58\u5347\u7EA7\u4F18\u5316\u65B9\u9762\uFF0C\u5168\u4E16\u754C\u7684\u5927\u516C\u53F8\u4E5F\u90FD\u6295\u5165\u5DE8\u5927\uFF0C\u4EE5\u4F7F\u5185\u5B58\u80FD\u591F\u9002\u5E94\u5404\u79CD\u7528\u6237\u573A\u666F\uFF0C\u6240\u4EE5\u6709\u4E86\u968F\u673A\u8BBF\u95EE\u5185\u5B58\u7684\u6982\u5FF5<code>RAM</code>\uFF0C\u56E0\u6B64,\u73B0\u6709\u7684\u5185\u5B58\u53EF\u80FD\u4F1A\u6BD4\u8F83\u63A5\u8FD1\u6700\u4F18\u7684\u8BC4\u4F30\u7B97\u6CD5\u3002<code>Hashimoto</code>\u7B97\u6CD5\u4F7F\u7528\u533A\u5757\u94FE\u4F5C\u4E3A\u6E90\u6570\u636E\uFF0C\u6EE1\u8DB3\u4E86\u4E0A\u9762\u7684 1 \u548C 3 \u7684\u8981\u6C42\u3002</p><p>\u5B83\u7684\u4F5C\u7528\u5C31\u662F\u4F7F\u7528\u533A\u5757Header\u7684\u54C8\u5E0C\u548CNonce\u5B57\u6BB5\u3001\u5229\u7528dataset\u6570\u636E\uFF0C\u751F\u6210\u4E00\u4E2A\u6700\u7EC8\u7684\u54C8\u5E0C\u503C\u3002</p><hr><h2 id="\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u6E90\u7801\u89E3\u6790</h2><h3 id="\u751F\u6210\u54C8\u5E0C\u6570\u636E\u96C6" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u54C8\u5E0C\u6570\u636E\u96C6" aria-hidden="true">#</a> \u751F\u6210\u54C8\u5E0C\u6570\u636E\u96C6</h3><p><code>generate</code>\u51FD\u6570\u4F4D\u4E8E<code>ethash.go</code>\u6587\u4EF6\u4E2D\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u751F\u6210<code>dataset</code>,\u5176\u4E2D\u5305\u6269\u4EE5\u4E0B\u5185\u5BB9\u3002</p><h4 id="\u751F\u6210cache-size" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210cache-size" aria-hidden="true">#</a> \u751F\u6210cache size</h4><p><code>cache size</code> \u4E3B\u8981<em>\u67D0\u4E2A\u7279\u5B9A\u5757\u7F16\u53F7\u7684ethash\u9A8C\u8BC1\u7F13\u5B58\u7684\u5927\u5C0F</em> *\uFF0C <code>epochLength</code> \u4E3A 30000\uFF0C\u5982\u679C<code>epoch</code> \u5C0F\u4E8E 2048\uFF0C\u5219\u4ECE\u5DF2\u77E5\u7684<code>epoch</code>\u8FD4\u56DE\u76F8\u5E94\u7684<code>cache size</code>\uFF0C\u5426\u5219\u91CD\u65B0\u8BA1\u7B97<code>epoch</code></p><p><code>cache</code>\u7684\u5927\u5C0F\u662F\u7EBF\u6027\u589E\u957F\u7684\uFF0C<code>size</code>\u7684\u503C\u7B49\u4E8E(2<sup>24</sup> + 2<sup>17</sup> * epoch - 64)\uFF0C\u7528\u8FD9\u4E2A\u503C\u9664\u4EE5 64 \u770B\u7ED3\u679C\u662F\u5426\u662F\u4E00\u4E2A\u8D28\u6570\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u51CF\u53BB128 \u518D\u91CD\u65B0\u8BA1\u7B97\uFF0C\u76F4\u5230\u627E\u5230\u6700\u5927\u7684\u8D28\u6570\u4E3A\u6B62\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>csize <span class="token operator">:=</span> <span class="token function">cacheSize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>epoch<span class="token operator">*</span>epochLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">cacheSize</span><span class="token punctuation">(</span>block <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span> <span class="token punctuation">{</span>
	epoch <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>block <span class="token operator">/</span> epochLength<span class="token punctuation">)</span>
	<span class="token keyword">if</span> epoch <span class="token operator">&lt;</span> maxEpoch <span class="token punctuation">{</span>
		<span class="token keyword">return</span> cacheSizes<span class="token punctuation">[</span>epoch<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">calcCacheSize</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">calcCacheSize</span><span class="token punctuation">(</span>epoch <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span> <span class="token punctuation">{</span>
	size <span class="token operator">:=</span> cacheInitBytes <span class="token operator">+</span> cacheGrowthBytes<span class="token operator">*</span><span class="token function">uint64</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span> <span class="token operator">-</span> hashBytes
	<span class="token keyword">for</span> <span class="token operator">!</span><span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetUint64</span><span class="token punctuation">(</span>size <span class="token operator">/</span> hashBytes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ProbablyPrime</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Always accurate for n &lt; 2^64</span>
		size <span class="token operator">-=</span> <span class="token number">2</span> <span class="token operator">*</span> hashBytes
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> size
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u751F\u6210dataset-size" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210dataset-size" aria-hidden="true">#</a> \u751F\u6210dataset size</h4><p><code>dataset Size</code> \u4E3B\u8981<em>\u67D0\u4E2A\u7279\u5B9A\u5757\u7F16\u53F7\u7684ethash\u9A8C\u8BC1\u7F13\u5B58\u7684\u5927\u5C0F</em> , \u7C7B\u4F3C\u4E0A\u9762\u751F\u6210<code>cache size</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>dsize <span class="token operator">:=</span> <span class="token function">datasetSize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>epoch<span class="token operator">*</span>epochLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">datasetSize</span><span class="token punctuation">(</span>block <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span> <span class="token punctuation">{</span>
	epoch <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>block <span class="token operator">/</span> epochLength<span class="token punctuation">)</span>
	<span class="token keyword">if</span> epoch <span class="token operator">&lt;</span> maxEpoch <span class="token punctuation">{</span>
		<span class="token keyword">return</span> datasetSizes<span class="token punctuation">[</span>epoch<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">calcDatasetSize</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u751F\u6210-seed-\u79CD\u5B50" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210-seed-\u79CD\u5B50" aria-hidden="true">#</a> \u751F\u6210 seed \u79CD\u5B50</h4><p>*seedHash\u662F\u7528\u4E8E\u751F\u6210\u9A8C\u8BC1\u7F13\u5B58\u548C\u6316\u6398\u6570\u636E\u96C6\u7684\u79CD\u5B50\u3002*\u957F\u5EA6\u4E3A 32\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>seed <span class="token operator">:=</span> <span class="token function">seedHash</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>epoch<span class="token operator">*</span>epochLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">seedHash</span><span class="token punctuation">(</span>block <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">{</span>
	seed <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> block <span class="token operator">&lt;</span> epochLength <span class="token punctuation">{</span>
		<span class="token keyword">return</span> seed
	<span class="token punctuation">}</span>
	keccak256 <span class="token operator">:=</span> <span class="token function">makeHasher</span><span class="token punctuation">(</span>sha3<span class="token punctuation">.</span><span class="token function">NewLegacyKeccak256</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">int</span><span class="token punctuation">(</span>block<span class="token operator">/</span>epochLength<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token function">keccak256</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> seed<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> seed
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u751F\u6210cache" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210cache" aria-hidden="true">#</a> \u751F\u6210cache</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token function">generateCache</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> d<span class="token punctuation">.</span>epoch<span class="token punctuation">,</span> seed<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u5206\u6790<code>generateCache</code>\u7684\u5173\u952E\u4EE3\u7801\uFF1A</p><p>\u5148\u4E86\u89E3\u4E00\u4E0B<strong>hashBytes</strong>\uFF0C\u5728\u4E0B\u9762\u7684\u8BA1\u7B97\u4E2D\u90FD\u662F\u4EE5\u6B64\u4E3A\u5355\u4F4D\uFF0C\u5B83\u7684\u503C\u4E3A 64 \uFF0C\u76F8\u5F53\u4E8E\u4E00\u4E2A<code>keccak512</code>\u54C8\u5E0C\u7684\u957F\u5EA6,\u4E0B\u6587\u4EE5<strong>item</strong>\u79F0\u547C<code>[hashBytes]byte</code>\u3002</p><p>\u2460\uFF1A\u521D\u59CB\u5316<code>cache</code></p><p>\u6B64\u5FAA\u73AF\u7528\u6765\u521D\u59CB\u5316<code>cache</code>\uFF1A\u5148\u5C06<code>seed</code>\u7684\u54C8\u5E0C\u586B\u5165<code>cache</code>\u7684\u7B2C\u4E00\u4E2A<code>item</code>,\u968F\u540E\u4F7F\u7528\u524D\u4E00\u4E2A<code>item</code>\u7684\u54C8\u5E0C\uFF0C\u586B\u5145\u540E\u4E00\u4E2A<code>item</code>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> offset <span class="token operator">:=</span> <span class="token function">uint64</span><span class="token punctuation">(</span>hashBytes<span class="token punctuation">)</span><span class="token punctuation">;</span> offset <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> offset <span class="token operator">+=</span> hashBytes <span class="token punctuation">{</span>
		<span class="token function">keccak512</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>offset<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cache<span class="token punctuation">[</span>offset<span class="token operator">-</span>hashBytes<span class="token punctuation">:</span>offset<span class="token punctuation">]</span><span class="token punctuation">)</span>
		atomic<span class="token punctuation">.</span><span class="token function">AddUint32</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>progress<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5BF9cache\u4E2D\u6570\u636E\u6309\u89C4\u5219\u505A\u5F02\u6216</p><p>\u4E3A\u5BF9\u4E8E\u6BCF\u4E00\u4E2A<code>item</code>\uFF08<code>srcOff</code>\uFF09\uFF0C\u201C\u968F\u673A\u201D\u9009\u4E00\u4E2A<code>item</code>\uFF08<code>xorOff</code>\uFF09\u4E0E\u5176\u8FDB\u884C\u5F02\u6216\u8FD0\u7B97\uFF1B\u5C06\u8FD0\u7B97\u7ED3\u679C\u7684\u54C8\u5E0C\u5199\u5165<code>dstOff</code>\u4E2D\u3002\u8FD9\u4E2A\u8FD0\u7B97\u903B\u8F91\u5C06\u8FDB\u884C<code>cacheRounds</code>\u6B21\u3002</p><p>\u4E24\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u5730\u65B9\uFF1A</p><ul><li>\u4E00\u662F<code>srcOff</code>\u662F\u4ECE\u5C3E\u90E8\u5411\u5934\u90E8\u53D8\u5316\u7684\uFF0C\u800C<code>dstOff</code>\u662F\u4ECE\u5934\u90E8\u5411\u5C3E\u90E8\u53D8\u5316\u7684\u3002\u5E76\u4E14\u5B83\u4FE9\u662F\u5BF9\u5E94\u7684\uFF0C\u5373\u5F53<code>srcOff</code>\u4EE3\u8868\u5012\u6570\u7B2Cx\u4E2Aitem\u65F6\uFF0C<code>dstOff</code>\u5219\u4EE3\u8868\u6B63\u6570\u7B2Cx\u4E2Aitem\u3002</li><li>\u4E8C\u662F<code>xorOff</code>\u7684\u9009\u53D6\u3002\u6CE8\u610F\u6211\u4EEC\u521A\u624D\u7684\u201C\u968F\u673A\u201D\u662F\u6253\u4E86\u5F15\u53F7\u7684\u3002<code>xorOff</code>\u7684\u503C\u770B\u4F3C\u968F\u673A\uFF0C\u56E0\u4E3A\u5728\u7ED9\u51FA<code>seed</code>\u4E4B\u524D\uFF0C\u4F60\u65E0\u6CD5\u77E5\u9053xorOff\u7684\u503C\u662F\u591A\u5C11\uFF1B\u4F46\u4E00\u65E6<code>seed</code>\u7684\u503C\u786E\u5B9A\u4E86\uFF0C\u90A3\u4E48\u6BCF\u4E00\u6B21<code>xorOff</code>\u7684\u503C\u90FD\u662F\u786E\u5B9A\u7684\u3002\u800Cseed\u7684\u503C\u662F\u7531\u533A\u5757\u7684\u9AD8\u5EA6\u51B3\u5B9A\u7684\u3002\u8FD9\u4E5F\u662F\u540C\u4E00\u4E2A<code>epoch</code>\u5185\u603B\u662F\u80FD\u5F97\u5230\u76F8\u540C<code>cache</code>\u6570\u636E\u7684\u539F\u56E0\u3002</li></ul><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>for i := 0; i &lt; cacheRounds; i++ {
		for j := 0; j &lt; rows; j++ {
			var (
				srcOff = ((j - 1 + rows) % rows) * hashBytes
				dstOff = j * hashBytes
				xorOff = (binary.LittleEndian.Uint32(cache[dstOff:]) % uint32(rows)) * hashBytes
			)
			bitutil.XORBytes(temp, cache[srcOff:srcOff+hashBytes], cache[xorOff:xorOff+hashBytes])
			keccak512(cache[dstOff:], temp)

			atomic.AddUint32(&amp;progress, 1)
		}
	}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="\u751F\u6210dataset" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210dataset" aria-hidden="true">#</a> \u751F\u6210dataset</h4><p><code>dataset</code>\u5927\u5C0F\u7684\u8BA1\u7B97\u548C<code>cache</code>\u7C7B\u4F3C\uFF0C\u91CF\u7EA7\u4E0D\u540C\uFF1A2<sup>30</sup> + 2<sup>23</sup> * epoch - 128\uFF0C\u7136\u540E\u6BCF\u6B21\u51CF256\u5BFB\u627E\u6700\u5927\u8D28\u6570\u3002</p><p>\u751F\u6210\u6570\u636E\u662F\u4E00\u4E2A\u5FAA\u73AF\uFF0C\u6BCF\u6B21\u751F\u621064\u4E2A\u5B57\u8282\uFF0C\u4E3B\u8981\u7684\u51FD\u6570\u662F<code>generateDatasetItem</code>\uFF1A</p><p><code>generateDatasetItem</code>\u7684\u6570\u636E\u6765\u6E90\u5C31\u662F<code>cache</code>\u6570\u636E\uFF0C\u800C\u6700\u7EC8\u7684dataset\u503C\u4F1A\u5B58\u50A8\u5728mix\u53D8\u91CF\u4E2D\u3002\u6574\u4E2A\u8FC7\u7A0B\u4E5F\u662F\u7531\u591A\u4E2A\u5FAA\u73AF\u6784\u6210\u3002</p><p>\u2460\uFF1A\u521D\u59CB\u5316<code>mix</code>\u53D8\u91CF</p><p>\u6839\u636Ecache\u503C\u5BF9<code>mix</code>\u53D8\u91CF\u8FDB\u884C\u521D\u59CB\u5316\u3002\u5176\u4E2D<code>hashWords</code>\u4EE3\u8868\u7684\u662F\u4E00\u4E2A<code>hash</code>\u91CC\u6709\u591A\u5C11\u4E2A<code>word</code>\u503C\uFF1A\u4E00\u4E2A<code>hash</code>\u7684\u957F\u5EA6\u4E3A<code>hashBytes</code>\u537364\u5B57\u8282\uFF0C\u4E00\u4E2A<code>word</code>\uFF08uint32\u7C7B\u578B\uFF09\u7684\u957F\u5EA6\u4E3A 4 \u5B57\u8282\uFF0C\u56E0\u6B64<code>hashWords</code>\u503C\u4E3A 16\u3002\u9009\u53D6<code>cache</code>\u4E2D\u7684\u54EA\u4E00\u9879\u6570\u636E\u662F\u7531\u53C2\u6570<code>index</code>\u548C<code>i</code>\u53D8\u91CF\u51B3\u5B9A\u7684\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>	mix <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> hashBytes<span class="token punctuation">)</span>
	binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>mix<span class="token punctuation">,</span> cache<span class="token punctuation">[</span><span class="token punctuation">(</span>index<span class="token operator">%</span>rows<span class="token punctuation">)</span><span class="token operator">*</span>hashWords<span class="token punctuation">]</span><span class="token operator">^</span>index<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> hashWords<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>mix<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cache<span class="token punctuation">[</span><span class="token punctuation">(</span>index<span class="token operator">%</span>rows<span class="token punctuation">)</span><span class="token operator">*</span>hashWords<span class="token operator">+</span><span class="token function">uint32</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token function">keccak512</span><span class="token punctuation">(</span>mix<span class="token punctuation">,</span> mix<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5C06<code>mix</code>\u8F6C\u6362\u6210<code>[]uint32</code>\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>intMix <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">,</span> hashWords<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>intMix<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		intMix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span>mix<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u5C06<code>cache</code>\u6570\u636E\u805A\u5408\u8FDB<code>intmix</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token function">uint32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> datasetParents<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		parent <span class="token operator">:=</span> <span class="token function">fnv</span><span class="token punctuation">(</span>index<span class="token operator">^</span>i<span class="token punctuation">,</span> intMix<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> rows
		<span class="token function">fnvHash</span><span class="token punctuation">(</span>intMix<span class="token punctuation">,</span> cache<span class="token punctuation">[</span>parent<span class="token operator">*</span>hashWords<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>FNV</code>\u54C8\u5E0C\u7B97\u6CD5\uFF0C\u662F\u4E00\u79CD\u4E0D\u9700\u8981\u4F7F\u7528\u5BC6\u94A5\u7684\u54C8\u5E0C\u7B97\u6CD5\u3002</p><p>\u8FD9\u4E2A\u7B97\u6CD5\u5F88\u7B80\u5355\uFF1Aa\u4E58\u4EE5FNV\u8D28\u65700x01000193\uFF0C\u7136\u540E\u518D\u548Cb\u5F02\u6216\u3002</p><p>\u9996\u5148\u7528\u8FD9\u4E2A\u7B97\u6CD5\u7B97\u51FA\u4E00\u4E2A\u7D22\u5F15\u503C\uFF0C\u5229\u7528\u8FD9\u4E2A\u7D22\u5F15\u4ECE<code>cache</code>\u4E2D\u9009\u51FA\u4E00\u4E2A\u503C\uFF08<code>data</code>\uFF09\uFF0C\u7136\u540E\u5BF9<code>mix</code>\u4E2D\u7684\u6BCF\u4E2A\u5B57\u8282\u90FD\u8BA1\u7B97\u4E00\u6B21<code>FNV</code>\uFF0C\u5F97\u5230\u6700\u7EC8\u7684\u54C8\u5E0C\u503C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">fnv</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token builtin">uint32</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">0x01000193</span> <span class="token operator">^</span> b
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">fnvHash</span><span class="token punctuation">(</span>mix <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">,</span> data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        mix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> mix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">0x01000193</span> <span class="token operator">^</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u5C06<code>intMix</code>\u53C8\u6062\u590D\u6210<code>mix</code>\u5E76\u8BA1\u7B97<code>mix</code>\u7684\u54C8\u5E0C\u8FD4\u56DE</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i<span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> intMix <span class="token punctuation">{</span>
		binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>mix<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token function">keccak512</span><span class="token punctuation">(</span>mix<span class="token punctuation">,</span> mix<span class="token punctuation">)</span>
	<span class="token keyword">return</span> mix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>generateCache</code>\u548C<code>generateDataset</code>\u662F\u5B9E\u73B0<code>Dagger</code>\u7B97\u6CD5\u7684\u6838\u5FC3\u51FD\u6570\uFF0C\u5230\u6B64\u6574\u4E2A\u751F\u6210\u54C8\u5E0C\u6570\u636E\u96C6\u7684\u7684\u8FC7\u7A0B\u7ED3\u675F\u3002</p><hr><h3 id="\u5171\u8BC6\u5F15\u64CE\u6838\u5FC3\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5171\u8BC6\u5F15\u64CE\u6838\u5FC3\u51FD\u6570" aria-hidden="true">#</a> \u5171\u8BC6\u5F15\u64CE\u6838\u5FC3\u51FD\u6570</h3><p>\u4EE3\u7801\u4F4D\u4E8E<code>consensus.go</code></p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwgy1glnee6vhalj31py0lkgq4.jpg" alt="image-20201214150532321"></p><p>\u2460\uFF1A<code>Author</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u8FD4\u56DEcoinbase, coinbase\u662F\u6253\u5305\u7B2C\u4E00\u7B14\u4EA4\u6613\u7684\u77FF\u5DE5\u7684\u5730\u5740</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">Author</span><span class="token punctuation">(</span>header <span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">)</span> <span class="token punctuation">(</span>common<span class="token punctuation">.</span>Address<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> header<span class="token punctuation">.</span>Coinbase<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A<code>VerifyHeader</code></p><p>\u4E3B\u8981\u6709\u4E24\u6B65\u68C0\u67E5\uFF0C\u7B2C\u4E00\u6B65\u68C0\u67E5<strong>header\u662F\u5426\u5DF2\u77E5</strong>\u6216\u8005<strong>\u662F\u672A\u77E5\u7684\u7956\u5148</strong>\uFF0C\u7B2C\u4E8C\u6B65\u662F<code>ethash</code>\u7684\u68C0\u67E5\uFF1A</p><p>2.1 header.Extra \u4E0D\u80FD\u8D85\u8FC732\u5B57\u8282</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Extra<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> params<span class="token punctuation">.</span>MaximumExtraDataSize <span class="token punctuation">{</span>  <span class="token comment">// \u4E0D\u8D85\u8FC732\u5B57\u8282</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;extra-data too long: %d &gt; %d&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Extra<span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>MaximumExtraDataSize<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.2 \u65F6\u95F4\u6233\u4E0D\u80FD\u8D85\u8FC715\u79D2\uFF0C15\u79D2\u4EE5\u540E\u7684\u5C31\u88AB\u8BA4\u5B9A\u4E3A\u672A\u6765\u7684\u5757</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token operator">!</span>uncle <span class="token punctuation">{</span>
		<span class="token keyword">if</span> header<span class="token punctuation">.</span>Time <span class="token operator">&gt;</span> <span class="token function">uint64</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>allowedFutureBlockTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> consensus<span class="token punctuation">.</span>ErrFutureBlock
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.3 \u5F53\u524Dheader\u7684\u65F6\u95F4\u6233\u5C0F\u4E8E\u7236\u5757\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> header<span class="token punctuation">.</span>Time <span class="token operator">&lt;=</span> parent<span class="token punctuation">.</span>Time <span class="token punctuation">{</span> <span class="token comment">// \u5F53\u524Dheader\u7684\u65F6\u95F4\u5C0F\u4E8E\u7B49\u4E8E\u7236\u5757\u7684</span>
		<span class="token keyword">return</span> errZeroBlockTime
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.4 \u6839\u636E\u65F6\u95F4\u6233\u548C\u7236\u5757\u7684\u96BE\u5EA6\u6765\u9A8C\u8BC1\u5757\u7684\u96BE\u5EA6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>expected <span class="token operator">:=</span> ethash<span class="token punctuation">.</span><span class="token function">CalcDifficulty</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Time<span class="token punctuation">,</span> parent<span class="token punctuation">)</span>
	<span class="token keyword">if</span> expected<span class="token punctuation">.</span><span class="token function">Cmp</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid difficulty: have %v, want %v&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">,</span> expected<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.5\u9A8C\u8BC1<code>gas limit</code>\u5C0F\u4E8E2<sup>63</sup> -1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token builtin">cap</span> <span class="token operator">:=</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token number">0x7fffffffffffffff</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> header<span class="token punctuation">.</span>GasLimit <span class="token operator">&gt;</span> <span class="token builtin">cap</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid gasLimit: have %v, max %v&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>GasLimit<span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.6 \u786E\u8BA4<code>gasUsed</code>\u4E3A&lt;= <code>gasLimit</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> header<span class="token punctuation">.</span>GasUsed <span class="token operator">&gt;</span> header<span class="token punctuation">.</span>GasLimit <span class="token punctuation">{</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid gasUsed: have %d, gasLimit %d&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>GasUsed<span class="token punctuation">,</span> header<span class="token punctuation">.</span>GasLimit<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.7 \u9A8C\u8BC1\u5757\u53F7\u662F\u7236\u5757\u52A01</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> diff <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> parent<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span> diff<span class="token punctuation">.</span><span class="token function">Cmp</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span><span class="token function">NewInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> consensus<span class="token punctuation">.</span>ErrInvalidNumber
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.8\u68C0\u67E5\u7ED9\u5B9A\u7684\u5757\u662F\u5426\u6EE1\u8DB3pow\u96BE\u5EA6\u8981\u6C42</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> seal <span class="token punctuation">{</span>
		<span class="token keyword">if</span> err <span class="token operator">:=</span> ethash<span class="token punctuation">.</span><span class="token function">VerifySeal</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> header<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A<code>VerifyUncles</code></p><p>3.1\u53D4\u53D4\u5757\u6700\u591A\u4E24\u4E2A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Uncles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxUncles <span class="token punctuation">{</span>
		<span class="token keyword">return</span> errTooManyUncles
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.2\u6536\u96C6\u53D4\u53D4\u5757\u548C\u7956\u5148\u5757</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>number, parent := block.NumberU64()-1, block.ParentHash()
	for i := 0; i &lt; 7; i++ {
		ancestor := chain.GetBlock(parent, number)
		if ancestor == nil {
			break
		}
		ancestors[ancestor.Hash()] = ancestor.Header()
		for _, uncle := range ancestor.Uncles() {
			uncles.Add(uncle.Hash())
		}
		parent, number = ancestor.ParentHash(), number-1
	}
	ancestors[block.Hash()] = block.Header()
	uncles.Add(block.Hash())

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.3 \u786E\u4FDD\u53D4\u5757\u53EA\u88AB\u5956\u52B1\u4E00\u6B21\u4E14\u53D4\u5757\u6709\u4E2A\u6709\u6548\u7684\u7956\u5148</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>for _, uncle := range block.Uncles() {
		// Make sure every uncle is rewarded only once
		hash := uncle.Hash()
		if uncles.Contains(hash) {
			return errDuplicateUncle
		}
		uncles.Add(hash)

		// Make sure the uncle has a valid ancestry
		if ancestors[hash] != nil {
			return errUncleIsAncestor
		}
		if ancestors[uncle.ParentHash] == nil || uncle.ParentHash == block.ParentHash() {
			return errDanglingUncle
		}
		if err := ethash.verifyHeader(chain, uncle, ancestors[uncle.ParentHash], true, true); err != nil {
			return err
		}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A<code>Prepare</code></p><blockquote><p>\u521D\u59CB\u5316<code>header</code>\u7684<code>Difficulty</code>\u5B57\u6BB5</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>parent <span class="token operator">:=</span> chain<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>ParentHash<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Number<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> parent <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> consensus<span class="token punctuation">.</span>ErrUnknownAncestor
	<span class="token punctuation">}</span>
	header<span class="token punctuation">.</span>Difficulty <span class="token operator">=</span> ethash<span class="token punctuation">.</span><span class="token function">CalcDifficulty</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Time<span class="token punctuation">,</span> parent<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A<code>Finalize</code>\u4F1A\u6267\u884C\u4EA4\u6613\u540E\u7684\u6240\u6709\u72B6\u6001\u4FEE\u6539\uFF08\u4F8B\u5982\uFF0C\u533A\u5757\u5956\u52B1\uFF09\uFF0C\u4F46<strong>\u4E0D\u4F1A\u7EC4\u88C5</strong>\u8BE5\u533A\u5757\u3002</p><p>5.1\u7D2F\u79EF\u4EFB\u4F55\u5757\u548C\u53D4\u5757\u7684\u5956\u52B1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token function">accumulateRewards</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> header<span class="token punctuation">,</span> uncles<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>5.2\u8BA1\u7B97\u72B6\u6001\u6811\u7684\u6839\u54C8\u5E0C\u5E76\u63D0\u4EA4\u5230<code>header</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>header<span class="token punctuation">.</span>Root <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">IntermediateRoot</span><span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">IsEIP158</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Number<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2465\uFF1A<code>FinalizeAndAssemble</code> \u8FD0\u884C\u4EFB\u4F55\u4EA4\u6613\u540E\u72B6\u6001\u4FEE\u6539\uFF08\u4F8B\u5982\uFF0C\u5757\u5956\u52B1\uFF09\uFF0C\u5E76\u7EC4\u88C5\u6700\u7EC8\u5757\u3002</p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>func (ethash *Ethash) FinalizeAndAssemble(chain consensus.ChainReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error) {
	accumulateRewards(chain.Config(), state, header, uncles)
	header.Root = state.IntermediateRoot(chain.Config().IsEIP158(header.Number))
	return types.NewBlock(header, txs, uncles, receipts), nil
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E\u5C31\u662F\u6BD4<code>Finalize</code>\u591A\u4E86 <code>types.NewBlock</code></p><p>\u2466\uFF1A<code>SealHash</code>\u8FD4\u56DE\u5728<code>seal</code>\u4E4B\u524D\u5757\u7684\u54C8\u5E0C\uFF08\u4F1A\u8DDF<code>seal</code>\u4E4B\u540E\u7684\u5757\u54C8\u5E0C\u4E0D\u540C\uFF09</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">SealHash</span><span class="token punctuation">(</span>header <span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">)</span> <span class="token punctuation">(</span>hash common<span class="token punctuation">.</span>Hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	hasher <span class="token operator">:=</span> sha3<span class="token punctuation">.</span><span class="token function">NewLegacyKeccak256</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	rlp<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>hasher<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
		header<span class="token punctuation">.</span>ParentHash<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>UncleHash<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Coinbase<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Root<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>TxHash<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>ReceiptHash<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Bloom<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Number<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>GasLimit<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>GasUsed<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Time<span class="token punctuation">,</span>
		header<span class="token punctuation">.</span>Extra<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	hasher<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>hash<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> hash
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2467\uFF1A<code>Seal</code>\u7ED9\u5B9A\u7684\u8F93\u5165\u5757\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u5BC6\u5C01\u8BF7\u6C42\uFF08<strong>\u6316\u77FF</strong>\uFF09\uFF0C\u5E76\u5C06\u7ED3\u679C\u63A8\u9001\u5230\u7ED9\u5B9A\u7684\u901A\u9053\u4E2D\u3002</p><p>\u6CE8\u610F\uFF0C\u8BE5\u65B9\u6CD5\u5C06\u7ACB\u5373\u8FD4\u56DE\u5E76\u5C06\u5F02\u6B65\u53D1\u9001\u7ED3\u679C\u3002 \u6839\u636E\u5171\u8BC6\u7B97\u6CD5\uFF0C\u53EF\u80FD\u8FD8\u4F1A\u8FD4\u56DE\u591A\u4E2A\u7ED3\u679C\u3002\u8FD9\u90E8\u5206\u4F1A\u5728\u4E0B\u9762\u7684\u6316\u77FF\u4E2D\u5177\u4F53\u5206\u6790\uFF0C\u8FD9\u91CC\u8DF3\u8FC7\u3002</p><hr><h3 id="\u6316\u77FF\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#\u6316\u77FF\u7EC6\u8282" aria-hidden="true">#</a> \u6316\u77FF\u7EC6\u8282</h3><blockquote><p>\u5927\u5BB6\u5728\u9605\u8BFB\u672C\u6587\u65F6\u6709\u4EFB\u4F55\u7591\u95EE\u5747\u53EF\u7559\u8A00\u7ED9\u6211\uFF0C\u6211\u4E00\u5B9A\u4F1A\u53CA\u65F6\u56DE\u590D\u3002\u5982\u679C\u89C9\u5F97\u5199\u5F97\u4E0D\u9519\u53EF\u4EE5\u5173\u6CE8\u6700\u4E0B\u65B9<strong>\u53C2\u8003</strong>\u7684 <code>github\u9879\u76EE</code>\uFF0C\u53EF\u4EE5\u7B2C\u4E00\u65F6\u95F4\u5173\u6CE8\u4F5C\u8005\u6587\u7AE0\u52A8\u6001\u3002</p></blockquote><p>\u6316\u77FF\u7684\u6838\u5FC3\u63A5\u53E3\u5B9A\u4E49\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token function">Seal</span><span class="token punctuation">(</span>chain ChainReader<span class="token punctuation">,</span> block <span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> results <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token operator">*</span>types<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> stop <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FDB\u5165\u5230<code>seal</code>\u51FD\u6570\uFF1A</p><p>\u2460\uFF1A\u5982\u679C\u8FD0\u884C\u9519\u8BEF\u7684<code>POW</code>\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7A7A\u7684<code>nonce</code>\u548C<code>MixDigest</code>\uFF0C\u540C\u65F6\u5757\u4E5F\u662F\u7A7A\u5757\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> ethash<span class="token punctuation">.</span>config<span class="token punctuation">.</span>PowMode <span class="token operator">==</span> ModeFake <span class="token operator">||</span> ethash<span class="token punctuation">.</span>config<span class="token punctuation">.</span>PowMode <span class="token operator">==</span> ModeFullFake <span class="token punctuation">{</span>
		header <span class="token operator">:=</span> block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		header<span class="token punctuation">.</span>Nonce<span class="token punctuation">,</span> header<span class="token punctuation">.</span>MixDigest <span class="token operator">=</span> types<span class="token punctuation">.</span>BlockNonce<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> common<span class="token punctuation">.</span>Hash<span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token keyword">select</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> results <span class="token operator">&lt;-</span> block<span class="token punctuation">.</span><span class="token function">WithSeal</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			ethash<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Log<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token string">&quot;Sealing result is not read by miner&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fake&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sealhash&quot;</span><span class="token punctuation">,</span> ethash<span class="token punctuation">.</span><span class="token function">SealHash</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5171\u4EAB<code>pow</code>\u7684\u8BDD\uFF0C\u5219\u8F6C\u5230\u5B83\u7684\u5171\u4EAB\u5BF9\u8C61\u6267\u884C<code>Seal</code>\u64CD\u4F5C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> ethash<span class="token punctuation">.</span>shared <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> ethash<span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">Seal</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> block<span class="token punctuation">,</span> results<span class="token punctuation">,</span> stop<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A\u83B7\u53D6\u79CD\u5B50\u6E90\uFF0C\u5E76\u6839\u636E\u5176\u751F\u6210<code>ethash</code>\u9700\u8981\u7684\u79CD\u5B50</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>f ethash<span class="token punctuation">.</span>rand <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u83B7\u5F97\u79CD\u5B50</span>
		seed<span class="token punctuation">,</span> err <span class="token operator">:=</span> crand<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span>crand<span class="token punctuation">.</span>Reader<span class="token punctuation">,</span> big<span class="token punctuation">.</span><span class="token function">NewInt</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>MaxInt64<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			ethash<span class="token punctuation">.</span>lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
		ethash<span class="token punctuation">.</span>rand <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">NewSource</span><span class="token punctuation">(</span>seed<span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u7ED9rand\u8D4B\u503C</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2463\uFF1A\u6316\u77FF\u7684\u6838\u5FC3\u5DE5\u4F5C\u4EA4\u7ED9<code>mine</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threads<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		pend<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span>id <span class="token builtin">int</span><span class="token punctuation">,</span> nonce <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">defer</span> pend<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			ethash<span class="token punctuation">.</span><span class="token function">mine</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> id<span class="token punctuation">,</span> nonce<span class="token punctuation">,</span> abort<span class="token punctuation">,</span> locals<span class="token punctuation">)</span> <span class="token comment">// \u771F\u6B63\u6267\u884C\u6316\u77FF\u7684\u52A8\u4F5C</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token function">uint64</span><span class="token punctuation">(</span>ethash<span class="token punctuation">.</span>rand<span class="token punctuation">.</span><span class="token function">Int63</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A\u5904\u7406\u6316\u77FF\u7684\u7ED3\u679C</p><ul><li>\u5916\u90E8\u610F\u5916\u4E2D\u6B62\uFF0C\u505C\u6B62\u6240\u6709\u6316\u77FF\u7EBF\u7A0B</li><li>\u5176\u4E2D\u4E00\u4E2A\u7EBF\u7A0B\u6316\u5230\u6B63\u786E\u5757\uFF0C\u4E2D\u6B62\u5176\u4ED6\u6240\u6709\u7EBF\u7A0B</li><li>ethash\u5BF9\u8C61\u53D1\u751F\u6539\u53D8\uFF0C\u505C\u6B62\u5F53\u524D\u6240\u6709\u64CD\u4F5C\uFF0C\u91CD\u542F\u5F53\u524D\u65B9\u6CD5</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> result <span class="token operator">*</span>types<span class="token punctuation">.</span>Block
		<span class="token keyword">select</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token operator">&lt;-</span>stop<span class="token punctuation">:</span>
			<span class="token function">close</span><span class="token punctuation">(</span>abort<span class="token punctuation">)</span>
		<span class="token keyword">case</span> result <span class="token operator">=</span> <span class="token operator">&lt;-</span>locals<span class="token punctuation">:</span>
			<span class="token keyword">select</span> <span class="token punctuation">{</span>
			<span class="token keyword">case</span> results <span class="token operator">&lt;-</span> result<span class="token punctuation">:</span> <span class="token comment">//\u5176\u4E2D\u4E00\u4E2A\u7EBF\u7A0B\u6316\u5230\u6B63\u786E\u5757\uFF0C\u4E2D\u6B62\u5176\u4ED6\u6240\u6709\u7EBF\u7A0B</span>
			<span class="token keyword">default</span><span class="token punctuation">:</span>
				ethash<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Log<span class="token punctuation">.</span><span class="token function">Warn</span><span class="token punctuation">(</span><span class="token string">&quot;Sealing result is not read by miner&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;local&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sealhash&quot;</span><span class="token punctuation">,</span> ethash<span class="token punctuation">.</span><span class="token function">SealHash</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			<span class="token function">close</span><span class="token punctuation">(</span>abort<span class="token punctuation">)</span>
		<span class="token keyword">case</span> <span class="token operator">&lt;-</span>ethash<span class="token punctuation">.</span>update<span class="token punctuation">:</span>
			<span class="token function">close</span><span class="token punctuation">(</span>abort<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> ethash<span class="token punctuation">.</span><span class="token function">Seal</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> block<span class="token punctuation">,</span> results<span class="token punctuation">,</span> stop<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				ethash<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to restart sealing after update&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E0A\u53EF\u4EE5\u77E5\u9053<code>seal</code>\u7684\u6838\u5FC3\u5DE5\u4F5C\u662F\u7531<code>mine</code>\u51FD\u6570\u5B8C\u6210\u7684\uFF0C\u91CD\u70B9\u4ECB\u7ECD\u4E00\u4E0B\u3002</p><p><code>mine</code>\u51FD\u6570\u5176\u5B9E\u4E5F\u6BD4\u8F83\u7B80\u5355\uFF0C\u5B83\u662F<em>\u771F\u6B63\u7684<code>pow</code>\u77FF\u5DE5\uFF0C\u7528\u6765\u641C\u7D22\u4E00\u4E2A<code>nonce</code>\u503C\uFF0C<code>nonce</code>\u503C\u5F00\u59CB\u4E8E<code>seed</code>\u503C\uFF0C<code>seed</code>\u503C\u662F\u80FD\u6700\u7EC8\u4EA7\u751F\u6B63\u786E\u7684\u53EF\u5339\u914D\u53EF\u9A8C\u8BC1\u7684\u533A\u5757\u96BE\u5EA6</em></p><p>\u2460\uFF1A\u4ECE\u533A\u5757\u5934\u4E2D\u63D0\u53D6\u76F8\u5173\u6570\u636E\uFF0C\u653E\u5728\u5168\u5C40\u53D8\u91CF\u57DF\u4E2D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> <span class="token punctuation">(</span>
		header  <span class="token operator">=</span> block<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		hash    <span class="token operator">=</span> ethash<span class="token punctuation">.</span><span class="token function">SealHash</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		target  <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>big<span class="token punctuation">.</span>Int<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Div</span><span class="token punctuation">(</span>two256<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u662F\u7528\u6765\u9A8C\u8BC1\u7684target</span>
		number  <span class="token operator">=</span> header<span class="token punctuation">.</span>Number<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		dataset <span class="token operator">=</span> ethash<span class="token punctuation">.</span><span class="token function">dataset</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u5F00\u59CB\u4EA7\u751F\u968F\u673A<code>nonce</code>\uFF0C\u76F4\u5230\u6211\u4EEC\u4E2D\u6B62\u6216\u627E\u5230\u4E00\u4E2A\u597D\u7684<code>nonce</code></p><div class="language-GO ext-GO line-numbers-mode"><pre class="language-GO"><code>var (
		attempts = int64(0)
		nonce    = seed
	)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A \u805A\u96C6\u5B8C\u6574\u7684<code>dataset</code>\u6570\u636E\uFF0C\u4E3A\u7279\u5B9A\u7684header\u548Cnonce\u4EA7\u751F\u6700\u7EC8\u54C8\u5E0C\u503C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">hashimotoFull</span><span class="token punctuation">(</span>dataset <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">,</span> hash <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> nonce <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5B9A\u4E49\u4E00\u4E2Alookup\u51FD\u6570\uFF0C\u7528\u4E8E\u5728\u6570\u636E\u96C6\u4E2D\u67E5\u627E\u6570\u636E</span>
	lookup <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>index <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span> <span class="token punctuation">{</span>
		offset <span class="token operator">:=</span> index <span class="token operator">*</span> hashWords <span class="token comment">//hashWords\u662F\u4E0A\u9762\u5B9A\u4E49\u7684\u5E38\u91CF\u503C= 16</span>
		<span class="token keyword">return</span> dataset<span class="token punctuation">[</span>offset <span class="token punctuation">:</span> offset<span class="token operator">+</span>hashWords<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">hashimoto</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> nonce<span class="token punctuation">,</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>dataset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> lookup<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u53D1\u73B0\u5B9E\u9645\u4E0A<code>hashimotoFull</code>\u51FD\u6570\u505A\u7684\u5DE5\u4F5C\u5C31\u662F\u5C06\u539F\u59CB\u6570\u636E\u96C6\u8FDB\u884C\u4E86\u8BFB\u53D6\u5206\u5272\uFF0C\u7136\u540E\u4F20\u7ED9<code>hashimoto</code>\u51FD\u6570\u3002\u63A5\u4E0B\u6765\u91CD\u70B9\u5206\u6790<code>hashimoto</code>\u51FD\u6570\uFF1A</p><p>3.1\u6839\u636Eseed\u83B7\u53D6\u533A\u5757\u5934</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>	rows <span class="token operator">:=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>size <span class="token operator">/</span> mixBytes<span class="token punctuation">)</span> \u2460
	seed <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span> \u2461
	<span class="token function">copy</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> hash<span class="token punctuation">)</span> \u2462
	binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">PutUint64</span><span class="token punctuation">(</span>seed<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nonce<span class="token punctuation">)</span>\u2463
	seed <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">Keccak512</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\u2464
	seedHead <span class="token operator">:=</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>\u2465
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u8BA1\u7B97\u6570\u636E\u96C6\u7684\u884C\u6570</li><li>\u5408\u5E76<code>header+nonce</code>\u5230\u4E00\u4E2A 40 \u5B57\u8282\u7684<code>seed</code></li><li>\u5C06\u533A\u5757\u5934\u7684<code>hash</code>\u62F7\u8D1D\u5230<code>seed</code>\u4E2D</li><li>\u5C06<code>nonce</code>\u503C\u586B\u5165<code>seed</code>\u7684\u540E\uFF0840-32=8\uFF09\u5B57\u8282\u4E2D\u53BB\uFF0C\uFF08nonce\u672C\u8EAB\u5C31\u662F<code>uint64</code>\u7C7B\u578B\uFF0C\u662F 64 \u4F4D\uFF0C\u5BF9\u5E94 8 \u5B57\u8282\u5927\u5C0F\uFF09\uFF0C\u6B63\u597D\u628A<code>hash</code>\u548C<code>nonce</code>\u5B8C\u6574\u7684\u586B\u6EE1\u4E86 40 \u5B57\u8282\u7684 seed</li><li><code>Keccak512</code>\u52A0\u5BC6<code>seed</code></li><li>\u4ECE<code>seed</code>\u4E2D\u83B7\u53D6\u533A\u5757\u5934</li></ol><p>3.2 \u4ECE\u590D\u5236\u7684\u79CD\u5B50\u5F00\u59CB\u6DF7\u5408</p><ul><li><code>mixBytes</code>\u5E38\u91CF= 128\uFF0C<code>mix</code>\u7684\u957F\u5EA6\u4E3A 32\uFF0C\u5143\u7D20\u4E3A<code>uint32</code>\uFF0C\u662F 32\u4F4D\uFF0C\u5BF9\u5E94\u4E3A 4 \u5B57\u8282\u5927\u5C0F\u3002\u6240\u4EE5<code>mix</code>\u603B\u5171\u5927\u5C0F\u4E3A 4*32=128 \u5B57\u8282\u5927\u5C0F</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>mix <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">,</span> mixBytes<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		mix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span>seed<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">16</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.3 \u6DF7\u5408\u968F\u673A\u6570\u636E\u96C6\u8282\u70B9</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>temp <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">uint32</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//\u4E0Emix\u7ED3\u6784\u76F8\u540C\uFF0C\u957F\u5EA6\u76F8\u540C</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> loopAccesses<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		parent <span class="token operator">:=</span> <span class="token function">fnv</span><span class="token punctuation">(</span><span class="token function">uint32</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span>seedHead<span class="token punctuation">,</span> mix<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> rows
		<span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token function">uint32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> mixBytes<span class="token operator">/</span>hashBytes<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span>
			<span class="token function">copy</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>j<span class="token operator">*</span>hashWords<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">lookup</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>parent<span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token function">fnvHash</span><span class="token punctuation">(</span>mix<span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.4 \u538B\u7F29\u6DF7\u5408</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span> <span class="token punctuation">{</span>
		mix<span class="token punctuation">[</span>i<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fnv</span><span class="token punctuation">(</span><span class="token function">fnv</span><span class="token punctuation">(</span><span class="token function">fnv</span><span class="token punctuation">(</span>mix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> mix<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mix<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mix<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	mix <span class="token operator">=</span> mix<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>mix<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">]</span>

	digest <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> common<span class="token punctuation">.</span>HashLength<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> mix <span class="token punctuation">{</span>
		binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">PutUint32</span><span class="token punctuation">(</span>digest<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> digest<span class="token punctuation">,</span> crypto<span class="token punctuation">.</span><span class="token function">Keccak256</span><span class="token punctuation">(</span><span class="token function">append</span><span class="token punctuation">(</span>seed<span class="token punctuation">,</span> digest<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u7EC8\u8FD4\u56DE\u7684\u662F<code>digest</code>\u548C<code>digest</code>\u4E0E<code>seed</code>\u7684\u54C8\u5E0C\uFF1B\u800C<code>digest</code>\u5176\u5B9E\u5C31\u662F<code>mix</code>\u7684<code>[]byte</code>\u5F62\u5F0F\u3002\u5728\u524D\u9762<code>Ethash.mine</code>\u7684\u4EE3\u7801\u4E2D\u6211\u4EEC\u5DF2\u7ECF\u770B\u5230\u4F7F\u7528\u7B2C\u4E8C\u4E2A\u8FD4\u56DE\u503C\u4E0E<code>target</code>\u53D8\u91CF\u8FDB\u884C\u6BD4\u8F83\uFF0C\u4EE5\u786E\u5B9A\u8FD9\u662F\u5426\u662F\u4E00\u4E2A\u6709\u6548\u7684\u54C8\u5E0C\u503C\u3002</p><hr><h3 id="\u9A8C\u8BC1pow" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1pow" aria-hidden="true">#</a> \u9A8C\u8BC1pow</h3><p>\u6316\u77FF\u4FE1\u606F\u7684\u9A8C\u8BC1\u6709\u4E24\u90E8\u5206\uFF1A</p><ol><li>\u9A8C\u8BC1<code>Header.Difficulty</code>\u662F\u5426\u6B63\u786E</li><li>\u9A8C\u8BC1<code>Header.MixDigest</code>\u548C<code>Header.Nonce</code>\u662F\u5426\u6B63\u786E</li></ol><p>\u2460\uFF1A\u9A8C\u8BC1<code>Header.Difficulty</code>\u7684\u4EE3\u7801\u4E3B\u8981\u5728<code>Ethash.verifyHeader</code>\u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>ethash <span class="token operator">*</span>Ethash<span class="token punctuation">)</span> <span class="token function">verifyHeader</span><span class="token punctuation">(</span>chain consensus<span class="token punctuation">.</span>ChainReader<span class="token punctuation">,</span> header<span class="token punctuation">,</span> parent <span class="token operator">*</span>types<span class="token punctuation">.</span>Header<span class="token punctuation">,</span> uncle <span class="token builtin">bool</span><span class="token punctuation">,</span> seal <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token operator">...</span>
  expected <span class="token operator">:=</span> ethash<span class="token punctuation">.</span><span class="token function">CalcDifficulty</span><span class="token punctuation">(</span>chain<span class="token punctuation">,</span> header<span class="token punctuation">.</span>Time<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parent<span class="token punctuation">)</span>

  <span class="token keyword">if</span> expected<span class="token punctuation">.</span><span class="token function">Cmp</span><span class="token punctuation">(</span>header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;invalid difficulty: have %v, want %v&quot;</span><span class="token punctuation">,</span> header<span class="token punctuation">.</span>Difficulty<span class="token punctuation">,</span> expected<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u533A\u5757\u9AD8\u5EA6\u548C\u65F6\u95F4\u5DEE\u4F5C\u4E3A\u53C2\u6570\u6765\u8BA1\u7B97<code>Difficulty</code>\u503C\uFF0C\u7136\u540E\u4E0E\u5F85\u9A8C\u8BC1\u7684\u533A\u5757\u7684<code>Header.Difficulty</code>\u5B57\u6BB5\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5982\u679C\u76F8\u7B49\u5219\u8BA4\u4E3A\u662F\u6B63\u786E\u7684\u3002</p><p>\u2461\uFF1A<code>MixDigest</code>\u548C<code>Nonce</code>\u7684\u9A8C\u8BC1\u4E3B\u8981\u662F\u5728<code>Header.verifySeal</code>\u4E2D\uFF1A</p><p>\u9A8C\u8BC1\u7684\u65B9\u5F0F:\u4F7F\u7528<code>Header.Nonce</code>\u548C\u5934\u90E8\u54C8\u5E0C\u901A\u8FC7<code>hashimoto</code>\u91CD\u65B0\u8BA1\u7B97\u4E00\u904D<code>MixDigest</code>\u548C<code>result</code>\u54C8\u5E0C\u503C,\u5E76\u4E14\u9A8C\u8BC1\u7684\u8282\u70B9\u662F\u4E0D\u9700\u8981dataset\u6570\u636E\u7684\u3002</p><hr><h2 id="\u603B\u7ED3-\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-\u53C2\u8003" aria-hidden="true">#</a> \u603B\u7ED3&amp;\u53C2\u8003</h2>`,166),k=n("p",null,"\u516C\u4F17\u53F7\uFF1AAbel sun \uFF08\u63A8\u8350\u54E6\uFF09",-1),v={href:"https://eth.wiki/concepts/ethash/design-rationale",target:"_blank",rel:"noopener noreferrer"},m={href:"https://eth.wiki/concepts/ethash/dag",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.vijaypradeep.com/blog/2017-04-28-ethereums-memory-hardness-explained/",target:"_blank",rel:"noopener noreferrer"};function b(g,f){const a=i("ExternalLinkIcon");return p(),o("div",null,[n("blockquote",null,[u,n("p",null,[s("\u4EE3\u7801\u5206\u652F\uFF1A"),n("a",d,[s("https://github.com/ethereum/go-ethereum/tree/v1.9.9"),t(a)])])]),r,n("blockquote",null,[k,n("p",null,[n("a",v,[s("https://eth.wiki/concepts/ethash/design-rationale"),t(a)])]),n("p",null,[n("a",m,[s("https://eth.wiki/concepts/ethash/dag"),t(a)])]),n("p",null,[n("a",h,[s("https://www.vijaypradeep.com/blog/2017-04-28-ethereums-memory-hardness-explained/"),t(a)])])])])}const w=e(l,[["render",b],["__file","9.etheric_fang_Ethash_consensus_algorithm_of_source_code_analysis.html.vue"]]);export{w as default};
