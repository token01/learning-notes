import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,a as n,b as s,d as t,e as o,r as u}from"./app.11a9ee6c.js";const i={},l=o(`<blockquote><p>浅谈以太坊之账户模型</p></blockquote><h2 id="账户类型" tabindex="-1"><a class="header-anchor" href="#账户类型" aria-hidden="true">#</a> 账户类型</h2><h3 id="外部账户" tabindex="-1"><a class="header-anchor" href="#外部账户" aria-hidden="true">#</a> 外部账户</h3><p>外部账户(<code>EOAs</code>)：通过独立私钥创建，无法进行多签。</p><p>外部账户是拥有以太币余额的，它是由自己的私钥控制，且可以发送交易以及执行合约代码，注意没有与之相关的代码，也可以进行多重签名。</p><h3 id="合约账户" tabindex="-1"><a class="header-anchor" href="#合约账户" aria-hidden="true">#</a> 合约账户</h3><p>合约帐户(<code>contract account</code>)：由 <strong>SHA3</strong> 哈希算法生成。</p><p>合约账户是由合约创建或者外部账户创建，一旦创建成功会被分配一个账户地址。并且是只能通过外部账户来调用合约执行合约代码。</p><h3 id="两者之间区别" tabindex="-1"><a class="header-anchor" href="#两者之间区别" aria-hidden="true">#</a> 两者之间区别</h3><table><thead><tr><th style="text-align:center;">item</th><th style="text-align:center;">EOAs</th><th>contract account</th></tr></thead><tbody><tr><td style="text-align:center;">私钥生成</td><td style="text-align:center;">√</td><td>×</td></tr><tr><td style="text-align:center;">拥有余额</td><td style="text-align:center;">√</td><td>√</td></tr><tr><td style="text-align:center;">拥有代码</td><td style="text-align:center;">×</td><td>√</td></tr><tr><td style="text-align:center;">多重签名</td><td style="text-align:center;">×</td><td>√</td></tr><tr><td style="text-align:center;">控制方式</td><td style="text-align:center;">私钥</td><td>通过外部账户执行合约</td></tr></tbody></table><hr><h2 id="合约账户地址生成" tabindex="-1"><a class="header-anchor" href="#合约账户地址生成" aria-hidden="true">#</a> 合约账户地址生成</h2><p>合约地址生成算法有目前有两种：</p><p>①：通过创建者的地址和该交易的随机数进行哈希后截取生成</p><blockquote><p><code>Keccak256(rlp([sender,nonce])[12:]</code></p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">CreateAddress</span><span class="token punctuation">(</span>b common<span class="token punctuation">.</span>Address<span class="token punctuation">,</span> nonce <span class="token builtin">uint64</span><span class="token punctuation">)</span> common<span class="token punctuation">.</span>Address <span class="token punctuation">{</span>
    data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> rlp<span class="token punctuation">.</span><span class="token function">EncodeToBytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>b<span class="token punctuation">,</span> nonce<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> common<span class="token punctuation">.</span><span class="token function">BytesToAddress</span><span class="token punctuation">(</span><span class="token function">Keccak256</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),d={href:"https://eips.ethereum.org/EIPS/eip-1014",target:"_blank",rel:"noopener noreferrer"},k=o(`<blockquote><p><code>keccak256( 0xff ++ address ++ salt ++ keccak256(init_code))[12:]</code></p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">CreateAddress2</span><span class="token punctuation">(</span>b common<span class="token punctuation">.</span>Address<span class="token punctuation">,</span> salt <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> inithash <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> common<span class="token punctuation">.</span>Address <span class="token punctuation">{</span>
    <span class="token keyword">return</span> common<span class="token punctuation">.</span><span class="token function">BytesToAddress</span><span class="token punctuation">(</span><span class="token function">Keccak256</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">0xff</span><span class="token punctuation">}</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> salt<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inithash<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="简单应用" tabindex="-1"><a class="header-anchor" href="#简单应用" aria-hidden="true">#</a> 简单应用</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>&#39;ethereumjs<span class="token operator">-</span>util&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//根据发送者地址和nonce求取生成的新合约的地址</span>

<span class="token comment">//方法一：先RLP编码，再Hash，截取Hash值的后20个字节</span>
<span class="token keyword">var</span> sender <span class="token operator">=</span> <span class="token string">&quot;a990077c3205cbDf861e17Fa532eeB069cE9fF96&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> nonce <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   

<span class="token comment">//由于RLP编码规则，当nonce==0时，RLP编码要使用null</span>
<span class="token keyword">var</span> buf <span class="token operator">=</span> <span class="token punctuation">[</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> <span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nonce <span class="token operator">==</span> <span class="token number">0</span> ? null <span class="token punctuation">:</span> nonce<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> addr1 <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">sha3</span><span class="token punctuation">(</span>util<span class="token punctuation">.</span>rlp<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addr1<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//方法二</span>
<span class="token keyword">var</span> addr2 <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">generateAddress</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>sender<span class="token punctuation">,</span> <span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nonce<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>addr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),r=n("code",null,"sender",-1),b=n("code",null,"nonce",-1),v={href:"https://eips.ethereum.org/EIPS/eip-1820",target:"_blank",rel:"noopener noreferrer"},m={href:"https://eips.ethereum.org/EIPS/eip-2470",target:"_blank",rel:"noopener noreferrer"},g=o(`<hr><h2 id="如何判断一个地址为合约地址" tabindex="-1"><a class="header-anchor" href="#如何判断一个地址为合约地址" aria-hidden="true">#</a> 如何判断一个地址为合约地址</h2><p><code>EVM</code> 提供了一个操作码 <code>EXTCODESIZE</code>，用来获取地址相关联的代码长度，若是外部账号地址，则没有代码返回。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>function <span class="token function">isContract</span><span class="token punctuation">(</span>address addr<span class="token punctuation">)</span> internal view returns <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    uint256 size<span class="token punctuation">;</span>
    assembly <span class="token punctuation">{</span> size <span class="token operator">:=</span> <span class="token function">extcodesize</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span> size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是在合约外部判断，则可以使用以下方式判断：</p><p>①：web3</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token string">&quot;0x8415A51d68e80aebb916A6f5Dafb8af18bFE2F9d&quot;</span><span class="token punctuation">)</span>
<span class="token string">&quot;0x&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>②:JSON-RPC</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>eth_getcode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>getCode</code>用来获取参数地址所对应合约的代码，若参数是外部账号地址，则返回<strong>0x,</strong> 若参数是合约，则返回对应的<strong>字节码</strong>。</p><p>注意：如果一个地址没有代码关联，并不能肯定这个地址是外部账户地址还是合约地址，因为有可能代码还没有部署上链。如果一个地址关联有代码，那它肯定是合约地址。</p><h3 id="常见需求解决" tabindex="-1"><a class="header-anchor" href="#常见需求解决" aria-hidden="true">#</a> 常见需求解决</h3><blockquote><p>只允许外部账户调用我们的合约，不允许合约账户调用我们的合约??</p></blockquote><p>解决方式：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token function">require</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span>origin <span class="token operator">==</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="账户数据结构" tabindex="-1"><a class="header-anchor" href="#账户数据结构" aria-hidden="true">#</a> 账户数据结构</h2><p>不管是外部账户还是合约账户均是采取此结构。但是外部账户无内部存储数据和合约代码，即 <code>CodeHash</code> 为空值。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Account <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 Nonce    <span class="token builtin">uint64</span>
 Balance  <span class="token operator">*</span>big<span class="token punctuation">.</span>Int
 Root     common<span class="token punctuation">.</span>Hash 
 CodeHash <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Nonce：如果是外部账户，<code>nonce</code>代表从此账户地址发送的<strong>交易序号</strong>。如果是合约账户，nonce代表此账户创建的<strong>合约序号</strong></li><li>Balance：此地址拥有<code>Wei</code>的数量, <em>1Ether=10^18Wei</em></li><li>Root: <code>Merkle Patricia Tree</code> 的根节点<code>Hash</code>值,默认空值。</li><li>CodeHash：此账户<code>EVM</code>代码的<code>hash</code>值。对于合约账户，就是被<code>Hash</code>的代码；对于外部拥有账户，c是一个空字符串的<code>Hash</code>值</li></ul><h2 id="账户数据存储" tabindex="-1"><a class="header-anchor" href="#账户数据存储" aria-hidden="true">#</a> 账户数据存储</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> toAddr <span class="token operator">=</span>common<span class="token punctuation">.</span>HexToAddress
<span class="token keyword">var</span> toHash <span class="token operator">=</span>common<span class="token punctuation">.</span>BytesToHash

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
    statadb<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> state<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>common<span class="token punctuation">.</span>Hash<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        state<span class="token punctuation">.</span><span class="token function">NewDatabase</span><span class="token punctuation">(</span>rawdb<span class="token punctuation">.</span><span class="token function">NewMemoryDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// ❶</span>

    acct1<span class="token operator">:=</span><span class="token function">toAddr</span><span class="token punctuation">(</span><span class="token string">&quot;0x0bB141C2F7d4d12B1D27E62F86254e6ccEd5FF9a&quot;</span><span class="token punctuation">)</span><span class="token comment">// ❷</span>
    acct2<span class="token operator">:=</span><span class="token function">toAddr</span><span class="token punctuation">(</span><span class="token string">&quot;0x77de172A492C40217e48Ebb7EEFf9b2d7dF8151B&quot;</span><span class="token punctuation">)</span>

    statadb<span class="token punctuation">.</span><span class="token function">AddBalance</span><span class="token punctuation">(</span>acct1<span class="token punctuation">,</span>big<span class="token punctuation">.</span><span class="token function">NewInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    statadb<span class="token punctuation">.</span><span class="token function">AddBalance</span><span class="token punctuation">(</span>acct2<span class="token punctuation">,</span>big<span class="token punctuation">.</span><span class="token function">NewInt</span><span class="token punctuation">(</span><span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    contract<span class="token operator">:=</span>crypto<span class="token punctuation">.</span><span class="token function">CreateAddress</span><span class="token punctuation">(</span>acct1<span class="token punctuation">,</span>statadb<span class="token punctuation">.</span><span class="token function">GetNonce</span><span class="token punctuation">(</span>acct1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//❸</span>
    statadb<span class="token punctuation">.</span><span class="token function">CreateAccount</span><span class="token punctuation">(</span>contract<span class="token punctuation">)</span>
    statadb<span class="token punctuation">.</span><span class="token function">SetCode</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;contract code bytes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//❹</span>

    statadb<span class="token punctuation">.</span><span class="token function">SetNonce</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
    statadb<span class="token punctuation">.</span><span class="token function">SetState</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;owner&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span>acct1<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//❺</span>
    statadb<span class="token punctuation">.</span><span class="token function">SetState</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;ysqi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    statadb<span class="token punctuation">.</span><span class="token function">SetState</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;online&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    statadb<span class="token punctuation">.</span><span class="token function">SetState</span><span class="token punctuation">(</span>contract<span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;online&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">toHash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//❻</span>

    statadb<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//❼</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>statadb<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//❽</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，我们创建了三个账户，并且提交到数据库中。最终打印出当前数据中所有账户的数据信息：</p><ul><li>❶ 一行代码涉及多个操作。首先是创建一个内存KV数据库，再包装为 stata 数据库实例， 最后利用一个空的DB级的<code>StateRoot</code>，初始化一个以太坊 statadb。</li><li>❷ 定义两个账户 acct1和acct2，并分别添加100和888到账户余额。</li><li>❸ 模拟合约账户的创建过程，由外部账户 acct1 创建合约账户地址，并将此地址载入 statadb。</li><li>❹ 在将合约代码加入刚刚创建的合约账户中，在写入合约代码的同时， 会利用<code>crypto.Keccak256Hash(code)</code>计算合约代码哈希，保留在账户数据中。</li><li>❺ 模拟合约执行过程，涉及修改合约状态，新增三项状态数据<code>owner</code>,<code>name</code>和<code>online</code>，分别对应不同值。</li><li>❻ 这里和前面不同的是，是给状态<code>online</code>赋值为空<code>[]byte{}</code>，因为所有状态的默认值均是<code>[]byte{}</code>， 在提交到数据库时，如Leveldb 认为这些状态无有效值，会从数据库文件中删除此记录。 因此，此操作实际是一个删除状态<code>online</code>操作。</li><li>❼ 上面所有操作，还都只是发生在 statdb 内存中，并未真正的写入数据库文件。 执行<code>Commit</code>，才会将关于 statadb 的所有变更更新到数据库文件中。</li><li>❽ 一旦提交数据，则可以使用 <code>Dump</code> 命令从数据库中查找此 stata 相关的所有数据，包括所有账户。 并以 JSON 格式返还。这里，我们将返还结果直接打印输出。</li></ul><p>代码执行输出结果如下:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;root&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;3a25b0816cf007c0b878ca7a62ba35ee0337fa53703f281c41a791a137519f00&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;accounts&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;0bb141c2f7d4d12b1d27e62f86254e6cced5ff9a&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;balance&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string">&quot;root&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;codeHash&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;storage&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;77de172a492c40217e48ebb7eeff9b2d7df8151b&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;balance&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;888&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string">&quot;root&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;codeHash&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;storage&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;80580f576731dc1e1dcc53d80b261e228c447cdd&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;balance&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string">&quot;root&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1f6d937817f2ac217d8b123c4983c45141e50bd0c358c07f3c19c7b526dd4267&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;codeHash&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;c668dac8131a99c411450ba912234439ace20d1cc1084f8e198fee0a334bc592&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;636f6e747261637420636f6465206279746573&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;storage&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;000000000000000000000000000000000000000000000000000000006e616d65&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;8479737169&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;0000000000000000000000000000000000000000000000000000006f776e6572&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;940bb141c2f7d4d12b1d27e62f86254e6cced5ff9a&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看到这些显示数据，直接对应我们刚刚的所有操作。 也只有合约账户才有 <code>storage</code> 和 <code>code</code>。而外部账户的<code>codeHash</code>和<code>root</code>值相同，是一个默认值。</p><h2 id="账户模型的优缺点" tabindex="-1"><a class="header-anchor" href="#账户模型的优缺点" aria-hidden="true">#</a> 账户模型的优缺点</h2><p>优点：</p><ol><li>合约以代码形式保存在 <code>Account</code> 中，并且 <code>Account</code> 拥有自身状态。这种模型具有更好的可编程性。</li><li>批量交易的成本较低。设想矿池向矿工支付手续费，<code>Account</code> 模型可以通过合约的方式降低成本。</li></ol><p>缺点：</p><ol><li><code>Account</code> 模型交易之间没有依赖性，需要解决重放问题。</li><li>对于实现闪电网络/雷电网络，<code>Plasma</code> 等，用户举证需要更复杂的 <code>Proof</code> 证明机制，子链向主链进行状态迁移需要更复杂的协议。</li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,33),h={href:"https://mindcarver.cn/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/blockchainGuide/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://learnblockchain.cn/books/geth/part/account.html",target:"_blank",rel:"noopener noreferrer"};function y(_,x){const a=u("ExternalLinkIcon");return e(),c("div",null,[l,n("p",null,[s("②：为了不与第一种发生地址冲突，部署合约前就可以知道确切的合约地址 ，详情请查看 "),n("a",d,[s("EIP1014"),t(a)])]),k,n("p",null,[s("当我们想把一个合约部署到一个固定的地址上时，我们可以通过使用指定的"),r,s("和"),b,s("就可以做得到。比如："),n("a",v,[s("EIP1820"),t(a)]),s("和"),n("a",m,[s("EIP 2470"),t(a)]),s("正是这么做的。")]),g,n("blockquote",null,[n("p",null,[n("a",h,[s("https://mindcarver.cn/"),t(a)])]),n("p",null,[n("a",f,[s("https://github.com/blockchainGuide/"),t(a)])]),n("p",null,[n("a",q,[s("https://learnblockchain.cn/books/geth/part/account.html"),t(a)])])])])}const H=p(i,[["render",y],["__file","Introduction_to_the_etheric_fang_account_model.html.vue"]]);export{H as default};
