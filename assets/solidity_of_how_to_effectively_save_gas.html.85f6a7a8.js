const e=JSON.parse('{"key":"v-2bd66a94","path":"/blockchain/Smart_contract%20/Contract_advanced_techniques/solidity_of_how_to_effectively_save_gas.html","title":"","lang":"zh-CN","frontmatter":{"summary":"为什么要强调优化gas的重要性 DAPP中收取的费用取决于功能逻辑的复杂程度，越复杂消耗的计算资源越多。并且需要用户承担一部分gas,所以solidity 的优化显得非常的重要。同时注重优化gas的合约开发人员写出来的合约代码更安全，质量更高。 1. 封装结构 以uint 为例，如果我们的程序中包含多个类似的变量，可以将其封装在一起，因为不管uint8 ,u","head":[["meta",{"property":"og:url","content":"https://newzone.top/blockchain/Smart_contract%20/Contract_advanced_techniques/solidity_of_how_to_effectively_save_gas.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源笔记"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-09T07:08:02.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-09T07:08:02.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"为什么要强调优化gas的重要性","slug":"为什么要强调优化gas的重要性","link":"#为什么要强调优化gas的重要性","children":[]},{"level":2,"title":"1. 封装结构","slug":"_1-封装结构","link":"#_1-封装结构","children":[]},{"level":2,"title":"2. 最小化读写链上数据","slug":"_2-最小化读写链上数据","link":"#_2-最小化读写链上数据","children":[]},{"level":2,"title":"3.打开 solidity 优化器","slug":"_3-打开-solidity-优化器","link":"#_3-打开-solidity-优化器","children":[]},{"level":2,"title":"4.尽可能减少链上数据","slug":"_4-尽可能减少链上数据","link":"#_4-尽可能减少链上数据","children":[{"level":3,"title":"使用事件","slug":"使用事件","link":"#使用事件","children":[]},{"level":3,"title":"IPFS","slug":"ipfs","link":"#ipfs","children":[]},{"level":3,"title":"无状态合约","slug":"无状态合约","link":"#无状态合约","children":[]},{"level":3,"title":"Merkle Proofs","slug":"merkle-proofs","link":"#merkle-proofs","children":[]}]},{"level":2,"title":"5.注重变量顺序","slug":"_5-注重变量顺序","link":"#_5-注重变量顺序","children":[]},{"level":2,"title":"6.首选数据类型","slug":"_6-首选数据类型","link":"#_6-首选数据类型","children":[]},{"level":2,"title":"7.独立部署库","slug":"_7-独立部署库","link":"#_7-独立部署库","children":[]},{"level":2,"title":"8.构造函数","slug":"_8-构造函数","link":"#_8-构造函数","children":[]},{"level":2,"title":"9.使合约尽可能的小","slug":"_9-使合约尽可能的小","link":"#_9-使合约尽可能的小","children":[]},{"level":2,"title":"10.最小代理（ERC1167）","slug":"_10-最小代理-erc1167","link":"#_10-最小代理-erc1167","children":[]},{"level":2,"title":"11.内存位置","slug":"_11-内存位置","link":"#_11-内存位置","children":[]},{"level":2,"title":"12.尽量减少链上操作","slug":"_12-尽量减少链上操作","link":"#_12-尽量减少链上操作","children":[]},{"level":2,"title":"13.利用 view函数减少gas","slug":"_13-利用-view函数减少gas","link":"#_13-利用-view函数减少gas","children":[]},{"level":2,"title":"14.使用短路模式排序solidity操作","slug":"_14-使用短路模式排序solidity操作","link":"#_14-使用短路模式排序solidity操作","children":[]},{"level":2,"title":"15.删除不必要的库","slug":"_15-删除不必要的库","link":"#_15-删除不必要的库","children":[]},{"level":2,"title":"16.精确的声明函数的可见性","slug":"_16-精确的声明函数的可见性","link":"#_16-精确的声明函数的可见性","children":[]},{"level":2,"title":"17.避免代码中死代码","slug":"_17-避免代码中死代码","link":"#_17-避免代码中死代码","children":[]},{"level":2,"title":"18.避免使用常量结果的循环","slug":"_18-避免使用常量结果的循环","link":"#_18-避免使用常量结果的循环","children":[]},{"level":2,"title":"19.合并循环","slug":"_19-合并循环","link":"#_19-合并循环","children":[]},{"level":2,"title":"20.去除循环中的比较运算","slug":"_20-去除循环中的比较运算","link":"#_20-去除循环中的比较运算","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1670415083000,"updatedTime":1670569682000,"contributors":[{"name":"Kong Ming(空明)","email":"token01@126.com","commits":3}]},"readingTime":{"minutes":11.22,"words":3367},"filePathRelative":"blockchain/Smart_contract /Contract_advanced_techniques/solidity_of_how_to_effectively_save_gas.md","localizedDate":"2022年12月7日"}');export{e as data};
