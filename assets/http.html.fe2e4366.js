import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as o,a as n,b as s,d as t,e as p,r as l}from"./app.cfc5ed85.js";const i={},u=p(`<p>\u4F5C\u4E3A\u4E00\u4E2Ajava\u540E\u7AEF\uFF0C\u63D0\u4F9Bhttp\u670D\u52A1\u53EF\u4EE5\u8BF4\u662F\u57FA\u672C\u6280\u80FD\u4E4B\u4E00\u4E86\uFF0C\u4F46\u662F\u4F60\u771F\u7684\u4E86\u89E3http\u534F\u8BAE\u4E48\uFF1F\u4F60\u77E5\u9053\u77E5\u9053\u5982\u4F55\u624B\u64B8\u4E00\u4E2Ahttp\u670D\u52A1\u5668\u4E48\uFF1Ftomcat\u7684\u5E95\u5C42\u662F\u600E\u4E48\u652F\u6301http\u670D\u52A1\u7684\u5462\uFF1F\u5927\u540D\u9F0E\u9F0E\u7684Servlet\u53C8\u662F\u4EC0\u4E48\u4E1C\u897F\u5462\uFF0C\u8BE5\u600E\u4E48\u4F7F\u7528\u5462\uFF1F</p><p>\u5728\u521D\u5B66java\u65F6\uFF0Csocket\u7F16\u7A0B\u662F\u9003\u4E0D\u6389\u7684\u4E00\u7AE0\uFF1B\u867D\u7136\u5728\u5B9E\u9645\u4E1A\u52A1\u9879\u76EE\u4E2D\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u7684\u53EF\u80FD\u6027\u57FA\u672C\u4E3A0\uFF0C\u672C\u7BC7\u535A\u6587\u5C06\u4E3B\u8981\u4ECB\u7ECD\u5982\u4F55\u4F7F\u7528socket\u6765\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u7684http\u670D\u52A1\u5668\u529F\u80FD\uFF0C\u63D0\u4F9B\u5E38\u89C1\u7684get/post\u8BF7\u6C42\u652F\u6301\uFF0C\u5E76\u518D\u6B64\u8FC7\u7A0B\u4E2D\u4E86\u89E3\u4E0Bhttp\u534F\u8BAE</p><h2 id="i-http\u670D\u52A1\u5668\u4ECE0\u52301" tabindex="-1"><a class="header-anchor" href="#i-http\u670D\u52A1\u5668\u4ECE0\u52301" aria-hidden="true">#</a> I. Http\u670D\u52A1\u5668\u4ECE0\u52301</h2><p>\u65E2\u7136\u6211\u4EEC\u7684\u76EE\u6807\u662F\u501F\u52A9socket\u6765\u642D\u5EFAhttp\u670D\u52A1\u5668\uFF0C\u90A3\u4E48\u6211\u4EEC\u9996\u5148\u9700\u8981\u786E\u8BA4\u4E24\u70B9\uFF0C\u4E00\u662F\u5982\u4F55\u4F7F\u7528socket\uFF1B\u53E6\u4E00\u4E2A\u5219\u662Fhttp\u534F\u8BAE\u5982\u4F55\uFF0C\u600E\u4E48\u89E3\u6790\u6570\u636E\uFF1B\u4E0B\u9762\u5206\u522B\u8FDB\u884C\u8BF4\u660E</p><h3 id="_1-socket\u7F16\u7A0B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_1-socket\u7F16\u7A0B\u57FA\u7840" aria-hidden="true">#</a> 1. socket\u7F16\u7A0B\u57FA\u7840</h3><p>\u6211\u4EEC\u8FD9\u91CC\u4E3B\u8981\u662F\u5229\u7528ServerSocket\u6765\u7ED1\u5B9A\u7AEF\u53E3\uFF0C\u63D0\u4F9Btcp\u670D\u52A1\uFF0C\u57FA\u672C\u4F7F\u7528\u59FF\u52BF\u4E5F\u6BD4\u8F83\u7B80\u5355\uFF0C\u4E00\u822C\u5957\u8DEF\u5982\u4E0B</p><ul><li>\u521B\u5EFAServerSocket\u5BF9\u8C61\uFF0C\u7ED1\u5B9A\u76D1\u542C\u7AEF\u53E3</li><li>\u901A\u8FC7accept()\u65B9\u6CD5\u76D1\u542C\u5BA2\u6237\u7AEF\u8BF7\u6C42</li><li>\u8FDE\u63A5\u5EFA\u7ACB\u540E\uFF0C\u901A\u8FC7\u8F93\u5165\u6D41\u8BFB\u53D6\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u8BF7\u6C42\u4FE1\u606F</li><li>\u901A\u8FC7\u8F93\u51FA\u6D41\u5411\u5BA2\u6237\u7AEF\u53D1\u9001\u4E61\u97F3\u4FE1\u606F</li><li>\u5173\u95ED\u76F8\u5173\u8D44\u6E90</li></ul><p>\u5BF9\u5E94\u7684\u4F2A\u4EE3\u7801\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> ip<span class="token punctuation">)</span>
serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u63A5\u6536\u8BF7\u6C42\u6570\u636E</span>
socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FD4\u56DE\u6570\u636E\u7ED9\u8BF7\u6C42\u65B9</span>
out <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span>
out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5173\u95ED\u8FDE\u63A5</span>
socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-http\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#_2-http\u534F\u8BAE" aria-hidden="true">#</a> 2. http\u534F\u8BAE</h3><p>\u6211\u4EEC\u4E0A\u9762\u7684ServerSocket\u8D70\u7684\u662FTCP\u534F\u8BAE\uFF0CHTTP\u534F\u8BAE\u672C\u8EAB\u662F\u5728TCP\u534F\u8BAE\u4E4B\u4E0A\u7684\u4E00\u5C42\uFF0C\u5BF9\u4E8E\u6211\u4EEC\u521B\u5EFAhttp\u670D\u52A1\u5668\u800C\u8A00\uFF0C\u6700\u9700\u8981\u5173\u6CE8\u7684\u65E0\u975E\u4E24\u70B9</p><ul><li>\u8BF7\u6C42\u7684\u6570\u636E\u600E\u4E48\u6309\u7167http\u7684\u534F\u8BAE\u89E3\u6790\u51FA\u6765</li><li>\u5982\u4F55\u6309\u7167http\u534F\u8BAE\uFF0C\u8FD4\u56DE\u6570\u636E</li></ul><p>\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u77E5\u9053\u6570\u636E\u683C\u5F0F\u7684\u89C4\u8303\u4E86</p><p><strong>\u8BF7\u6C42\u6D88\u606F</strong></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/socket/http-22e0f678-b83a-4514-b2ae-44980ad845d0.jpg" alt="request headers"></p><p><strong>\u54CD\u5E94\u6D88\u606F</strong></p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/socket/http-8213eb7a-14d9-4db9-b843-d9d816a1fdec.jpg" alt="respones headers"></p><p>\u4E0A\u9762\u4E24\u5F20\u56FE\uFF0C\u5148\u6709\u4E2A\u76F4\u89C2\u6620\u8C61\uFF0C\u63A5\u4E0B\u6765\u5F00\u59CB\u6293\u91CD\u70B9</p><p>\u4E0D\u7BA1\u662F\u8BF7\u6C42\u6D88\u606F\u8FD8\u662F\u76F8\u5E94\u6D88\u606F\uFF0C\u90FD\u53EF\u4EE5\u5212\u5206\u4E3A\u4E09\u90E8\u5206\uFF0C\u8FD9\u5C31\u4E3A\u6211\u4EEC\u540E\u9762\u7684\u5904\u7406\u7B80\u5316\u4E86\u5F88\u591A</p><ul><li>\u7B2C\u4E00\u884C\uFF1A\u72B6\u6001\u884C</li><li>\u7B2C\u4E8C\u884C\u5230\u7B2C\u4E00\u4E2A\u7A7A\u884C\uFF1Aheader\uFF08\u8BF7\u6C42\u5934/\u76F8\u5E94\u5934)</li><li>\u5269\u4E0B\u6240\u6709\uFF1A\u6B63\u6587</li></ul><h3 id="_3-http\u670D\u52A1\u5668\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#_3-http\u670D\u52A1\u5668\u8BBE\u8BA1" aria-hidden="true">#</a> 3. http\u670D\u52A1\u5668\u8BBE\u8BA1</h3><p>\u63A5\u4E0B\u6765\u5F00\u59CB\u8FDB\u5165\u6B63\u9898\uFF0C\u57FA\u4E8Esocket\u521B\u5EFA\u4E00\u4E2Ahttp\u670D\u52A1\u5668\uFF0C\u4F7F\u7528socket\u57FA\u672C\u6CA1\u5565\u592A\u5927\u7684\u95EE\u9898\uFF0C\u6211\u4EEC\u9700\u8981\u989D\u5916\u5173\u6CE8\u4EE5\u4E0B\u51E0\u70B9</p><ul><li>\u5BF9\u8BF7\u6C42\u6570\u636E\u8FDB\u884C\u89E3\u6790</li><li>\u5C01\u88C5\u8FD4\u56DE\u7ED3\u679C</li></ul><h4 id="a-\u8BF7\u6C42\u6570\u636E\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#a-\u8BF7\u6C42\u6570\u636E\u89E3\u6790" aria-hidden="true">#</a> a. \u8BF7\u6C42\u6570\u636E\u89E3\u6790</h4><p>\u6211\u4EEC\u4ECEsocket\u4E2D\u62FF\u5230\u6240\u6709\u7684\u6570\u636E\uFF0C\u7136\u540E\u89E3\u6790\u4E3A\u5BF9\u5E94\u7684http\u8BF7\u6C42\uFF0C\u6211\u4EEC\u5148\u5B9A\u4E49\u4E2ARequest\u5BF9\u8C61\uFF0C\u5185\u90E8\u4FDD\u5B58\u4E00\u4E9B\u57FA\u672C\u7684HTTP\u4FE1\u606F\uFF0C\u63A5\u4E0B\u6765\u91CD\u70B9\u5C31\u662F\u5C06socket\u4E2D\u7684\u6240\u6709\u6570\u636E\u90FD\u635E\u51FA\u6765\uFF0C\u5C01\u88C5\u4E3Arequest\u5BF9\u8C61</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Request</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u8BF7\u6C42\u65B9\u6CD5 GET/POST/PUT/DELETE/OPTION...
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> method<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * \u8BF7\u6C42\u7684uri
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> uri<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * http\u7248\u672C
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> version<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8BF7\u6C42\u5934
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u8BF7\u6C42\u53C2\u6570\u76F8\u5173
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u524D\u9762\u7684http\u534F\u8BAE\u4ECB\u7ECD\uFF0C\u89E3\u6790\u8FC7\u7A0B\u5982\u4E0B\uFF0C\u6211\u4EEC\u5148\u770B\u8BF7\u6C42\u884C\u7684\u89E3\u6790\u8FC7\u7A0B</p><p><strong>\u8BF7\u6C42\u884C</strong>\uFF0C\u5305\u542B\u4E09\u4E2A\u57FA\u672C\u8981\u7D20\uFF1A\u8BF7\u6C42\u65B9\u6CD5 + URI + http\u7248\u672C\uFF0C\u7528\u7A7A\u683C\u8FDB\u884C\u5206\u5272\uFF0C\u6240\u4EE5\u89E3\u6790\u4EE3\u7801\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6839\u636E\u6807\u51C6\u7684http\u534F\u8BAE\uFF0C\u89E3\u6790\u8BF7\u6C42\u884C
 *
 * <span class="token keyword">@param</span> <span class="token parameter">reader</span>
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">decodeRequestLine</span><span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">Request</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assert</span> strs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">setMethod</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">setUri</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8BF7\u6C42\u5934\u7684\u89E3\u6790</strong>\uFF0C\u4ECE\u7B2C\u4E8C\u884C\uFF0C\u5230\u7B2C\u4E00\u4E2A\u7A7A\u767D\u884C\u4E4B\u95F4\u7684\u6240\u6709\u6570\u636E\uFF0C\u90FD\u662F\u8BF7\u6C42\u5934\uFF1B\u8BF7\u6C42\u5934\u7684\u683C\u5F0F\u4E5F\u6BD4\u8F83\u6E05\u6670\uFF0C \u5F62\u5982 <code>key:value</code>, \u5177\u4F53\u5B9E\u73B0\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6839\u636E\u6807\u51C6http\u534F\u8BAE\uFF0C\u89E3\u6790\u8BF7\u6C42\u5934
 *
 * <span class="token keyword">@param</span> <span class="token parameter">reader</span>
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">decodeRequestHeader</span><span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">Request</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> kv<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        kv <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> kv<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">;</span>
        headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>kv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    request<span class="token punctuation">.</span><span class="token function">setHeaders</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6700\u540E\u5C31\u662F\u6B63\u6587\u7684\u89E3\u6790\u4E86</strong>\uFF0C\u8FD9\u4E00\u5757\u9700\u8981\u6CE8\u610F\u4E00\u70B9\uFF0C\u6B63\u6587\u53EF\u80FD\u4E3A\u7A7A\uFF0C\u4E5F\u53EF\u80FD\u6709\u6570\u636E\uFF1B\u6709\u6570\u636E\u65F6\uFF0C\u6211\u4EEC\u8981\u5982\u4F55\u628A\u6240\u6709\u7684\u6570\u636E\u90FD\u53D6\u51FA\u6765\u5462\uFF1F</p><p>\u5148\u770B\u5177\u4F53\u5B9E\u73B0\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u6839\u636E\u6807\u6CE8http\u534F\u8BAE\uFF0C\u89E3\u6790\u6B63\u6587
 *
 * <span class="token keyword">@param</span> <span class="token parameter">reader</span>
 * <span class="token keyword">@param</span> <span class="token parameter">request</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">decodeRequestMessage</span><span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">Request</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> contentLen <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>contentLen <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8868\u793A\u6CA1\u6709message\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token comment">// \u5982get/options\u8BF7\u6C42\u5C31\u6CA1\u6709message</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>contentLen<span class="token punctuation">]</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u4E0B\u4E0A\u9762\u6211\u7684\u4F7F\u7528\u59FF\u52BF\uFF0C\u9996\u5148\u662F\u6839\u636E\u8BF7\u6C42\u5934\u4E2D\u7684<code>Content-Type</code>\u7684\u503C\uFF0C\u6765\u83B7\u5F97\u6B63\u6587\u7684\u6570\u636E\u5927\u5C0F\uFF0C\u56E0\u6B64\u6211\u4EEC\u83B7\u53D6\u7684\u65B9\u5F0F\u662F\u521B\u5EFA\u4E00\u4E2A\u8FD9\u4E48\u5927\u7684<code>char[]</code>\u6765\u8BFB\u53D6\u6D41\u4E2D\u6240\u6709\u6570\u636E\uFF0C\u5982\u679C\u6211\u4EEC\u7684\u6570\u7EC4\u6BD4\u5B9E\u9645\u7684\u5C0F\uFF0C\u5219\u8BFB\u4E0D\u5B8C\uFF1B\u5982\u679C\u5927\uFF0C\u5219\u6570\u7EC4\u4E2D\u4F1A\u6709\u4E00\u4E9B\u7A7A\u7684\u6570\u636E\uFF1B</p><p><strong>\u6700\u540E\u5C06\u4E0A\u9762\u7684\u51E0\u4E2A\u89E3\u6790\u5C01\u88C5\u4E00\u4E0B</strong>\uFF0C\u5B8C\u6210request\u89E3\u6790</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * http\u7684\u8BF7\u6C42\u53EF\u4EE5\u5206\u4E3A\u4E09\u90E8\u5206
 *
 * \u7B2C\u4E00\u884C\u4E3A\u8BF7\u6C42\u884C: \u5373 \u65B9\u6CD5 + URI + \u7248\u672C
 * \u7B2C\u4E8C\u90E8\u5206\u5230\u4E00\u4E2A\u7A7A\u884C\u4E3A\u6B62\uFF0C\u8868\u793A\u8BF7\u6C42\u5934
 * \u7A7A\u884C
 * \u7B2C\u4E09\u90E8\u5206\u4E3A\u63A5\u4E0B\u6765\u6240\u6709\u7684\uFF0C\u8868\u793A\u53D1\u9001\u7684\u5185\u5BB9,message-body\uFF1B\u5176\u957F\u5EA6\u7531\u8BF7\u6C42\u5934\u4E2D\u7684 Content-Length \u51B3\u5B9A
 *
 * \u51E0\u4E2A\u5B9E\u4F8B\u5982\u4E0B
 *
 * <span class="token keyword">@param</span> <span class="token parameter">reqStream</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Request</span> <span class="token function">parse2request</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> reqStream<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">BufferedReader</span> httpReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>reqStream<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Request</span> httpRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decodeRequestLine</span><span class="token punctuation">(</span>httpReader<span class="token punctuation">,</span> httpRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decodeRequestHeader</span><span class="token punctuation">(</span>httpReader<span class="token punctuation">,</span> httpRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">decodeRequestMessage</span><span class="token punctuation">(</span>httpReader<span class="token punctuation">,</span> httpRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> httpRequest<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-\u8BF7\u6C42\u4EFB\u52A1httptask" tabindex="-1"><a class="header-anchor" href="#b-\u8BF7\u6C42\u4EFB\u52A1httptask" aria-hidden="true">#</a> b. \u8BF7\u6C42\u4EFB\u52A1HttpTask</h4><p>\u6BCF\u4E2A\u8BF7\u6C42\uFF0C\u5355\u72EC\u5206\u914D\u4E00\u4E2A\u4EFB\u52A1\u6765\u5E72\u8FD9\u4E2A\u4E8B\u60C5\uFF0C\u5C31\u662F\u4E3A\u4E86\u652F\u6301\u5E76\u53D1\uFF0C\u5BF9\u4E8EServerSocket\u800C\u8A00\uFF0C\u63A5\u6536\u5230\u4E86\u4E00\u4E2A\u8BF7\u6C42\uFF0C\u90A3\u5C31\u521B\u5EFA\u4E00\u4E2AHttpTask\u4EFB\u52A1\u6765\u5B9E\u73B0http\u901A\u4FE1</p><p>\u90A3\u4E48\u8FD9\u4E2Ahttptask\u5E72\u5565\u5462\uFF1F</p><ul><li>\u4ECE\u8BF7\u6C42\u4E2D\u635E\u6570\u636E</li><li>\u54CD\u5E94\u8BF7\u6C42</li><li>\u5C01\u88C5\u7ED3\u679C\u5E76\u8FD4\u56DE</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Socket</span> socket<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">HttpTask</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>socket <span class="token operator">=</span> socket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>socket <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;socket can&#39;t be null.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">OutputStream</span> outputStream <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">HttpMessageParser<span class="token punctuation">.</span>Request</span> httpRequest <span class="token operator">=</span> <span class="token class-name">HttpMessageParser</span><span class="token punctuation">.</span><span class="token function">parse2request</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6839\u636E\u8BF7\u6C42\u7ED3\u679C\u8FDB\u884C\u54CD\u5E94\uFF0C\u7701\u7565\u8FD4\u56DE</span>
                <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> httpRes <span class="token operator">=</span> <span class="token class-name">HttpMessageParser</span><span class="token punctuation">.</span><span class="token function">buildResponse</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>httpRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> httpRes <span class="token operator">=</span> <span class="token class-name">HttpMessageParser</span><span class="token punctuation">.</span><span class="token function">buildResponse</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>httpRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u8BF7\u6C42\u7ED3\u679C\u7684\u5C01\u88C5\uFF0C\u7ED9\u4E00\u4E2A\u7B80\u5355\u7684\u8FDB\u884C\u6F14\u793A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Response</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> version<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> status<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">buildResponse</span><span class="token punctuation">(</span><span class="token class-name">Request</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Response</span> httpResponse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">setHeaders</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

    httpResponse<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildResponseLine</span><span class="token punctuation">(</span>httpResponse<span class="token punctuation">,</span> builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildResponseHeaders</span><span class="token punctuation">(</span>httpResponse<span class="token punctuation">,</span> builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildResponseMessage</span><span class="token punctuation">(</span>httpResponse<span class="token punctuation">,</span> builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildResponseLine</span><span class="token punctuation">(</span><span class="token class-name">Response</span> response<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> stringBuilder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildResponseHeaders</span><span class="token punctuation">(</span><span class="token class-name">Response</span> response<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> stringBuilder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">buildResponseMessage</span><span class="token punctuation">(</span><span class="token class-name">Response</span> response<span class="token punctuation">,</span> <span class="token class-name">StringBuilder</span> stringBuilder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-http\u670D\u52A1\u642D\u5EFA" tabindex="-1"><a class="header-anchor" href="#c-http\u670D\u52A1\u642D\u5EFA" aria-hidden="true">#</a> c. http\u670D\u52A1\u642D\u5EFA</h4><p>\u524D\u9762\u7684\u57FA\u672C\u4E0A\u628A\u8BE5\u5E72\u7684\u4E8B\u60C5\u90FD\u5E72\u4E86\uFF0C\u5269\u4E0B\u7684\u5C31\u7B80\u5355\u4E86\uFF0C\u521B\u5EFA<code>ServerSocket</code>\uFF0C\u7ED1\u5B9A\u7AEF\u53E3\u63A5\u6536\u8BF7\u6C42\uFF0C\u6211\u4EEC\u5728\u7EBF\u7A0B\u6C60\u4E2D\u8DD1\u8FD9\u4E2Ahttp\u670D\u52A1</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BasicHttpServer</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> bootstrapExecutor <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> taskExecutor<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token constant">PORT</span> <span class="token operator">=</span> <span class="token number">8999</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">startHttpServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> nThreads <span class="token operator">=</span> <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        taskExecutor <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>nThreads<span class="token punctuation">,</span> nThreads<span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>DiscardPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                bootstrapExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ServerThread</span><span class="token punctuation">(</span>serverSocket<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u91CD\u8BD5</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        bootstrapExecutor<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ServerThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token class-name">ServerSocket</span> serverSocket<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">ServerThread</span><span class="token punctuation">(</span><span class="token class-name">ServerSocket</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>serverSocket <span class="token operator">=</span> s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>serverSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">HttpTask</span> eventTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpTask</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    taskExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>eventTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ie<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0C\u4E00\u4E2A\u57FA\u4E8Esocket\u5B9E\u73B0\u7684http\u670D\u52A1\u5668\u57FA\u672C\u4E0A\u5C31\u642D\u5EFA\u5B8C\u4E86\uFF0C\u63A5\u4E0B\u6765\u5C31\u53EF\u4EE5\u8FDB\u884C\u6D4B\u8BD5\u4E86</p><h3 id="_4-\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_4-\u6D4B\u8BD5" aria-hidden="true">#</a> 4. \u6D4B\u8BD5</h3>`,49),k={href:"https://github.com/liuyueyi/quick-fix",target:"_blank",rel:"noopener noreferrer"},r=p('<p>\u4E00\u4E2A\u5B8C\u6210\u7684post\u8BF7\u6C42\u5982\u4E0B</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/socket/http-f314ade3-9006-4caa-b905-5726121826c4.gif" alt="2.gif"></p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u4E0B\u6253\u5370\u51FA\u8FD4\u56DE\u5934\u7684\u60C5\u51B5</p><p><img src="http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/socket/http-59db6211-792a-494f-b01a-9d5848eceed1.gif" alt="2.gif"></p><h2 id="ii-\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#ii-\u5176\u4ED6" aria-hidden="true">#</a> II. \u5176\u4ED6</h2><h3 id="_0-\u9879\u76EE\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#_0-\u9879\u76EE\u6E90\u7801" aria-hidden="true">#</a> 0. \u9879\u76EE\u6E90\u7801</h3>',6),d={href:"https://github.com/liuyueyi/quick-fix",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"\u76F8\u5173\u4EE3\u7801:",-1),m=n("li",null,"com.git.hui.fix.core.endpoint.BasicHttpServer",-1),b=n("li",null,"com.git.hui.fix.core.endpoint.HttpMessageParser",-1),h=n("li",null,"com.git.hui.fix.core.endpoint.HttpTask",-1),g={href:"https://liuyueyi.github.io/hexblog/2018/12/30/181230-%E4%BD%BF%E7%94%A8Java-Socket%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8/",target:"_blank",rel:"noopener noreferrer"},w=n("hr",null,null,-1);function y(f,S){const a=l("ExternalLinkIcon");return c(),o("div",null,[u,n("p",null,[s("\u505A\u8FD9\u4E2A\u670D\u52A1\u5668\uFF0C\u4E3B\u8981\u662F\u57FA\u4E8E\u9879\u76EE "),n("a",k,[s("quick-fix"),t(a)]),s(" \u4EA7\u751F\u7684\uFF0C\u8FD9\u4E2A\u9879\u76EE\u4E3B\u8981\u662F\u4E3A\u4E86\u89E3\u51B3\u5E94\u7528\u5185\u90E8\u670D\u52A1\u8BBF\u95EE\u4E0E\u6570\u636E\u8BA2\u6B63\uFF0C\u6211\u4EEC\u5728\u8FD9\u4E2A\u9879\u76EE\u7684\u57FA\u7840\u4E0A\u8FDB\u884C\u6D4B\u8BD5")]),r,n("ul",null,[n("li",null,[n("a",d,[s("quick-fix"),t(a)])]),v,m,b,h]),n("blockquote",null,[n("p",null,[s("\u53C2\u8003\u94FE\u63A5\uFF1A"),n("a",g,[s("https://liuyueyi.github.io/hexblog/2018/12/30/181230-%E4%BD%BF%E7%94%A8Java-Socket%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8/"),t(a)]),s("\uFF0C\u6574\u7406\uFF1Amusk")])]),w])}const x=e(i,[["render",y],["__file","http.html.vue"]]);export{x as default};
