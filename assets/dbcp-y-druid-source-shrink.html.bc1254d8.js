import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as t,a as n,b as p,d as o,f as c,r as i}from"./app.81272278.js";const l={},u=c(`<h1 id="druid\u6E90\u7801\u5B66\u4E60-\u4E94-druiddatasource\u7684shrink\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#druid\u6E90\u7801\u5B66\u4E60-\u4E94-druiddatasource\u7684shrink\u8FC7\u7A0B" aria-hidden="true">#</a> Druid\u6E90\u7801\u5B66\u4E60\uFF08\u4E94\uFF09-DruidDataSource\u7684shrink\u8FC7\u7A0B</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p>shrink\u65B9\u6CD5\u662FDestroyTask\u7EBF\u7A0B\u4E2D\u56DE\u6536\u8FDE\u63A5\u7684\u5177\u4F53\u6267\u884C\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * \u56DE\u6536\u8FDE\u63A5\u7EBF\u7A0B
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DestroyTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">DestroyTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">shrink</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> keepAlive<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRemoveAbandoned</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">removeAbandoned</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-shrink\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-shrink\u65B9\u6CD5" aria-hidden="true">#</a> 2. shrink\u65B9\u6CD5</h2><h3 id="_2-1-\u9996\u5148\u83B7\u5F97\u9501" tabindex="-1"><a class="header-anchor" href="#_2-1-\u9996\u5148\u83B7\u5F97\u9501" aria-hidden="true">#</a> 2.1 \u9996\u5148\u83B7\u5F97\u9501\uFF1A</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shrink</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> checkTime<span class="token punctuation">,</span> <span class="token keyword">boolean</span> keepAlive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u5F97\u9501</span>
            lock<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-\u5224\u65AD\u521D\u59CB\u5316\u72B6\u6001\u662F\u5426\u5B8C\u6210" tabindex="-1"><a class="header-anchor" href="#_2-2-\u5224\u65AD\u521D\u59CB\u5316\u72B6\u6001\u662F\u5426\u5B8C\u6210" aria-hidden="true">#</a> 2.2 \u5224\u65AD\u521D\u59CB\u5316\u72B6\u6001\u662F\u5426\u5B8C\u6210</h3><p>\u8981\u5224\u65AD\u521D\u59CB\u5316\u72B6\u6001\u662F\u5426\u5B8C\u6210\uFF0C\u5982\u679C\u91C7\u7528\u5F02\u6B65\u521D\u59CB\u5316\uFF0C\u53EF\u80FDDestoryTask\u7EBF\u7A0B\u5DF2\u7ECF\u542F\u52A8\uFF0C\u4F46\u662F\u8FDE\u63A5\u6C60\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\u5B8C\u6210\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">// \u8981\u5224\u65AD\u521D\u59CB\u5316\u72B6\u6001\u662F\u5426\u5B8C\u6210\uFF0C\u5982\u679C\u91C7\u7528\u5F02\u6B65\u521D\u59CB\u5316\uFF0C\u53EF\u80FDDestoryTask\u7EBF\u7A0B\u5DF2\u7ECF\u542F\u52A8\uFF0C\u4F46\u662F\u8FDE\u63A5\u6C60\u8FD8\u6CA1\u6709\u521D\u59CB\u5316\u5B8C\u6210\u3002</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-\u5BF9\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u8FDB\u884C\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_2-3-\u5BF9\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u8FDB\u884C\u904D\u5386" aria-hidden="true">#</a> 2.3 \u5BF9\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u8FDB\u884C\u904D\u5386</h3><p>\u4E4B\u540E\u5BF9\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u8FDB\u884C\u904D\u5386\uFF0Cconnections\u4E2D\uFF0C\u53EF\u8FDE\u63A5\u7684\u8FDE\u63A5\u6570\u8BB0\u5728poolingCount\u53D8\u91CF\u3002 \u6B64\u65F6\u8981\u8BB0\u5F55\u4E00\u4E2AcheckCount\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u4E3A checkCount = poolingCount - minIdle;\u4E5F\u5C31\u662FcheckCount\u4E3A\u8FDE\u63A5\u6C60\u4E2D\u8FDE\u63A5\u7684\u6570\u91CF\u51CF\u53BB\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u8BBE\u7F6EminIdle\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 3. \u5BF9\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u8FDB\u884C\u904D\u5386 \uFF0Cconnections\u4E2D\uFF0C\u53EF\u8FDE\u63A5\u7684\u8FDE\u63A5\u6570\u8BB0\u5728poolingCount\u53D8\u91CF\u3002</span>
            <span class="token comment">//\u6B64\u65F6\u8981\u8BB0\u5F55\u4E00\u4E2AcheckCount\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u4E3A checkCount = poolingCount - minIdle;</span>
            <span class="token comment">// \u4E5F\u5C31\u662FcheckCount\u4E3A\u8FDE\u63A5\u6C60\u4E2D\u8FDE\u63A5\u7684\u6570\u91CF\u51CF\u53BB\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u8BBE\u7F6EminIdle\u3002</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> checkCount <span class="token operator">=</span> poolingCount <span class="token operator">-</span> minIdle<span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> currentTimeMillis <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> poolingCount<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-\u8FDB\u5165checktime\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#_2-4-\u8FDB\u5165checktime\u903B\u8F91" aria-hidden="true">#</a> 2.4 \u8FDB\u5165checkTime\u903B\u8F91</h3><p>\u6B64\u540E\u8FDB\u5165checkTime\u903B\u8F91\uFF0CcheckTime\u662F\u8C03\u7528shrink\u4F20\u5165\u7684\u53C2\u6570\uFF0C\u901A\u5E38DestroyTask\u7684\u8C03\u7528\u8FD9\u4E2A\u53C2\u6570\u90FD\u4E3Atrue\u3002 \u6B64\u540Echeck\u7684\u53C2\u6570\u6709\uFF1A</p><ul><li>\u5224\u65AD\u7269\u7406\u8FDE\u63A5\u662F\u5426\u8D85\u65F6\uFF1AphyConnectTimeMillis &gt; phyTimeoutMillis\u3002\u5982\u679C\u8D85\u65F6\uFF0C\u5219\u5C06\u5F53\u524D\u8FDE\u63A5\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u5E76\u9000\u51FA\u5F53\u524D\u5FAA\u73AF\u3002</li><li>\u5224\u65AD\u7A7A\u95F2\u65F6\u95F4\u662F\u5426\u8D85\u65F6\uFF1A \u5982\u679C\u7A7A\u95F2\u65F6\u95F4\u5C0F\u4E8E\u6700\u5C0F\u4E8E\u914D\u7F6E\u7684minEvictableIdleTimeMillis\u65F6\u95F4\u4E14\u540C\u65F6\u5C0F\u4E8E\u914D\u7F6E\u7684keepAliveBetweenTimeMillis(idleMillis &lt; minEvictableIdleTimeMillis &amp;&amp; idleMillis &lt; keepAliveBetweenTimeMillis) \u5219\u7ED3\u675F\u5FAA\u73AF\u3002 \u53CD\u4E4B\uFF0C\u5F53idleMillis\u5927\u4E8EminEvictableIdleTimeMillis\u6216\u8005\u5927\u4E8EmaxEvictableIdleTimeMillis\u90FD\u88AB\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u3002</li><li>\u5224\u65ADkeepAlive\u662F\u5426\u8D85\u65F6\uFF1A\u5982\u679CidleMillis &gt;= keepAliveBetweenTimeMillis\uFF0C\u5219\u6807\u8BB0\u5230keepAliveConnections\u6570\u7EC4\u3002</li></ul><p>\u5982\u679CcheckTime\u4E3Afalse,\u5219\u5C06\u5C0F\u4E8EcheckCount\u7684\u5168\u90E8\u8FDE\u63A5\u90FD\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 4. \u6B64\u540E\u8FDB\u5165checkTime\u903B\u8F91\uFF0CcheckTime\u662F\u8C03\u7528shrink\u4F20\u5165\u7684\u53C2\u6570\uFF0C\u901A\u5E38DestroyTask\u7684\u8C03\u7528\u8FD9\u4E2A\u53C2\u6570\u90FD\u4E3Atrue\u3002</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>checkTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 4.1 \u5224\u65AD\u7269\u7406\u8FDE\u63A5\u662F\u5426\u8D85\u65F6\uFF1AphyConnectTimeMillis &gt; phyTimeoutMillis\u3002\u5982\u679C\u8D85\u65F6\uFF0C\u5219\u5C06\u5F53\u524D\u8FDE\u63A5\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u5E76\u9000\u51FA\u5F53\u524D\u5FAA\u73AF\u3002</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>phyTimeoutMillis <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">long</span> phyConnectTimeMillis <span class="token operator">=</span> currentTimeMillis <span class="token operator">-</span> connection<span class="token punctuation">.</span>connectTimeMillis<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>phyConnectTimeMillis <span class="token operator">&gt;</span> phyTimeoutMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            evictConnections<span class="token punctuation">[</span>evictCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> connection<span class="token punctuation">;</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 4.2 \u5224\u65AD\u7A7A\u95F2\u65F6\u95F4\u662F\u5426\u8D85\u65F6\uFF1A</span>
                    <span class="token comment">//\u5982\u679C\u7A7A\u95F2\u65F6\u95F4\u5C0F\u4E8E\u6700\u5C0F\u4E8E\u914D\u7F6E\u7684minEvictableIdleTimeMillis\u65F6\u95F4\u4E14\u540C\u65F6\u5C0F\u4E8E\u914D\u7F6E\u7684keepAliveBetweenTimeMillis(idleMillis &lt; minEvictableIdleTimeMillis &amp;&amp; idleMillis &lt; keepAliveBetweenTimeMillis) \u5219\u7ED3\u675F\u5FAA\u73AF\u3002</span>
                    <span class="token comment">//\u53CD\u4E4B\uFF0C\u5F53idleMillis\u5927\u4E8EminEvictableIdleTimeMillis\u6216\u8005\u5927\u4E8EmaxEvictableIdleTimeMillis\u90FD\u88AB\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u3002</span>
                    <span class="token keyword">long</span> idleMillis <span class="token operator">=</span> currentTimeMillis <span class="token operator">-</span> connection<span class="token punctuation">.</span>lastActiveTimeMillis<span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>idleMillis <span class="token operator">&lt;</span> minEvictableIdleTimeMillis
                            <span class="token operator">&amp;&amp;</span> idleMillis <span class="token operator">&lt;</span> keepAliveBetweenTimeMillis
                    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>idleMillis <span class="token operator">&gt;=</span> minEvictableIdleTimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>checkTime <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> checkCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            evictConnections<span class="token punctuation">[</span>evictCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> connection<span class="token punctuation">;</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>idleMillis <span class="token operator">&gt;</span> maxEvictableIdleTimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            evictConnections<span class="token punctuation">[</span>evictCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> connection<span class="token punctuation">;</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 4.3 \u5224\u65ADkeepAlive\u662F\u5426\u8D85\u65F6\uFF1A\u5982\u679CidleMillis &gt;= keepAliveBetweenTimeMillis\uFF0C\u5219\u6807\u8BB0\u5230keepAliveConnections\u6570\u7EC4\u3002</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>keepAlive <span class="token operator">&amp;&amp;</span> idleMillis <span class="token operator">&gt;=</span> keepAliveBetweenTimeMillis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        keepAliveConnections<span class="token punctuation">[</span>keepAliveCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> connection<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-checktime\u4E3Afalse" tabindex="-1"><a class="header-anchor" href="#_2-5-checktime\u4E3Afalse" aria-hidden="true">#</a> 2.5 checkTime\u4E3Afalse</h3><p>\u5982\u679CcheckTime\u4E3Afalse,\u5219\u5C06\u5C0F\u4E8EcheckCount\u7684\u5168\u90E8\u8FDE\u63A5\u90FD\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 5. \u5982\u679CcheckTime\u4E3Afalse,\u5219\u5C06\u5C0F\u4E8EcheckCount\u7684\u5168\u90E8\u8FDE\u63A5\u90FD\u6807\u8BB0\u5230evictConnections\u6570\u7EC4\u3002</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> checkCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        evictConnections<span class="token punctuation">[</span>evictCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> connection<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-removecount\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-6-removecount\u7684\u5904\u7406" aria-hidden="true">#</a> 2.6 removeCount\u7684\u5904\u7406</h3><p>\u8FD9\u4E4B\u540E\u8FDB\u884CremoveCount\u7684\u5904\u7406\uFF0CremoveCount = evictCount + keepAliveCount; \u5904\u7406\u903B\u8F91\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>removeCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5C06connections\u4ECEremoveCount\u5230poolingCount\u7684\u8FDE\u63A5\u5411\u524D\u79FB\u52A8poolingCount - removeCount\u3002</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>connections<span class="token punctuation">,</span> removeCount<span class="token punctuation">,</span> connections<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> poolingCount <span class="token operator">-</span> removeCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5C06poolingCount - removeCount\u540E\u7EED\u90E8\u5206\u90FD\u7F6E\u4E3A\u7A7A\u3002</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>connections<span class="token punctuation">,</span> poolingCount <span class="token operator">-</span> removeCount<span class="token punctuation">,</span> poolingCount<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    poolingCount <span class="token operator">-=</span> removeCount<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u903B\u8F91\u5B9E\u8D28\u4E0A\u662F\u5C06connections\u4E2D\u8BA1\u7B97\u51FA\u6765\u7684\u524DN\u9879\u90FD\u79FB\u9664\u3002 \u4E4B\u524D\u4E00\u76F4\u4E0D\u7406\u89E3\u8FD9\u4E2A\u903B\u8F91\uFF0C\u5B9E\u9645\u4E0A\u9700\u8981\u8BE6\u7EC6\u770B\u4E00\u4E0Bfor\u5FAA\u73AF\u4E2D\u7684\u903B\u8F91\u3002for\u5FAA\u73AF\u4E2D\uFF0C\u5982\u679CcheckTime\u4E3Afalse,\u5219\u76F4\u63A5\u5C06\u524D\u9762checkCount\u4E2A\u8FDE\u63A5\u90FD\u79FB\u9664\u3002 \u53CD\u4E4B\uFF0C\u7531\u4E8Econnections\u4E2D\uFF0C\u901A\u8FC7recycle\u65B9\u6CD5\uFF0C\u5C06\u653E\u56DE\u7684\u8FDE\u63A5\u90FD\u653E\u5728connections\u6570\u7EC4\u7684\u6700\u540E\u9762\u3002get\u7684\u8FDE\u63A5\u4E5F\u662F\u4ECEconnections\u7684\u5C3E\u90E8\u83B7\u53D6\uFF0C\u90A3\u4E48\u53EF\u4EE5\u786E\u4FDDconnections\u7684\u8FDE\u63A5\uFF0Cindex\u5C0F\u7684\u8FDE\u63A5\u6700\u5C11\u88AB\u4F7F\u7528\u3002 \u90A3\u4E48\u5728\u8FD9\u91CC\u786E\u5B9A\u4E86\u9700\u8981\u79FB\u9664\u7684\u8FDE\u63A5\u6570\u4E4B\u540E\uFF0C\u76F4\u63A5\u5C31\u53EF\u4EE5\u5C06connetions\u7684\u524D\u9762checkCount\u4E2A\u8FDE\u63A5\u90FD\u79FB\u9664\u3002</p><h3 id="_2-7-\u89E3\u9501" tabindex="-1"><a class="header-anchor" href="#_2-7-\u89E3\u9501" aria-hidden="true">#</a> 2.7 \u89E3\u9501</h3><p>\u79FB\u9664\u4E4B\u540E\uFF0C\u53EF\u4EE5\u89E3\u9501\u3002\u4E4B\u540E\u5BF9\u79FB\u9664\u7684\u8FDE\u63A5\u8FDB\u884C\u5904\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8-evict\u7684\u8FDE\u63A5\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-8-evict\u7684\u8FDE\u63A5\u5904\u7406" aria-hidden="true">#</a> 2.8 evict\u7684\u8FDE\u63A5\u5904\u7406</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>evictCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> evictCount<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DruidConnectionHolder</span> item <span class="token operator">=</span> evictConnections<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5173\u95ED\u8FDE\u63A5</span>
        <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u66F4\u65B0\u8BA1\u6570\u5668</span>
        destroyCountUpdater<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5C06evictConnections\u6E05\u7A7A</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>evictConnections<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u95ED\u8FDE\u63A5\u5E76\u6E05\u7A7AevictConnections\u3002</p><h3 id="_2-9-keepalivecount\u8FDE\u63A5\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2-9-keepalivecount\u8FDE\u63A5\u5904\u7406" aria-hidden="true">#</a> 2.9 keepAliveCount\u8FDE\u63A5\u5904\u7406</h3><p>\u5BF9\u4E8EkeepAliveCount\u8FDE\u63A5\uFF0C\u5219\u9700\u8981\u5206\u51E0\u79CD\u60C5\u51B5\u8FDB\u884C\u8BA8\u8BBA\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 9. keepAliveCount\u8FDE\u63A5\u5904\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>keepAliveCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// keep order</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> keepAliveCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">DruidConnectionHolder</span> holer <span class="token operator">=</span> keepAliveConnections<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token class-name">Connection</span> connection <span class="token operator">=</span> holer<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                holer<span class="token punctuation">.</span><span class="token function">incrementKeepAliveCheckCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u6821\u9A8C\u8FDE\u63A5\u662F\u5426\u8FD8\u53EF\u7528</span>
                <span class="token keyword">boolean</span> validate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validateConnection</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    validate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token constant">LOG</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;keepAliveErr&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// skip</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">boolean</span> discard <span class="token operator">=</span> <span class="token operator">!</span>validate<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>validate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    holer<span class="token punctuation">.</span>lastKeepTimeMillis <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u5982\u679C\u53EF\u7528\uFF0C\u5219\u76F4\u63A5put\u5230connections\u4E2D\uFF0C\u653E\u7F6E\u5230\u5C3E\u90E8\u3002</span>
                    <span class="token keyword">boolean</span> putOk <span class="token operator">=</span> <span class="token function">put</span><span class="token punctuation">(</span>holer<span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>putOk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        discard <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u5982\u679C\u4E0D\u53EF\u7528\uFF0C\u5219\u5173\u95ED\u8FDE\u63A5</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>discard<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// skip</span>
                    <span class="token punctuation">}</span>

                    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u52A0\u9501\u66F4\u65B0\u8BA1\u6570\u5668</span>
                        discardCount<span class="token operator">++</span><span class="token punctuation">;</span>

                        <span class="token comment">//\u5982\u679C\u56DE\u6536\u4E4B\u540E\u5C0F\u4E8E\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>activeCount <span class="token operator">+</span> poolingCount <span class="token operator">&lt;=</span> minIdle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">//\u901A\u77E5\u53EF\u4EE5\u521B\u5EFA\u65B0\u8FDE\u63A5\u4E86</span>
                            <span class="token function">emptySignal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u89E3\u9501</span>
                        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataSourceStat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addKeepAliveCheckCount</span><span class="token punctuation">(</span>keepAliveCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>keepAliveConnections<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8Ekeepalive\u72B6\u6001\u7684\u8FDE\u63A5\uFF0C\u4E3A\u4E86\u66F4\u597D\u7684\u590D\u7528\u8BE5\u8FDE\u63A5\uFF0C\u5219\u9996\u5148\u5224\u65AD\u8BE5\u8FDE\u63A5\u662F\u5426\u53EF\u7528\uFF0C\u5982\u679C\u53EF\u7528\uFF0C\u5219\u8C03\u7528put\u65B9\u6CD5\uFF0C\u5C06\u8BE5\u8FDE\u63A5\u7684\u72B6\u6001\u66F4\u65B0\u4E4B\u540E\uFF0C\u653E\u7F6E\u5230\u8FDE\u63A5\u6C60\u7684\u5C3E\u90E8\u3002 \u53EF\u89C1\uFF0Cshrink\u4E2D\uFF0C\u5E76\u975E\u6240\u6709\u7684\u8FDE\u63A5\u90FD\u4F1A\u5173\u95ED\uFF0C\u5BF9\u4E8Ekeepalive\u72B6\u6001\u7684\u8FDE\u63A5\uFF0C\u9700\u8981\u5224\u65AD\u662F\u5426\u53EF\u7528\u3002\u53EF\u7528\u7684\u8FDE\u63A5\u8FD8\u53EF\u518D\u6B21\u590D\u7528\u3002</p><h3 id="_2-10-keepalive\u72B6\u6001-\u4E14\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u52A0\u4E0A\u88AB\u4F7F\u7528\u7684\u8FDE\u63A5\u4ECD\u7136\u5C0F\u4E8Eminidle" tabindex="-1"><a class="header-anchor" href="#_2-10-keepalive\u72B6\u6001-\u4E14\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u52A0\u4E0A\u88AB\u4F7F\u7528\u7684\u8FDE\u63A5\u4ECD\u7136\u5C0F\u4E8Eminidle" aria-hidden="true">#</a> 2.10 keepAlive\u72B6\u6001\uFF0C\u4E14\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u52A0\u4E0A\u88AB\u4F7F\u7528\u7684\u8FDE\u63A5\u4ECD\u7136\u5C0F\u4E8EminIdle</h3><p>\u6B64\u65F6\u8FD8\u6709\u4E00\u79CD\u60C5\u51B5\u9700\u8981\u8003\u8651\uFF0C\u5C31\u662F\u6B64\u65F6\u53EF\u7528\u7684\u8FDE\u63A5\u4ECD\u7136\u4E0D\u591FminIdle\uFF0C\u90A3\u4E48\u8FDE\u63A5\u6C60\u4E0D\u6EE1\uFF0C\u9700\u8981\u7EE7\u7EED\u521B\u5EFA\u8FDE\u63A5\u3002\u8FD9\u4E2A\u72B6\u6001\u4E3AneedFill:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 10. keepAlive\u72B6\u6001\uFF0C\u4E14\u8FDE\u63A5\u6C60\u4E2D\u7684\u8FDE\u63A5\u52A0\u4E0A\u88AB\u4F7F\u7528\u7684\u8FDE\u63A5\u4ECD\u7136\u5C0F\u4E8EminIdle</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>needFill<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u52A0\u9501</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u5982\u679CminIdle \u51CF\u53BBactiveCount + poolingCount + createTaskCount \u4ECD\u7136\u4E0D\u6EE1\uFF0C\u5219\u901A\u77E5\u521B\u5EFA\u7EBF\u7A0B\u521B\u5EFA\u8FDE\u63A5</span>
                <span class="token keyword">int</span> fillCount <span class="token operator">=</span> minIdle <span class="token operator">-</span> <span class="token punctuation">(</span>activeCount <span class="token operator">+</span> poolingCount <span class="token operator">+</span> createTaskCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fillCount<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">emptySignal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u89E3\u9501</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>onFatalError <span class="token operator">||</span> fatalErrorIncrement <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">emptySignal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>needFill\u548ConFatalError \u90FD\u9700\u8981\u901A\u77E5\u751F\u4EA7\u8005\u7EE7\u7EED\u521B\u5EFA\u8FDE\u63A5\u3002</p><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,40),k={href:"https://blog.csdn.net/dhaibo1986/article/details/121312110?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"};function d(r,v){const s=i("ExternalLinkIcon");return e(),t("div",null,[u,n("p",null,[n("a",k,[p("Druid\u6E90\u7801\u9605\u8BFB5-DruidDataSource\u7684shrink\u8FC7\u7A0B"),o(s)])])])}const h=a(l,[["render",d],["__file","dbcp-y-druid-source-shrink.html.vue"]]);export{h as default};
