import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,d as a,b as o,f as c,r as l}from"./app.364af573.js";const i={},u=c(`<h1 id="spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bjdk\u4EE3\u7406\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Bjdk\u4EE3\u7406\u5B9E\u73B0" aria-hidden="true">#</a> Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BJDK\u4EE3\u7406\u5B9E\u73B0</h1><blockquote><p>\u4E0A\u6587\u6211\u4EEC\u5B66\u4E60\u4E86SpringAOP Cglib\u52A8\u6001\u4EE3\u7406\u7684\u5B9E\u73B0\uFF0C\u672C\u6587\u4E3B\u8981\u662FSpringAOP JDK\u52A8\u6001\u4EE3\u7406\u7684\u6848\u4F8B\u548C\u5B9E\u73B0\u90E8\u5206\u3002</p></blockquote><h2 id="_1-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165" aria-hidden="true">#</a> 1. \u5F15\u5165</h2><blockquote><p>\u4E0A\u6587\u6211\u4EEC\u5B66\u4E60\u4E86SpringAOP Cglib\u52A8\u6001\u4EE3\u7406\u7684\u5B9E\u73B0\uFF0C\u672C\u6587\u4E3B\u8981\u662FSpringAOP JDK\u52A8\u6001\u4EE3\u7406\u7684\u6848\u4F8B\u548C\u5B9E\u73B0\u90E8\u5206\u3002</p></blockquote><h3 id="_1-1-\u4EC0\u4E48\u662Fjdk\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#_1-1-\u4EC0\u4E48\u662Fjdk\u4EE3\u7406" aria-hidden="true">#</a> 1.1 \u4EC0\u4E48\u662FJDK\u4EE3\u7406?</h3><p>JDK\u52A8\u6001\u4EE3\u7406\u662F\u7531 JDK\u63D0\u4F9B\u7684\u5DE5\u5177\u7C7BProxy\u5B9E\u73B0\u7684\uFF0C\u52A8\u6001\u4EE3\u7406\u7C7B\u662F\u5728\u8FD0\u884C\u65F6\u751F\u6210\u6307\u5B9A\u63A5\u53E3\u7684\u4EE3\u7406\u7C7B\uFF0C\u6BCF\u4E2A\u4EE3\u7406\u5B9E\u4F8B\uFF08\u5B9E\u73B0\u9700\u8981\u4EE3\u7406\u7684\u63A5\u53E3\uFF09\u90FD\u6709\u4E00\u4E2A\u5173\u8054\u7684\u8C03\u7528\u5904\u7406\u7A0B\u5E8F\u5BF9\u8C61\uFF0C\u6B64\u5BF9\u8C61\u5B9E\u73B0\u4E86InvocationHandler\uFF0C\u6700\u7EC8\u7684\u4E1A\u52A1\u903B\u8F91\u662F\u5728InvocationHandler\u5B9E\u73B0\u7C7B\u7684invoke\u65B9\u6CD5\u4E0A\u3002</p><h2 id="_2-jdk\u52A8\u6001\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#_2-jdk\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a> 2. JDK\u52A8\u6001\u4EE3\u7406</h2><p><strong>Spring\u9ED8\u8BA4\u4F7F\u7528JDK\u7684\u52A8\u6001\u4EE3\u7406\u5B9E\u73B0AOP\uFF0C\u7C7B\u5982\u679C\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0CSpring\u5C31\u4F1A\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u5B9E\u73B0\u52A8\u6001\u4EE3\u7406</strong>\u3002</p><blockquote><p>\u719F\u6089<code>Java</code>\u8BED\u8A00\u7684\u5E94\u8BE5\u4F1A\u5BF9<code>JDK</code>\u52A8\u6001\u4EE3\u7406\u6709\u6240\u4E86\u89E3\u3002<code>JDK</code>\u5B9E\u73B0\u52A8\u6001\u4EE3\u7406\u9700\u8981\u4E24\u4E2A\u7EC4\u4EF6</p><ol><li>\u9996\u5148\u7B2C\u4E00\u4E2A\u5C31\u662F**<code>InvocationHandler</code>\u63A5\u53E3**\u3002\u6211\u4EEC\u5728\u4F7F\u7528<code>JDK</code>\u7684\u52A8\u6001\u4EE3\u7406\u65F6\uFF0C\u9700\u8981\u7F16\u5199\u4E00\u4E2A\u7C7B\uFF0C\u53BB\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u7136\u540E\u91CD\u5199<code>invoke</code>\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5176\u5B9E\u5C31\u662F\u6211\u4EEC\u63D0\u4F9B\u7684\u4EE3\u7406\u65B9\u6CD5</li><li>\u7136\u540E<code>JDK</code>\u52A8\u6001\u4EE3\u7406\u9700\u8981\u4F7F\u7528\u7684\u7B2C\u4E8C\u4E2A\u7EC4\u4EF6\u5C31<strong>\u662F<code>Proxy</code>\u8FD9\u4E2A\u7C7B</strong>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u7C7B\u7684<code>newProxyInstance</code>\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\u3002\u751F\u6210\u7684\u4EE3\u7406\u7C7B\u5B9E\u73B0\u4E86\u539F\u6765\u90A3\u4E2A\u7C7B\u7684\u6240\u6709\u63A5\u53E3\uFF0C\u5E76\u5BF9\u63A5\u53E3\u7684\u65B9\u6CD5\u8FDB\u884C\u4E86\u4EE3\u7406\uFF0C\u6211\u4EEC\u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u8C03\u7528\u8FD9\u4E9B\u65B9\u6CD5\u65F6\uFF0C<strong>\u5E95\u5C42\u5C06\u901A\u8FC7\u53CD\u5C04\uFF0C\u8C03\u7528\u6211\u4EEC\u5B9E\u73B0\u7684<code>invoke</code>\u65B9\u6CD5\u3002</strong></li></ol></blockquote><h3 id="_2-1-\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-1-\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> 2.1 \u5B9E\u73B0\u539F\u7406</h3><p><code>JDK</code>\u7684\u52A8\u6001\u4EE3\u7406\u662F\u57FA\u4E8E<strong>\u53CD\u5C04</strong>\u5B9E\u73B0\u3002<code>JDK</code>\u901A\u8FC7\u53CD\u5C04\uFF0C\u751F\u6210\u4E00\u4E2A\u4EE3\u7406\u7C7B\uFF0C\u8FD9\u4E2A\u4EE3\u7406\u7C7B\u5B9E\u73B0\u4E86\u539F\u6765\u90A3\u4E2A\u7C7B\u7684\u5168\u90E8\u63A5\u53E3\uFF0C\u5E76\u5BF9\u63A5\u53E3\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u65B9\u6CD5\u8FDB\u884C\u4E86\u4EE3\u7406\u3002\u5F53\u6211\u4EEC\u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u6267\u884C\u539F\u6765\u90A3\u4E2A\u7C7B\u7684\u65B9\u6CD5\u65F6\uFF0C\u4EE3\u7406\u7C7B\u5E95\u5C42\u4F1A\u901A\u8FC7\u53CD\u5C04\u673A\u5236\uFF0C\u56DE\u8C03\u6211\u4EEC\u5B9E\u73B0\u7684<code>InvocationHandler</code>\u63A5\u53E3\u7684<code>invoke</code>\u65B9\u6CD5\u3002<strong>\u5E76\u4E14\u8FD9\u4E2A\u4EE3\u7406\u7C7B\u662FProxy\u7C7B\u7684\u5B50\u7C7B</strong>\uFF08\u8BB0\u4F4F\u8FD9\u4E2A\u7ED3\u8BBA\uFF0C\u540E\u9762\u6D4B\u8BD5\u8981\u7528\uFF09\u3002\u8FD9\u5C31\u662F<code>JDK</code>\u52A8\u6001\u4EE3\u7406\u5927\u81F4\u7684\u5B9E\u73B0\u65B9\u5F0F\u3002</p><h3 id="_2-2-\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-2-\u4F18\u70B9" aria-hidden="true">#</a> <strong>2.2 \u4F18\u70B9</strong></h3><ol><li><code>JDK</code>\u52A8\u6001\u4EE3\u7406\u662F<code>JDK</code>\u539F\u751F\u7684\uFF0C\u4E0D\u9700\u8981\u4EFB\u4F55\u4F9D\u8D56\u5373\u53EF\u4F7F\u7528\uFF1B</li><li>\u901A\u8FC7\u53CD\u5C04\u673A\u5236\u751F\u6210\u4EE3\u7406\u7C7B\u7684\u901F\u5EA6\u8981\u6BD4<code>CGLib</code>\u64CD\u4F5C\u5B57\u8282\u7801\u751F\u6210\u4EE3\u7406\u7C7B\u7684\u901F\u5EA6\u66F4\u5FEB\uFF1B</li></ol><h3 id="_2-3-\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_2-3-\u7F3A\u70B9" aria-hidden="true">#</a> <strong>2.3 \u7F3A\u70B9</strong></h3><ol><li><p>\u5982\u679C\u8981\u4F7F\u7528<code>JDK</code>\u52A8\u6001\u4EE3\u7406\uFF0C\u88AB\u4EE3\u7406\u7684\u7C7B\u5FC5\u987B\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0C\u5426\u5219\u65E0\u6CD5\u4EE3\u7406\uFF1B</p></li><li><p><code>JDK</code>\u52A8\u6001\u4EE3\u7406\u65E0\u6CD5\u4E3A\u6CA1\u6709\u5728\u63A5\u53E3\u4E2D\u5B9A\u4E49\u7684\u65B9\u6CD5\u5B9E\u73B0\u4EE3\u7406\uFF0C\u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E2A\u5B9E\u73B0\u4E86\u63A5\u53E3\u7684\u7C7B\uFF0C\u6211\u4EEC\u4E3A\u5B83\u7684\u4E00\u4E2A\u4E0D\u5C5E\u4E8E\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\u914D\u7F6E\u4E86\u5207\u9762\uFF0C<code>Spring</code>\u4ECD\u7136\u4F1A\u4F7F\u7528<code>JDK</code>\u7684\u52A8\u6001\u4EE3\u7406\uFF0C<strong>\u4F46\u662F\u7531\u4E8E\u914D\u7F6E\u4E86\u5207\u9762\u7684\u65B9\u6CD5\u4E0D\u5C5E\u4E8E\u63A5\u53E3\uFF0C\u4E3A\u8FD9\u4E2A\u65B9\u6CD5\u914D\u7F6E\u7684\u5207\u9762\u5C06\u4E0D\u4F1A\u88AB\u7EC7\u5165</strong>\u3002</p></li><li><p><code>JDK</code>\u52A8\u6001\u4EE3\u7406\u6267\u884C\u4EE3\u7406\u65B9\u6CD5\u65F6\uFF0C\u9700\u8981\u901A\u8FC7\u53CD\u5C04\u673A\u5236\u8FDB\u884C\u56DE\u8C03\uFF0C\u6B64\u65F6\u65B9\u6CD5\u6267\u884C\u7684\u6548\u7387\u6BD4\u8F83\u4F4E\uFF1B</p><blockquote><p><code>JDK</code>\u52A8\u6001\u4EE3\u7406 \u751F\u6210\u5FEB\uFF0C\u6267\u884C\u6162</p></blockquote></li></ol><h2 id="_3-jdk\u4EE3\u7406\u7684\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3-jdk\u4EE3\u7406\u7684\u6848\u4F8B" aria-hidden="true">#</a> 3. JDK\u4EE3\u7406\u7684\u6848\u4F8B</h2><blockquote><p>\u8FD9\u91CC\u6211\u4EEC\u5199\u4E00\u4E2A\u4F7F\u7528jdk\u4EE3\u7406\u7684\u7B80\u5355\u4F8B\u5B50\u3002</p></blockquote><h3 id="_3-1-\u4E0D\u9700\u8981maven\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#_3-1-\u4E0D\u9700\u8981maven\u4F9D\u8D56" aria-hidden="true">#</a> 3.1 \u4E0D\u9700\u8981maven\u4F9D\u8D56</h3><p>jdk\u4EE3\u7406\u4E0D\u9700\u8981\u4EFB\u4F55\u4F9D\u8D56\u3002</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tech-pdai-spring-demos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>tech.pdai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>006-spring-framework-demo-aop-proxy-jdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--based on jdk proxy --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-\u5B9A\u4E49\u5B9E\u4F53" tabindex="-1"><a class="header-anchor" href="#_3-2-\u5B9A\u4E49\u5B9E\u4F53" aria-hidden="true">#</a> 3.2 \u5B9A\u4E49\u5B9E\u4F53</h3><p>User</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * user&#39;s name.
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * user&#39;s age.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * init.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">name</span> name
     * <span class="token keyword">@param</span> <span class="token parameter">age</span>  age
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;User{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, age=&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-\u88AB\u4EE3\u7406\u7684\u7C7B\u548C\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_3-3-\u88AB\u4EE3\u7406\u7684\u7C7B\u548C\u63A5\u53E3" aria-hidden="true">#</a> 3.3 \u88AB\u4EE3\u7406\u7684\u7C7B\u548C\u63A5\u53E3</h3><p>\u63A5\u53E3\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IUserService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * find user list.
     *
     * <span class="token keyword">@return</span> user list
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * add user
     */</span>
    <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u7C7B\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IUserService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * find user list.
     *
     * <span class="token keyword">@return</span> user list
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;pdai&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * add user
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// do something</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-jdk\u4EE3\u7406\u7C7B" tabindex="-1"><a class="header-anchor" href="#_3-4-jdk\u4EE3\u7406\u7C7B" aria-hidden="true">#</a> 3.4 JDK\u4EE3\u7406\u7C7B</h3><p>\u4EE3\u7406\u7C7B\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>proxy</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IUserService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserServiceImpl</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * This class is for proxy demo.
 *
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserLogProxy</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * proxy target
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">IUserService</span> target<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * init.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">target</span> target
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">UserLogProxy</span><span class="token punctuation">(</span><span class="token class-name">UserServiceImpl</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * get proxy.
     *
     * <span class="token keyword">@return</span> proxy target
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">IUserService</span> <span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">IUserService</span> proxy<span class="token punctuation">;</span>
        <span class="token class-name">ClassLoader</span> loader <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token class-name">IUserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">InvocationHandler</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token doc-comment comment">/**
             * proxy: \u4EE3\u7406\u5BF9\u8C61\u3002 \u4E00\u822C\u4E0D\u4F7F\u7528\u8BE5\u5BF9\u8C61 method: \u6B63\u5728\u88AB\u8C03\u7528\u7684\u65B9\u6CD5 args: \u8C03\u7528\u65B9\u6CD5\u4F20\u5165\u7684\u53C2\u6570
             */</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> methodName <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// log - before method</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;[before] execute method: &quot;</span> <span class="token operator">+</span> methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// call method</span>
                <span class="token class-name">Object</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u524D\u7F6E\u901A\u77E5</span>
                    result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u8FD4\u56DE\u901A\u77E5, \u53EF\u4EE5\u8BBF\u95EE\u5230\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NullPointerException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// \u5F02\u5E38\u901A\u77E5, \u53EF\u4EE5\u8BBF\u95EE\u5230\u65B9\u6CD5\u51FA\u73B0\u7684\u5F02\u5E38</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u540E\u7F6E\u901A\u77E5. \u56E0\u4E3A\u65B9\u6CD5\u53EF\u4EE5\u80FD\u4F1A\u51FA\u5F02\u5E38, \u6240\u4EE5\u8BBF\u95EE\u4E0D\u5230\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</span>

                <span class="token comment">// log - after method</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;[after] execute method: &quot;</span> <span class="token operator">+</span> methodName <span class="token operator">+</span> <span class="token string">&quot;, return value: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**
         * loader: \u4EE3\u7406\u5BF9\u8C61\u4F7F\u7528\u7684\u7C7B\u52A0\u8F7D\u5668.
         * interfaces: \u6307\u5B9A\u4EE3\u7406\u5BF9\u8C61\u7684\u7C7B\u578B. \u5373\u4EE3\u7406\u4EE3\u7406\u5BF9\u8C61\u4E2D\u53EF\u4EE5\u6709\u54EA\u4E9B\u65B9\u6CD5.
         * h: \u5F53\u5177\u4F53\u8C03\u7528\u4EE3\u7406\u5BF9\u8C61\u7684\u65B9\u6CD5\u65F6, \u5E94\u8BE5\u5982\u4F55\u8FDB\u884C\u54CD\u5E94, \u5B9E\u9645\u4E0A\u5C31\u662F\u8C03\u7528 InvocationHandler \u7684 invoke \u65B9\u6CD5
         */</span>
        proxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IUserService</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-\u4F7F\u7528\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#_3-5-\u4F7F\u7528\u4EE3\u7406" aria-hidden="true">#</a> 3.5 \u4F7F\u7528\u4EE3\u7406</h3><p>\u542F\u52A8\u7C7B\u4E2D\u6307\u5B9A\u4EE3\u7406\u76EE\u6807\u5E76\u6267\u884C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span><span class="token class-name">UserLogProxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IUserService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserServiceImpl</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Jdk proxy demo.
 *
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProxyDemo</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * main interface.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">args</span> args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// proxy</span>
        <span class="token class-name">IUserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserLogProxy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLoggingProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// call methods</span>
        userService<span class="token punctuation">.</span><span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userService<span class="token punctuation">.</span><span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-jdk\u4EE3\u7406\u7684\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_4-jdk\u4EE3\u7406\u7684\u6D41\u7A0B" aria-hidden="true">#</a> 4. JDK\u4EE3\u7406\u7684\u6D41\u7A0B</h2><blockquote><p>JDK\u4EE3\u7406\u81EA\u52A8\u751F\u6210\u7684class\u662F\u7531sun.misc.ProxyGenerator\u6765\u751F\u6210\u7684\u3002</p></blockquote><h3 id="_4-1-proxygenerator\u751F\u6210\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_4-1-proxygenerator\u751F\u6210\u4EE3\u7801" aria-hidden="true">#</a> 4.1 ProxyGenerator\u751F\u6210\u4EE3\u7801</h3><p>\u6211\u4EEC\u770B\u4E0Bsun.misc.ProxyGenerator\u751F\u6210\u4EE3\u7801\u7684\u903B\u8F91\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Generate a proxy class given a name and a list of proxy interfaces.
    *
    * <span class="token keyword">@param</span> <span class="token parameter">name</span>        the class name of the proxy class
    * <span class="token keyword">@param</span> <span class="token parameter">interfaces</span>  proxy interfaces
    * <span class="token keyword">@param</span> <span class="token parameter">accessFlags</span> access flags of the proxy class
*/</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateProxyClass</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>
                                        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">,</span>
                                        <span class="token keyword">int</span> accessFlags<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">ProxyGenerator</span> gen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProxyGenerator</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> accessFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> classFile <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">generateClassFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>generateClassFile\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Generate a class file for the proxy class.  This method drives the
    * class file generation process.
    */</span>
<span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generateClassFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">/* \u7B2C\u4E00\u6B65\uFF1A\u5C06\u6240\u6709\u65B9\u6CD5\u5305\u88C5\u6210ProxyMethod\u5BF9\u8C61 */</span>
    
    <span class="token comment">// \u5C06Object\u7C7B\u4E2DhashCode\u3001equals\u3001toString\u65B9\u6CD5\u5305\u88C5\u6210ProxyMethod\u5BF9\u8C61</span>
    <span class="token function">addProxyMethod</span><span class="token punctuation">(</span>hashCodeMethod<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addProxyMethod</span><span class="token punctuation">(</span>equalsMethod<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addProxyMethod</span><span class="token punctuation">(</span>toStringMethod<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u4EE3\u7406\u7C7B\u63A5\u53E3\u65B9\u6CD5\u5305\u88C5\u6210ProxyMethod\u5BF9\u8C61</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> intf <span class="token operator">:</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> intf<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">addProxyMethod</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> intf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6821\u9A8C\u8FD4\u56DE\u7C7B\u578B</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProxyMethod</span><span class="token punctuation">&gt;</span></span> sigmethods <span class="token operator">:</span> proxyMethods<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkReturnTypes</span><span class="token punctuation">(</span>sigmethods<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* \u7B2C\u4E8C\u6B65\uFF1A\u4E3A\u4EE3\u7406\u7C7B\u7EC4\u88C5\u5B57\u6BB5\uFF0C\u6784\u9020\u51FD\u6570\uFF0C\u65B9\u6CD5\uFF0Cstatic\u521D\u59CB\u5316\u5757\u7B49 */</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DFB\u52A0\u6784\u9020\u51FD\u6570\uFF0C\u53C2\u6570\u662FInvocationHandler</span>
        methods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">generateConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4EE3\u7406\u65B9\u6CD5</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProxyMethod</span><span class="token punctuation">&gt;</span></span> sigmethods <span class="token operator">:</span> proxyMethods<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ProxyMethod</span> pm <span class="token operator">:</span> sigmethods<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token comment">// \u5B57\u6BB5</span>
                fields<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FieldInfo</span><span class="token punctuation">(</span>pm<span class="token punctuation">.</span>methodFieldName<span class="token punctuation">,</span>
                    <span class="token string">&quot;Ljava/lang/reflect/Method;&quot;</span><span class="token punctuation">,</span>
                        <span class="token constant">ACC_PRIVATE</span> <span class="token operator">|</span> <span class="token constant">ACC_STATIC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// \u4E0A\u8FF0ProxyMethod\u4E2D\u7684\u65B9\u6CD5</span>
                methods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pm<span class="token punctuation">.</span><span class="token function">generateMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// static\u521D\u59CB\u5316\u5757</span>
        methods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">generateStaticInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span><span class="token string">&quot;unexpected I/O Exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>methods<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;method limit exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;field limit exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* \u7B2C\u4E09\u6B65\uFF1A\u5199\u5165class\u6587\u4EF6 */</span>

    <span class="token comment">/*
        * Make sure that constant pool indexes are reserved for the
        * following items before starting to write the final class file.
        */</span>
    cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token function">dotToSlash</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>superclassName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> intf<span class="token operator">:</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token function">dotToSlash</span><span class="token punctuation">(</span>intf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
        * Disallow new constant pool additions beyond this point, since
        * we are about to write the final constant pool table.
        */</span>
    cp<span class="token punctuation">.</span><span class="token function">setReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ByteArrayOutputStream</span> bout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DataOutputStream</span> dout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>bout<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">/*
            * Write all the items of the &quot;ClassFile&quot; structure.
            * See JVMS section 4.1.
            */</span>
                                    <span class="token comment">// u4 magic;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token number">0xCAFEBABE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// u2 minor_version;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span><span class="token constant">CLASSFILE_MINOR_VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// u2 major_version;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span><span class="token constant">CLASSFILE_MAJOR_VERSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        cp<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>dout<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// (write constant pool)</span>

                                    <span class="token comment">// u2 access_flags;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>accessFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// u2 this_class;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token function">dotToSlash</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// u2 super_class;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>superclassName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                                    <span class="token comment">// u2 interfaces_count;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// u2 interfaces[interfaces_count];</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> intf <span class="token operator">:</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>cp<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span>
                <span class="token function">dotToSlash</span><span class="token punctuation">(</span>intf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

                                    <span class="token comment">// u2 fields_count;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>fields<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// field_info fields[fields_count];</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FieldInfo</span> f <span class="token operator">:</span> fields<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            f<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>dout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

                                    <span class="token comment">// u2 methods_count;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span>methods<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// method_info methods[methods_count];</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodInfo</span> m <span class="token operator">:</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>dout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

                                        <span class="token comment">// u2 attributes_count;</span>
        dout<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (no ClassFile attributes for proxy classes)</span>

    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InternalError</span><span class="token punctuation">(</span><span class="token string">&quot;unexpected I/O Exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> bout<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u5171\u4E09\u4E2A\u6B65\u9AA4\uFF08<strong>\u628A\u5927\u8C61\u88C5\u8FDB\u51B0\u7BB1\u5206\u51E0\u6B65</strong>\uFF1F\uFF09\uFF1A</p><ul><li>\u7B2C\u4E00\u6B65\uFF1A\uFF08\u628A\u51B0\u7BB1\u95E8\u6253\u5F00\uFF09\u51C6\u5907\u5DE5\u4F5C\uFF0C\u5C06\u6240\u6709\u65B9\u6CD5\u5305\u88C5\u6210ProxyMethod\u5BF9\u8C61\uFF0C\u5305\u62ECObject\u7C7B\u4E2DhashCode\u3001equals\u3001toString\u65B9\u6CD5\uFF0C\u4EE5\u53CA\u88AB\u4EE3\u7406\u7684\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5</li><li>\u7B2C\u4E8C\u6B65\uFF1A\uFF08\u628A\u5927\u8C61\u88C5\u8FDB\u53BB\uFF09\u4E3A\u4EE3\u7406\u7C7B\u7EC4\u88C5\u5B57\u6BB5\uFF0C\u6784\u9020\u51FD\u6570\uFF0C\u65B9\u6CD5\uFF0Cstatic\u521D\u59CB\u5316\u5757\u7B49</li><li>\u7B2C\u4E09\u6B65\uFF1A\uFF08\u628A\u51B0\u7BB1\u95E8\u5E26\u4E0A\uFF09\u5199\u5165class\u6587\u4EF6</li></ul><h3 id="_4-2-\u4ECE\u751F\u6210\u7684proxy\u4EE3\u7801\u770B\u6267\u884C\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#_4-2-\u4ECE\u751F\u6210\u7684proxy\u4EE3\u7801\u770B\u6267\u884C\u6D41\u7A0B" aria-hidden="true">#</a> 4.2 \u4ECE\u751F\u6210\u7684Proxy\u4EE3\u7801\u770B\u6267\u884C\u6D41\u7A0B</h3><p>\u4ECE\u4E0A\u8FF0sun.misc.ProxyGenerator\u7C7B\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD9\u4E2A\u7C7B\u91CC\u9762\u6709\u4E00\u4E2A\u914D\u7F6E\u53C2\u6570<code>sun.misc.ProxyGenerator.saveGeneratedFiles</code>\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u53C2\u6570\u5C06\u751F\u6210\u7684Proxy\u7C7B\u4FDD\u5B58\u5728\u672C\u5730\uFF0C\u6BD4\u5982\u8BBE\u7F6E\u4E3Atrue \u6267\u884C\u540E\uFF0C\u751F\u6210\u7684\u6587\u4EF6\u5982\u4E0B\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220713213708555.png" alt="image-20220713213708555"></p><p>\u6211\u4EEC\u770B\u4E0B\u751F\u6210\u540E\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by FernFlower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">UndeclaredThrowableException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IUserService</span></span><span class="token punctuation">;</span>

<span class="token comment">// \u6240\u6709\u7C7B\u548C\u65B9\u6CD5\u90FD\u662Ffinal\u7C7B\u578B\u7684</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> $<span class="token class-name">Proxy0</span> <span class="token keyword">extends</span> <span class="token class-name">Proxy</span> <span class="token keyword">implements</span> <span class="token class-name">IUserService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m0<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m4<span class="token punctuation">;</span>

    <span class="token comment">// \u6784\u9020\u51FD\u6570\u6CE8\u5165 InvocationHandler</span>
    <span class="token keyword">public</span> $<span class="token class-name">Proxy0</span><span class="token punctuation">(</span><span class="token class-name">InvocationHandler</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m1<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>var1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var3<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">List</span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m3<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m2<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m0<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m4<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u521D\u59CB\u5316 methods, 2\u4E2AIUserService\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\uFF0C3\u4E2AObject\u4E2D\u7684\u63A5\u53E3</span>
            m1 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m3 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;tech.pdai.springframework.service.IUserService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;findUserList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m2 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;toString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m0 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;hashCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m4 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;tech.pdai.springframework.service.IUserService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;addUser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodError</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoClassDefFoundError</span><span class="token punctuation">(</span>var3<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u662F\u6BD4\u8F83\u5BB9\u6613\u7406\u89E3\u7684\uFF0C\u6211\u5C31\u4E0D\u753B\u56FE\u4E86\u3002</p><p>\u4E3B\u8981\u6D41\u7A0B\u662F\uFF1A</p><ul><li>ProxyGenerator\u521B\u5EFAProxy\u7684\u5177\u4F53\u7C7B$Proxy0</li><li>\u7531static\u521D\u59CB\u5316\u5757\u521D\u59CB\u5316\u63A5\u53E3\u65B9\u6CD5\uFF1A2\u4E2AIUserService\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\uFF0C3\u4E2AObject\u4E2D\u7684\u63A5\u53E3\u65B9\u6CD5</li><li>\u7531\u6784\u9020\u51FD\u6570\u6CE8\u5165InvocationHandler</li><li>\u6267\u884C\u7684\u65F6\u5019\uFF0C\u901A\u8FC7ProxyGenerator\u521B\u5EFA\u7684Proxy\uFF0C\u8C03\u7528InvocationHandler\u7684invoke\u65B9\u6CD5\uFF0C\u6267\u884C\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684invoke\u65B9\u6CD5</li></ul><h2 id="_5-springaop\u4E2Djdk\u4EE3\u7406\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_5-springaop\u4E2Djdk\u4EE3\u7406\u7684\u5B9E\u73B0" aria-hidden="true">#</a> 5. SpringAOP\u4E2DJDK\u4EE3\u7406\u7684\u5B9E\u73B0</h2><p>SpringAOP\u626E\u6F14\u7684\u662FJDK\u4EE3\u7406\u7684\u521B\u5EFA\u548C\u8C03\u7528\u4E24\u4E2A\u89D2\u8272\uFF0C\u6211\u4EEC\u901A\u8FC7\u8FD9\u4E24\u4E2A\u65B9\u5411\u6765\u770B\u4E0BSpringAOP\u7684\u4EE3\u7801\uFF08JdkDynamicAopProxy\u7C7B\uFF09</p><h3 id="_5-1-springaop-jdk\u4EE3\u7406\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_5-1-springaop-jdk\u4EE3\u7406\u7684\u521B\u5EFA" aria-hidden="true">#</a> 5.1 SpringAOP Jdk\u4EE3\u7406\u7684\u521B\u5EFA</h3><p>\u4EE3\u7406\u7684\u521B\u5EFA\u6BD4\u8F83\u7B80\u5355\uFF0C\u8C03\u7528getProxy\u65B9\u6CD5\uFF0C\u7136\u540E\u76F4\u63A5\u8C03\u7528JDK\u4E2DProxy.newProxyInstance()\u65B9\u6CD5\u5C06classloader\u548C\u88AB\u4EE3\u7406\u7684\u63A5\u53E3\u65B9\u6CD5\u4F20\u5165\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Creating JDK dynamic proxy: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">.</span><span class="token function">getTargetSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>proxiedInterfaces<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-springaop-jdk\u4EE3\u7406\u7684\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_5-2-springaop-jdk\u4EE3\u7406\u7684\u6267\u884C" aria-hidden="true">#</a> 5.2 SpringAOP Jdk\u4EE3\u7406\u7684\u6267\u884C</h3><p>\u6267\u884C\u7684\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Implementation of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">InvocationHandler</span><span class="token punctuation">.</span>invoke</span></span><span class="token punctuation">}</span>.
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Callers will see exactly the exception thrown by the target,
    * unless a hook method throws an exception.
    */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> oldProxy <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> setProxyContext <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token class-name">TargetSource</span> targetSource <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">.</span>targetSource<span class="token punctuation">;</span>
    <span class="token class-name">Object</span> target <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6267\u884C\u7684\u662Fequal\u65B9\u6CD5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>equalsDefined <span class="token operator">&amp;&amp;</span> <span class="token class-name">AopUtils</span><span class="token punctuation">.</span><span class="token function">isEqualsMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The target does not implement the equals(Object) method itself.</span>
            <span class="token keyword">return</span> <span class="token function">equals</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u6267\u884C\u7684\u662Fhashcode\u65B9\u6CD5</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>hashCodeDefined <span class="token operator">&amp;&amp;</span> <span class="token class-name">AopUtils</span><span class="token punctuation">.</span><span class="token function">isHashCodeMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The target does not implement the hashCode() method itself.</span>
            <span class="token keyword">return</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u662F\u5305\u88C5\u7C7B\uFF0C\u5219dispatch to proxy config</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">DecoratingProxy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// There is only getDecoratedClass() declared -&gt; dispatch to proxy config.</span>
            <span class="token keyword">return</span> <span class="token class-name">AopProxyUtils</span><span class="token punctuation">.</span><span class="token function">ultimateTargetClass</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u7528\u53CD\u5C04\u65B9\u5F0F\u6765\u6267\u884C\u5207\u70B9</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">.</span>opaque <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span><span class="token class-name">Advised</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Service invocations on ProxyConfig with the proxy config...</span>
            <span class="token keyword">return</span> <span class="token class-name">AopUtils</span><span class="token punctuation">.</span><span class="token function">invokeJoinpointUsingReflection</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Object</span> retVal<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">.</span>exposeProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Make invocation available if necessary.</span>
            oldProxy <span class="token operator">=</span> <span class="token class-name">AopContext</span><span class="token punctuation">.</span><span class="token function">setCurrentProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
            setProxyContext <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Get as late as possible to minimize the time we &quot;own&quot; the target,</span>
        <span class="token comment">// in case it comes from a pool.</span>
        target <span class="token operator">=</span> targetSource<span class="token punctuation">.</span><span class="token function">getTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetClass <span class="token operator">=</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> target<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u83B7\u53D6\u62E6\u622A\u94FE</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> chain <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advised<span class="token punctuation">.</span><span class="token function">getInterceptorsAndDynamicInterceptionAdvice</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> targetClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Check whether we have any advice. If we don&#39;t, we can fallback on direct</span>
        <span class="token comment">// reflective invocation of the target, and avoid creating a MethodInvocation.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// We can skip creating a MethodInvocation: just invoke the target directly</span>
            <span class="token comment">// Note that the final invoker must be an InvokerInterceptor so we know it does</span>
            <span class="token comment">// nothing but a reflective operation on the target, and no hot swapping or fancy proxying.</span>
            <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argsToUse <span class="token operator">=</span> <span class="token class-name">AopProxyUtils</span><span class="token punctuation">.</span><span class="token function">adaptArgumentsIfNecessary</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            retVal <span class="token operator">=</span> <span class="token class-name">AopUtils</span><span class="token punctuation">.</span><span class="token function">invokeJoinpointUsingReflection</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> method<span class="token punctuation">,</span> argsToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// We need to create a method invocation...</span>
            <span class="token class-name">MethodInvocation</span> invocation <span class="token operator">=</span>
                    <span class="token keyword">new</span> <span class="token class-name">ReflectiveMethodInvocation</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> target<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> targetClass<span class="token punctuation">,</span> chain<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Proceed to the joinpoint through the interceptor chain.</span>
            retVal <span class="token operator">=</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Massage return value if necessary.</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> returnType <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>retVal <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> retVal <span class="token operator">==</span> target <span class="token operator">&amp;&amp;</span>
                returnType <span class="token operator">!=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">&amp;&amp;</span> returnType<span class="token punctuation">.</span><span class="token function">isInstance</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token operator">!</span><span class="token class-name">RawTargetAccess</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Special case: it returned &quot;this&quot; and the return type of the method</span>
            <span class="token comment">// is type-compatible. Note that we can&#39;t help if the target sets</span>
            <span class="token comment">// a reference to itself in another returned object.</span>
            retVal <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>retVal <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> returnType <span class="token operator">!=</span> <span class="token class-name">Void</span><span class="token punctuation">.</span><span class="token constant">TYPE</span> <span class="token operator">&amp;&amp;</span> returnType<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AopInvocationException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Null return value from advice does not match primitive return type for: &quot;</span> <span class="token operator">+</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> retVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>targetSource<span class="token punctuation">.</span><span class="token function">isStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Must have come from TargetSource.</span>
            targetSource<span class="token punctuation">.</span><span class="token function">releaseTarget</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>setProxyContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Restore old proxy.</span>
            <span class="token class-name">AopContext</span><span class="token punctuation">.</span><span class="token function">setCurrentProxy</span><span class="token punctuation">(</span>oldProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,60),k={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-4.html",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BJDK\u4EE3\u7406\u5B9E\u73B0",-1),d={href:"https://www.cnblogs.com/tuyang1129/p/12878549.html",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const s=l("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",k,[r,a(s)])]),n("p",null,[n("a",d,[o("\u6D45\u6790Spring\u4E2DAOP\u7684\u5B9E\u73B0\u539F\u7406\u2014\u2014\u52A8\u6001\u4EE3\u7406"),a(s)])])])}const y=t(i,[["render",v],["__file","spring-x-framework-aop-source-4.html.vue"]]);export{y as default};
