import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c,a as n,b as a,d as t,f as o,r as l}from"./app.9b1ca880.js";const i={},u=o(`<h1 id="reentrantlock\u91CD\u5165\u9501" tabindex="-1"><a class="header-anchor" href="#reentrantlock\u91CD\u5165\u9501" aria-hidden="true">#</a> ReentrantLock\u91CD\u5165\u9501</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1. \u7B80\u4ECB</h2><p><code>ReentrantLock</code>\u662F\u53EF\u91CD\u5165\u7684\u4E92\u65A5\u9501\uFF0C\u867D\u7136\u5177\u6709\u4E0E<code>synchronized</code>\u76F8\u540C\u529F\u80FD\uFF0C\u4F46\u662F\u4F1A\u6BD4<code>synchronized</code>\u66F4\u52A0\u7075\u6D3B\uFF08<strong>\u5177\u6709\u66F4\u591A\u7684\u65B9\u6CD5</strong>\uFF09\u3002</p><h2 id="_2-reentrantlock-\u548C-synchronized\u7684\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#_2-reentrantlock-\u548C-synchronized\u7684\u5BF9\u6BD4" aria-hidden="true">#</a> 2. <strong>ReentrantLock</strong> \u548C <strong>Synchronized</strong>\u7684\u5BF9\u6BD4</h2><table><thead><tr><th></th><th>ReentrantLock</th><th>Synchronized</th></tr></thead><tbody><tr><td>\u9501\u5B9E\u73B0\u673A\u5236</td><td>\u4F9D\u8D56AQS</td><td>\u76D1\u89C6\u5668\u6A21\u5F0F</td></tr><tr><td>\u7075\u6D3B\u6027</td><td><strong>\u652F\u7279\u54CD\u5E94\u4E2D\u65AD\u3001\u8D85\u65F6\u3001\u5C1D\u8BD5\u83B7\u53D6\u9501</strong></td><td>\u4E0D\u7075\u6D3B</td></tr><tr><td>\u91CA\u653E\u5F62\u5F0F</td><td>\u5FC5\u987B\u663E\u793A\u8C03\u7528unlock\u91CA\u653E\u9501</td><td>\u81EA\u52A8\u91CA\u653E\u76D1\u89C6\u5668</td></tr><tr><td>\u9501\u7C7B\u578B</td><td><strong>\u516C\u5E73\u9501&amp;\u975E\u516C\u5E73\u9501</strong></td><td>\u975E\u516C\u5E73\u9501</td></tr><tr><td>\u6761\u4EF6\u961F\u5217</td><td>\u53EF\u5173\u8054\u591A\u4E2A\u6761\u4EF6\u961F\u5217</td><td>\u5173\u8054\u4E00\u4E2A\u6761\u4EF6\u961F\u5217</td></tr><tr><td>\u53EF\u91CD\u5165\u6027</td><td><strong>\u53EF\u91CD\u5165</strong></td><td>\u53EF\u91CD\u5165</td></tr></tbody></table><h2 id="_3-\u57FA\u7840\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_3-\u57FA\u7840\u4F7F\u7528" aria-hidden="true">#</a> 3. \u57FA\u7840\u4F7F\u7528</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReentrantLockTest</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ReentrantLockTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10000000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ReentrantLockTest</span> test1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLockTest</span><span class="token punctuation">(</span><span class="token string">&quot;thread1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ReentrantLockTest</span> test2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLockTest</span><span class="token punctuation">(</span><span class="token string">&quot;thread2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        test1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test2<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u7684\u7ED3\u679C\u662F <code>20000000</code>\uFF1B\u5982\u679C\u53BB\u6389\u9501\uFF0C\u90A3\u4E48\u8F93\u51FA\u7ED3\u679C\u662F\u4E00\u4E2A\u5C0F\u4E8E<code>20000000</code>\u7684\u4E0D\u786E\u5B9A\u7684\u6570</p><h2 id="_4-reentrantlock\u7684\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#_4-reentrantlock\u7684\u4F18\u70B9" aria-hidden="true">#</a> 4. ReentrantLock\u7684\u4F18\u70B9</h2><ul><li>java\u4E2D\u5DF2\u7ECF\u6709\u4E86\u5185\u7F6E\u9501\uFF1A<code>synchronized</code>,<code>synchronized</code>\u7684\u7279\u70B9\u662F\u4F7F\u7528\u7B80\u5355\uFF0C\u4E00\u5207\u4EA4\u7ED9JVM\u53BB\u5904\u7406,\u4E0D\u9700\u8981\u663E\u793A\u91CA\u653E</li><li>\u4ECE\u7528\u6CD5\u4E0A\u53EF\u4EE5\u770B\u51FA\uFF0C\u4E0E<code>synchronized</code>\u76F8\u6BD4\uFF0C <code>ReentrantLock</code>\u5C31\u7A0D\u5FAE\u590D\u6742\u4E00\u70B9\u3002\u56E0\u4E3A\u5FC5\u987B\u5728finally\u4E2D\u8FDB\u884C\u89E3\u9501\u64CD\u4F5C\uFF0C\u5982\u679C\u4E0D\u5728 finally\u89E3\u9501\uFF0C\u6709\u53EF\u80FD\u4EE3\u7801\u51FA\u73B0\u5F02\u5E38\u9501\u6CA1\u88AB\u91CA\u653E\uFF0C</li></ul><blockquote><p>\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8981\u5F15\u5165ReentrantLock\u5462\uFF1F</p></blockquote><ul><li>\u5728jdk1.5\u91CC\u9762\uFF0C<code>ReentrantLock</code>\u7684\u6027\u80FD\u662F\u660E\u663E\u4F18\u4E8E<code>synchronized</code>\u7684\uFF0C\u4F46\u662F\u5728jdk1.6\u91CC\u9762\uFF0C<code>synchronized</code>\u505A\u4E86\u4F18\u5316\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u7684\u6027\u80FD\u5DEE\u522B\u5DF2\u7ECF\u4E0D\u660E\u663E\u4E86\u3002</li></ul><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220521212704737.png" alt="image-20220521212704737"></p><ul><li><code>ReentrantLock</code>\u5E76\u4E0D\u662F\u4E00\u79CD\u66FF\u4EE3\u5185\u7F6E\u52A0\u9501\u7684\u65B9\u6CD5\uFF0C\u800C\u662F\u4F5C\u4E3A\u4E00\u79CD\u53EF\u9009\u62E9\u7684\u9AD8\u7EA7\u529F\u80FD\u3002</li><li>\u76F8\u6BD4\u4E8E<code>synchronized</code>\uFF0C<code>ReentrantLock</code>\u5728\u529F\u80FD\u4E0A\u66F4\u52A0\u4E30\u5BCC\uFF0C\u5B83\u5177\u6709<strong>\u53EF\u91CD\u5165\u3001\u53EF\u4E2D\u65AD\u3001\u53EF\u9650\u65F6\u3001\u516C\u5E73\u9501</strong>\u7B49\u7279\u70B9\u3002</li></ul><h3 id="_4-1-\u53EF\u91CD\u5165-\u5176\u5B9Esynchronized-\u4E5F\u662F\u53EF\u91CD\u5165\u7684" tabindex="-1"><a class="header-anchor" href="#_4-1-\u53EF\u91CD\u5165-\u5176\u5B9Esynchronized-\u4E5F\u662F\u53EF\u91CD\u5165\u7684" aria-hidden="true">#</a> 4.1 \u53EF\u91CD\u5165\uFF08\u5176\u5B9Esynchronized \u4E5F\u662F\u53EF\u91CD\u5165\u7684\uFF09</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>
            
<span class="token punctuation">}</span>           
<span class="token keyword">finally</span>
<span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E<code>ReentrantLock</code>\u662F\u91CD\u5165\u9501\uFF0C\u6240\u4EE5\u53EF\u4EE5\u53CD\u590D\u5F97\u5230\u76F8\u540C\u7684\u4E00\u628A\u9501\uFF0C\u5B83\u6709\u4E00\u4E2A\u4E0E\u9501\u76F8\u5173\u7684\u83B7\u53D6\u8BA1\u6570\u5668\uFF0C\u5982\u679C\u62E5\u6709\u9501\u7684\u67D0\u4E2A\u7EBF\u7A0B\u518D\u6B21\u5F97\u5230\u9501\uFF0C\u90A3\u4E48\u83B7\u53D6\u8BA1\u6570\u5668\u5C31\u52A01\uFF0C\u7136\u540E\u9501\u9700\u8981\u88AB\u91CA\u653E\u4E24\u6B21\u624D\u80FD\u83B7\u5F97\u771F\u6B63\u91CA\u653E(\u91CD\u5165\u9501)\u3002</p><h3 id="_4-2-\u53EF\u4E2D\u65AD" tabindex="-1"><a class="header-anchor" href="#_4-2-\u53EF\u4E2D\u65AD" aria-hidden="true">#</a> 4.2 \u53EF\u4E2D\u65AD</h3><ul><li>\u4E0E<code>synchronized</code>\u4E0D\u540C\u7684\u662F\uFF0C<code>ReentrantLock</code>\u5BF9\u4E2D\u65AD\u662F\u6709\u54CD\u5E94\u7684.<code>synchronized</code>\u4E00\u65E6\u5C1D\u8BD5\u83B7\u53D6\u9501\u5C31\u4F1A\u4E00\u76F4\u7B49\u5F85\u76F4\u5230\u83B7\u53D6\u5230\u9501\u3002</li></ul><p>\u6784\u9020\u4E00\u4E2A\u6B7B\u9501\u7684\u4F8B\u5B50\uFF0C\u7136\u540E\u7528\u4E2D\u65AD\u6765\u5904\u7406\u6B7B\u9501</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">concurrency<span class="token punctuation">.</span>in<span class="token punctuation">.</span>practice</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">ManagementFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">ThreadInfo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>management<span class="token punctuation">.</span></span><span class="token class-name">ThreadMXBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LockInterrupt</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReentrantLock</span> lock1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReentrantLock</span> lock2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> lock<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">LockInterrupt</span><span class="token punctuation">(</span><span class="token keyword">int</span> lock<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lock <span class="token operator">=</span> lock<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lock1<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// TODO: handle exception</span>
                <span class="token punctuation">}</span>
                lock2<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                lock2<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// TODO: handle exception</span>
                <span class="token punctuation">}</span>
                lock1<span class="token punctuation">.</span><span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO: handle exception</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock1<span class="token punctuation">.</span><span class="token function">isHeldByCurrentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lock1<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock2<span class="token punctuation">.</span><span class="token function">isHeldByCurrentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lock2<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:\u7EBF\u7A0B\u9000\u51FA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">LockInterrupt</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockInterrupt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;LockInterrupt1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LockInterrupt</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LockInterrupt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;LockInterrupt2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//DeadlockChecker.check();</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DeadlockChecker</span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">ThreadMXBean</span> mbean <span class="token operator">=</span> <span class="token class-name">ManagementFactory</span>
            <span class="token punctuation">.</span><span class="token function">getThreadMXBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">Thread</span> tt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// TODO Auto-generated method stub</span>
                    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> deadlockedThreadIds <span class="token operator">=</span> mbean<span class="token punctuation">.</span><span class="token function">findDeadlockedThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>deadlockedThreadIds <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">ThreadInfo</span><span class="token punctuation">[</span><span class="token punctuation">]</span> threadInfos <span class="token operator">=</span> mbean<span class="token punctuation">.</span><span class="token function">getThreadInfo</span><span class="token punctuation">(</span>deadlockedThreadIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Thread</span> t <span class="token operator">:</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">getAllStackTraces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> threadInfos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> threadInfos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getThreadId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                        t<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// TODO: handle exception</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tt<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tt<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u540E\uFF0C\u786E\u5B9E\u51FA\u73B0\u4E86\u6B7B\u9501\uFF0C\u4F7F\u7528jstack\u53EF\u4EE5\u770B\u5230\u5982\u4E0B\u7ED3\u679C\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220521212950477.png" alt="image-20220521212950477"></p><p>\u901A\u8FC7\u4E2D\u65AD\u6765\u505C\u6B62\u7EBF\u7A0B\uFF0C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220521213011570.png" alt="image-20220521213011570"></p><h3 id="_4-3-\u53EF\u9650\u65F6" tabindex="-1"><a class="header-anchor" href="#_4-3-\u53EF\u9650\u65F6" aria-hidden="true">#</a> 4.3 \u53EF\u9650\u65F6</h3><ul><li>\u8D85\u65F6\u4E0D\u80FD\u83B7\u5F97\u9501\uFF0C\u5C31\u8FD4\u56DEfalse\uFF0C\u4E0D\u4F1A\u6C38\u4E45\u7B49\u5F85\u6784\u6210\u6B7B\u9501</li><li>\u4F7F\u7528<code>lock.tryLock(long timeout, TimeUnit unit)</code>\u6765\u5B9E\u73B0\u53EF\u9650\u65F6\u9501\uFF0C\u53C2\u6570\u4E3A\u65F6\u95F4\u548C\u5355\u4F4D\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">concurrency<span class="token punctuation">.</span>in<span class="token punctuation">.</span>practice</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantLock</span></span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TryLockTest</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TryLockTest</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; get lock failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">isHeldByCurrentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;lock.isHeldByCurrentThread: &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TryLockTest</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TryLockTest</span><span class="token punctuation">(</span><span class="token string">&quot;TryLockTest1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TryLockTest</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TryLockTest</span><span class="token punctuation">(</span><span class="token string">&quot;TryLockTest2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-4-\u516C\u5E73\u9501" tabindex="-1"><a class="header-anchor" href="#_4-4-\u516C\u5E73\u9501" aria-hidden="true">#</a> 4.4 \u516C\u5E73\u9501</h2><ul><li>\u4E00\u822C\u610F\u4E49\u4E0A\u7684\u9501\u662F\u4E0D\u516C\u5E73\u7684\uFF0C\u4E0D\u4E00\u5B9A\u5148\u6765\u7684\u7EBF\u7A0B\u80FD\u5148\u5F97\u5230\u9501\uFF0C\u540E\u6765\u7684\u7EBF\u7A0B\u5C31\u540E\u5F97\u5230\u9501\u3002\u4E0D\u516C\u5E73\u7684\u9501\u53EF\u80FD\u4F1A\u4EA7\u751F\u9965\u997F\u73B0\u8C61\u3002</li><li>\u516C\u5E73\u9501\u7684\u610F\u601D\u5C31\u662F\uFF0C\u8FD9\u4E2A\u9501\u80FD\u4FDD\u8BC1\u7EBF\u7A0B\u662F\u5148\u6765\u7684\u5148\u5F97\u5230\u9501\u3002\u867D\u7136\u516C\u5E73\u9501\u4E0D\u4F1A\u4EA7\u751F\u9965\u997F\u73B0\u8C61\uFF0C\u4F46\u662F\u516C\u5E73\u9501\u7684\u6027\u80FD\u4F1A\u6BD4\u975E\u516C\u5E73\u9501\u5DEE\u5F88\u591A\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> fair<span class="token punctuation">)</span> 

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ReentrantLock</span> fairLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,32),k={href:"https://www.cnblogs.com/takumicx/p/9338983.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/zhengzhaoyang122/article/details/110847701",target:"_blank",rel:"noopener noreferrer"};function r(v,m){const s=l("ExternalLinkIcon");return e(),c("div",null,[u,n("p",null,[n("a",k,[a("ReentrantLock(\u91CD\u5165\u9501)\u529F\u80FD\u8BE6\u89E3\u548C\u5E94\u7528\u6F14\u793A"),t(s)])]),n("p",null,[n("a",d,[a("ReentrantLock \u9501\u8BE6\u89E3"),t(s)])])])}const h=p(i,[["render",r],["__file","java-thread-x-lock-reentrantlock-back.html.vue"]]);export{h as default};
