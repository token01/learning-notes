import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,d as t,f as p,r as i}from"./app.abe539cb.js";const l={},u=p('<h1 id="spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Baop\u5207\u9762\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#spring\u8FDB\u9636-spring-aop\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4Baop\u5207\u9762\u7684\u5B9E\u73B0" aria-hidden="true">#</a> Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BAOP\u5207\u9762\u7684\u5B9E\u73B0</h1><blockquote><p>\u524D\u6587\uFF0C\u6211\u4EEC\u5206\u6790\u4E86Spring IOC\u7684\u521D\u59CB\u5316\u8FC7\u7A0B\u548CBean\u7684\u751F\u547D\u5468\u671F\u7B49\uFF0C\u800CSpring AOP\u4E5F\u662F\u57FA\u4E8EIOC\u7684Bean\u52A0\u8F7D\u6765\u5B9E\u73B0\u7684\u3002\u672C\u6587\u4E3B\u8981\u4ECB\u7ECDSpring AOP\u539F\u7406\u89E3\u6790\u7684\u5207\u9762\u5B9E\u73B0\u8FC7\u7A0B\uFF08\u5C06\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5\u6839\u636E\u4F7F\u7528\u7684\u6CE8\u89E3\u751F\u6210\u5BF9\u5E94Advice\uFF0C\u5E76\u5C06Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F\u4E00\u5E76\u5C01\u88C5\u5230Advisor\uFF0C\u4E3A\u540E\u7EED\u4EA4\u7ED9\u4EE3\u7406\u589E\u5F3A\u5B9E\u73B0\u505A\u51C6\u5907\u7684\u8FC7\u7A0B\uFF09</p></blockquote><h2 id="_1-\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#_1-\u5F15\u5165" aria-hidden="true">#</a> 1. \u5F15\u5165</h2><blockquote><p>\u6211\u4EEC\u5E94\u8BE5\u4ECE\u54EA\u91CC\u5F00\u59CB\u7740\u624B\u770BSpring AOP\u7684\u6E90\u7801\u5462\uFF1F\u548C\u6211\u4EEC\u4E0A\u6587\u5206\u6790\u7684IOC\u6E90\u7801\u5B9E\u73B0\u6709\u4EC0\u4E48\u5173\u7CFB\u5462\uFF1F</p></blockquote><ol><li>\u524D\u6587\u4E2D\u6211\u4EEC\u5199\u4E86AOP\u7684Demo\uFF0C\u6839\u636E\u5176XML\u914D\u7F6E\u6211\u4EEC\u4E0D\u96BE\u53D1\u73B0<strong>AOP\u662F\u57FA\u4E8EIOC\u7684Bean\u52A0\u8F7D\u6765\u5B9E\u73B0\u7684</strong>\uFF1B\u8FD9\u4FBF\u4F7F\u6211\u4EEC\u7684\u4E3B\u8981\u5165\u53E3</li></ol><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712204834728.png" alt="image-20220712204834728"></p>',6),k={href:"https://pdai.tech/md/spring/spring-x-framework-ioc-source-2.html",target:"_blank",rel:"noopener noreferrer"},r=p(`<ol start="2"><li>\u7136\u540E\u6211\u4EEC\u5C31\u80FD\u627E\u5230\u5982\u4E0B<strong>\u521D\u59CB\u5316\u7684\u6D41\u7A0B\u548Caop\u5BF9\u5E94\u7684handler</strong>\u7C7B</li></ol><p>\u5373parseCustomElement\u65B9\u6CD5\u627E\u5230parse <code>aop:aspectj-autoproxy</code>\u7684handler(org.springframework.aop.config.AopNamespaceHandler)</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712205008435.png" alt="image-20220712205008435"></p><blockquote><p>\uFF08PS\uFF1A\u5176\u5B9E\u4F60\u4F1A\u53D1\u73B0\uFF0C\u6700\u91CD\u8981\u7684\u662F\u77E5\u8BC6\u70B9\u7684\u5173\u8054\u5173\u7CFB\uFF0C\u800C\u4E0D\u662F\u77E5\u8BC6\u70B9\u672C\u8EAB\uFF0C\u5C31\u540E\u7EED\u4EE3\u7801\u800C\u8A00\u4E0D\u5C31\u662F\u6253\u4E2A\u65AD\u70B9\u6162\u6162\u770B\u7684\u4E8B\u4E86\u4E48\u3002\uFF09</p></blockquote><h2 id="_2-aop\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_2-aop\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" aria-hidden="true">#</a> 2. aop\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790</h2><blockquote><p>\u4E0A\u6587\u4E2D\uFF0C\u6211\u4EEC\u627E\u5230\u4E86AopNamespaceHandler\uFF0C\u5176\u5B9E\u5C31\u662F\u6CE8\u518CBeanDefinition\u7684\u89E3\u6790\u5668BeanDefinitionParser\uFF0C\u5C06<code>aop:xxxxxx</code>\u914D\u7F6E\u6807\u7B7E\u4EA4\u7ED9\u6307\u5B9A\u7684parser\u6765\u5904\u7406\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AopNamespaceHandler</span> <span class="token keyword">extends</span> <span class="token class-name">NamespaceHandlerSupport</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
	 * Register the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">BeanDefinitionParser</span></span> BeanDefinitionParsers<span class="token punctuation">}</span> for the
	 * &#39;<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">config</span></span><span class="token punctuation">}</span>&#39;, &#39;<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">spring<span class="token operator">-</span>configured</span></span><span class="token punctuation">}</span>&#39;, &#39;<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">aspectj<span class="token operator">-</span>autoproxy</span></span><span class="token punctuation">}</span>&#39;
	 * and &#39;<span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">scoped<span class="token operator">-</span>proxy</span></span><span class="token punctuation">}</span>&#39; tags.
	 */</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// In 2.0 XSD as well as in 2.5+ XSDs</span>
        <span class="token comment">// \u6CE8\u518C\u89E3\u6790&lt;aop:config&gt; \u914D\u7F6E</span>
		<span class="token function">registerBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ConfigBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6CE8\u518C\u89E3\u6790&lt;aop:aspectj-autoproxy&gt; \u914D\u7F6E</span>
		<span class="token function">registerBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token string">&quot;aspectj-autoproxy&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAutoProxyBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">registerBeanDefinitionDecorator</span><span class="token punctuation">(</span><span class="token string">&quot;scoped-proxy&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ScopedProxyBeanDefinitionDecorator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Only in 2.0 XSD: moved to context namespace in 2.5+</span>
		<span class="token function">registerBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token string">&quot;spring-configured&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SpringConfiguredBeanDefinitionParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-config\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_2-1-config\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" aria-hidden="true">#</a> 2.1 config\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790</h3><p><code>&lt;aop:config/&gt;</code>\u7531ConfigBeanDefinitionParser\u8FD9\u4E2A\u7C7B\u5904\u7406\uFF0C\u4F5C\u4E3Aparser\u7C7B\u6700\u91CD\u8981\u7684\u5C31\u662Fparse\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">BeanDefinition</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompositeComponentDefinition</span> compositeDef <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">CompositeComponentDefinition</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span><span class="token function">getTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parserContext<span class="token punctuation">.</span><span class="token function">extractSource</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    parserContext<span class="token punctuation">.</span><span class="token function">pushContainingComponent</span><span class="token punctuation">(</span>compositeDef<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">configureAutoProxyCreator</span><span class="token punctuation">(</span>parserContext<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> childElts <span class="token operator">=</span> <span class="token class-name">DomUtils</span><span class="token punctuation">.</span><span class="token function">getChildElements</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> elt<span class="token operator">:</span> childElts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> localName <span class="token operator">=</span> parserContext<span class="token punctuation">.</span><span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocalName</span><span class="token punctuation">(</span>elt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">POINTCUT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>localName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">parsePointcut</span><span class="token punctuation">(</span>elt<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">ADVISOR</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>localName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">parseAdvisor</span><span class="token punctuation">(</span>elt<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">ASPECT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>localName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">parseAspect</span><span class="token punctuation">(</span>elt<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    parserContext<span class="token punctuation">.</span><span class="token function">popAndRegisterContainingComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u4E2A\u65AD\u70B9\u770B\u4E0B</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712205423117.png" alt="image-20220712205423117"></p><p>parseAspect\u7684\u65B9\u6CD5\u5982\u4E0B, \u5904\u7406\u65B9\u6CD5\u4E0D\u96BE\uFF0C\u6211\u8FD9\u91CC\u5C31\u4E0D\u5C55\u5F00\u4E86</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">parseAspect</span><span class="token punctuation">(</span><span class="token class-name">Element</span> aspectElement<span class="token punctuation">,</span> <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> aspectId <span class="token operator">=</span> aspectElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> aspectName <span class="token operator">=</span> aspectElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">REF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parseState<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AspectEntry</span><span class="token punctuation">(</span>aspectId<span class="token punctuation">,</span> aspectName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanDefinition</span><span class="token punctuation">&gt;</span></span> beanDefinitions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BeanReference</span><span class="token punctuation">&gt;</span></span> beanReferences <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> declareParents <span class="token operator">=</span> <span class="token class-name">DomUtils</span><span class="token punctuation">.</span><span class="token function">getChildElementsByTagName</span><span class="token punctuation">(</span>aspectElement<span class="token punctuation">,</span> <span class="token constant">DECLARE_PARENTS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token constant">METHOD_INDEX</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> declareParents<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Element</span> declareParentsElement <span class="token operator">=</span> declareParents<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            beanDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">parseDeclareParents</span><span class="token punctuation">(</span>declareParentsElement<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// We have to parse &quot;advice&quot; and all the advice kinds in one loop, to get the</span>
        <span class="token comment">// ordering semantics right.</span>
        <span class="token class-name">NodeList</span> nodeList <span class="token operator">=</span> aspectElement<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> adviceFoundAlready <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nodeList<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span> node <span class="token operator">=</span> nodeList<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAdviceNode</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>adviceFoundAlready<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    adviceFoundAlready <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        parserContext<span class="token punctuation">.</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
                                <span class="token string">&quot;&lt;aspect&gt; tag needs aspect bean reference via &#39;ref&#39; attribute when declaring advices.&quot;</span><span class="token punctuation">,</span>
                                aspectElement<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parseState<span class="token punctuation">.</span><span class="token function">snapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    beanReferences<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeBeanReference</span><span class="token punctuation">(</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">AbstractBeanDefinition</span> advisorDefinition <span class="token operator">=</span> <span class="token function">parseAdvice</span><span class="token punctuation">(</span>
                        aspectName<span class="token punctuation">,</span> i<span class="token punctuation">,</span> aspectElement<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span> node<span class="token punctuation">,</span> parserContext<span class="token punctuation">,</span> beanDefinitions<span class="token punctuation">,</span> beanReferences<span class="token punctuation">)</span><span class="token punctuation">;</span>
                beanDefinitions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>advisorDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">AspectComponentDefinition</span> aspectComponentDefinition <span class="token operator">=</span> <span class="token function">createAspectComponentDefinition</span><span class="token punctuation">(</span>
                aspectElement<span class="token punctuation">,</span> aspectId<span class="token punctuation">,</span> beanDefinitions<span class="token punctuation">,</span> beanReferences<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        parserContext<span class="token punctuation">.</span><span class="token function">pushContainingComponent</span><span class="token punctuation">(</span>aspectComponentDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> pointcuts <span class="token operator">=</span> <span class="token class-name">DomUtils</span><span class="token punctuation">.</span><span class="token function">getChildElementsByTagName</span><span class="token punctuation">(</span>aspectElement<span class="token punctuation">,</span> <span class="token constant">POINTCUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> pointcutElement <span class="token operator">:</span> pointcuts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">parsePointcut</span><span class="token punctuation">(</span>pointcutElement<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        parserContext<span class="token punctuation">.</span><span class="token function">popAndRegisterContainingComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parseState<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-aspectj-autoproxy\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_2-2-aspectj-autoproxy\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790" aria-hidden="true">#</a> 2.2 aspectj-autoproxy\u914D\u7F6E\u6807\u7B7E\u7684\u89E3\u6790</h3><p><code>&lt;aop:aspectj-autoproxy/&gt;</code>\u5219\u7531AspectJAutoProxyBeanDefinitionParser\u8FD9\u4E2A\u7C7B\u5904\u7406\u7684\uFF0C\u6211\u4EEC\u770B\u4E0Bparse \u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">BeanDefinition</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CE8\u518CAspectJAnnotationAutoProxyCreator</span>
    <span class="token class-name">AopNamespaceUtils</span><span class="token punctuation">.</span><span class="token function">registerAspectJAnnotationAutoProxyCreatorIfNecessary</span><span class="token punctuation">(</span>parserContext<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u62D3\u5C55BeanDefinition</span>
    <span class="token function">extendBeanDefinition</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AopNamespaceUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary\u65B9\u6CD5\u5BF9\u5E94\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">registerAspectJAnnotationAutoProxyCreatorIfNecessary</span><span class="token punctuation">(</span>
        <span class="token class-name">ParserContext</span> parserContext<span class="token punctuation">,</span> <span class="token class-name">Element</span> sourceElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">BeanDefinition</span> beanDefinition <span class="token operator">=</span> <span class="token class-name">AopConfigUtils</span><span class="token punctuation">.</span><span class="token function">registerAspectJAnnotationAutoProxyCreatorIfNecessary</span><span class="token punctuation">(</span>
            parserContext<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parserContext<span class="token punctuation">.</span><span class="token function">extractSource</span><span class="token punctuation">(</span>sourceElement<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useClassProxyingIfNecessary</span><span class="token punctuation">(</span>parserContext<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sourceElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">registerComponentIfNecessary</span><span class="token punctuation">(</span>beanDefinition<span class="token punctuation">,</span> parserContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AopConfigUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary\u5BF9\u5E94\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BeanDefinition</span> <span class="token function">registerAspectJAnnotationAutoProxyCreatorIfNecessary</span><span class="token punctuation">(</span>
        <span class="token class-name">BeanDefinitionRegistry</span> registry<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">return</span> <span class="token function">registerOrEscalateApcAsRequired</span><span class="token punctuation">(</span><span class="token class-name">AnnotationAwareAspectJAutoProxyCreator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> registry<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0C\u6211\u4EEC\u53D1\u73B0AOP\u7684\u521B\u5EFA\u5DE5\u4F5C\u662F\u4EA4\u7ED9AnnotationAwareAspectJAutoProxyCreator\u6765\u5B8C\u6210\u7684\u3002</p><h2 id="_3-\u6CE8\u89E3\u5207\u9762\u4EE3\u7406\u521B\u5EFA\u7C7B-annotationawareaspectjautoproxycreator" tabindex="-1"><a class="header-anchor" href="#_3-\u6CE8\u89E3\u5207\u9762\u4EE3\u7406\u521B\u5EFA\u7C7B-annotationawareaspectjautoproxycreator" aria-hidden="true">#</a> 3. \u6CE8\u89E3\u5207\u9762\u4EE3\u7406\u521B\u5EFA\u7C7B(AnnotationAwareAspectJAutoProxyCreator)</h2><blockquote><p>AnnotationAwareAspectJAutoProxyCreator\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\u5462\uFF1F\u8FD9\u65F6\u5019\u6211\u4EEC\u5C31\u8981\u770BAnnotationAwareAspectJAutoProxyCreator\u7C7B\u7ED3\u6784\u5173\u7CFB\u4E86\u3002</p></blockquote><p>\u5982\u4E0B\u662F\u7C7B\u7ED3\u6784\u5173\u7CFB</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712205720168.png" alt="image-20220712205720168"></p><p>\u5B83\u5B9E\u73B0\u4E86\u4E24\u7C7B\u63A5\u53E3\uFF1A</p><ul><li>BeanFactoryAware\u5C5E\u4E8E<strong>Bean\u7EA7\u751F\u547D\u5468\u671F\u63A5\u53E3\u65B9\u6CD5</strong></li><li>InstantiationAwareBeanPostProcessor \u548C BeanPostProcessor \u8FD9\u4E24\u4E2A\u63A5\u53E3\u5B9E\u73B0\uFF0C\u4E00\u822C\u79F0\u5B83\u4EEC\u7684\u5B9E\u73B0\u7C7B\u4E3A\u201C\u540E\u5904\u7406\u5668\u201D\uFF0C\u662F<strong>\u5BB9\u5668\u7EA7\u751F\u547D\u5468\u671F\u63A5\u53E3\u65B9\u6CD5</strong>\uFF1B</li></ul><p>\u7ED3\u5408\u524D\u6587Spring Bean\u751F\u547D\u5468\u671F\u7684\u6D41\u7A0B</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712205919464.png" alt="image-20220712205919464"></p><p>\u6211\u4EEC\u5C31\u53EF\u4EE5\u5B9A\u4F4D\u5230\u6838\u5FC3\u7684\u521D\u59CB\u5316\u65B9\u6CD5\u80AF\u5B9A\u5728postProcessBeforeInstantiation\u548CpostProcessAfterInitialization\u4E2D\u3002</p><h3 id="_3-1-postprocessbeforeinstantiation" tabindex="-1"><a class="header-anchor" href="#_3-1-postprocessbeforeinstantiation" aria-hidden="true">#</a> 3.1 postProcessBeforeInstantiation</h3><p>\u5982\u4E0B\u662F\u4E0A\u8FF0\u7C7B\u7ED3\u6784\u4E2DpostProcessBeforeInstantiation\u7684\u65B9\u6CD5\uFF0C\u8BFB\u8005\u5728\u81EA\u5DF1\u770B\u4EE3\u7801\u7684\u65F6\u5019\u5EFA\u8BAE\u6253\u4E2A\u65AD\u70B9\u770B\uFF0C\u53EF\u4EE5\u65B9\u4FBF\u7406\u89E3</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712210030356.png" alt="image-20220712210030356"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token class-name">Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessBeforeInstantiation</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> cacheKey <span class="token operator">=</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>targetSourcedBeans<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u5728\u7F13\u5B58\u4E2D\uFF0C\u5219\u5FFD\u7565</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u662F\u5426\u662Faop\u57FA\u7840\u7C7B\uFF1F\u662F\u5426\u8DF3\u8FC7\uFF1F</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">shouldSkip</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>advisedBeans<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Create proxy here if we have a custom TargetSource.</span>
    <span class="token comment">// Suppresses unnecessary default instantiation of the target bean:</span>
    <span class="token comment">// The TargetSource will handle target instances in a custom fashion.</span>
    <span class="token class-name">TargetSource</span> targetSource <span class="token operator">=</span> <span class="token function">getCustomTargetSource</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>targetSource <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>targetSourcedBeans<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> specificInterceptors <span class="token operator">=</span> <span class="token function">getAdvicesAndAdvisorsForBean</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> targetSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> proxy <span class="token operator">=</span> <span class="token function">createProxy</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> specificInterceptors<span class="token punctuation">,</span> targetSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>proxyTypes<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> proxy<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-1-\u5224\u65AD\u662F\u5426\u662Faop\u57FA\u7840\u7C7B" tabindex="-1"><a class="header-anchor" href="#_3-1-1-\u5224\u65AD\u662F\u5426\u662Faop\u57FA\u7840\u7C7B" aria-hidden="true">#</a> 3.1.1 \u5224\u65AD\u662F\u5426\u662Faop\u57FA\u7840\u7C7B</h4><p>\u662F\u5426\u662Faop\u57FA\u7840\u7C7B\u7684\u5224\u65AD\u65B9\u6CD5 isInfrastructureClass \u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Previously we setProxyTargetClass(true) in the constructor, but that has too</span>
    <span class="token comment">// broad an impact. Instead we now override isInfrastructureClass to avoid proxying</span>
    <span class="token comment">// aspects. I&#39;m not entirely happy with that as there is no good reason not</span>
    <span class="token comment">// to advise aspects, except that it causes advice invocation to go through a</span>
    <span class="token comment">// proxy, and if the aspect implements e.g the Ordered interface it will be</span>
    <span class="token comment">// proxied by that interface and fail at runtime as the advice method is not</span>
    <span class="token comment">// defined on the interface. We could potentially relax the restriction about</span>
    <span class="token comment">// not advising aspects in the future.</span>
    <span class="token comment">// \u7236\u7C7B\u5224\u65AD\u5B83\u662Faop\u57FA\u7840\u7C7B or \u4F7F\u7528@Aspect\u6CE8\u89E3</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorFactory<span class="token punctuation">.</span><span class="token function">isAspect</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7236\u7C7B\u5224\u65AD\u5B83\u662F\u5426\u662Faop\u57FA\u7840\u7C7B\u7684\u65B9\u6CD5 super.isInfrastructureClass(beanClass), \u672C\u8D28\u4E0A\u5C31\u662F\u5224\u65AD\u8BE5\u7C7B\u662F\u5426\u5B9E\u73B0\u4E86Advice, Pointcut, Advisor\u6216\u8005AopInfrastructureBean\u63A5\u53E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">isInfrastructureClass</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BE5\u7C7B\u662F\u5426\u5B9E\u73B0\u4E86Advice, Pointcut, Advisor\u6216\u8005AopInfrastructureBean\u63A5\u53E3</span>
    <span class="token keyword">boolean</span> retVal <span class="token operator">=</span> <span class="token class-name">Advice</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">Pointcut</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">Advisor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">AopInfrastructureBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>retVal <span class="token operator">&amp;&amp;</span> logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;Did not attempt to auto-proxy infrastructure class [&quot;</span> <span class="token operator">+</span> beanClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> retVal<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-\u662F\u5426\u5E94\u8BE5\u8DF3\u8FC7shouldskip" tabindex="-1"><a class="header-anchor" href="#_3-1-2-\u662F\u5426\u5E94\u8BE5\u8DF3\u8FC7shouldskip" aria-hidden="true">#</a> 3.1.2 \u662F\u5426\u5E94\u8BE5\u8DF3\u8FC7shouldSkip</h4><p>\u901A\u8FC7\u65AD\u70B9\u8F85\u52A9\uFF0CcandidateAdvisors\u662F\u5C31\u662Fxml\u914D\u7F6E\u7684\u901A\u77E5\u662F\u5BF9\u5E94\u7684</p><p><img src="https://abelsun-1256449468.cos.ap-beijing.myqcloud.com/image/image-20220712210248262.png" alt="image-20220712210248262"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">shouldSkip</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanClass<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO: Consider optimization by caching the list of the aspect names</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> candidateAdvisors <span class="token operator">=</span> <span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Advisor</span> advisor <span class="token operator">:</span> candidateAdvisors<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>advisor <span class="token keyword">instanceof</span> <span class="token class-name">AspectJPointcutAdvisor</span> <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AspectJPointcutAdvisor</span><span class="token punctuation">)</span> advisor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">shouldSkip</span><span class="token punctuation">(</span>beanClass<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-3-\u5207\u9762\u65B9\u6CD5\u8F6C\u6210advisor" tabindex="-1"><a class="header-anchor" href="#_3-1-3-\u5207\u9762\u65B9\u6CD5\u8F6C\u6210advisor" aria-hidden="true">#</a> 3.1.3 \u5207\u9762\u65B9\u6CD5\u8F6C\u6210Advisor</h4><p>findCandidateAdvisors\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u7236\u7C7B\u4E2D\u627E\u5230\u6240\u6709\u7684advisor\uFF1A\u57FA\u4E8Exml\u914D\u7F6E\u7684&lt;aop:before/&gt;\u751F\u6210\u7684</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> advisors <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">findCandidateAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E3Abean Factory\u4E2DAspectJ\u5207\u9762\u6784\u5EFAadvistor\uFF1A\u901A\u8FC7AspectJ\u6CE8\u89E3\u7684\u65B9\u5F0F\u751F\u6210Advisor\u7C7B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorsBuilder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        advisors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorsBuilder<span class="token punctuation">.</span><span class="token function">buildAspectJAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> advisors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5F53\u524D\u7684bean Factory\u4E2D\u901A\u8FC7AspectJ\u6CE8\u89E3\u7684\u65B9\u5F0F\u751F\u6210Advisor\u7C7B\uFF0CbuildAspectJAdvisors\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Look for AspectJ-annotated aspect beans in the current bean factory,
    * and return to a list of Spring AOP Advisors representing them.
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Creates a Spring Advisor for each AspectJ advice method.
    * <span class="token keyword">@return</span> the list of <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>aop<span class="token punctuation">.</span></span><span class="token class-name">Advisor</span></span><span class="token punctuation">}</span> beans
    * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isEligibleBean</span></span>
    */</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">buildAspectJAdvisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> aspectNames <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectBeanNames<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectNames <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            aspectNames <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectBeanNames<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectNames <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> advisors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                aspectNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> beanNames <span class="token operator">=</span> <span class="token class-name">BeanFactoryUtils</span><span class="token punctuation">.</span><span class="token function">beanNamesForTypeIncludingAncestors</span><span class="token punctuation">(</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanName <span class="token operator">:</span> beanNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isEligibleBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// We must be careful not to instantiate beans eagerly as in this case they</span>
                    <span class="token comment">// would be cached by the Spring container but would not have been weaved.</span>
                    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> beanType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>beanType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisorFactory<span class="token punctuation">.</span><span class="token function">isAspect</span><span class="token punctuation">(</span>beanType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        aspectNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">AspectMetadata</span> amd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectMetadata</span><span class="token punctuation">(</span>beanType<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>amd<span class="token punctuation">.</span><span class="token function">getAjType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPerClause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">PerClauseKind</span><span class="token punctuation">.</span><span class="token constant">SINGLETON</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">MetadataAwareAspectInstanceFactory</span> factory <span class="token operator">=</span>
                                    <span class="token keyword">new</span> <span class="token class-name">BeanFactoryAspectInstanceFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> classAdvisors <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advisorFactory<span class="token punctuation">.</span><span class="token function">getAdvisors</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">// \u5355\u4F8B\u52A0\u5230advisorsCache, \u975E\u5355\u4F8B\u52A0\u5230aspectFactoryCache</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>advisorsCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> classAdvisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>aspectFactoryCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            advisors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>classAdvisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token comment">// Per target or per this.</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">.</span><span class="token function">isSingleton</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Bean with name &#39;&quot;</span> <span class="token operator">+</span> beanName <span class="token operator">+</span>
                                        <span class="token string">&quot;&#39; is a singleton, but aspect instantiation model is not singleton&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token class-name">MetadataAwareAspectInstanceFactory</span> factory <span class="token operator">=</span>
                                    <span class="token keyword">new</span> <span class="token class-name">PrototypeAspectInstanceFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span>aspectFactoryCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>beanName<span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">// advisorFactory\u5DE5\u5382\u83B7\u53D6advisors</span>
                            advisors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisorFactory<span class="token punctuation">.</span><span class="token function">getAdvisors</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>aspectBeanNames <span class="token operator">=</span> aspectNames<span class="token punctuation">;</span>
                <span class="token keyword">return</span> advisors<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectNames<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> advisors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> aspectName <span class="token operator">:</span> aspectNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> cachedAdvisors <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>advisorsCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cachedAdvisors <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            advisors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cachedAdvisors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">MetadataAwareAspectInstanceFactory</span> factory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectFactoryCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            advisors<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>advisorFactory<span class="token punctuation">.</span><span class="token function">getAdvisors</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> advisors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u65B9\u6CD5\u672C\u8D28\u4E0A\u7684\u601D\u8DEF\u662F\uFF1A\u7528DCL\u53CC\u91CD\u9501\u7684\u5355\u4F8B\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u62FF\u5230\u5207\u9762\u7C7B\u91CC\u7684\u5207\u9762\u65B9\u6CD5\uFF0C\u5C06\u5176\u8F6C\u6362\u6210advisor\uFF08\u5E76\u653E\u5165\u7F13\u5B58\u4E2D\uFF09\u3002</p><p>\u8F6C\u6362\u7684\u6210advisor\u7684\u65B9\u6CD5\u662F\uFF1Athis.advisorFactory.getAdvisors</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAdvisors</span><span class="token punctuation">(</span><span class="token class-name">MetadataAwareAspectInstanceFactory</span> aspectInstanceFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aspectClass <span class="token operator">=</span> aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> aspectName <span class="token operator">=</span> aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">validate</span><span class="token punctuation">(</span>aspectClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// We need to wrap the MetadataAwareAspectInstanceFactory with a decorator</span>
    <span class="token comment">// so that it will only instantiate once.</span>
    <span class="token class-name">MetadataAwareAspectInstanceFactory</span> lazySingletonAspectInstanceFactory <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">LazySingletonAspectInstanceFactoryDecorator</span><span class="token punctuation">(</span>aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Advisor</span><span class="token punctuation">&gt;</span></span> advisors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> method <span class="token operator">:</span> <span class="token function">getAdvisorMethods</span><span class="token punctuation">(</span>aspectClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Prior to Spring Framework 5.2.7, advisors.size() was supplied as the declarationOrderInAspect</span>
        <span class="token comment">// to getAdvisor(...) to represent the &quot;current position&quot; in the declared methods list.</span>
        <span class="token comment">// However, since Java 7 the &quot;current position&quot; is not valid since the JDK no longer</span>
        <span class="token comment">// returns declared methods in the order in which they are declared in the source code.</span>
        <span class="token comment">// Thus, we now hard code the declarationOrderInAspect to 0 for all advice methods</span>
        <span class="token comment">// discovered via reflection in order to support reliable advice ordering across JVM launches.</span>
        <span class="token comment">// Specifically, a value of 0 aligns with the default value used in</span>
        <span class="token comment">// AspectJPrecedenceComparator.getAspectDeclarationOrder(Advisor).</span>
        <span class="token class-name">Advisor</span> advisor <span class="token operator">=</span> <span class="token function">getAdvisor</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> lazySingletonAspectInstanceFactory<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>advisor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            advisors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>advisor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// If it&#39;s a per target aspect, emit the dummy instantiating aspect.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>advisors<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> lazySingletonAspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isLazilyInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Advisor</span> instantiationAdvisor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SyntheticInstantiationAdvisor</span><span class="token punctuation">(</span>lazySingletonAspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        advisors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> instantiationAdvisor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Find introduction fields.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field <span class="token operator">:</span> aspectClass<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Advisor</span> advisor <span class="token operator">=</span> <span class="token function">getDeclareParentsAdvisor</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>advisor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            advisors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>advisor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> advisors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getAdvisor\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">Advisor</span> <span class="token function">getAdvisor</span><span class="token punctuation">(</span><span class="token class-name">Method</span> candidateAdviceMethod<span class="token punctuation">,</span> <span class="token class-name">MetadataAwareAspectInstanceFactory</span> aspectInstanceFactory<span class="token punctuation">,</span>
        <span class="token keyword">int</span> declarationOrderInAspect<span class="token punctuation">,</span> <span class="token class-name">String</span> aspectName<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token function">validate</span><span class="token punctuation">(</span>aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">AspectJExpressionPointcut</span> expressionPointcut <span class="token operator">=</span> <span class="token function">getPointcut</span><span class="token punctuation">(</span>
            candidateAdviceMethod<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>expressionPointcut <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C01\u88C5\u6210advisor</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InstantiationModelAwarePointcutAdvisorImpl</span><span class="token punctuation">(</span>expressionPointcut<span class="token punctuation">,</span> candidateAdviceMethod<span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">,</span> declarationOrderInAspect<span class="token punctuation">,</span> aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-4-\u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5207\u70B9" tabindex="-1"><a class="header-anchor" href="#_3-1-4-\u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5207\u70B9" aria-hidden="true">#</a> 3.1.4 \u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5207\u70B9</h4><p>\u83B7\u53D6\u8868\u8FBE\u5F0F\u7684\u5207\u70B9\u7684\u65B9\u6CD5getPointcut\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">private</span> <span class="token class-name">AspectJExpressionPointcut</span> <span class="token function">getPointcut</span><span class="token punctuation">(</span><span class="token class-name">Method</span> candidateAdviceMethod<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> candidateAspectClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aspectJAnnotation <span class="token operator">=</span>
            <span class="token class-name">AbstractAspectJAdvisorFactory</span><span class="token punctuation">.</span><span class="token function">findAspectJAnnotationOnMethod</span><span class="token punctuation">(</span>candidateAdviceMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectJAnnotation <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">AspectJExpressionPointcut</span> ajexp <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">AspectJExpressionPointcut</span><span class="token punctuation">(</span>candidateAspectClass<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ajexp<span class="token punctuation">.</span><span class="token function">setExpression</span><span class="token punctuation">(</span>aspectJAnnotation<span class="token punctuation">.</span><span class="token function">getPointcutExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ajexp<span class="token punctuation">.</span><span class="token function">setBeanFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ajexp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AbstractAspectJAdvisorFactory.findAspectJAnnotationOnMethod\u7684\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">ASPECTJ_ANNOTATION_CLASSES</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token class-name">Pointcut</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Around</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Before</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">After</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AfterReturning</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">AfterThrowing</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
    * Find and return the first AspectJ annotation on the given method
    * (there <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>should<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span> only be one anyway...).
    */</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAspectJAnnotationOnMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">:</span> <span class="token constant">ASPECTJ_ANNOTATION_CLASSES</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> foundAnnotation <span class="token operator">=</span> <span class="token function">findAnnotation</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>foundAnnotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> foundAnnotation<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>findAnnotation\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span><span class="token punctuation">&gt;</span></span> toLookFor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">A</span> result <span class="token operator">=</span> <span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">findAnnotation</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> toLookFor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AnnotationUtils.findAnnotation \u83B7\u53D6\u6CE8\u89E3\u65B9\u6CD5\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * Find a single <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Annotation</span></span><span class="token punctuation">}</span> of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">annotationType</span></span><span class="token punctuation">}</span> on the supplied
    * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Method</span></span><span class="token punctuation">}</span>, traversing its super methods (i.e. from superclasses and
    * interfaces) if the annotation is not <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>directly present<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> on the given
    * method itself.
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Correctly handles bridge <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Method</span></span> Methods<span class="token punctuation">}</span> generated by the compiler.
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Meta-annotations will be searched if the annotation is not
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>directly present<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> on the method.
    * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Annotations on methods are not inherited by default, so we need to handle
    * this explicitly.
    * <span class="token keyword">@param</span> <span class="token parameter">method</span> the method to look for annotations on
    * <span class="token keyword">@param</span> <span class="token parameter">annotationType</span> the annotation type to look for
    * <span class="token keyword">@return</span> the first matching annotation, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if not found
    * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">)</span></span>
    */</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">A</span> <span class="token function">findAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span><span class="token punctuation">&gt;</span></span> annotationType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotationType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Shortcut: directly present on the element, with no merging needed?</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AnnotationFilter</span><span class="token punctuation">.</span><span class="token constant">PLAIN</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>annotationType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">AnnotationsScanner</span><span class="token punctuation">.</span><span class="token function">hasPlainJavaAnnotationsOnly</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotation</span><span class="token punctuation">(</span>annotationType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Exhaustive retrieval of merged annotations...</span>
    <span class="token keyword">return</span> <span class="token class-name">MergedAnnotations</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token class-name">SearchStrategy</span><span class="token punctuation">.</span><span class="token constant">TYPE_HIERARCHY</span><span class="token punctuation">,</span> <span class="token class-name">RepeatableContainers</span><span class="token punctuation">.</span><span class="token function">none</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>annotationType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withNonMergedAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">synthesize</span><span class="token punctuation">(</span><span class="token class-name">MergedAnnotation</span><span class="token operator">::</span><span class="token function">isPresent</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-5-\u5C01\u88C5\u6210advisor" tabindex="-1"><a class="header-anchor" href="#_3-1-5-\u5C01\u88C5\u6210advisor" aria-hidden="true">#</a> 3.1.5 \u5C01\u88C5\u6210Advisor</h4><p>\u6CE8\uFF1AAdvisor \u662F advice\u7684\u5305\u88C5\u5668\uFF0C\u5305\u542B\u4E86advice\u53CA\u5176\u5B83\u4FE1\u606F</p><p>\u7531InstantiationModelAwarePointcutAdvisorImpl\u6784\u9020\u5B8C\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">InstantiationModelAwarePointcutAdvisorImpl</span><span class="token punctuation">(</span><span class="token class-name">AspectJExpressionPointcut</span> declaredPointcut<span class="token punctuation">,</span>
        <span class="token class-name">Method</span> aspectJAdviceMethod<span class="token punctuation">,</span> <span class="token class-name">AspectJAdvisorFactory</span> aspectJAdvisorFactory<span class="token punctuation">,</span>
        <span class="token class-name">MetadataAwareAspectInstanceFactory</span> aspectInstanceFactory<span class="token punctuation">,</span> <span class="token keyword">int</span> declarationOrder<span class="token punctuation">,</span> <span class="token class-name">String</span> aspectName<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>declaredPointcut <span class="token operator">=</span> declaredPointcut<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>declaringClass <span class="token operator">=</span> aspectJAdviceMethod<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>methodName <span class="token operator">=</span> aspectJAdviceMethod<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parameterTypes <span class="token operator">=</span> aspectJAdviceMethod<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdviceMethod <span class="token operator">=</span> aspectJAdviceMethod<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorFactory <span class="token operator">=</span> aspectJAdvisorFactory<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aspectInstanceFactory <span class="token operator">=</span> aspectInstanceFactory<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>declarationOrder <span class="token operator">=</span> declarationOrder<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>aspectName <span class="token operator">=</span> aspectName<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isLazilyInstantiated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Static part of the pointcut is a lazy type.</span>
        <span class="token class-name">Pointcut</span> preInstantiationPointcut <span class="token operator">=</span> <span class="token class-name">Pointcuts</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span>
                aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPerClausePointcut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>declaredPointcut<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Make it dynamic: must mutate from pre-instantiation to post-instantiation state.</span>
        <span class="token comment">// If it&#39;s not a dynamic pointcut, it may be optimized out</span>
        <span class="token comment">// by the Spring AOP infrastructure after the first evaluation.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pointcut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PerTargetInstantiationModelPointcut</span><span class="token punctuation">(</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>declaredPointcut<span class="token punctuation">,</span> preInstantiationPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// A singleton aspect.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pointcut <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>declaredPointcut<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>instantiatedAdvice <span class="token operator">=</span> <span class="token function">instantiateAdvice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>declaredPointcut<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7pointcut\u83B7\u53D6advice</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Advice</span> <span class="token function">instantiateAdvice</span><span class="token punctuation">(</span><span class="token class-name">AspectJExpressionPointcut</span> pointcut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Advice</span> advice <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdvisorFactory<span class="token punctuation">.</span><span class="token function">getAdvice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>aspectJAdviceMethod<span class="token punctuation">,</span> pointcut<span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>aspectInstanceFactory<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>declarationOrder<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>advice <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> advice <span class="token operator">:</span> <span class="token constant">EMPTY_ADVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EA4\u7ED9aspectJAdvisorFactory\u83B7\u53D6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token class-name">Advice</span> <span class="token function">getAdvice</span><span class="token punctuation">(</span><span class="token class-name">Method</span> candidateAdviceMethod<span class="token punctuation">,</span> <span class="token class-name">AspectJExpressionPointcut</span> expressionPointcut<span class="token punctuation">,</span>
        <span class="token class-name">MetadataAwareAspectInstanceFactory</span> aspectInstanceFactory<span class="token punctuation">,</span> <span class="token keyword">int</span> declarationOrder<span class="token punctuation">,</span> <span class="token class-name">String</span> aspectName<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u83B7\u53D6\u5207\u9762\u7C7B</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> candidateAspectClass <span class="token operator">=</span> aspectInstanceFactory<span class="token punctuation">.</span><span class="token function">getAspectMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAspectClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">validate</span><span class="token punctuation">(</span>candidateAspectClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u83B7\u53D6\u5207\u9762\u6CE8\u89E3</span>
    <span class="token class-name">AspectJAnnotation</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aspectJAnnotation <span class="token operator">=</span>
            <span class="token class-name">AbstractAspectJAdvisorFactory</span><span class="token punctuation">.</span><span class="token function">findAspectJAnnotationOnMethod</span><span class="token punctuation">(</span>candidateAdviceMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>aspectJAnnotation <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// If we get here, we know we have an AspectJ method.</span>
    <span class="token comment">// Check that it&#39;s an AspectJ-annotated class</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAspect</span><span class="token punctuation">(</span>candidateAspectClass<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AopConfigException</span><span class="token punctuation">(</span><span class="token string">&quot;Advice must be declared inside an aspect type: &quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;Offending method &#39;&quot;</span> <span class="token operator">+</span> candidateAdviceMethod <span class="token operator">+</span> <span class="token string">&quot;&#39; in class [&quot;</span> <span class="token operator">+</span>
                candidateAspectClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Found AspectJ method: &quot;</span> <span class="token operator">+</span> candidateAdviceMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5207\u9762\u6CE8\u89E3\u8F6C\u6362\u6210advice</span>
    <span class="token class-name">AbstractAspectJAdvice</span> springAdvice<span class="token punctuation">;</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>aspectJAnnotation<span class="token punctuation">.</span><span class="token function">getAnnotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">AtPointcut</span><span class="token operator">:</span> <span class="token comment">// AtPointcut\u5FFD\u7565</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Processing pointcut &#39;&quot;</span> <span class="token operator">+</span> candidateAdviceMethod<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">AtAround</span><span class="token operator">:</span>
            springAdvice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAroundAdvice</span><span class="token punctuation">(</span>
                    candidateAdviceMethod<span class="token punctuation">,</span> expressionPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">AtBefore</span><span class="token operator">:</span>
            springAdvice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectJMethodBeforeAdvice</span><span class="token punctuation">(</span>
                    candidateAdviceMethod<span class="token punctuation">,</span> expressionPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">AtAfter</span><span class="token operator">:</span>
            springAdvice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAfterAdvice</span><span class="token punctuation">(</span>
                    candidateAdviceMethod<span class="token punctuation">,</span> expressionPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">AtAfterReturning</span><span class="token operator">:</span>
            springAdvice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAfterReturningAdvice</span><span class="token punctuation">(</span>
                    candidateAdviceMethod<span class="token punctuation">,</span> expressionPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">AfterReturning</span> afterReturningAnnotation <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AfterReturning</span><span class="token punctuation">)</span> aspectJAnnotation<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>afterReturningAnnotation<span class="token punctuation">.</span><span class="token function">returning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                springAdvice<span class="token punctuation">.</span><span class="token function">setReturningName</span><span class="token punctuation">(</span>afterReturningAnnotation<span class="token punctuation">.</span><span class="token function">returning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">AtAfterThrowing</span><span class="token operator">:</span>
            springAdvice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AspectJAfterThrowingAdvice</span><span class="token punctuation">(</span>
                    candidateAdviceMethod<span class="token punctuation">,</span> expressionPointcut<span class="token punctuation">,</span> aspectInstanceFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">AfterThrowing</span> afterThrowingAnnotation <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AfterThrowing</span><span class="token punctuation">)</span> aspectJAnnotation<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>afterThrowingAnnotation<span class="token punctuation">.</span><span class="token function">throwing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                springAdvice<span class="token punctuation">.</span><span class="token function">setThrowingName</span><span class="token punctuation">(</span>afterThrowingAnnotation<span class="token punctuation">.</span><span class="token function">throwing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Unsupported advice type on method: &quot;</span> <span class="token operator">+</span> candidateAdviceMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6700\u540E\u5C06\u5176\u5B83\u5207\u9762\u4FE1\u606F\u914D\u7F6E\u5230advice</span>
    springAdvice<span class="token punctuation">.</span><span class="token function">setAspectName</span><span class="token punctuation">(</span>aspectName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    springAdvice<span class="token punctuation">.</span><span class="token function">setDeclarationOrder</span><span class="token punctuation">(</span>declarationOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argNames <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parameterNameDiscoverer<span class="token punctuation">.</span><span class="token function">getParameterNames</span><span class="token punctuation">(</span>candidateAdviceMethod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>argNames <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        springAdvice<span class="token punctuation">.</span><span class="token function">setArgumentNamesFromStringArray</span><span class="token punctuation">(</span>argNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    springAdvice<span class="token punctuation">.</span><span class="token function">calculateArgumentBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> springAdvice<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-6-\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_3-1-6-\u5C0F\u7ED3" aria-hidden="true">#</a> 3.1.6 \u5C0F\u7ED3</h4><ol><li>\u5C06<strong>\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5</strong>\u6839\u636E<strong>\u4F7F\u7528\u7684\u6CE8\u89E3</strong>\u751F\u6210\u5BF9\u5E94<strong>Advice</strong></li><li>\u5E76\u5C06<strong>Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F</strong>\u4E00\u5E76\u5C01\u88C5\u5230<strong>Advisor</strong></li></ol><h3 id="_3-2-postprocessafterinitialization" tabindex="-1"><a class="header-anchor" href="#_3-2-postprocessafterinitialization" aria-hidden="true">#</a> 3.2 postProcessAfterInitialization</h3><p>\u6709\u4E86Adisor, \u6CE8\u5165\u5230\u5408\u9002\u7684\u4F4D\u7F6E\u5E76\u4EA4\u7ED9\u4EE3\u7406\uFF08cglib\u548Cjdk)\u5B9E\u73B0\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* Create a proxy with the configured interceptors if the bean is
* identified as one to proxy by the subclass.
* <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">getAdvicesAndAdvisorsForBean</span></span>
*/</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">postProcessAfterInitialization</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> beanName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bean <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> cacheKey <span class="token operator">=</span> <span class="token function">getCacheKey</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>earlyProxyReferences<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span> <span class="token operator">!=</span> bean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">wrapIfNecessary</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> beanName<span class="token punctuation">,</span> cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> bean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540E\u6587\u4E2D\u5C06\u5206\u522B\u4ECB\u7ECD\u4EE3\u7406\u7684\u521B\u5EFA\u548C\u5B9E\u73B0\uFF1A</p>`,77),d={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-2.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-3.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-4.html",target:"_blank",rel:"noopener noreferrer"},b=p('<h2 id="_4-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_4-\u603B\u7ED3" aria-hidden="true">#</a> 4. \u603B\u7ED3</h2><p>\u901A\u8FC7\u4E0A\u6587\u7684\u5206\u6790\uFF0C\u6211\u4EEC\u505A\u4E0B\u5C0F\u7ED3\uFF1A</p><ol><li><p>\u7531<strong>IOC Bean\u52A0\u8F7D</strong>\u65B9\u6CD5\u6808\u4E2D\u627E\u5230parseCustomElement\u65B9\u6CD5\uFF0C\u627E\u5230parse <code>aop:aspectj-autoproxy</code>\u7684handler(org.springframework.aop.config.AopNamespaceHandler)</p></li><li><p><strong>AopNamespaceHandler</strong>\u6CE8\u518C\u4E86<code>&lt;aop:aspectj-autoproxy/&gt;</code>\u7684\u89E3\u6790\u7C7B\u662FAspectJAutoProxyBeanDefinitionParser</p></li><li><p><strong>AspectJAutoProxyBeanDefinitionParser</strong>\u7684parse \u65B9\u6CD5 \u901A\u8FC7AspectJAwareAdvisorAutoProxyCreator\u7C7B\u53BB\u521B\u5EFA</p></li><li><p>AspectJAwareAdvisorAutoProxyCreator</p><p>\u5B9E\u73B0\u4E86\u4E24\u7C7B\u63A5\u53E3\uFF0CBeanFactoryAware\u548CBeanPostProcessor\uFF1B\u6839\u636EBean\u751F\u547D\u5468\u671F\u65B9\u6CD5\u627E\u5230\u4E24\u4E2A\u6838\u5FC3\u65B9\u6CD5\uFF1ApostProcessBeforeInstantiation\u548CpostProcessAfterInitialization</p><ol><li><strong>postProcessBeforeInstantiation</strong>\uFF1A\u4E3B\u8981\u662F\u5904\u7406\u4F7F\u7528\u4E86@Aspect\u6CE8\u89E3\u7684\u5207\u9762\u7C7B\uFF0C\u7136\u540E\u5C06\u5207\u9762\u7C7B\u7684\u6240\u6709\u5207\u9762\u65B9\u6CD5\u6839\u636E\u4F7F\u7528\u7684\u6CE8\u89E3\u751F\u6210\u5BF9\u5E94Advice\uFF0C\u5E76\u5C06Advice\u8FDE\u540C\u5207\u5165\u70B9\u5339\u914D\u5668\u548C\u5207\u9762\u7C7B\u7B49\u4FE1\u606F\u4E00\u5E76\u5C01\u88C5\u5230Advisor</li><li><strong>postProcessAfterInitialization</strong>\uFF1A\u4E3B\u8981\u8D1F\u8D23\u5C06Advisor\u6CE8\u5165\u5230\u5408\u9002\u7684\u4F4D\u7F6E\uFF0C\u521B\u5EFA\u4EE3\u7406\uFF08cglib\u6216jdk)\uFF0C\u4E3A\u540E\u9762\u7ED9\u4EE3\u7406\u8FDB\u884C\u589E\u5F3A\u5B9E\u73B0\u505A\u51C6\u5907\u3002</li></ol></li></ol><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>',4),g={href:"https://pdai.tech/md/spring/spring-x-framework-aop-source-1.html",target:"_blank",rel:"noopener noreferrer"},y=n("strong",null,"Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BAOP\u5207\u9762\u7684\u5B9E\u73B0",-1);function f(A,h){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("\u6240\u4EE5\u7406\u89E3Spring AOP\u7684\u521D\u59CB\u5316\u5FC5\u987B\u8981\u5148\u7406\u89E3"),n("a",k,[s("Spring IOC\u7684\u521D\u59CB\u5316"),t(a)]),s("\u3002")]),r,n("ul",null,[n("li",null,[n("a",d,[s("Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BAOP\u4EE3\u7406\u7684\u521B\u5EFA"),t(a)])]),n("li",null,[n("a",v,[s("Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BCglib\u4EE3\u7406\u5B9E\u73B0"),t(a)])]),n("li",null,[n("a",m,[s("Spring\u8FDB\u9636 - Spring AOP\u5B9E\u73B0\u539F\u7406\u8BE6\u89E3\u4E4BJDK\u4EE3\u7406\u5B9E\u73B0"),t(a)])])]),b,n("p",null,[n("a",g,[y,t(a)])])])}const x=e(l,[["render",f],["__file","spring-x-framework-aop-source-1.html.vue"]]);export{x as default};
