import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as t}from"./app.62e9bec7.js";const e={},p=t(`<blockquote><p>\u6D45\u8C08hyperledger fabric\u6E90\u7801|Committer\u8BB0\u8D26\u8282\u70B9</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gn3h9nzkclj31c00u0wt0.jpg" alt="facdd49577decf1dc62abc9fc97caf97"></p><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>Committer</code>\u8BB0\u8D26\u8282\u70B9\u529F\u80FD\u6A21\u5757\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u7684\u6E90\u4EE3\u7801\u4E3B\u8981\u5206\u5E03\u5728\u4E0B\u8868\uFF1A</p><table><thead><tr><th style="text-align:center;">\u6E90\u7801\u76EE\u5F55</th><th style="text-align:center;"></th><th style="text-align:center;">\u6587\u4EF6</th><th style="text-align:center;">\u529F\u80FD\u9610\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;">core</td><td style="text-align:center;">committer</td><td style="text-align:center;">Txvalidator</td><td style="text-align:center;">\u4EA4\u6613\u9A8C\u8BC1\u5668\u529F\u80FD\u6A21\u5757</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">committer.go</td><td style="text-align:center;">\u8D26\u672C\u63D0\u4EA4\u5668\u63A5\u53E3\u5B9A\u4E49</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">committer_impl.go</td><td style="text-align:center;">\u8D26\u672C\u63D0\u4EA4\u5668\u5B9E\u73B0</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">ledger</td><td style="text-align:center;">kvledge</td><td style="text-align:center;">kvLedger\u8D26\u672C\u529F\u80FD\u6A21\u5757</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">ledgerstorage</td><td style="text-align:center;">\u8D26\u672C\u6570\u636E\u5B58\u50A8\u5BF9\u8C61\u6A21\u5757</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">pvtdatastorage</td><td style="text-align:center;">\u9690\u79C1\u6570\u636E\u5B58\u50A8\u5BF9\u8C61\u6A21\u5757</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">ledgermgmt</td><td style="text-align:center;">\u8D26\u672C\u7BA1\u7406\u6A21\u5757</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">customtx</td><td style="text-align:center;">\u914D\u7F6E\u4EA4\u6613\u5904\u7406\u5668\u6A21\u5757</td></tr><tr><td style="text-align:center;">common</td><td style="text-align:center;">ledger</td><td style="text-align:center;">blockstorage</td><td style="text-align:center;">\u533A\u5757\u5B58\u50A8\u6A21\u5757</td></tr><tr><td style="text-align:center;">protos</td><td style="text-align:center;">Common</td><td style="text-align:center;">ledger</td><td style="text-align:center;">protobuf\u6D88\u606F\u5B9A\u4E49\u6A21\u5757</td></tr></tbody></table><p>\u63A5\u4E0B\u6765\u5C06\u4F1A\u56F4\u7ED5\u7740\u8FD9\u90E8\u5206\u7684\u5185\u5BB9\u8FDB\u884C\u5206\u6790\u3002</p><h2 id="\u521B\u5EFAcommitter\u529F\u80FD\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFAcommitter\u529F\u80FD\u6A21\u5757" aria-hidden="true">#</a> \u521B\u5EFACommitter\u529F\u80FD\u6A21\u5757</h2><p>Peer\u8282\u70B9\u901A\u8FC7\u8BF7\u6C42\u8C03\u7528<code>CSCC</code>\u7CFB\u7EDF\u94FE\u7801\u52A0\u5165\u5E94\u7528\u901A\u9053\uFF0C\u6267\u884C<code>joinChain()\u2192peer.Create- ChainFromBlock()\u2192createChain()</code>\u51FD\u6570\uFF0C\u57FA\u4E8E\u5E94\u7528\u901A\u9053\u521B\u4E16\u533A\u5757\u521B\u5EFA\u901A\u9053\u7684\u94FE\u7ED3\u6784\u5BF9\u8C61\uFF0C\u7528\u4E8E\u7BA1\u7406\u8D26\u672C\u3001\u901A\u9053\u914D\u7F6E\u7B49\u8D44\u6E90\uFF0C\u4EE5\u6B63\u5E38\u63A5\u6536\u901A\u9053\u7684\u8D26\u672C\u533A\u5757\u3002</p><p>\u63A5\u7740\uFF0C\u521B\u5EFA\u4E86\u4EA4\u6613\u9A8C\u8BC1\u5668\uFF0C\u5E76\u5C01\u88C5\u4E86<code>vsccValidatorImpl</code>\u7ED3\u6784\u5BF9\u8C61\u7528\u4E8E\u652F\u6301\u8C03\u7528VSCC\u94FE\u7801\u3002</p><p>\u7136\u540E\uFF0C\u521B\u5EFA\u8D26\u672C\u63D0\u4EA4\u5668\uFF0C\u5E76\u5B9A\u4E49\u56DE\u8C03\u51FD\u6570<code>eventer</code>\uFF0C\u7528\u4E8E\u63D0\u4EA4\u8D26\u672C\u540E\u81EA\u52A8\u66F4\u65B0\u94FE\u7ED3\u6784\u4E0A\u7684\u6700\u65B0\u914D\u7F6E\u533A\u5757\u5BF9\u8C61\u3002</p><p>\u73B0\u5728\u8FDB\u5165\u5230<code>createChain</code>\u91CC\u9762\u5206\u6790\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">createChain</span><span class="token punctuation">(</span>cid <span class="token builtin">string</span><span class="token punctuation">,</span> ledger ledger<span class="token punctuation">.</span>PeerLedger<span class="token punctuation">,</span> cb <span class="token operator">*</span>common<span class="token punctuation">.</span>Block<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>
  vcs <span class="token operator">:=</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span> <span class="token comment">// \u6784\u9020\u65B0\u7684\u9A8C\u8BC1\u94FE\u7801\u652F\u6301\u5BF9\u8C61</span>
		<span class="token operator">*</span>chainSupport
		<span class="token operator">*</span>semaphore<span class="token punctuation">.</span>Weighted
		Support
	<span class="token punctuation">}</span><span class="token punctuation">{</span>cs<span class="token punctuation">,</span> validationWorkersSemaphore<span class="token punctuation">,</span> <span class="token function">GetSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
	validator <span class="token operator">:=</span> txvalidator<span class="token punctuation">.</span><span class="token function">NewTxValidator</span><span class="token punctuation">(</span>vcs<span class="token punctuation">)</span> <span class="token comment">// \u521B\u5EFA\u4EA4\u6613\u9A8C\u8BC1\u5668</span>
	<span class="token comment">// \u521B\u5EFA\u8D26\u672C\u63D0\u4EA4\u5668</span>
	c <span class="token operator">:=</span> committer<span class="token punctuation">.</span><span class="token function">NewLedgerCommitterReactive</span><span class="token punctuation">(</span>ledger<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>block <span class="token operator">*</span>common<span class="token punctuation">.</span>Block<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		chainID<span class="token punctuation">,</span> err <span class="token operator">:=</span> utils<span class="token punctuation">.</span><span class="token function">GetChainIDFromBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">SetCurrConfigBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> chainID<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
	<span class="token comment">// \u521B\u5EFAtransient\u9690\u79C1\u6570\u636E\u5B58\u50A8\u5BF9\u8C61</span>
	store<span class="token punctuation">,</span> err <span class="token operator">:=</span> transientStoreFactory<span class="token punctuation">.</span><span class="token function">OpenStore</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span><span class="token function">ConfigtxValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ChainID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token operator">...</span>
	<span class="token comment">// \u521D\u59CB\u5316\u6307\u5B9A\u901A\u9053\u4E0A\u7684Gossip\u6D88\u606F\u6A21\u5757\u3002</span>
	<span class="token comment">// \u82E5\u662F\u4E3B\u8282\u70B9\uFF0C\u5219\u4ECEOrderer\u670D\u52A1\u8282\u70B9\u83B7\u53D6\u533A\u5757\u6570\u636E\u3002\u5426\u5219\uFF0C\u4ECE\u7EC4\u7EC7\u5185\u5176\u4ED6\u8282\u70B9\u540C\u6B65\u6570\u636E</span>
	service<span class="token punctuation">.</span><span class="token function">GetGossipService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">InitializeChannel</span><span class="token punctuation">(</span>bundle<span class="token punctuation">.</span><span class="token function">ConfigtxValidator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ChainID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ordererAddresses<span class="token punctuation">,</span> service<span class="token punctuation">.</span>Support<span class="token punctuation">{</span>
		Validator<span class="token punctuation">:</span> validator<span class="token punctuation">,</span>
		Committer<span class="token punctuation">:</span> c<span class="token punctuation">,</span>
		Store<span class="token punctuation">:</span>     store<span class="token punctuation">,</span>
		Cs<span class="token punctuation">:</span>        simpleCollectionStore<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	chains<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> chains<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u6784\u9020\u65B0\u7684\u94FE\u7ED3\u6784\u5E76\u63D2\u5165Peer\u8282\u70B9\u94FE\u7ED3\u6784</span>
	chains<span class="token punctuation">.</span>list<span class="token punctuation">[</span>cid<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span>chain<span class="token punctuation">{</span>
		cs<span class="token punctuation">:</span>        cs<span class="token punctuation">,</span> <span class="token comment">// \u94FE\u652F\u6301\u5BF9\u8C61</span>
		cb<span class="token punctuation">:</span>        cb<span class="token punctuation">,</span> <span class="token comment">// \u914D\u7F6E\u533A\u5757</span>
		committer<span class="token punctuation">:</span> c<span class="token punctuation">,</span>  <span class="token comment">// \u8D26\u672C\u63D0\u4EA4\u5668</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9A8C\u8BC1\u4EA4\u6613\u6570\u636E\u7684\u5408\u6CD5\u6027" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u4EA4\u6613\u6570\u636E\u7684\u5408\u6CD5\u6027" aria-hidden="true">#</a> \u9A8C\u8BC1\u4EA4\u6613\u6570\u636E\u7684\u5408\u6CD5\u6027</h2><p>\u9A8C\u8BC1\u4EA4\u6613\u5165\u53E3\uFF1A<code>core/committer/txvalidator/validator.go/validateTx()</code>,\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B</p><p>\u2460\uFF1A<em>\u89E3\u6790\u83B7\u53D6\u4EA4\u6613\u6570\u636E\u7684Envelope\u7ED3\u6784\u5BF9\u8C61</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> env<span class="token punctuation">,</span> err <span class="token operator">:=</span> utils<span class="token punctuation">.</span><span class="token function">GetEnvelopeFromBlock</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2461\uFF1A<em>\u68C0\u67E5\u4EA4\u6613\u683C\u5F0F\u662F\u5426\u6B63\u786E\u3001\u7B7E\u540D\u662F\u5426\u5408\u6CD5\u3001\u4EA4\u6613\u5185\u5BB9\u662F\u5426\u88AB\u7BE1\u6539</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> payload<span class="token punctuation">,</span> txResult <span class="token operator">=</span> validation<span class="token punctuation">.</span><span class="token function">ValidateTransaction</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> v<span class="token punctuation">.</span>support<span class="token punctuation">.</span><span class="token function">Capabilities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> txResult <span class="token operator">!=</span> peer<span class="token punctuation">.</span>TxValidationCode_VALID <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid transaction with index %d&quot;</span><span class="token punctuation">,</span> tIdx<span class="token punctuation">)</span>
			results <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>blockValidationResult<span class="token punctuation">{</span>
				tIdx<span class="token punctuation">:</span>           tIdx<span class="token punctuation">,</span>
				validationCode<span class="token punctuation">:</span> txResult<span class="token punctuation">,</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2462\uFF1A<em>\u89E3\u6790\u83B7\u53D6\u901A\u9053\u5934\u90E8</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>chdr<span class="token punctuation">,</span> err <span class="token operator">:=</span> utils<span class="token punctuation">.</span><span class="token function">UnmarshalChannelHeader</span><span class="token punctuation">(</span>payload<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>ChannelHeader<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u2463\uFF1A<em>\u68C0\u67E5\u901A\u9053\u94FE\u7ED3\u6784\u662F\u5426\u5B58\u5728</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>channel <span class="token operator">:=</span> chdr<span class="token punctuation">.</span>ChannelId
<span class="token keyword">if</span> <span class="token operator">!</span>v<span class="token punctuation">.</span><span class="token function">chainExists</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2464\uFF1A<em>\u6839\u636E<code>Header</code>\u7684\u7C7B\u578B\u6765\u5206\u522B\u5904\u7406\u6D88\u606F</em></p><p>5.1 <em>\u666E\u901A\u4EA4\u6613\u6D88\u606F</em></p><p>\u5148\u4ECE\u8D26\u672C\u83B7\u53D6\u6307\u5B9A\u4EA4\u6613\u7684ID\u6570\u636E\uFF0C\u68C0\u67E5\u662F\u5426\u5B58\u5728\uFF0C\u7136\u540E\u83B7\u53D6\u4EA4\u6613\u8BFB\u5199\u96C6\uFF0C\u5E76\u68C0\u67E5\u5199\u96C6\u7684\u5408\u6CD5\u6027\uFF0C\u8C03\u7528<code>VSCC</code>\u9A8C\u8BC1\u4EA4\u6613\u80CC\u4E66\u7B56\u7565\uFF0C\u63A5\u7740\u83B7\u53D6\u4EA4\u6613\u94FE\u7801\u5B9E\u4F8B\uFF0C\u5E76\u8BBE\u7F6E\u8C03\u7528\u94FE\u7801\u5B9E\u4F8B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>txID <span class="token operator">=</span> chdr<span class="token punctuation">.</span>TxId
<span class="token comment">// \u4ECE\u8D26\u672C\u83B7\u53D6\u6307\u5B9A\u4EA4\u6613\u7684ID\u6570\u636E\uFF0C\u68C0\u67E5\u662F\u5426\u5B58\u5728</span>
<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> v<span class="token punctuation">.</span>support<span class="token punctuation">.</span><span class="token function">Ledger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetTransactionByID</span><span class="token punctuation">(</span>txID<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u83B7\u53D6\u4EA4\u6613\u8BFB\u5199\u96C6\uFF0C\u5E76\u68C0\u67E5\u5199\u96C6\u7684\u5408\u6CD5\u6027\uFF0C\u8C03\u7528VSCC\u9A8C\u8BC1\u4EA4\u6613\u80CC\u4E66\u7B56\u7565</span>
err<span class="token punctuation">,</span> cde <span class="token operator">:=</span> v<span class="token punctuation">.</span>vscc<span class="token punctuation">.</span><span class="token function">VSCCValidateTx</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> d<span class="token punctuation">,</span> env<span class="token punctuation">)</span>
i<span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment">// \u83B7\u53D6\u4EA4\u6613\u94FE\u7801\u5B9E\u4F8B</span>
invokeCC<span class="token punctuation">,</span> upgradeCC<span class="token punctuation">,</span> err <span class="token operator">:=</span> v<span class="token punctuation">.</span><span class="token function">getTxCCInstance</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
<span class="token operator">...</span>
<span class="token comment">// \u8BBE\u7F6E\u8C03\u7528\u94FE\u7801\u5B9E\u4F8B</span>
txsChaincodeName <span class="token operator">=</span> invokeCC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.2 <em>\u901A\u9053\u914D\u7F6E\u4EA4\u6613\u6D88\u606F</em></p><p>\u5148\u89E3\u6790\u83B7\u53D6\u914D\u7F6E\u4EA4\u6613\u5BF9\u8C61\uFF0C\u7136\u540E\u66F4\u65B0\u901A\u9053\u914D\u7F6E\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u901A\u9053\u914D\u7F6E\u4EA4\u6613\u6D88\u606F\uFF0C\u89E3\u6790\u83B7\u53D6\u914D\u7F6E\u4EA4\u6613\u5BF9\u8C61</span>
configEnvelope<span class="token punctuation">,</span> err <span class="token operator">:=</span> configtx<span class="token punctuation">.</span><span class="token function">UnmarshalConfigEnvelope</span><span class="token punctuation">(</span>payload<span class="token punctuation">.</span>Data<span class="token punctuation">)</span>
<span class="token operator">...</span>
<span class="token comment">// \u66F4\u65B0\u901A\u9053\u914D\u7F6E</span>
<span class="token keyword">if</span> err <span class="token operator">:=</span> v<span class="token punctuation">.</span>support<span class="token punctuation">.</span><span class="token function">Apply</span><span class="token punctuation">(</span>configEnvelope<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
 <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.3 \u5982\u679C\u662F<em>Peer\u8D44\u6E90\u66F4\u65B0\u6D88\u606F</em>\uFF0C\u76F4\u63A5\u6784\u9020<code>blockValidationResult</code>\u8FD4\u56DE</p><p>\u2465\uFF1A<em>\u5E8F\u5217\u5316\u5C01\u88C5\u4EA4\u6613Envelope\u7ED3\u6784\u5BF9\u8C61</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> proto<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">Warningf</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot marshal transaction: %s&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			results <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>blockValidationResult<span class="token punctuation">{</span>
				tIdx<span class="token punctuation">:</span>           tIdx<span class="token punctuation">,</span>
				validationCode<span class="token punctuation">:</span> peer<span class="token punctuation">.</span>TxValidationCode_MARSHAL_TX_ERROR<span class="token punctuation">,</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2466\uFF1A<em>\u6700\u540E\u901A\u8FC7\u4E86\u4EA4\u6613\uFF0C\u57FA\u4E8E\u4E0A\u8FF0\u53C2\u6570\u6784\u9020\u533A\u5757\u9A8C\u8BC1\u7ED3\u679C\u5BF9\u8C61</em></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>results <span class="token operator">&lt;-</span> <span class="token operator">&amp;</span>blockValidationResult<span class="token punctuation">{</span>
			tIdx<span class="token punctuation">:</span>                 tIdx<span class="token punctuation">,</span>
			txsChaincodeName<span class="token punctuation">:</span>     txsChaincodeName<span class="token punctuation">,</span>
			txsUpgradedChaincode<span class="token punctuation">:</span> txsUpgradedChaincode<span class="token punctuation">,</span>
			validationCode<span class="token punctuation">:</span>       peer<span class="token punctuation">.</span>TxValidationCode_VALID<span class="token punctuation">,</span>
			txid<span class="token punctuation">:</span>                 txID<span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8D26\u672C\u63D0\u4EA4\u5668" tabindex="-1"><a class="header-anchor" href="#\u8D26\u672C\u63D0\u4EA4\u5668" aria-hidden="true">#</a> \u8D26\u672C\u63D0\u4EA4\u5668</h2><p>\u8D26\u672C\u63D0\u4EA4\u5668\u7684<code>LedgerCommitter.CommitWithPvtData()</code>\u65B9\u6CD5\u8D1F\u8D23\u6267\u884C\u5177\u4F53\u7684\u8D26\u672C\u63D0\u4EA4\u5DE5\u4F5C\u3002\u8BE5\u65B9\u6CD5\u9996\u5148\u8C03\u7528<code>LedgerCommitter</code>\u5BF9\u8C61\u7684<code>lc.preCommit(blockAndPvtData.Block)</code>\u65B9\u6CD5\uFF0C\u9884\u5904\u7406\u5F85\u63D0\u4EA4\u7684\u533A\u5757\u6570\u636E\uFF0C\u5BF9\u4E8E\u914D\u7F6E\u533A\u5757\u6267\u884C\u81EA\u5B9A\u4E49<code>lc.eventer(block)</code>\u56DE\u8C03\u51FD\u6570\uFF0C\u5373\u4ECE\u5F53\u524D\u533A\u5757\u4E2D\u89E3\u6790\u51FA\u94FEID\uFF0C\u518D\u8C03\u7528<code>SetCurrConfigBlock</code>()\u51FD\u6570\uFF0C\u4ECE\u672C\u5730\u94FE\u7ED3\u6784\u5B57\u5178\u4E2D\u83B7\u53D6\u5173\u8054\u7684\u94FE\u7ED3\u6784<code>chains.list[cid]</code>\u5E76\u66F4\u65B0\u5176\u6700\u65B0\u7684\u914D\u7F6E\u533A\u5757\u3002\u63A5\u7740\uFF0C\u8C03\u7528<code>lc.PeerLedger.CommitWithPvtData(blockAndPvtData)\u2192kvLedger.CommitWithPvtData()</code>\u65B9\u6CD5\u63D0\u4EA4\u6570\u636E\u5230\u8D26\u672C\u4E2D\uFF0C\u8FD9\u662F\u8D26\u672C\u63D0\u4EA4\u5668\u7684\u6838\u5FC3\u5DE5\u4F5C\u65B9\u6CD5\u3002\u5F53\u6210\u529F\u63D0\u4EA4\u8D26\u672C\u540E\uFF0C\u8C03\u7528<code>lc.postCommit(blockAndPvtData.Block)</code>\u65B9\u6CD5\uFF0C\u57FA\u4E8E\u8BE5\u533A\u5757\u521B\u5EFA\u533A\u5757\u4E8B\u4EF6\u4E0E\u8FC7\u6EE4\u533A\u5757\u4E8B\u4EF6\uFF0C\u5E76\u6267\u884C<code>producer.Send()</code>\u65B9\u6CD5\u5C06\u4E24\u4E2A\u4E8B\u4EF6\u53D1\u9001\u5230\u4E8B\u4EF6\u670D\u52A1\u5668\uFF0C\u901A\u77E5\u8BA2\u9605\u5BA2\u6237\u7AEF\u6709\u65B0\u533A\u5757\u5230\u8FBE\u3002</p><p>\u8FDB\u5165\u5230<code>CommitWithPvtData</code>()\u65B9\u6CD5\u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>kvLedger<span class="token punctuation">)</span> <span class="token function">CommitWithPvtData</span><span class="token punctuation">(</span>pvtdataAndBlock <span class="token operator">*</span>ledger<span class="token punctuation">.</span>BlockAndPvtData<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> err <span class="token builtin">error</span>
	block <span class="token operator">:=</span> pvtdataAndBlock<span class="token punctuation">.</span>Block                 <span class="token comment">// \u83B7\u53D6\u533A\u5757\u5BF9\u8C61</span>
	blockNo <span class="token operator">:=</span> pvtdataAndBlock<span class="token punctuation">.</span>Block<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>Number <span class="token comment">// \u83B7\u53D6\u533A\u5757\u53F7</span>
	<span class="token comment">// \u9A8C\u8BC1\u5E76\u51C6\u5907\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5BF9\u8C61</span>
	err <span class="token operator">=</span> l<span class="token punctuation">.</span>txtmgmt<span class="token punctuation">.</span><span class="token function">ValidateAndPrepare</span><span class="token punctuation">(</span>pvtdataAndBlock<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
	<span class="token operator">...</span>
	<span class="token comment">//\u63D0\u4EA4\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5230\u8D26\u672C\u4E2D</span>
	<span class="token keyword">if</span> err <span class="token operator">=</span> l<span class="token punctuation">.</span>blockStore<span class="token punctuation">.</span><span class="token function">CommitWithPvtData</span><span class="token punctuation">(</span>pvtdataAndBlock<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token operator">...</span>	
	<span class="token keyword">if</span> err <span class="token operator">=</span> l<span class="token punctuation">.</span>txtmgmt<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u6709\u6548\u4EA4\u6613\u6570\u636E\u5230\u72B6\u6001\u6570\u636E\u5E93</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">\`Error during commit to txmgr:%s\`</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> ledgerconfig<span class="token punctuation">.</span><span class="token function">IsHistoryDBEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Channel [%s]: Committing block [%d] transactions to history database&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span>ledgerID<span class="token punctuation">,</span> blockNo<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>historyDB<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u533A\u5757\u6570\u636E\u5230\u5386\u53F2\u6570\u636E\u5E93</span>
			<span class="token function">panic</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">\`Error during commit to history db:%s\`</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u51FD\u6570\u4E3B\u8981\u4E5F\u5C31\u505A\u4E86\u4EE5\u4E0B\u6BD4\u8F83\u5173\u952E\u7684\u4E8B\u60C5\uFF1A</p><ul><li><code>ValidateAndPrepare</code>:\u9A8C\u8BC1\u5E76\u51C6\u5907\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5BF9\u8C61</li><li><code>CommitWithPvtData</code>:\u63D0\u4EA4\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5230\u8D26\u672C\u4E2D</li><li><code>txtmgmt.Commit()</code>:\u66F4\u65B0\u6709\u6548\u4EA4\u6613\u6570\u636E\u5230\u72B6\u6001\u6570\u636E\u5E93</li><li><code>l.historyDB.Commit(block)</code>:\u66F4\u65B0\u533A\u5757\u6570\u636E\u5230\u5386\u53F2\u6570\u636E\u5E93</li></ul><p>\u63A5\u4E0B\u6765\u5C06\u5206\u522B\u4ECB\u7ECD\u8FD9\u4E9B\u529F\u80FD\u7684\u7EC6\u8282\u3002</p><h3 id="\u9A8C\u8BC1\u5E76\u51C6\u5907\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u5E76\u51C6\u5907\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5BF9\u8C61" aria-hidden="true">#</a> \u9A8C\u8BC1\u5E76\u51C6\u5907\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5BF9\u8C61</h3><p>\u51FD\u6570\u8C03\u7528\uFF1A</p><blockquote><p>err = l.txtmgmt.ValidateAndPrepare(pvtdataAndBlock, true)</p><p>-&gt; batch, err := txmgr.validator.ValidateAndPrepareBatch(blockAndPvtdata, doMVCCValidation)</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">validateAndPreparePvtBatch</span><span class="token punctuation">(</span>block <span class="token operator">*</span>valinternal<span class="token punctuation">.</span>Block<span class="token punctuation">,</span> pvtdata <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint64</span><span class="token punctuation">]</span><span class="token operator">*</span>ledger<span class="token punctuation">.</span>TxPvtData<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>privacyenabledstate<span class="token punctuation">.</span>PvtUpdateBatch<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pvtUpdates <span class="token operator">:=</span> privacyenabledstate<span class="token punctuation">.</span><span class="token function">NewPvtUpdateBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tx <span class="token operator">:=</span> <span class="token keyword">range</span> block<span class="token punctuation">.</span>Txs <span class="token punctuation">{</span>
		<span class="token keyword">if</span> tx<span class="token punctuation">.</span>ValidationCode <span class="token operator">!=</span> peer<span class="token punctuation">.</span>TxValidationCode_VALID <span class="token punctuation">{</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token operator">!</span>tx<span class="token punctuation">.</span><span class="token function">ContainsPvtWrites</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		txPvtdata <span class="token operator">:=</span> pvtdata<span class="token punctuation">[</span><span class="token function">uint64</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span>IndexInBlock<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// \u83B7\u53D6\u6307\u5B9A\u4EA4\u6613\u7684\u9690\u79C1\u6570\u636E</span>
		<span class="token keyword">if</span> txPvtdata <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>                         <span class="token comment">// \u8DF3\u8FC7\u6CA1\u6709\u9690\u79C1\u6570\u636E\u7684\u4EA4\u6613</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u68C0\u67E5\u662F\u5426\u9700\u8981\u9A8C\u8BC1\u9690\u79C1\u6570\u636E\uFF0C\u9ED8\u8BA4\u90FD\u8FD4\u56DEtrue</span>
		<span class="token keyword">if</span> <span class="token function">requiresPvtdataValidation</span><span class="token punctuation">(</span>txPvtdata<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u9A8C\u8BC1\u9690\u79C1\u6570\u636E\u54C8\u5E0C\u503C\u662F\u5426\u5339\u914D</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">validatePvtdata</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> txPvtdata<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">var</span> pvtRWSet <span class="token operator">*</span>rwsetutil<span class="token punctuation">.</span>TxPvtRwSet
		<span class="token keyword">var</span> err <span class="token builtin">error</span>
		<span class="token comment">// \u89E3\u6790\u9690\u79C1\u6570\u636E\u5199\u96C6\u5408</span>
		<span class="token keyword">if</span> pvtRWSet<span class="token punctuation">,</span> err <span class="token operator">=</span> rwsetutil<span class="token punctuation">.</span><span class="token function">TxPvtRwSetFromProtoMsg</span><span class="token punctuation">(</span>txPvtdata<span class="token punctuation">.</span>WriteSet<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
		<span class="token punctuation">}</span>
		<span class="token comment">// \u6DFB\u52A0\u5230\u9690\u79C1\u6570\u636E\u66F4\u65B0\u6279\u91CF\u64CD\u4F5C</span>
		<span class="token function">addPvtRWSetToPvtUpdateBatch</span><span class="token punctuation">(</span>pvtRWSet<span class="token punctuation">,</span> pvtUpdates<span class="token punctuation">,</span> version<span class="token punctuation">.</span><span class="token function">NewHeight</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>Num<span class="token punctuation">,</span> <span class="token function">uint64</span><span class="token punctuation">(</span>tx<span class="token punctuation">.</span>IndexInBlock<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> pvtUpdates<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u904D\u5386\u5F53\u524D\u5185\u90E8\u533A\u5757\u7684\u4EA4\u6613\u5217\u8868<code>block.Txs</code>\uFF0C\u5BF9\u4E8E\u5176\u4E2D\u7684\u6BCF\u4E2A\u4EA4\u6613\u5BF9\u8C61tx\uFF0C\u9700\u8981\u8FC7\u6EE4\u6389\u5982\u4E0B\u4E09\u7C7B\u4EA4\u6613\u3002</p><ul><li>\u4EA4\u6613\u9A8C\u8BC1\u7801\u4E0D\u4E3A<code>TxValidationCode_VALID</code>\u7684\u65E0\u6548\u4EA4\u6613</li><li>\u4E0D\u5B58\u5728\u9690\u79C1\u6570\u636E\u5199\u6570\u636E\u54C8\u5E0C\u503C\u7684\u4EA4\u6613</li><li>\u65E0\u9690\u79C1\u6570\u636E\u7684\u4EA4\u6613</li></ul><p>\u5982\u679C\u4EA4\u6613\u901A\u8FC7\u4E86\u4E0A\u8FF0\u68C0\u67E5\uFF0C\u5219\u5BF9\u4E8E\u5408\u6CD5\u6709\u6548\u7684\u4EA4\u6613tx\u53CA\u5176\u9690\u79C1\u6570\u636EtxPvtdata\uFF08TxPvt-Data\u7C7B\u578B\uFF09\uFF0C\u8C03\u7528<code>validatePvtdata(tx\uFF0CtxPvtdata)</code>\u65B9\u6CD5\uFF0C\u4EE5\u9A8C\u8BC1\u9690\u79C1\u6570\u636E\u54C8\u5E0C\u503C\u7684\u6B63\u786E\u6027\uFF0C\u56E0\u4E3A\u9690\u79C1\u6570\u636E\u90FD\u662F\u7531<code>Endorser</code>\u80CC\u4E66\u8282\u70B9\u751F\u6210\u7684\uFF0C\u9700\u8981\u68C0\u67E5\u4F20\u64AD\u540E\u7684\u6570\u636E\u662F\u5426\u88AB\u7BE1\u6539\u8FC7\u3002\u5927\u81F4\u7684\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">validatePvtdata</span><span class="token punctuation">(</span>tx <span class="token operator">*</span>valinternal<span class="token punctuation">.</span>Transaction<span class="token punctuation">,</span> pvtdata <span class="token operator">*</span>ledger<span class="token punctuation">.</span>TxPvtData<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> nsPvtdata <span class="token operator">:=</span> <span class="token keyword">range</span> pvtdata<span class="token punctuation">.</span>WriteSet<span class="token punctuation">.</span>NsPvtRwset <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> collPvtdata <span class="token operator">:=</span> <span class="token keyword">range</span> nsPvtdata<span class="token punctuation">.</span>CollectionPvtRwset <span class="token punctuation">{</span>
			<span class="token comment">// \u57FA\u4E8E\u539F\u59CB\u6570\u636E\u8BA1\u7B97\u9690\u79C1\u6570\u636E\u54C8\u5E0C\u503C</span>
			collPvtdataHash <span class="token operator">:=</span> util<span class="token punctuation">.</span><span class="token function">ComputeHash</span><span class="token punctuation">(</span>collPvtdata<span class="token punctuation">.</span>Rwset<span class="token punctuation">)</span>
			<span class="token comment">// \u83B7\u53D6 \u4EA4\u6613\u4E2D\u7684\u6570\u636E\u54C8\u5E0C\u503C</span>
			hashInPubdata <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">RetrieveHash</span><span class="token punctuation">(</span>nsPvtdata<span class="token punctuation">.</span>Namespace<span class="token punctuation">,</span> collPvtdata<span class="token punctuation">.</span>CollectionName<span class="token punctuation">)</span>
			<span class="token comment">// \u6BD4\u8F83\u9690\u79C1\u6570\u636E\u54C8\u5E0C\u503C</span>
			<span class="token keyword">if</span> <span class="token operator">!</span>bytes<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>collPvtdataHash<span class="token punctuation">,</span> hashInPubdata<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token operator">...</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D0\u4EA4\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5230\u8D26\u672C\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4EA4\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5230\u8D26\u672C\u4E2D" aria-hidden="true">#</a> \u63D0\u4EA4\u533A\u5757\u548C\u9690\u79C1\u6570\u636E\u5230\u8D26\u672C\u4E2D</h3><p>\u51FD\u6570\u8C03\u7528\uFF1A<strong>l.blockStore.CommitWithPvtData(pvtdataAndBlock)</strong></p><blockquote><p>core/ledger/ledgerstorage/store.go/CommitWithPvtData</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Store<span class="token punctuation">)</span> <span class="token function">CommitWithPvtData</span><span class="token punctuation">(</span>blockAndPvtdata <span class="token operator">*</span>ledger<span class="token punctuation">.</span>BlockAndPvtData<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> blockAndPvtdata<span class="token punctuation">.</span>BlockPvtData <span class="token punctuation">{</span>
		<span class="token comment">// \u6DFB\u52A0\u9690\u79C1\u6570\u636E\u5230\u9690\u79C1\u6570\u636E\u5217\u8868pvtdata</span>
		pvtdata <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>pvtdata<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u51C6\u5907\u5C06\u9690\u79C1\u6570\u636E\u5217\u8868pvtdata\u63D0\u4EA4\u5230\u8D26\u672C\u4E2D\uFF0C\u5148\u63D0\u4EA4\u518D\u786E\u8BA4</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>pvtdataStore<span class="token punctuation">.</span><span class="token function">Prepare</span><span class="token punctuation">(</span>blockAndPvtdata<span class="token punctuation">.</span>Block<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> pvtdata<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token comment">// \u63D0\u4EA4\u533A\u5757\u5230\u8D26\u672C\u4E2D</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">AddBlock</span><span class="token punctuation">(</span>blockAndPvtdata<span class="token punctuation">.</span>Block<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		s<span class="token punctuation">.</span>pvtdataStore<span class="token punctuation">.</span><span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token comment">// \u786E\u8BA4\u63D0\u4EA4\u9690\u79C1\u6570\u636E</span>
	<span class="token keyword">return</span> s<span class="token punctuation">.</span>pvtdataStore<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u6982\u5C31\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><ol><li>\u51C6\u5907\u63D0\u4EA4\u9690\u79C1\u6570\u636E\uFF1A<code>Prepare</code></li><li>\u63D0\u4EA4\u533A\u5757\u6570\u636E\uFF1A<code>s.AddBlock</code></li><li>\u786E\u8BA4\u63D0\u4EA4\u9690\u79C1\u6570\u636E\uFF1A<code>s.pvtdataStore.Commit()</code></li></ol><p>\u2460\uFF1A\u51C6\u5907\u63D0\u4EA4\u9690\u79C1\u6570\u636E</p><p>\u901A\u8FC7\u9690\u79C1\u6570\u636E\u5B58\u50A8\u5BF9\u8C61\u8C03\u7528s.pvtdataStore.Prepare()\u2192store.Prepare()\u65B9\u6CD5\uFF0C\u5C06pvtdata\u5217\u8868\u4E2D\u7684\u6BCF\u4E2A\u9690\u79C1\u6570\u636E\u5BF9\u8C61\u91CD\u65B0\u7F16\u7801\u5E76\u6784\u6210KV\u952E\u503C\u5BF9\uFF0C\u6DFB\u52A0\u5230\u8D26\u672C\u4E0A\u9690\u79C1\u6570\u636E\u5E93\u7684\u66F4\u65B0\u6279\u91CF\u64CD\u4F5C\u4E2D\uFF0C\u5E76\u540C\u6B65\u66F4\u65B0\u5230\u6570\u636E\u5E93\u4E2D\u3002\u6700\u540E\uFF0C\u7B49\u5F85\u533A\u5757\u6570\u636E\u63D0\u4EA4\u64CD\u4F5C\u786E\u8BA4\u540E\uFF0C\u6839\u636E\u63D0\u4EA4\u7ED3\u679C\u72B6\u6001\u786E\u8BA4\u63D0\u4EA4\u6216\u56DE\u6EDA\u6062\u590D\u9690\u79C1\u6570\u636E\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>store<span class="token punctuation">)</span> <span class="token function">Prepare</span><span class="token punctuation">(</span>blockNum <span class="token builtin">uint64</span><span class="token punctuation">,</span> pvtData <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>ledger<span class="token punctuation">.</span>TxPvtData<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u68C0\u67E5\u5408\u6CD5\u6027\uFF0C\u6267\u884CPrepare()\u65F6\u5E94\u8BE5\u662Ffalse\uFF0C\u56E0\u4E3ACommit\u548CRollback\u64CD\u4F5C\u4F1A\u91CD\u7F6E\u8BE5\u6807\u5FD7\u4F4D</span>
	<span class="token keyword">if</span> s<span class="token punctuation">.</span>batchPending <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token operator">&amp;</span>ErrIllegalCall<span class="token punctuation">{</span><span class="token string">\`A pending batch exists as as result of last invoke to &quot;Prepare&quot; call.
			 Invoke &quot;Commit&quot; or &quot;Rollback&quot; on the pending batch before invoking &quot;Prepare&quot; function\`</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u83B7\u53D6\u4E0B\u4E00\u4E2A\u533A\u5757\u53F7</span>
	expectedBlockNum <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">nextBlockNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u68C0\u67E5\u533A\u5757\u53F7\u7684\u5408\u6CD5\u6027</span>
	<span class="token keyword">if</span> expectedBlockNum <span class="token operator">!=</span> blockNum <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token operator">&amp;</span>ErrIllegalArgs<span class="token punctuation">{</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;Expected block number=%d, recived block number=%d&quot;</span><span class="token punctuation">,</span> expectedBlockNum<span class="token punctuation">,</span> blockNum<span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u521B\u5EFA\u6570\u636E\u5E93\u66F4\u65B0\u64CD\u4F5C\u96C6\u5408batch\uFF0C\u8BB0\u5F55\u6240\u6709\u9700\u8981\u5220\u9664\u6216\u589E\u52A0\u6570\u636E\u7684key\u952E</span>
	batch <span class="token operator">:=</span> leveldbhelper<span class="token punctuation">.</span><span class="token function">NewUpdateBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> key<span class="token punctuation">,</span> value <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	<span class="token keyword">var</span> err <span class="token builtin">error</span>
	<span class="token comment">// \u904D\u5386\u9690\u79C1\u6570\u636E\u5217\u8868\uFF0C\u6784\u9020\u8BE5\u9690\u79C1\u6570\u636EKV\u952E\u503C\u5BF9</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> txPvtData <span class="token operator">:=</span> <span class="token keyword">range</span> pvtData <span class="token punctuation">{</span>
		<span class="token comment">// \u904D\u5386\u9690\u79C1\u6570\u636E\u5217\u8868\uFF0C\u6784\u9020\u8BE5\u9690\u79C1\u6570\u636EKV\u952E\u503C\u5BF9</span>
		key <span class="token operator">=</span> <span class="token function">encodePK</span><span class="token punctuation">(</span>blockNum<span class="token punctuation">,</span> txPvtData<span class="token punctuation">.</span>SeqInBlock<span class="token punctuation">)</span>
		<span class="token keyword">if</span> value<span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">encodePvtRwSet</span><span class="token punctuation">(</span>txPvtData<span class="token punctuation">.</span>WriteSet<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u6784\u9020value\u503C\uFF1A\u9690\u79C1\u6570\u636E\u5199\u96C6\u5408</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>
		logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Adding private data to LevelDB batch for block [%d], tran [%d]&quot;</span><span class="token punctuation">,</span> blockNum<span class="token punctuation">,</span> txPvtData<span class="token punctuation">.</span>SeqInBlock<span class="token punctuation">)</span>
		<span class="token comment">// \u6DFB\u52A0\u9690\u79C1\u6570\u636E\u952E\u503C\u5BF9\u7684\u64CD\u4F5C</span>
		batch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u6DFB\u52A0pendingCommitKey\u952E\u503C\u5BF9\u7684\u64CD\u4F5C</span>
	batch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>pendingCommitKey<span class="token punctuation">,</span> emptyValue<span class="token punctuation">)</span>
	<span class="token comment">// \u540C\u6B65\u6267\u884C\u6570\u636E\u5E93\u7684\u66F4\u65B0\u64CD\u4F5C\u96C6\u5408</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> s<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">WriteBatch</span><span class="token punctuation">(</span>batch<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token comment">// \u66F4\u65B0\u72B6\u6001\u6807\u5FD7\u4F4D</span>
	s<span class="token punctuation">.</span>batchPending <span class="token operator">=</span> <span class="token boolean">true</span>
	logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Saved %d private data write sets for block [%d]&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>pvtData<span class="token punctuation">)</span><span class="token punctuation">,</span> blockNum<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u2461\uFF1A\u63D0\u4EA4\u533A\u5757\u6570\u636E</p><p>\u8C03\u7528<code>s.AddBlock(blockAndPvtdata.Block)</code>\u65B9\u6CD5\uFF0C\u5B9E\u9645\u4E0A\u662F\u901A\u8FC7\u533A\u5757\u6587\u4EF6\u7BA1\u7406\u5668\uFF0C\u8C03\u7528<code>blockfileMgr.addBlock()</code>\u65B9\u6CD5\uFF0C\u63D0\u4EA4\u65B0\u533A\u5757<code>blockAndPvt-data.Block</code>\u5230\u533A\u5757\u6570\u636E\u6587\u4EF6\u4E2D\uFF0C\u5E76\u4FDD\u5B58\u65B0\u7684\u533A\u5757\u68C0\u67E5\u70B9\u4FE1\u606F<code>newCPInfo</code>\u3002\u63A5\u7740\uFF0C\u8C03\u7528<code>indexBlock()</code>\u65B9\u6CD5\uFF0C\u5EFA\u7ACB\u5F53\u524D\u533A\u5757\u7684\u7D22\u5F15\u4FE1\u606F\u4E0E\u7D22\u5F15\u68C0\u67E5\u70B9\u4FE1\u606F\uFF08\u5F53\u524D\u533A\u5757\u53F7\u7B49\uFF09\uFF0C\u66F4\u65B0\u5230\u533A\u5757\u7D22\u5F15\u6570\u636E\u5E93\u4E2D\u3002\u7136\u540E\uFF0C\u8C03\u7528<code>mgr.updateCheckpoint(newCPInfo)</code>\u65B9\u6CD5\uFF0C\u66F4\u65B0\u533A\u5757\u6587\u4EF6\u7BA1\u7406\u5668\u4E0A\u7684\u533A\u5757\u68C0\u67E5\u70B9\u4FE1\u606F\uFF0C\u518D\u6267\u884Cmgr.cpInfoCond.Broadcast()\u65B9\u6CD5\uFF0C\u5E7F\u64AD\u5524\u9192\u6240\u6709\u7B49\u5F85\u8BE5\u540C\u6B65\u6761\u4EF6\u53D8\u91CF\u7684\u7A0B\u5E8F\uFF0C\u901A\u77E5\u5DF2\u6709\u65B0\u533A\u5757\u63D0\u4EA4\u5230\u8D26\u672C\u4E2D\u3002\u6700\u540E\uFF0C\u8C03\u7528<code>mgr.updateBlockchain-Info()</code>\u65B9\u6CD5\uFF0C\u66F4\u65B0\u533A\u5757\u94FE\u4FE1\u606F\uFF0C\u5982\u6700\u65B0\u533A\u5757\u9AD8\u5EA6\u3001\u6700\u65B0\u533A\u5757\u5934\u54C8\u5E0C\u503C\u7B49\u3002</p><p>\u2462\uFF1A\u786E\u8BA4\u63D0\u4EA4\u9690\u79C1\u6570\u636E</p><p>\u8C03\u7528 <code>s.pvtdataStore.Commit()</code>\u65B9\u6CD5\uFF0C\u6267\u884C\u9690\u79C1\u6570\u636E\u7684\u63D0\u4EA4\u786E\u8BA4\u64CD\u4F5C\u3002\u7531\u4E8E\u524D\u9762\u7684<code>Prepare()</code>\u65B9\u6CD5\u5DF2\u7ECF\u66F4\u65B0\u4E86\u6240\u6709\u7684\u9690\u79C1\u6570\u636E\u952E\u503C\u5BF9\u5230\u6570\u636E\u5E93\u4E2D\uFF0C\u56E0\u6B64\uFF0C\u8BE5\u65B9\u6CD5\u5B9E\u9645\u4E0A\u662F\u5728\u9690\u79C1\u6570\u636E\u5E93\u4E0A\u5220\u9664<code>pendingCommitKey</code>\u952E\u503C\u5BF9\uFF0C\u5E76\u6DFB\u52A0<code>lastCommittedBlkkey</code>\u952E\u503C\u5BF9\uFF0C\u4EE5\u4FDD\u5B58\u6700\u8FD1\u63D0\u4EA4\u6210\u529F\u7684\u533A\u5757\u53F7<code>committingBlockNum</code>\u3002\u6700\u540E\uFF0C\u66F4\u65B0\u9690\u79C1\u6570\u636E\u76F8\u5173\u6807\u5FD7\u4F4D\u4E0E\u53D8\u91CF\uFF0C\u5C06\u7B49\u5F85\u63D0\u4EA4\u786E\u8BA4\u6807\u5FD7\u4F4DbatchPending\u4E0E\u6807\u5FD7\u4F4D<code>isEmpty</code>\u8BBE\u7F6E\u4E3A<code>false</code>\uFF0C\u5C06<code>lastCommitted-Block</code>\u66F4\u65B0\u4E3A\u63D0\u4EA4\u8D26\u672C\u7684\u533A\u5757\u53F7<code>committingBlockNum</code>\u3002</p><p>\u5982\u679C\u63D0\u4EA4\u533A\u5757\u6570\u636E\u5931\u8D25\uFF0C\u5219<code>CommitWithPvtData()</code>\u5C06\u901A\u8FC7\u9690\u79C1\u6570\u636E\u5B58\u50A8\u5BF9\u8C61\u8C03\u7528s.pvt-dataStore.Rollback()\u65B9\u6CD5\u6267\u884C\u56DE\u6EDA\u64CD\u4F5C\uFF0C\u5C06\u5DF2\u63D0\u4EA4\u7684\u9690\u79C1\u6570\u636E\u6062\u590D\u5230\u63D0\u4EA4\u6570\u636E\u5E93\u4E4B\u524D\u7684\u72B6\u6001\u3002</p><h3 id="\u63D0\u4EA4\u6570\u636E\u5230\u72B6\u6001\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4EA4\u6570\u636E\u5230\u72B6\u6001\u6570\u636E\u5E93" aria-hidden="true">#</a> \u63D0\u4EA4\u6570\u636E\u5230\u72B6\u6001\u6570\u636E\u5E93</h3><p>\u5165\u53E3\uFF1A<strong>core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go/ Commit()</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>txmgr <span class="token operator">*</span>LockBasedTxMgr<span class="token punctuation">)</span> <span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> txmgr<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">ApplyPrivacyAwareUpdates</span><span class="token punctuation">(</span>txmgr<span class="token punctuation">.</span>batch<span class="token punctuation">,</span>
		version<span class="token punctuation">.</span><span class="token function">NewHeight</span><span class="token punctuation">(</span>txmgr<span class="token punctuation">.</span>currentBlock<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>Number<span class="token punctuation">,</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>txmgr<span class="token punctuation">.</span>currentBlock<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Data<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token operator">...</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>CommonStorageDB<span class="token punctuation">)</span> <span class="token function">ApplyPrivacyAwareUpdates</span><span class="token punctuation">(</span>updates <span class="token operator">*</span>UpdateBatch<span class="token punctuation">,</span> height <span class="token operator">*</span>version<span class="token punctuation">.</span>Height<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token function">addPvtUpdates</span><span class="token punctuation">(</span>updates<span class="token punctuation">.</span>PubUpdates<span class="token punctuation">,</span> updates<span class="token punctuation">.</span>PvtUpdates<span class="token punctuation">)</span>
	<span class="token function">addHashedUpdates</span><span class="token punctuation">(</span>updates<span class="token punctuation">.</span>PubUpdates<span class="token punctuation">,</span> updates<span class="token punctuation">.</span>HashUpdates<span class="token punctuation">,</span> <span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">BytesKeySuppoted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> s<span class="token punctuation">.</span>VersionedDB<span class="token punctuation">.</span><span class="token function">ApplyUpdates</span><span class="token punctuation">(</span>updates<span class="token punctuation">.</span>PubUpdates<span class="token punctuation">.</span>UpdateBatch<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u7EC8\u4F1A\u8FDB\u5165\u5230\u4E0B\u9762\u7684\u51FD\u6570\u4E2D\uFF1A</p><blockquote><p>core/ledger/kvledger/txmgmt/statedb/stateleveldb/stateleveldb.go</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>vdb <span class="token operator">*</span>versionedDB<span class="token punctuation">)</span> <span class="token function">ApplyUpdates</span><span class="token punctuation">(</span>batch <span class="token operator">*</span>statedb<span class="token punctuation">.</span>UpdateBatch<span class="token punctuation">,</span> height <span class="token operator">*</span>version<span class="token punctuation">.</span>Height<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	dbBatch <span class="token operator">:=</span> leveldbhelper<span class="token punctuation">.</span><span class="token function">NewUpdateBatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	namespaces <span class="token operator">:=</span> batch<span class="token punctuation">.</span><span class="token function">GetUpdatedNamespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ns <span class="token operator">:=</span> <span class="token keyword">range</span> namespaces <span class="token punctuation">{</span>
		updates <span class="token operator">:=</span> batch<span class="token punctuation">.</span><span class="token function">GetUpdates</span><span class="token punctuation">(</span>ns<span class="token punctuation">)</span>
		<span class="token keyword">for</span> k<span class="token punctuation">,</span> vv <span class="token operator">:=</span> <span class="token keyword">range</span> updates <span class="token punctuation">{</span>
			compositeKey <span class="token operator">:=</span> <span class="token function">constructCompositeKey</span><span class="token punctuation">(</span>ns<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
			logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Channel [%s]: Applying key(string)=[%s] key(bytes)=[%#v]&quot;</span><span class="token punctuation">,</span> vdb<span class="token punctuation">.</span>dbName<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>compositeKey<span class="token punctuation">)</span><span class="token punctuation">,</span> compositeKey<span class="token punctuation">)</span>

			<span class="token keyword">if</span> vv<span class="token punctuation">.</span>Value <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				dbBatch<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>compositeKey<span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				dbBatch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>compositeKey<span class="token punctuation">,</span> statedb<span class="token punctuation">.</span><span class="token function">EncodeValue</span><span class="token punctuation">(</span>vv<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> vv<span class="token punctuation">.</span>Version<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	dbBatch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>savePointKey<span class="token punctuation">,</span> height<span class="token punctuation">.</span><span class="token function">ToBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token comment">// Setting snyc to true as a precaution, false may be an ok optimization after further testing.</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> vdb<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">WriteBatch</span><span class="token punctuation">(</span>dbBatch<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ApplyUpdates()</code>\u65B9\u6CD5\u4E3B\u8981\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B\uFF1A</p><ol><li>\u904D\u5386\u66F4\u65B0\u6279\u91CF\u64CD\u4F5C\uFF0C\u5BF9\u4E8E\u5176\u5305\u542B\u7684\u952E\u503C\u5BF9\uFF08\u952Ek\u4E0E\u503Cvv\uFF09\uFF0C\u8C03\u7528<code>constructCompositeKey(ns\uFF0Ck)</code>\u65B9\u6CD5\u91CD\u65B0\u6784\u9020\u7EC4\u5408\u952E<code>compositeKey</code></li><li>\u68C0\u67E5\u8BE5\u952E\u503C\u5BF9\u64CD\u4F5C\u7684\u5220\u9664\u6807\u8BC6\u3002\u5982\u679Cvv.Value\u4E3Anil\uFF0C\u8BF4\u660E\u8BE5\u952E\u503C\u5BF9\u66F4\u65B0\u64CD\u4F5C\u4E3A\u5220\u9664\u64CD\u4F5C\uFF0C\u5219\u7EE7\u7EED\u8C03\u7528<code>dbBatch.Delete(compositeKey)</code>\u65B9\u6CD5\uFF0C\u6DFB\u52A0\u8BE5\u5220\u9664\u64CD\u4F5C\u5230<code>dbBatch</code>\u5BF9\u8C61\u4E2D\u3002\u5426\u5219\uFF0C\u5C06vv.Version\u4E2D\u7684\u533A\u5757\u53F7\u4E0E\u4EA4\u6613\u5E8F\u53F7\u7ECF\u8FC7\u7F16\u7801\u5E8F\u5217\u5316\u6210\u5B57\u8282\u6570\u7EC4\uFF0C\u5E76\u4E0E<code>vv.Value</code>\u7EC4\u5408\u6210\u7F16\u7801\u503C<code>encodedValue</code>\uFF0C\u518D\u5C06\u5176\u5199\u5165\u64CD\u4F5C\u6DFB\u52A0\u5230dbBatch\u5BF9\u8C61\u4E2D</li><li>\u8C03\u7528<code>dbBatch.Put</code>\u65B9\u6CD5\uFF0C\u6DFB\u52A0\u4FDD\u5B58\u70B9\u6807\u8BC6\u7684<code>KV</code>\u952E\u503C\u5BF9\u3002\u5176\u4E2D\uFF0C\u952E\u4E3A<code>[]byte{0x00}</code>\uFF0C\u503C\u4E3A\u7248\u672C<code>height</code>\u7ECF\u8FC7\u7F16\u7801\u5E8F\u5217\u5316\u540E\u7684\u5B57\u8282\u6570\u7EC4</li><li>\u8C03\u7528<code>vdb.db.WriteBatch</code>\u65B9\u6CD5\uFF0C\u4EE5\u539F\u5B50\u64CD\u4F5C\u65B9\u5F0F\u5C06<code>dbBatch</code>\u66F4\u65B0\u540C\u6B65\u5230\u72B6\u6001\u6570\u636E\u5E93\u4E0A\u3002\u6CE8\u610F\uFF0C\u5728\u5199\u5165\u6570\u636E\u5E93\u65F6\u540C\u6837\u4F1A\u91CD\u65B0\u6784\u9020KV\u952E\u503C\u5BF9\uFF0C\u5728\u539F\u6765\u7684\u952E\u4E0A\u6DFB\u52A0\u6570\u636E\u5E93\u540D\u79F0\uFF08\u94FEID/\u8D26\u672CID\uFF09\u524D\u7F00\uFF0C\u5373<code>[]byte(dbName)+[]byte{0x00}</code>\uFF0C\u4EE5\u9694\u79BB\u4E0D\u540C\u901A\u9053\u4E0A\u7684\u72B6\u6001\u6570\u636E\u3002</li></ol><h3 id="\u66F4\u65B0\u5386\u53F2\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u5386\u53F2\u6570\u636E\u5E93" aria-hidden="true">#</a> \u66F4\u65B0\u5386\u53F2\u6570\u636E\u5E93</h3><p>\u8C03\u7528<code>l.historyDB.Commit(block)</code>\u65B9\u6CD5\uFF0C\u4EE5\u66F4\u65B0\u533A\u5757<code>block</code>\u4E2D\u7ECF\u8FC7<code>Endorser</code>\u80CC\u4E66\u7684\u6709\u6548\u4EA4\u6613\u6570\u636E\u5230\u5386\u53F2\u6570\u636E\u5E93\u4E2D\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><blockquote><p>core/ledger/kvledger/history/historydb/historyleveldb/historyleveldb.go</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>historyDB <span class="token operator">*</span>historyDB<span class="token punctuation">)</span> <span class="token function">Commit</span><span class="token punctuation">(</span>block <span class="token operator">*</span>common<span class="token punctuation">.</span>Block<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>

	blockNo <span class="token operator">:=</span> block<span class="token punctuation">.</span>Header<span class="token punctuation">.</span>Number <span class="token comment">// \u83B7\u53D6\u533A\u5757\u53F7</span>
	<span class="token comment">//Set the starting tranNo to 0</span>
	<span class="token keyword">var</span> tranNo <span class="token builtin">uint64</span>
<span class="token operator">...</span>
	<span class="token comment">// Get the invalidation byte array for the block</span>
	<span class="token comment">// \u83B7\u53D6\u4EA4\u6613\u9A8C\u8BC1\u7801\u5217\u8868</span>
	txsFilter <span class="token operator">:=</span> util<span class="token punctuation">.</span><span class="token function">TxValidationFlags</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>Metadata<span class="token punctuation">.</span>Metadata<span class="token punctuation">[</span>common<span class="token punctuation">.</span>BlockMetadataIndex_TRANSACTIONS_FILTER<span class="token punctuation">]</span><span class="token punctuation">)</span>
	<span class="token comment">// Initialize txsFilter if it does not yet exist (e.g. during testing, for genesis block, etc)</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>txsFilter<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		txsFilter <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">NewTxValidationFlags</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Data<span class="token punctuation">)</span><span class="token punctuation">)</span>
		block<span class="token punctuation">.</span>Metadata<span class="token punctuation">.</span>Metadata<span class="token punctuation">[</span>common<span class="token punctuation">.</span>BlockMetadataIndex_TRANSACTIONS_FILTER<span class="token punctuation">]</span> <span class="token operator">=</span> txsFilter
	<span class="token punctuation">}</span>

	<span class="token comment">// write each tran&#39;s write set to history db</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> envBytes <span class="token operator">:=</span> <span class="token keyword">range</span> block<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Data <span class="token punctuation">{</span> <span class="token comment">// \u904D\u5386\u533A\u5757\u6240\u6709\u4EA4\u6613\u6570\u636E</span>
		<span class="token keyword">if</span> txsFilter<span class="token punctuation">.</span><span class="token function">IsInvalid</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>tranNo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FC7\u6EE4\u6389\u65E0\u6548\u4EA4\u6613</span>
			logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Channel [%s]: Skipping history write for invalid transaction number %d&quot;</span><span class="token punctuation">,</span>
				historyDB<span class="token punctuation">.</span>dbName<span class="token punctuation">,</span> tranNo<span class="token punctuation">)</span>
			tranNo<span class="token operator">++</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u89E3\u6790\u83B7\u53D6\u4EA4\u6613\u6D88\u606FEnvelope\u7ED3\u6784\u5BF9\u8C61</span>
		env<span class="token punctuation">,</span> err <span class="token operator">:=</span> putils<span class="token punctuation">.</span><span class="token function">GetEnvelopeFromBlock</span><span class="token punctuation">(</span>envBytes<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span>

	<span class="token operator">...</span>
		<span class="token comment">// \u68C0\u67E5\u7C7B\u578B\uFF1A\u7ECFEndorser\u80CC\u4E66\u7684\u666E\u901A\u4EA4\u6613\u6D88\u606F</span>
		<span class="token keyword">if</span> common<span class="token punctuation">.</span><span class="token function">HeaderType</span><span class="token punctuation">(</span>chdr<span class="token punctuation">.</span>Type<span class="token punctuation">)</span> <span class="token operator">==</span> common<span class="token punctuation">.</span>HeaderType_ENDORSER_TRANSACTION <span class="token punctuation">{</span>

			<span class="token comment">// extract actions from the envelope message</span>
			<span class="token comment">// \u4ECE\u4EA4\u6613\u6D88\u606F\u4E2D\u89E3\u6790\u63D0\u53D6\u94FE\u7801\u52A8\u4F5C</span>
			respPayload<span class="token punctuation">,</span> err <span class="token operator">:=</span> putils<span class="token punctuation">.</span><span class="token function">GetActionFromEnvelope</span><span class="token punctuation">(</span>envBytes<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>
<span class="token operator">...</span>
			<span class="token comment">// \u89E3\u6790\u4EA4\u6613\u8BFB\u5199\u96C6\u5230TxReadWriteSet\u7ED3\u6784\u5BF9\u8C61\u4E2D</span>
			<span class="token keyword">if</span> err <span class="token operator">=</span> txRWSet<span class="token punctuation">.</span><span class="token function">FromProtoBytes</span><span class="token punctuation">(</span>respPayload<span class="token punctuation">.</span>Results<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>
			<span class="token comment">// \u904D\u5386\u6240\u6709\u8BFB\u5199\u96C6\uFF0C\u91CD\u65B0\u6784\u9020KV\u952E\u503C\u5BF9\u6DFB\u52A0\u5230\u5386\u53F2\u6570\u636E\u5E93</span>
			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> nsRWSet <span class="token operator">:=</span> <span class="token keyword">range</span> txRWSet<span class="token punctuation">.</span>NsRwSets <span class="token punctuation">{</span>
				ns <span class="token operator">:=</span> nsRWSet<span class="token punctuation">.</span>NameSpace

				<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> kvWrite <span class="token operator">:=</span> <span class="token keyword">range</span> nsRWSet<span class="token punctuation">.</span>KvRwSet<span class="token punctuation">.</span>Writes <span class="token punctuation">{</span>
					writeKey <span class="token operator">:=</span> kvWrite<span class="token punctuation">.</span>Key

					<span class="token comment">// \u6784\u9020\u7EC4\u5408\u952E</span>
					compositeHistoryKey <span class="token operator">:=</span> historydb<span class="token punctuation">.</span><span class="token function">ConstructCompositeHistoryKey</span><span class="token punctuation">(</span>ns<span class="token punctuation">,</span> writeKey<span class="token punctuation">,</span> blockNo<span class="token punctuation">,</span> tranNo<span class="token punctuation">)</span>

					<span class="token comment">// \u5199\u5165\u7A7A\u7684\u5B57\u8282\u6570\u7EC4[]byte{}</span>
					dbBatch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>compositeHistoryKey<span class="token punctuation">,</span> emptyValue<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u8DF3\u8FC7\u4EA4\u6613\uFF0C\u56E0\u4E3A\u8BE5\u6D88\u606F\u4E0D\u662F\u7ECF\u8FC7Endorser\u80CC\u4E66\u7684\u666E\u901A\u4EA4\u6613\u6D88\u606F</span>
			logger<span class="token punctuation">.</span><span class="token function">Debugf</span><span class="token punctuation">(</span><span class="token string">&quot;Skipping transaction [%d] since it is not an endorsement transaction\\n&quot;</span><span class="token punctuation">,</span> tranNo<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		tranNo<span class="token operator">++</span>
	<span class="token punctuation">}</span>
	height <span class="token operator">:=</span> version<span class="token punctuation">.</span><span class="token function">NewHeight</span><span class="token punctuation">(</span>blockNo<span class="token punctuation">,</span> tranNo<span class="token punctuation">)</span> <span class="token comment">// \u521B\u5EFA\u7248\u672C\u5BF9\u8C61</span>
	dbBatch<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>savePointKey<span class="token punctuation">,</span> height<span class="token punctuation">.</span><span class="token function">ToBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u6DFB\u52A0\u4FDD\u5B58\u70B9\u7528\u4E8E\u6062\u590D</span>

	<span class="token comment">// \u540C\u6B65\u66F4\u65B0\u6279\u91CF\u64CD\u4F5CdbBatch\u5230\u5386\u53F2\u6570\u636E\u5E93\u4E2D</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> historyDB<span class="token punctuation">.</span>db<span class="token punctuation">.</span><span class="token function">WriteBatch</span><span class="token punctuation">(</span>dbBatch<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
<span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5230\u6B64\u4E3A\u6B62\uFF1A\u8D26\u672C\u63D0\u4EA4\u529F\u80FD\u5206\u6790\u7ED3\u675F\u3002</p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2><blockquote><p>/</p></blockquote>`,79),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","8.fabric_source_Committer_node_of_charge_to_an_account.html.vue"]]);export{d as default};
